diff --git a/dist/scripts/mkctl.d.ts b/dist/scripts/mkctl.d.ts
new file mode 100644
index 0000000..43e95db
--- /dev/null
+++ b/dist/scripts/mkctl.d.ts
@@ -0,0 +1,3 @@
+#!/usr/bin/env node
+export {};
+//# sourceMappingURL=mkctl.d.ts.map
\ No newline at end of file
diff --git a/dist/scripts/mkctl.d.ts.map b/dist/scripts/mkctl.d.ts.map
new file mode 100644
index 0000000..af9ceca
--- /dev/null
+++ b/dist/scripts/mkctl.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"mkctl.d.ts","sourceRoot":"","sources":["../../scripts/mkctl.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/dist/scripts/mkctl.js b/dist/scripts/mkctl.js
new file mode 100644
index 0000000..384e459
--- /dev/null
+++ b/dist/scripts/mkctl.js
@@ -0,0 +1,63 @@
+#!/usr/bin/env node
+import fs from 'node:fs/promises';
+import path from 'node:path';
+function printHelp() {
+    console.log(`mkctl - Microkernel Control CLI
+
+USAGE
+  mkctl <command>
+
+COMMANDS
+  endpoints    List all registered endpoints with type and coordinates
+
+EXAMPLES
+  mkctl endpoints
+
+LEARN MORE
+  Documentation: https://github.com/anteew/mkolbol
+`);
+}
+async function main() {
+    const [, , cmd] = process.argv;
+    switch (cmd) {
+        case 'endpoints': {
+            const snapshotPath = path.resolve(process.cwd(), 'reports', 'endpoints.json');
+            let endpoints;
+            try {
+                const data = await fs.readFile(snapshotPath, 'utf-8');
+                endpoints = JSON.parse(data);
+            }
+            catch (err) {
+                console.log('No endpoints registered.');
+                break;
+            }
+            if (endpoints.length === 0) {
+                console.log('No endpoints registered.');
+                break;
+            }
+            console.log('Registered Endpoints:');
+            console.log('');
+            for (const endpoint of endpoints) {
+                console.log(`ID:          ${endpoint.id}`);
+                console.log(`Type:        ${endpoint.type}`);
+                console.log(`Coordinates: ${endpoint.coordinates}`);
+                if (endpoint.metadata && Object.keys(endpoint.metadata).length > 0) {
+                    console.log(`Metadata:    ${JSON.stringify(endpoint.metadata)}`);
+                }
+                console.log('');
+            }
+            break;
+        }
+        default:
+            printHelp();
+            if (cmd) {
+                console.error(`\nUnknown command: ${cmd}`);
+                process.exit(1);
+            }
+    }
+}
+main().catch(e => {
+    console.error(e);
+    process.exit(1);
+});
+//# sourceMappingURL=mkctl.js.map
\ No newline at end of file
diff --git a/dist/scripts/mkctl.js.map b/dist/scripts/mkctl.js.map
new file mode 100644
index 0000000..6b96b98
--- /dev/null
+++ b/dist/scripts/mkctl.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"mkctl.js","sourceRoot":"","sources":["../../scripts/mkctl.ts"],"names":[],"mappings":";AACA,OAAO,EAAE,MAAM,kBAAkB,CAAC;AAClC,OAAO,IAAI,MAAM,WAAW,CAAC;AAE7B,SAAS,SAAS;IAChB,OAAO,CAAC,GAAG,CAAC;;;;;;;;;;;;;CAab,CAAC,CAAC;AACH,CAAC;AAED,KAAK,UAAU,IAAI;IACjB,MAAM,CAAC,EAAC,EAAE,GAAG,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC;IAE9B,QAAQ,GAAG,EAAE,CAAC;QACZ,KAAK,WAAW,CAAC,CAAC,CAAC;YACjB,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,SAAS,EAAE,gBAAgB,CAAC,CAAC;YAE9E,IAAI,SAAmG,CAAC;YACxG,IAAI,CAAC;gBACH,MAAM,IAAI,GAAG,MAAM,EAAE,CAAC,QAAQ,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;gBACtD,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAC/B,CAAC;YAAC,OAAO,GAAG,EAAE,CAAC;gBACb,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;gBACxC,MAAM;YACR,CAAC;YAED,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gBAC3B,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;gBACxC,MAAM;YACR,CAAC;YAED,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;YACrC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YAEhB,KAAK,MAAM,QAAQ,IAAI,SAAS,EAAE,CAAC;gBACjC,OAAO,CAAC,GAAG,CAAC,gBAAgB,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC;gBAC3C,OAAO,CAAC,GAAG,CAAC,gBAAgB,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;gBAC7C,OAAO,CAAC,GAAG,CAAC,gBAAgB,QAAQ,CAAC,WAAW,EAAE,CAAC,CAAC;gBACpD,IAAI,QAAQ,CAAC,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;oBACnE,OAAO,CAAC,GAAG,CAAC,gBAAgB,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBACnE,CAAC;gBACD,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YAClB,CAAC;YACD,MAAM;QACR,CAAC;QACD;YACE,SAAS,EAAE,CAAC;YACZ,IAAI,GAAG,EAAE,CAAC;gBACR,OAAO,CAAC,KAAK,CAAC,sBAAsB,GAAG,EAAE,CAAC,CAAC;gBAC3C,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAClB,CAAC;IACL,CAAC;AACH,CAAC;AAED,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;IACf,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACjB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC"}
\ No newline at end of file
diff --git a/dist/src/hostess/Hostess.d.ts b/dist/src/hostess/Hostess.d.ts
index 7626aad..4296417 100644
--- a/dist/src/hostess/Hostess.d.ts
+++ b/dist/src/hostess/Hostess.d.ts
@@ -25,6 +25,7 @@ export declare class Hostess {
     stopEvictionLoop(): void;
     private isLive;
     private computeAvailable;
+    private writeEndpointsSnapshot;
 }
 export {};
 //# sourceMappingURL=Hostess.d.ts.map
\ No newline at end of file
diff --git a/dist/src/hostess/Hostess.d.ts.map b/dist/src/hostess/Hostess.d.ts.map
index 537ad0f..9f4b13c 100644
--- a/dist/src/hostess/Hostess.d.ts.map
+++ b/dist/src/hostess/Hostess.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"Hostess.d.ts","sourceRoot":"","sources":["../../../src/hostess/Hostess.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,eAAe,EAAE,cAAc,EAAE,eAAe,EAAE,cAAc,EAAuB,MAAM,aAAa,CAAC;AACpH,OAAO,EAAE,iBAAiB,EAAe,MAAM,yBAAyB,CAAC;AAIzE,UAAU,cAAc;IACtB,mBAAmB,CAAC,EAAE,MAAM,CAAC;IAC7B,mBAAmB,CAAC,EAAE,MAAM,CAAC;IAC7B,MAAM,CAAC,EAAE,CAAC,GAAG,EAAE,iBAAiB,KAAK,IAAI,CAAC;CAC3C;AAED,qBAAa,OAAO;IAClB,OAAO,CAAC,SAAS,CAAqC;IACtD,OAAO,CAAC,SAAS,CAAsC;IACvD,OAAO,CAAC,QAAQ,CAAC,CAAiB;IAClC,OAAO,CAAC,QAAQ,CAAC,mBAAmB,CAAS;IAC7C,OAAO,CAAC,QAAQ,CAAC,mBAAmB,CAAS;IAC7C,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAmC;gBAE/C,IAAI,GAAE,cAAmB;IAYrC,QAAQ,CAAC,KAAK,EAAE,cAAc,GAAG,MAAM;IA+CvC,SAAS,CAAC,QAAQ,EAAE,MAAM,GAAG,IAAI;IAUjC,SAAS,CAAC,QAAQ,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,GAAG,IAAI;IAa7E,aAAa,CAAC,QAAQ,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,GAAG,IAAI;IAQ3D,KAAK,CAAC,MAAM,GAAE,eAAoB,GAAG,cAAc,EAAE;IA0BrD,IAAI,IAAI,cAAc,EAAE;IAIxB,gBAAgB,CAAC,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,eAAe,GAAG,IAAI;IAS7D,aAAa,IAAI,GAAG,CAAC,MAAM,EAAE,eAAe,CAAC;IAI7C,iBAAiB,IAAI,IAAI;IAczB,gBAAgB,IAAI,IAAI;IAOxB,OAAO,CAAC,MAAM;IAId,OAAO,CAAC,gBAAgB;CAGzB"}
\ No newline at end of file
+{"version":3,"file":"Hostess.d.ts","sourceRoot":"","sources":["../../../src/hostess/Hostess.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,eAAe,EAAE,cAAc,EAAE,eAAe,EAAE,cAAc,EAAuB,MAAM,aAAa,CAAC;AACpH,OAAO,EAAE,iBAAiB,EAAe,MAAM,yBAAyB,CAAC;AAIzE,UAAU,cAAc;IACtB,mBAAmB,CAAC,EAAE,MAAM,CAAC;IAC7B,mBAAmB,CAAC,EAAE,MAAM,CAAC;IAC7B,MAAM,CAAC,EAAE,CAAC,GAAG,EAAE,iBAAiB,KAAK,IAAI,CAAC;CAC3C;AAED,qBAAa,OAAO;IAClB,OAAO,CAAC,SAAS,CAAqC;IACtD,OAAO,CAAC,SAAS,CAAsC;IACvD,OAAO,CAAC,QAAQ,CAAC,CAAiB;IAClC,OAAO,CAAC,QAAQ,CAAC,mBAAmB,CAAS;IAC7C,OAAO,CAAC,QAAQ,CAAC,mBAAmB,CAAS;IAC7C,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAmC;gBAE/C,IAAI,GAAE,cAAmB;IAYrC,QAAQ,CAAC,KAAK,EAAE,cAAc,GAAG,MAAM;IA+CvC,SAAS,CAAC,QAAQ,EAAE,MAAM,GAAG,IAAI;IAUjC,SAAS,CAAC,QAAQ,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,GAAG,IAAI;IAa7E,aAAa,CAAC,QAAQ,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,GAAG,IAAI;IAQ3D,KAAK,CAAC,MAAM,GAAE,eAAoB,GAAG,cAAc,EAAE;IA0BrD,IAAI,IAAI,cAAc,EAAE;IAIxB,gBAAgB,CAAC,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,eAAe,GAAG,IAAI;IAc7D,aAAa,IAAI,GAAG,CAAC,MAAM,EAAE,eAAe,CAAC;IAI7C,iBAAiB,IAAI,IAAI;IAczB,gBAAgB,IAAI,IAAI;IAOxB,OAAO,CAAC,MAAM;IAId,OAAO,CAAC,gBAAgB;IAIxB,OAAO,CAAC,sBAAsB;CAU/B"}
\ No newline at end of file
diff --git a/dist/src/hostess/Hostess.js b/dist/src/hostess/Hostess.js
index ec70b5b..a91f582 100644
--- a/dist/src/hostess/Hostess.js
+++ b/dist/src/hostess/Hostess.js
@@ -1,4 +1,6 @@
 import crypto from 'node:crypto';
+import fs from 'node:fs';
+import path from 'node:path';
 import { buildServerIdentity } from '../types.js';
 import { createEvent } from '../logging/TestEvent.js';
 import { createLogger } from '../logging/logger.js';
@@ -140,6 +142,12 @@ export class Hostess {
             payload: { type: endpoint.type, coordinates: endpoint.coordinates }
         }));
         debug.emit('hostess', 'registerEndpoint', { id, type: endpoint.type, coordinates: endpoint.coordinates });
+        try {
+            this.writeEndpointsSnapshot();
+        }
+        catch (err) {
+            debug.emit('hostess', 'writeEndpointsSnapshot:error', { error: String(err) });
+        }
     }
     listEndpoints() {
         return new Map(this.endpoints);
@@ -171,5 +179,15 @@ export class Hostess {
     computeAvailable(inUse) {
         return Object.values(inUse).some(v => v === undefined);
     }
+    writeEndpointsSnapshot() {
+        const snapshotDir = path.resolve(process.cwd(), 'reports');
+        const snapshotPath = path.join(snapshotDir, 'endpoints.json');
+        const endpointsArray = Array.from(this.endpoints.entries()).map(([id, endpoint]) => ({
+            id,
+            ...endpoint
+        }));
+        fs.mkdirSync(snapshotDir, { recursive: true });
+        fs.writeFileSync(snapshotPath, JSON.stringify(endpointsArray, null, 2));
+    }
 }
 //# sourceMappingURL=Hostess.js.map
\ No newline at end of file
diff --git a/dist/src/hostess/Hostess.js.map b/dist/src/hostess/Hostess.js.map
index 8248ede..0eed0e0 100644
--- a/dist/src/hostess/Hostess.js.map
+++ b/dist/src/hostess/Hostess.js.map
@@ -1 +1 @@
-{"version":3,"file":"Hostess.js","sourceRoot":"","sources":["../../../src/hostess/Hostess.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"Hostess.js","sourceRoot":"","sources":["../../../src/hostess/Hostess.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/package.json b/package.json
index 5171145..f0627d2 100644
--- a/package.json
+++ b/package.json
@@ -42,8 +42,8 @@
     "docs": "echo 'See docs/rfcs/stream-kernel/00-index.md for architecture documentation'",
     "build": "tsc -p tsconfig.json",
     "test": "vitest run",
-    "test:ci": "vitest run --pool=threads --exclude='**/{ptyServerWrapper,multiModalOutput}.spec.ts' --reporter=./node_modules/@agent_vega/laminar/dist/src/test/reporter/jsonlReporter.js",
-    "test:pty": "vitest run --pool=forks --poolOptions.forks.singleFork=true tests/wrappers/ptyServerWrapper.spec.ts tests/integration/multiModalOutput.spec.ts --reporter=./node_modules/@agent_vega/laminar/dist/src/test/reporter/jsonlReporter.js",
+    "test:ci": "vitest run --pool=threads --exclude='**/{ptyServerWrapper,multiModalOutput,endpointsList}.spec.ts' --reporter=./node_modules/@agent_vega/laminar/dist/src/test/reporter/jsonlReporter.js",
+    "test:pty": "vitest run --pool=forks --poolOptions.forks.singleFork=true tests/wrappers/ptyServerWrapper.spec.ts tests/integration/multiModalOutput.spec.ts tests/integration/endpointsList.spec.ts --reporter=./node_modules/@agent_vega/laminar/dist/src/test/reporter/jsonlReporter.js",
     "test:watch": "vitest",
     "lam": "node node_modules/laminar/dist/scripts/lam.js",
     "logq": "lam logq",
diff --git a/patches/DIFF_T4601_hostess-endpoint-schema.patch b/patches/DIFF_T4601_hostess-endpoint-schema.patch
new file mode 100644
index 0000000..25ceaaa
--- /dev/null
+++ b/patches/DIFF_T4601_hostess-endpoint-schema.patch
@@ -0,0 +1,304 @@
+diff --git a/dist/scripts/lam.js b/dist/scripts/lam.js
+old mode 100644
+new mode 100755
+diff --git a/dist/src/hostess/Hostess.d.ts b/dist/src/hostess/Hostess.d.ts
+index 7733cb6..7626aad 100644
+--- a/dist/src/hostess/Hostess.d.ts
++++ b/dist/src/hostess/Hostess.d.ts
+@@ -1,4 +1,4 @@
+-import { CapabilityQuery, GuestBookEntry, ServerManifest } from '../types.js';
++import { CapabilityQuery, GuestBookEntry, HostessEndpoint, ServerManifest } from '../types.js';
+ import { TestEventEnvelope } from '../logging/TestEvent.js';
+ interface HostessOptions {
+     heartbeatIntervalMs?: number;
+@@ -7,6 +7,7 @@ interface HostessOptions {
+ }
+ export declare class Hostess {
+     private guestBook;
++    private endpoints;
+     private interval?;
+     private readonly heartbeatIntervalMs;
+     private readonly evictionThresholdMs;
+@@ -18,6 +19,8 @@ export declare class Hostess {
+     markAvailable(serverId: string, terminalName: string): void;
+     query(filter?: CapabilityQuery): GuestBookEntry[];
+     list(): GuestBookEntry[];
++    registerEndpoint(id: string, endpoint: HostessEndpoint): void;
++    listEndpoints(): Map<string, HostessEndpoint>;
+     startEvictionLoop(): void;
+     stopEvictionLoop(): void;
+     private isLive;
+diff --git a/dist/src/hostess/Hostess.d.ts.map b/dist/src/hostess/Hostess.d.ts.map
+index 308c87e..537ad0f 100644
+--- a/dist/src/hostess/Hostess.d.ts.map
++++ b/dist/src/hostess/Hostess.d.ts.map
+@@ -1 +1 @@
+-{"version":3,"file":"Hostess.d.ts","sourceRoot":"","sources":["../../../src/hostess/Hostess.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,eAAe,EAAE,cAAc,EAAE,cAAc,EAAuB,MAAM,aAAa,CAAC;AACnG,OAAO,EAAE,iBAAiB,EAAe,MAAM,yBAAyB,CAAC;AAIzE,UAAU,cAAc;IACtB,mBAAmB,CAAC,EAAE,MAAM,CAAC;IAC7B,mBAAmB,CAAC,EAAE,MAAM,CAAC;IAC7B,MAAM,CAAC,EAAE,CAAC,GAAG,EAAE,iBAAiB,KAAK,IAAI,CAAC;CAC3C;AAED,qBAAa,OAAO;IAClB,OAAO,CAAC,SAAS,CAAqC;IACtD,OAAO,CAAC,QAAQ,CAAC,CAAiB;IAClC,OAAO,CAAC,QAAQ,CAAC,mBAAmB,CAAS;IAC7C,OAAO,CAAC,QAAQ,CAAC,mBAAmB,CAAS;IAC7C,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAmC;gBAE/C,IAAI,GAAE,cAAmB;IAYrC,QAAQ,CAAC,KAAK,EAAE,cAAc,GAAG,MAAM;IA+CvC,SAAS,CAAC,QAAQ,EAAE,MAAM,GAAG,IAAI;IAUjC,SAAS,CAAC,QAAQ,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,GAAG,IAAI;IAa7E,aAAa,CAAC,QAAQ,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,GAAG,IAAI;IAQ3D,KAAK,CAAC,MAAM,GAAE,eAAoB,GAAG,cAAc,EAAE;IA0BrD,IAAI,IAAI,cAAc,EAAE;IAIxB,iBAAiB,IAAI,IAAI;IAczB,gBAAgB,IAAI,IAAI;IAOxB,OAAO,CAAC,MAAM;IAId,OAAO,CAAC,gBAAgB;CAGzB"}
+\ No newline at end of file
++{"version":3,"file":"Hostess.d.ts","sourceRoot":"","sources":["../../../src/hostess/Hostess.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,eAAe,EAAE,cAAc,EAAE,eAAe,EAAE,cAAc,EAAuB,MAAM,aAAa,CAAC;AACpH,OAAO,EAAE,iBAAiB,EAAe,MAAM,yBAAyB,CAAC;AAIzE,UAAU,cAAc;IACtB,mBAAmB,CAAC,EAAE,MAAM,CAAC;IAC7B,mBAAmB,CAAC,EAAE,MAAM,CAAC;IAC7B,MAAM,CAAC,EAAE,CAAC,GAAG,EAAE,iBAAiB,KAAK,IAAI,CAAC;CAC3C;AAED,qBAAa,OAAO;IAClB,OAAO,CAAC,SAAS,CAAqC;IACtD,OAAO,CAAC,SAAS,CAAsC;IACvD,OAAO,CAAC,QAAQ,CAAC,CAAiB;IAClC,OAAO,CAAC,QAAQ,CAAC,mBAAmB,CAAS;IAC7C,OAAO,CAAC,QAAQ,CAAC,mBAAmB,CAAS;IAC7C,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAmC;gBAE/C,IAAI,GAAE,cAAmB;IAYrC,QAAQ,CAAC,KAAK,EAAE,cAAc,GAAG,MAAM;IA+CvC,SAAS,CAAC,QAAQ,EAAE,MAAM,GAAG,IAAI;IAUjC,SAAS,CAAC,QAAQ,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,GAAG,IAAI;IAa7E,aAAa,CAAC,QAAQ,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,GAAG,IAAI;IAQ3D,KAAK,CAAC,MAAM,GAAE,eAAoB,GAAG,cAAc,EAAE;IA0BrD,IAAI,IAAI,cAAc,EAAE;IAIxB,gBAAgB,CAAC,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,eAAe,GAAG,IAAI;IAS7D,aAAa,IAAI,GAAG,CAAC,MAAM,EAAE,eAAe,CAAC;IAI7C,iBAAiB,IAAI,IAAI;IAczB,gBAAgB,IAAI,IAAI;IAOxB,OAAO,CAAC,MAAM;IAId,OAAO,CAAC,gBAAgB;CAGzB"}
+\ No newline at end of file
+diff --git a/dist/src/hostess/Hostess.js b/dist/src/hostess/Hostess.js
+index 9126f53..ec70b5b 100644
+--- a/dist/src/hostess/Hostess.js
++++ b/dist/src/hostess/Hostess.js
+@@ -5,6 +5,7 @@ import { createLogger } from '../logging/logger.js';
+ import { debug } from '../debug/api.js';
+ export class Hostess {
+     guestBook = new Map();
++    endpoints = new Map();
+     interval;
+     heartbeatIntervalMs;
+     evictionThresholdMs;
+@@ -132,6 +133,17 @@ export class Hostess {
+     list() {
+         return Array.from(this.guestBook.values());
+     }
++    registerEndpoint(id, endpoint) {
++        this.endpoints.set(id, endpoint);
++        this.logger?.(createEvent('hostess:registerEndpoint', 'hostess', {
++            id,
++            payload: { type: endpoint.type, coordinates: endpoint.coordinates }
++        }));
++        debug.emit('hostess', 'registerEndpoint', { id, type: endpoint.type, coordinates: endpoint.coordinates });
++    }
++    listEndpoints() {
++        return new Map(this.endpoints);
++    }
+     startEvictionLoop() {
+         if (this.interval)
+             return;
+diff --git a/dist/src/hostess/Hostess.js.map b/dist/src/hostess/Hostess.js.map
+index 382060c..8248ede 100644
+--- a/dist/src/hostess/Hostess.js.map
++++ b/dist/src/hostess/Hostess.js.map
+@@ -1 +1 @@
+-{"version":3,"file":"Hostess.js","sourceRoot":"","sources":["../../../src/hostess/Hostess.ts"],"names":[],"mappings":"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"}
+\ No newline at end of file
++{"version":3,"file":"Hostess.js","sourceRoot":"","sources":["../../../src/hostess/Hostess.ts"],"names":[],"mappings":"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"}
+\ No newline at end of file
+diff --git a/dist/src/types.d.ts b/dist/src/types.d.ts
+index 44dd98b..d7b49ac 100644
+--- a/dist/src/types.d.ts
++++ b/dist/src/types.d.ts
+@@ -105,4 +105,9 @@ export interface EscapeSequence {
+     length: number;
+     raw?: string;
+ }
++export interface HostessEndpoint {
++    type: string;
++    coordinates: string;
++    metadata?: Record<string, any>;
++}
+ //# sourceMappingURL=types.d.ts.map
+\ No newline at end of file
+diff --git a/dist/src/types.d.ts.map b/dist/src/types.d.ts.map
+index e1b37da..dde723f 100644
+--- a/dist/src/types.d.ts.map
++++ b/dist/src/types.d.ts.map
+@@ -1 +1 @@
+-{"version":3,"file":"types.d.ts","sourceRoot":"","sources":["../../src/types.ts"],"names":[],"mappings":"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"}
+\ No newline at end of file
++{"version":3,"file":"types.d.ts","sourceRoot":"","sources":["../../src/types.ts"],"names":[],"mappings":"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"}
+\ No newline at end of file
+diff --git a/laminar.config.json b/laminar.config.json
+index 5335d04..ab7fe1f 100644
+--- a/laminar.config.json
++++ b/laminar.config.json
+@@ -1,63 +1 @@
+-{
+-  "enabled": true,
+-  "budget": {
+-    "kb": 10,
+-    "lines": 200
+-  },
+-  "hints": {
+-    "enabled": false,
+-    "showTrends": true,
+-    "maxLines": 1
+-  },
+-  "rules": [
+-    {
+-      "match": {
+-        "lvl": "error"
+-      },
+-      "actions": [
+-        {
+-          "type": "include"
+-        },
+-        {
+-          "type": "codeframe",
+-          "contextLines": 2
+-        }
+-      ],
+-      "priority": 10
+-    },
+-    {
+-      "match": {
+-        "evt": "assert.fail"
+-      },
+-      "actions": [
+-        {
+-          "type": "include"
+-        },
+-        {
+-          "type": "slice",
+-          "window": 10
+-        },
+-        {
+-          "type": "codeframe",
+-          "contextLines": 2
+-        }
+-      ],
+-      "priority": 9
+-    },
+-    {
+-      "match": {
+-        "evt": [
+-          "worker.ready",
+-          "worker.exit",
+-          "worker.error"
+-        ]
+-      },
+-      "actions": [
+-        {
+-          "type": "include"
+-        }
+-      ],
+-      "priority": 7
+-    }
+-  ]
+-}
++"{\"enabled\": true, \"budget\": {\"kb\": 15}}"
+\ No newline at end of file
+diff --git a/package-lock.json b/package-lock.json
+index 8a255fc..9b32d74 100644
+--- a/package-lock.json
++++ b/package-lock.json
+@@ -11,7 +11,11 @@
+       "dependencies": {
+         "node-pty": "^1.0.0"
+       },
++      "bin": {
++        "lam": "dist/scripts/lam.js"
++      },
+       "devDependencies": {
++        "@agent_vega/laminar": "github:anteew/Laminar#54b54a1",
+         "@types/node": "^20.12.12",
+         "fast-check": "^4.3.0",
+         "tsx": "^4.19.2",
+@@ -19,6 +23,49 @@
+         "vitest": "^1.6.0"
+       }
+     },
++    "../../../home/ubuntu/repos/Laminar": {
++      "name": "@agent_vega/laminar",
++      "version": "0.1.11",
++      "extraneous": true,
++      "hasInstallScript": true,
++      "license": "MIT",
++      "bin": {
++        "lam": "dist/scripts/lam.js",
++        "laminar-mcp": "dist/scripts/mcp-server.js"
++      },
++      "devDependencies": {
++        "@types/node": "^20.12.12",
++        "typescript": "^5.6.2",
++        "vitest": "^1.6.0"
++      }
++    },
++    "../Laminar": {
++      "name": "@agent_vega/laminar",
++      "version": "0.1.11",
++      "extraneous": true,
++      "hasInstallScript": true,
++      "license": "MIT",
++      "bin": {
++        "lam": "dist/scripts/lam.js",
++        "laminar-mcp": "dist/scripts/mcp-server.js"
++      },
++      "devDependencies": {
++        "@types/node": "^20.12.12",
++        "typescript": "^5.6.2",
++        "vitest": "^1.6.0"
++      }
++    },
++    "node_modules/@agent_vega/laminar": {
++      "version": "0.1.11",
++      "resolved": "git+ssh://git@github.com/anteew/Laminar.git#54b54a181f16a573ae09a495d31bc42448520750",
++      "dev": true,
++      "hasInstallScript": true,
++      "license": "MIT",
++      "bin": {
++        "lam": "dist/scripts/lam.js",
++        "laminar-mcp": "dist/scripts/mcp-server.js"
++      }
++    },
+     "node_modules/@esbuild/aix-ppc64": {
+       "version": "0.21.5",
+       "resolved": "https://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.21.5.tgz",
+diff --git a/package.json b/package.json
+index 1169686..f35ba4f 100644
+--- a/package.json
++++ b/package.json
+@@ -68,7 +68,7 @@
+     "node-pty": "^1.0.0"
+   },
+   "devDependencies": {
+-    "laminar": "file:/home/ubuntu/repos/Laminar",
++    "@agent_vega/laminar": "github:anteew/Laminar#54b54a1",
+     "@types/node": "^20.12.12",
+     "fast-check": "^4.3.0",
+     "tsx": "^4.19.2",
+diff --git a/src/hostess/Hostess.ts b/src/hostess/Hostess.ts
+index 62a6905..5ec8054 100644
+--- a/src/hostess/Hostess.ts
++++ b/src/hostess/Hostess.ts
+@@ -1,5 +1,5 @@
+ import crypto from 'node:crypto';
+-import { CapabilityQuery, GuestBookEntry, ServerManifest, buildServerIdentity } from '../types.js';
++import { CapabilityQuery, GuestBookEntry, HostessEndpoint, ServerManifest, buildServerIdentity } from '../types.js';
+ import { TestEventEnvelope, createEvent } from '../logging/TestEvent.js';
+ import { createLogger } from '../logging/logger.js';
+ import { debug } from '../debug/api.js';
+@@ -12,6 +12,7 @@ interface HostessOptions {
+ 
+ export class Hostess {
+   private guestBook = new Map<string, GuestBookEntry>();
++  private endpoints = new Map<string, HostessEndpoint>();
+   private interval?: NodeJS.Timeout;
+   private readonly heartbeatIntervalMs: number;
+   private readonly evictionThresholdMs: number;
+@@ -137,6 +138,19 @@ export class Hostess {
+     return Array.from(this.guestBook.values());
+   }
+ 
++  registerEndpoint(id: string, endpoint: HostessEndpoint): void {
++    this.endpoints.set(id, endpoint);
++    this.logger?.(createEvent('hostess:registerEndpoint', 'hostess', {
++      id,
++      payload: { type: endpoint.type, coordinates: endpoint.coordinates }
++    }));
++    debug.emit('hostess', 'registerEndpoint', { id, type: endpoint.type, coordinates: endpoint.coordinates });
++  }
++
++  listEndpoints(): Map<string, HostessEndpoint> {
++    return new Map(this.endpoints);
++  }
++
+   startEvictionLoop(): void {
+     if (this.interval) return;
+     this.interval = setInterval(() => {
+diff --git a/src/types.ts b/src/types.ts
+index c9dd9c4..1f2b5a9 100644
+--- a/src/types.ts
++++ b/src/types.ts
+@@ -122,3 +122,9 @@ export interface EscapeSequence {
+   length: number;
+   raw?: string;
+ }
++
++export interface HostessEndpoint {
++  type: string;
++  coordinates: string;
++  metadata?: Record<string, any>;
++}
diff --git a/patches/DIFF_T4602_executor-endpoint-prop.patch b/patches/DIFF_T4602_executor-endpoint-prop.patch
new file mode 100644
index 0000000..467416b
--- /dev/null
+++ b/patches/DIFF_T4602_executor-endpoint-prop.patch
@@ -0,0 +1,87 @@
+diff --git a/src/executor/Executor.ts b/src/executor/Executor.ts
+index 9053d03..8dbe33b 100644
+--- a/src/executor/Executor.ts
++++ b/src/executor/Executor.ts
+@@ -187,7 +187,16 @@ export class Executor {
+         produces: []
+       }
+     };
+-    this.hostess.register(manifest);
++    const identity = this.hostess.register(manifest);
++
++    this.hostess.registerEndpoint(identity, {
++      type: 'inproc',
++      coordinates: `node:${nodeConfig.id}`,
++      metadata: {
++        module: nodeConfig.module,
++        runMode: 'inproc'
++      }
++    });
+ 
+     this.stateManager.addNode({
+       id: nodeConfig.id,
+@@ -281,7 +290,16 @@ export class Executor {
+         produces: []
+       }
+     };
+-    this.hostess.register(manifest);
++    const identity = this.hostess.register(manifest);
++
++    this.hostess.registerEndpoint(identity, {
++      type: 'worker',
++      coordinates: `node:${nodeConfig.id}`,
++      metadata: {
++        module: nodeConfig.module,
++        runMode: 'worker'
++      }
++    });
+ 
+     this.stateManager.addNode({
+       id: nodeConfig.id,
+diff --git a/src/wrappers/ExternalServerWrapper.ts b/src/wrappers/ExternalServerWrapper.ts
+index 995b958..2c6a869 100644
+--- a/src/wrappers/ExternalServerWrapper.ts
++++ b/src/wrappers/ExternalServerWrapper.ts
+@@ -181,7 +181,16 @@ export class ExternalServerWrapper {
+   }
+ 
+   protected async registerWithHostess(): Promise<void> {
+-    this.hostess.register(this.manifest);
++    const identity = this.hostess.register(this.manifest);
++
++    this.hostess.registerEndpoint(identity, {
++      type: 'external',
++      coordinates: `${this.manifest.command} ${this.manifest.args.join(' ')}`,
++      metadata: {
++        cwd: this.manifest.cwd,
++        ioMode: this.manifest.ioMode
++      }
++    });
+   }
+ 
+   protected async deregisterFromHostess(): Promise<void> {
+diff --git a/src/wrappers/PTYServerWrapper.ts b/src/wrappers/PTYServerWrapper.ts
+index 1941cde..8a7eacf 100644
+--- a/src/wrappers/PTYServerWrapper.ts
++++ b/src/wrappers/PTYServerWrapper.ts
+@@ -79,6 +79,20 @@ export class PTYServerWrapper extends ExternalServerWrapper {
+     await this.registerWithHostess();
+   }
+ 
++  protected async registerWithHostess(): Promise<void> {
++    const identity = this.hostess.register(this.manifest);
++
++    this.hostess.registerEndpoint(identity, {
++      type: 'pty',
++      coordinates: `pid:${this.ptyProcess?.pid}`,
++      metadata: {
++        cols: this.terminalSize.cols,
++        rows: this.terminalSize.rows,
++        terminalType: this.manifest.terminalType || 'xterm-256color'
++      }
++    });
++  }
++
+   resize(cols: number, rows: number): void {
+     if (!this.ptyProcess) {
+       throw new Error('PTY process not running');
diff --git a/patches/DIFF_T4603_mkctl-endpoints.patch b/patches/DIFF_T4603_mkctl-endpoints.patch
new file mode 100644
index 0000000..e085453
--- /dev/null
+++ b/patches/DIFF_T4603_mkctl-endpoints.patch
@@ -0,0 +1,214 @@
+diff --git a/README.md b/README.md
+index dad2511..3778e1b 100644
+--- a/README.md
++++ b/README.md
+@@ -182,6 +182,34 @@ keyboard.start();
+ pty.start();
+ ```
+ 
++## Endpoints
++
++Endpoints represent the execution environment and control coordinates for modules in the microkernel. Each endpoint has a **type** indicating how the module runs and **coordinates** specifying how to reach or identify it.
++
++### Endpoint Types
++
++The system supports four endpoint types:
++
++- **inproc** - In-process modules running directly in the main process
++  - Coordinates: `node:<node-id>`
++  - Use case: Lightweight transforms, minimal overhead, no isolation needed
++
++- **worker** - Worker thread modules with isolated execution
++  - Coordinates: `node:<node-id>`
++  - Use case: CPU-intensive work, memory isolation, parallel processing
++
++- **external** - External processes spawned via stdio
++  - Coordinates: `<command> <args>`
++  - Use case: Language-agnostic integration, any executable, isolated environment
++
++- **pty** - PTY-based processes with terminal emulation
++  - Coordinates: `pid:<process-id>`
++  - Use case: Interactive shells, terminal applications, PTY hijacking
++
++### Discovery
++
++Endpoints are registered automatically with Hostess when modules are instantiated. Use `mkctl endpoints` to discover all registered endpoints in the system. See the [mkctl CLI documentation](#mkctl---microkernel-control-cli) for usage details.
++
+ ## Use Cases
+ 
+ The Stream Kernel enables:
+@@ -569,6 +597,18 @@ See [docs/testing/laminar.md](docs/testing/laminar.md#cross-language-test-ingest
+ 
+ ### CLI Tools
+ 
++#### mkctl - Microkernel Control CLI
++
++```bash
++# List all registered endpoints
++node dist/scripts/mkctl.js endpoints
++
++# Show help
++node dist/scripts/mkctl.js
++```
++
++The `mkctl` tool provides control and introspection for the microkernel. The `endpoints` command lists all endpoints registered with Hostess, showing their type (e.g., "pty", "executor"), coordinates (e.g., "localhost:3000"), and optional metadata.
++
+ #### logq - Query JSONL test logs
+ 
+ ```bash
+diff --git a/dist/scripts/mkctl.d.ts b/dist/scripts/mkctl.d.ts
+new file mode 100644
+index 0000000..43e95db
+--- /dev/null
++++ b/dist/scripts/mkctl.d.ts
+@@ -0,0 +1,3 @@
++#!/usr/bin/env node
++export {};
++//# sourceMappingURL=mkctl.d.ts.map
+\ No newline at end of file
+diff --git a/dist/scripts/mkctl.d.ts.map b/dist/scripts/mkctl.d.ts.map
+new file mode 100644
+index 0000000..af9ceca
+--- /dev/null
++++ b/dist/scripts/mkctl.d.ts.map
+@@ -0,0 +1 @@
++{"version":3,"file":"mkctl.d.ts","sourceRoot":"","sources":["../../scripts/mkctl.ts"],"names":[],"mappings":""}
+\ No newline at end of file
+diff --git a/dist/scripts/mkctl.js b/dist/scripts/mkctl.js
+new file mode 100644
+index 0000000..cb7cb55
+--- /dev/null
++++ b/dist/scripts/mkctl.js
+@@ -0,0 +1,55 @@
++#!/usr/bin/env node
++import { Hostess } from '../src/hostess/Hostess.js';
++function printHelp() {
++    console.log(`mkctl - Microkernel Control CLI
++
++USAGE
++  mkctl <command>
++
++COMMANDS
++  endpoints    List all registered endpoints with type and coordinates
++
++EXAMPLES
++  mkctl endpoints
++
++LEARN MORE
++  Documentation: https://github.com/anteew/mkolbol
++`);
++}
++async function main() {
++    const [, , cmd] = process.argv;
++    switch (cmd) {
++        case 'endpoints': {
++            // Create a Hostess instance (in a real scenario, this would connect to a running Hostess)
++            const hostess = new Hostess();
++            const endpoints = hostess.listEndpoints();
++            if (endpoints.size === 0) {
++                console.log('No endpoints registered.');
++                break;
++            }
++            console.log('Registered Endpoints:');
++            console.log('');
++            for (const [id, endpoint] of endpoints) {
++                console.log(`ID:          ${id}`);
++                console.log(`Type:        ${endpoint.type}`);
++                console.log(`Coordinates: ${endpoint.coordinates}`);
++                if (endpoint.metadata && Object.keys(endpoint.metadata).length > 0) {
++                    console.log(`Metadata:    ${JSON.stringify(endpoint.metadata)}`);
++                }
++                console.log('');
++            }
++            break;
++        }
++        default:
++            printHelp();
++            if (cmd) {
++                console.error(`\nUnknown command: ${cmd}`);
++                process.exit(1);
++            }
++    }
++}
++main().catch(e => {
++    console.error(e);
++    process.exit(1);
++});
++//# sourceMappingURL=mkctl.js.map
+\ No newline at end of file
+diff --git a/dist/scripts/mkctl.js.map b/dist/scripts/mkctl.js.map
+new file mode 100644
+index 0000000..3dbd517
+--- /dev/null
++++ b/dist/scripts/mkctl.js.map
+@@ -0,0 +1 @@
++{"version":3,"file":"mkctl.js","sourceRoot":"","sources":["../../scripts/mkctl.ts"],"names":[],"mappings":";AACA,OAAO,EAAE,OAAO,EAAE,MAAM,2BAA2B,CAAC;AAEpD,SAAS,SAAS;IAChB,OAAO,CAAC,GAAG,CAAC;;;;;;;;;;;;;CAab,CAAC,CAAC;AACH,CAAC;AAED,KAAK,UAAU,IAAI;IACjB,MAAM,CAAC,EAAC,EAAE,GAAG,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC;IAE9B,QAAQ,GAAG,EAAE,CAAC;QACZ,KAAK,WAAW,CAAC,CAAC,CAAC;YACjB,0FAA0F;YAC1F,MAAM,OAAO,GAAG,IAAI,OAAO,EAAE,CAAC;YAE9B,MAAM,SAAS,GAAG,OAAO,CAAC,aAAa,EAAE,CAAC;YAE1C,IAAI,SAAS,CAAC,IAAI,KAAK,CAAC,EAAE,CAAC;gBACzB,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;gBACxC,MAAM;YACR,CAAC;YAED,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;YACrC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YAEhB,KAAK,MAAM,CAAC,EAAE,EAAE,QAAQ,CAAC,IAAI,SAAS,EAAE,CAAC;gBACvC,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC;gBAClC,OAAO,CAAC,GAAG,CAAC,gBAAgB,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;gBAC7C,OAAO,CAAC,GAAG,CAAC,gBAAgB,QAAQ,CAAC,WAAW,EAAE,CAAC,CAAC;gBACpD,IAAI,QAAQ,CAAC,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;oBACnE,OAAO,CAAC,GAAG,CAAC,gBAAgB,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBACnE,CAAC;gBACD,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YAClB,CAAC;YACD,MAAM;QACR,CAAC;QACD;YACE,SAAS,EAAE,CAAC;YACZ,IAAI,GAAG,EAAE,CAAC;gBACR,OAAO,CAAC,KAAK,CAAC,sBAAsB,GAAG,EAAE,CAAC,CAAC;gBAC3C,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAClB,CAAC;IACL,CAAC;AACH,CAAC;AAED,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;IACf,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACjB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC"}
+\ No newline at end of file
+diff --git a/scripts/mkctl.ts b/scripts/mkctl.ts
+new file mode 100644
+index 0000000..2bf477b
+--- /dev/null
++++ b/scripts/mkctl.ts
+@@ -0,0 +1,62 @@
++#!/usr/bin/env node
++import { Hostess } from '../src/hostess/Hostess.js';
++
++function printHelp() {
++  console.log(`mkctl - Microkernel Control CLI
++
++USAGE
++  mkctl <command>
++
++COMMANDS
++  endpoints    List all registered endpoints with type and coordinates
++
++EXAMPLES
++  mkctl endpoints
++
++LEARN MORE
++  Documentation: https://github.com/anteew/mkolbol
++`);
++}
++
++async function main() {
++  const [,, cmd] = process.argv;
++
++  switch (cmd) {
++    case 'endpoints': {
++      // Create a Hostess instance (in a real scenario, this would connect to a running Hostess)
++      const hostess = new Hostess();
++
++      const endpoints = hostess.listEndpoints();
++
++      if (endpoints.size === 0) {
++        console.log('No endpoints registered.');
++        break;
++      }
++
++      console.log('Registered Endpoints:');
++      console.log('');
++
++      for (const [id, endpoint] of endpoints) {
++        console.log(`ID:          ${id}`);
++        console.log(`Type:        ${endpoint.type}`);
++        console.log(`Coordinates: ${endpoint.coordinates}`);
++        if (endpoint.metadata && Object.keys(endpoint.metadata).length > 0) {
++          console.log(`Metadata:    ${JSON.stringify(endpoint.metadata)}`);
++        }
++        console.log('');
++      }
++      break;
++    }
++    default:
++      printHelp();
++      if (cmd) {
++        console.error(`\nUnknown command: ${cmd}`);
++        process.exit(1);
++      }
++  }
++}
++
++main().catch(e => {
++  console.error(e);
++  process.exit(1);
++});
diff --git a/patches/DIFF_T4604_docs-endpoints.patch b/patches/DIFF_T4604_docs-endpoints.patch
new file mode 100644
index 0000000..58ac102
--- /dev/null
+++ b/patches/DIFF_T4604_docs-endpoints.patch
@@ -0,0 +1,731 @@
+diff --git a/README.md b/README.md
+index dad2511..3778e1b 100644
+--- a/README.md
++++ b/README.md
+@@ -182,6 +182,34 @@ keyboard.start();
+ pty.start();
+ ```
+ 
++## Endpoints
++
++Endpoints represent the execution environment and control coordinates for modules in the microkernel. Each endpoint has a **type** indicating how the module runs and **coordinates** specifying how to reach or identify it.
++
++### Endpoint Types
++
++The system supports four endpoint types:
++
++- **inproc** - In-process modules running directly in the main process
++  - Coordinates: `node:<node-id>`
++  - Use case: Lightweight transforms, minimal overhead, no isolation needed
++
++- **worker** - Worker thread modules with isolated execution
++  - Coordinates: `node:<node-id>`
++  - Use case: CPU-intensive work, memory isolation, parallel processing
++
++- **external** - External processes spawned via stdio
++  - Coordinates: `<command> <args>`
++  - Use case: Language-agnostic integration, any executable, isolated environment
++
++- **pty** - PTY-based processes with terminal emulation
++  - Coordinates: `pid:<process-id>`
++  - Use case: Interactive shells, terminal applications, PTY hijacking
++
++### Discovery
++
++Endpoints are registered automatically with Hostess when modules are instantiated. Use `mkctl endpoints` to discover all registered endpoints in the system. See the [mkctl CLI documentation](#mkctl---microkernel-control-cli) for usage details.
++
+ ## Use Cases
+ 
+ The Stream Kernel enables:
+@@ -569,6 +597,18 @@ See [docs/testing/laminar.md](docs/testing/laminar.md#cross-language-test-ingest
+ 
+ ### CLI Tools
+ 
++#### mkctl - Microkernel Control CLI
++
++```bash
++# List all registered endpoints
++node dist/scripts/mkctl.js endpoints
++
++# Show help
++node dist/scripts/mkctl.js
++```
++
++The `mkctl` tool provides control and introspection for the microkernel. The `endpoints` command lists all endpoints registered with Hostess, showing their type (e.g., "pty", "executor"), coordinates (e.g., "localhost:3000"), and optional metadata.
++
+ #### logq - Query JSONL test logs
+ 
+ ```bash
+diff --git a/dist/scripts/lam.js b/dist/scripts/lam.js
+old mode 100644
+new mode 100755
+diff --git a/dist/src/executor/Executor.d.ts.map b/dist/src/executor/Executor.d.ts.map
+index c97d047..5c055ab 100644
+--- a/dist/src/executor/Executor.d.ts.map
++++ b/dist/src/executor/Executor.d.ts.map
+@@ -1 +1 @@
+-{"version":3,"file":"Executor.d.ts","sourceRoot":"","sources":["../../../src/executor/Executor.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,qBAAqB,CAAC;AAC7C,OAAO,EAAE,OAAO,EAAE,MAAM,uBAAuB,CAAC;AAChD,OAAO,EAAE,YAAY,EAAE,MAAM,0BAA0B,CAAC;AAExD,OAAO,EAAE,qBAAqB,EAAE,MAAM,sCAAsC,CAAC;AAC7E,OAAO,KAAK,EAAE,cAAc,EAAc,MAAM,qBAAqB,CAAC;AACtE,OAAO,KAAK,EAAkB,sBAAsB,EAAE,MAAM,aAAa,CAAC;AAI1E,OAAO,KAAK,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAC;AAcvD,qBAAa,QAAQ;IAOjB,OAAO,CAAC,MAAM;IACd,OAAO,CAAC,OAAO;IACf,OAAO,CAAC,YAAY;IARtB,OAAO,CAAC,MAAM,CAAC,CAAiB;IAChC,OAAO,CAAC,OAAO,CAAqC;IACpD,OAAO,CAAC,cAAc,CAAiB;IACvC,OAAO,CAAC,MAAM,CAAC,CAAa;gBAGlB,MAAM,EAAE,MAAM,EACd,OAAO,EAAE,OAAO,EAChB,YAAY,EAAE,YAAY,EAClC,MAAM,CAAC,EAAE,UAAU;IAWrB,IAAI,CAAC,MAAM,EAAE,cAAc,GAAG,IAAI;IAI5B,EAAE,IAAI,OAAO,CAAC,IAAI,CAAC;IA0CnB,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC;IAerB,WAAW,CAAC,EAAE,EAAE,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC;IAkB5C,cAAc,CAAC,IAAI,EAAE,MAAM,EAAE,WAAW,EAAE,GAAG,GAAG,IAAI;IAI9C,oBAAoB,CAAC,QAAQ,EAAE,sBAAsB,GAAG,OAAO,CAAC,qBAAqB,CAAC;YAmB9E,eAAe;YAUf,qBAAqB;YA2CrB,qBAAqB;IA8GnC,OAAO,CAAC,aAAa;IAarB,OAAO,CAAC,wBAAwB;IAWhC,OAAO,CAAC,6BAA6B;IAWrC,OAAO,CAAC,WAAW;IAOnB,OAAO,CAAC,aAAa;CAMtB"}
+\ No newline at end of file
++{"version":3,"file":"Executor.d.ts","sourceRoot":"","sources":["../../../src/executor/Executor.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,qBAAqB,CAAC;AAC7C,OAAO,EAAE,OAAO,EAAE,MAAM,uBAAuB,CAAC;AAChD,OAAO,EAAE,YAAY,EAAE,MAAM,0BAA0B,CAAC;AAExD,OAAO,EAAE,qBAAqB,EAAE,MAAM,sCAAsC,CAAC;AAC7E,OAAO,KAAK,EAAE,cAAc,EAAc,MAAM,qBAAqB,CAAC;AACtE,OAAO,KAAK,EAAkB,sBAAsB,EAAE,MAAM,aAAa,CAAC;AAI1E,OAAO,KAAK,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAC;AAcvD,qBAAa,QAAQ;IAOjB,OAAO,CAAC,MAAM;IACd,OAAO,CAAC,OAAO;IACf,OAAO,CAAC,YAAY;IARtB,OAAO,CAAC,MAAM,CAAC,CAAiB;IAChC,OAAO,CAAC,OAAO,CAAqC;IACpD,OAAO,CAAC,cAAc,CAAiB;IACvC,OAAO,CAAC,MAAM,CAAC,CAAa;gBAGlB,MAAM,EAAE,MAAM,EACd,OAAO,EAAE,OAAO,EAChB,YAAY,EAAE,YAAY,EAClC,MAAM,CAAC,EAAE,UAAU;IAWrB,IAAI,CAAC,MAAM,EAAE,cAAc,GAAG,IAAI;IAI5B,EAAE,IAAI,OAAO,CAAC,IAAI,CAAC;IA0CnB,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC;IAerB,WAAW,CAAC,EAAE,EAAE,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC;IAkB5C,cAAc,CAAC,IAAI,EAAE,MAAM,EAAE,WAAW,EAAE,GAAG,GAAG,IAAI;IAI9C,oBAAoB,CAAC,QAAQ,EAAE,sBAAsB,GAAG,OAAO,CAAC,qBAAqB,CAAC;YAmB9E,eAAe;YAUf,qBAAqB;YAoDrB,qBAAqB;IAuHnC,OAAO,CAAC,aAAa;IAarB,OAAO,CAAC,wBAAwB;IAWhC,OAAO,CAAC,6BAA6B;IAWrC,OAAO,CAAC,WAAW;IAOnB,OAAO,CAAC,aAAa;CAMtB"}
+\ No newline at end of file
+diff --git a/dist/src/executor/Executor.js b/dist/src/executor/Executor.js
+index 6a05563..73a33fe 100644
+--- a/dist/src/executor/Executor.js
++++ b/dist/src/executor/Executor.js
+@@ -148,7 +148,15 @@ export class Executor {
+                 produces: []
+             }
+         };
+-        this.hostess.register(manifest);
++        const identity = this.hostess.register(manifest);
++        this.hostess.registerEndpoint(identity, {
++            type: 'inproc',
++            coordinates: `node:${nodeConfig.id}`,
++            metadata: {
++                module: nodeConfig.module,
++                runMode: 'inproc'
++            }
++        });
+         this.stateManager.addNode({
+             id: nodeConfig.id,
+             name: nodeConfig.module,
+@@ -228,7 +236,15 @@ export class Executor {
+                 produces: []
+             }
+         };
+-        this.hostess.register(manifest);
++        const identity = this.hostess.register(manifest);
++        this.hostess.registerEndpoint(identity, {
++            type: 'worker',
++            coordinates: `node:${nodeConfig.id}`,
++            metadata: {
++                module: nodeConfig.module,
++                runMode: 'worker'
++            }
++        });
+         this.stateManager.addNode({
+             id: nodeConfig.id,
+             name: nodeConfig.module,
+diff --git a/dist/src/executor/Executor.js.map b/dist/src/executor/Executor.js.map
+index 9755691..60abc99 100644
+--- a/dist/src/executor/Executor.js.map
++++ b/dist/src/executor/Executor.js.map
+@@ -1 +1 @@
+-{"version":3,"file":"Executor.js","sourceRoot":"","sources":["../../../src/executor/Executor.ts"],"names":[],"mappings":"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"}
+\ No newline at end of file
++{"version":3,"file":"Executor.js","sourceRoot":"","sources":["../../../src/executor/Executor.ts"],"names":[],"mappings":"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"}
+\ No newline at end of file
+diff --git a/dist/src/hostess/Hostess.d.ts b/dist/src/hostess/Hostess.d.ts
+index 7733cb6..7626aad 100644
+--- a/dist/src/hostess/Hostess.d.ts
++++ b/dist/src/hostess/Hostess.d.ts
+@@ -1,4 +1,4 @@
+-import { CapabilityQuery, GuestBookEntry, ServerManifest } from '../types.js';
++import { CapabilityQuery, GuestBookEntry, HostessEndpoint, ServerManifest } from '../types.js';
+ import { TestEventEnvelope } from '../logging/TestEvent.js';
+ interface HostessOptions {
+     heartbeatIntervalMs?: number;
+@@ -7,6 +7,7 @@ interface HostessOptions {
+ }
+ export declare class Hostess {
+     private guestBook;
++    private endpoints;
+     private interval?;
+     private readonly heartbeatIntervalMs;
+     private readonly evictionThresholdMs;
+@@ -18,6 +19,8 @@ export declare class Hostess {
+     markAvailable(serverId: string, terminalName: string): void;
+     query(filter?: CapabilityQuery): GuestBookEntry[];
+     list(): GuestBookEntry[];
++    registerEndpoint(id: string, endpoint: HostessEndpoint): void;
++    listEndpoints(): Map<string, HostessEndpoint>;
+     startEvictionLoop(): void;
+     stopEvictionLoop(): void;
+     private isLive;
+diff --git a/dist/src/hostess/Hostess.d.ts.map b/dist/src/hostess/Hostess.d.ts.map
+index 308c87e..537ad0f 100644
+--- a/dist/src/hostess/Hostess.d.ts.map
++++ b/dist/src/hostess/Hostess.d.ts.map
+@@ -1 +1 @@
+-{"version":3,"file":"Hostess.d.ts","sourceRoot":"","sources":["../../../src/hostess/Hostess.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,eAAe,EAAE,cAAc,EAAE,cAAc,EAAuB,MAAM,aAAa,CAAC;AACnG,OAAO,EAAE,iBAAiB,EAAe,MAAM,yBAAyB,CAAC;AAIzE,UAAU,cAAc;IACtB,mBAAmB,CAAC,EAAE,MAAM,CAAC;IAC7B,mBAAmB,CAAC,EAAE,MAAM,CAAC;IAC7B,MAAM,CAAC,EAAE,CAAC,GAAG,EAAE,iBAAiB,KAAK,IAAI,CAAC;CAC3C;AAED,qBAAa,OAAO;IAClB,OAAO,CAAC,SAAS,CAAqC;IACtD,OAAO,CAAC,QAAQ,CAAC,CAAiB;IAClC,OAAO,CAAC,QAAQ,CAAC,mBAAmB,CAAS;IAC7C,OAAO,CAAC,QAAQ,CAAC,mBAAmB,CAAS;IAC7C,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAmC;gBAE/C,IAAI,GAAE,cAAmB;IAYrC,QAAQ,CAAC,KAAK,EAAE,cAAc,GAAG,MAAM;IA+CvC,SAAS,CAAC,QAAQ,EAAE,MAAM,GAAG,IAAI;IAUjC,SAAS,CAAC,QAAQ,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,GAAG,IAAI;IAa7E,aAAa,CAAC,QAAQ,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,GAAG,IAAI;IAQ3D,KAAK,CAAC,MAAM,GAAE,eAAoB,GAAG,cAAc,EAAE;IA0BrD,IAAI,IAAI,cAAc,EAAE;IAIxB,iBAAiB,IAAI,IAAI;IAczB,gBAAgB,IAAI,IAAI;IAOxB,OAAO,CAAC,MAAM;IAId,OAAO,CAAC,gBAAgB;CAGzB"}
+\ No newline at end of file
++{"version":3,"file":"Hostess.d.ts","sourceRoot":"","sources":["../../../src/hostess/Hostess.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,eAAe,EAAE,cAAc,EAAE,eAAe,EAAE,cAAc,EAAuB,MAAM,aAAa,CAAC;AACpH,OAAO,EAAE,iBAAiB,EAAe,MAAM,yBAAyB,CAAC;AAIzE,UAAU,cAAc;IACtB,mBAAmB,CAAC,EAAE,MAAM,CAAC;IAC7B,mBAAmB,CAAC,EAAE,MAAM,CAAC;IAC7B,MAAM,CAAC,EAAE,CAAC,GAAG,EAAE,iBAAiB,KAAK,IAAI,CAAC;CAC3C;AAED,qBAAa,OAAO;IAClB,OAAO,CAAC,SAAS,CAAqC;IACtD,OAAO,CAAC,SAAS,CAAsC;IACvD,OAAO,CAAC,QAAQ,CAAC,CAAiB;IAClC,OAAO,CAAC,QAAQ,CAAC,mBAAmB,CAAS;IAC7C,OAAO,CAAC,QAAQ,CAAC,mBAAmB,CAAS;IAC7C,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAmC;gBAE/C,IAAI,GAAE,cAAmB;IAYrC,QAAQ,CAAC,KAAK,EAAE,cAAc,GAAG,MAAM;IA+CvC,SAAS,CAAC,QAAQ,EAAE,MAAM,GAAG,IAAI;IAUjC,SAAS,CAAC,QAAQ,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,GAAG,IAAI;IAa7E,aAAa,CAAC,QAAQ,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,GAAG,IAAI;IAQ3D,KAAK,CAAC,MAAM,GAAE,eAAoB,GAAG,cAAc,EAAE;IA0BrD,IAAI,IAAI,cAAc,EAAE;IAIxB,gBAAgB,CAAC,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,eAAe,GAAG,IAAI;IAS7D,aAAa,IAAI,GAAG,CAAC,MAAM,EAAE,eAAe,CAAC;IAI7C,iBAAiB,IAAI,IAAI;IAczB,gBAAgB,IAAI,IAAI;IAOxB,OAAO,CAAC,MAAM;IAId,OAAO,CAAC,gBAAgB;CAGzB"}
+\ No newline at end of file
+diff --git a/dist/src/hostess/Hostess.js b/dist/src/hostess/Hostess.js
+index 9126f53..ec70b5b 100644
+--- a/dist/src/hostess/Hostess.js
++++ b/dist/src/hostess/Hostess.js
+@@ -5,6 +5,7 @@ import { createLogger } from '../logging/logger.js';
+ import { debug } from '../debug/api.js';
+ export class Hostess {
+     guestBook = new Map();
++    endpoints = new Map();
+     interval;
+     heartbeatIntervalMs;
+     evictionThresholdMs;
+@@ -132,6 +133,17 @@ export class Hostess {
+     list() {
+         return Array.from(this.guestBook.values());
+     }
++    registerEndpoint(id, endpoint) {
++        this.endpoints.set(id, endpoint);
++        this.logger?.(createEvent('hostess:registerEndpoint', 'hostess', {
++            id,
++            payload: { type: endpoint.type, coordinates: endpoint.coordinates }
++        }));
++        debug.emit('hostess', 'registerEndpoint', { id, type: endpoint.type, coordinates: endpoint.coordinates });
++    }
++    listEndpoints() {
++        return new Map(this.endpoints);
++    }
+     startEvictionLoop() {
+         if (this.interval)
+             return;
+diff --git a/dist/src/hostess/Hostess.js.map b/dist/src/hostess/Hostess.js.map
+index 382060c..8248ede 100644
+--- a/dist/src/hostess/Hostess.js.map
++++ b/dist/src/hostess/Hostess.js.map
+@@ -1 +1 @@
+-{"version":3,"file":"Hostess.js","sourceRoot":"","sources":["../../../src/hostess/Hostess.ts"],"names":[],"mappings":"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"}
+\ No newline at end of file
++{"version":3,"file":"Hostess.js","sourceRoot":"","sources":["../../../src/hostess/Hostess.ts"],"names":[],"mappings":"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"}
+\ No newline at end of file
+diff --git a/dist/src/types.d.ts b/dist/src/types.d.ts
+index 44dd98b..d7b49ac 100644
+--- a/dist/src/types.d.ts
++++ b/dist/src/types.d.ts
+@@ -105,4 +105,9 @@ export interface EscapeSequence {
+     length: number;
+     raw?: string;
+ }
++export interface HostessEndpoint {
++    type: string;
++    coordinates: string;
++    metadata?: Record<string, any>;
++}
+ //# sourceMappingURL=types.d.ts.map
+\ No newline at end of file
+diff --git a/dist/src/types.d.ts.map b/dist/src/types.d.ts.map
+index e1b37da..dde723f 100644
+--- a/dist/src/types.d.ts.map
++++ b/dist/src/types.d.ts.map
+@@ -1 +1 @@
+-{"version":3,"file":"types.d.ts","sourceRoot":"","sources":["../../src/types.ts"],"names":[],"mappings":"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"}
+\ No newline at end of file
++{"version":3,"file":"types.d.ts","sourceRoot":"","sources":["../../src/types.ts"],"names":[],"mappings":"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"}
+\ No newline at end of file
+diff --git a/dist/src/wrappers/ExternalServerWrapper.d.ts.map b/dist/src/wrappers/ExternalServerWrapper.d.ts.map
+index e820b92..8f866f4 100644
+--- a/dist/src/wrappers/ExternalServerWrapper.d.ts.map
++++ b/dist/src/wrappers/ExternalServerWrapper.d.ts.map
+@@ -1 +1 @@
+-{"version":3,"file":"ExternalServerWrapper.d.ts","sourceRoot":"","sources":["../../../src/wrappers/ExternalServerWrapper.ts"],"names":[],"mappings":"AAAA,OAAO,EAAS,YAAY,EAAE,MAAM,eAAe,CAAC;AACpD,OAAO,EAAE,MAAM,EAAE,MAAM,qBAAqB,CAAC;AAC7C,OAAO,EAAE,OAAO,EAAE,MAAM,uBAAuB,CAAC;AAChD,OAAO,KAAK,EAAE,IAAI,EAAE,MAAM,oBAAoB,CAAC;AAC/C,OAAO,KAAK,EAAE,sBAAsB,EAAE,WAAW,EAAE,MAAM,aAAa,CAAC;AAIvE,qBAAa,qBAAqB;IAU9B,SAAS,CAAC,MAAM,EAAE,MAAM;IACxB,SAAS,CAAC,OAAO,EAAE,OAAO;IACnB,QAAQ,EAAE,sBAAsB;IAXzC,SAAS,CAAC,OAAO,CAAC,EAAE,YAAY,CAAC;IACjC,SAAS,CAAC,UAAU,EAAE,IAAI,CAAC;IAC3B,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC;IAC5B,SAAS,CAAC,UAAU,EAAE,IAAI,CAAC;IAC3B,SAAS,CAAC,YAAY,SAAK;IAC3B,SAAS,CAAC,SAAS,SAAK;IACxB,SAAS,CAAC,gBAAgB,UAAS;gBAGvB,MAAM,EAAE,MAAM,EACd,OAAO,EAAE,OAAO,EACnB,QAAQ,EAAE,sBAAsB;IAoBzC,IAAI,SAAS,IAAI,IAAI,CAEpB;IAED,IAAI,UAAU,IAAI,IAAI,CAErB;IAED,IAAI,SAAS,IAAI,IAAI,CAEpB;IAEK,KAAK,IAAI,OAAO,CAAC,IAAI,CAAC;IA6DtB,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC;IAWxB,QAAQ,CAAC,OAAO,GAAE,MAAa,GAAG,OAAO,CAAC,IAAI,CAAC;IA8BrD,SAAS,IAAI,OAAO;IAIpB,cAAc,IAAI,WAAW;IAiB7B,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC,OAAO,GAAG,IAAI;cAOxB,mBAAmB,IAAI,OAAO,CAAC,IAAI,CAAC;cAIpC,qBAAqB,IAAI,OAAO,CAAC,IAAI,CAAC;IAGtD,SAAS,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,GAAG,IAAI,EAAE,MAAM,EAAE,MAAM,CAAC,OAAO,GAAG,IAAI,GAAG,IAAI;IAkB9E,SAAS,CAAC,aAAa,CAAC,QAAQ,EAAE,MAAM,GAAG,IAAI,GAAG,OAAO;CAU1D"}
+\ No newline at end of file
++{"version":3,"file":"ExternalServerWrapper.d.ts","sourceRoot":"","sources":["../../../src/wrappers/ExternalServerWrapper.ts"],"names":[],"mappings":"AAAA,OAAO,EAAS,YAAY,EAAE,MAAM,eAAe,CAAC;AACpD,OAAO,EAAE,MAAM,EAAE,MAAM,qBAAqB,CAAC;AAC7C,OAAO,EAAE,OAAO,EAAE,MAAM,uBAAuB,CAAC;AAChD,OAAO,KAAK,EAAE,IAAI,EAAE,MAAM,oBAAoB,CAAC;AAC/C,OAAO,KAAK,EAAE,sBAAsB,EAAE,WAAW,EAAE,MAAM,aAAa,CAAC;AAIvE,qBAAa,qBAAqB;IAU9B,SAAS,CAAC,MAAM,EAAE,MAAM;IACxB,SAAS,CAAC,OAAO,EAAE,OAAO;IACnB,QAAQ,EAAE,sBAAsB;IAXzC,SAAS,CAAC,OAAO,CAAC,EAAE,YAAY,CAAC;IACjC,SAAS,CAAC,UAAU,EAAE,IAAI,CAAC;IAC3B,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC;IAC5B,SAAS,CAAC,UAAU,EAAE,IAAI,CAAC;IAC3B,SAAS,CAAC,YAAY,SAAK;IAC3B,SAAS,CAAC,SAAS,SAAK;IACxB,SAAS,CAAC,gBAAgB,UAAS;gBAGvB,MAAM,EAAE,MAAM,EACd,OAAO,EAAE,OAAO,EACnB,QAAQ,EAAE,sBAAsB;IAoBzC,IAAI,SAAS,IAAI,IAAI,CAEpB;IAED,IAAI,UAAU,IAAI,IAAI,CAErB;IAED,IAAI,SAAS,IAAI,IAAI,CAEpB;IAEK,KAAK,IAAI,OAAO,CAAC,IAAI,CAAC;IA6DtB,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC;IAWxB,QAAQ,CAAC,OAAO,GAAE,MAAa,GAAG,OAAO,CAAC,IAAI,CAAC;IA8BrD,SAAS,IAAI,OAAO;IAIpB,cAAc,IAAI,WAAW;IAiB7B,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC,OAAO,GAAG,IAAI;cAOxB,mBAAmB,IAAI,OAAO,CAAC,IAAI,CAAC;cAapC,qBAAqB,IAAI,OAAO,CAAC,IAAI,CAAC;IAGtD,SAAS,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,GAAG,IAAI,EAAE,MAAM,EAAE,MAAM,CAAC,OAAO,GAAG,IAAI,GAAG,IAAI;IAkB9E,SAAS,CAAC,aAAa,CAAC,QAAQ,EAAE,MAAM,GAAG,IAAI,GAAG,OAAO;CAU1D"}
+\ No newline at end of file
+diff --git a/dist/src/wrappers/ExternalServerWrapper.js b/dist/src/wrappers/ExternalServerWrapper.js
+index d1d87fc..d24fe1a 100644
+--- a/dist/src/wrappers/ExternalServerWrapper.js
++++ b/dist/src/wrappers/ExternalServerWrapper.js
+@@ -145,7 +145,15 @@ export class ExternalServerWrapper {
+         this.process.kill(signal);
+     }
+     async registerWithHostess() {
+-        this.hostess.register(this.manifest);
++        const identity = this.hostess.register(this.manifest);
++        this.hostess.registerEndpoint(identity, {
++            type: 'external',
++            coordinates: `${this.manifest.command} ${this.manifest.args.join(' ')}`,
++            metadata: {
++                cwd: this.manifest.cwd,
++                ioMode: this.manifest.ioMode
++            }
++        });
+     }
+     async deregisterFromHostess() {
+     }
+diff --git a/dist/src/wrappers/ExternalServerWrapper.js.map b/dist/src/wrappers/ExternalServerWrapper.js.map
+index 8d1addb..9c43680 100644
+--- a/dist/src/wrappers/ExternalServerWrapper.js.map
++++ b/dist/src/wrappers/ExternalServerWrapper.js.map
+@@ -1 +1 @@
+-{"version":3,"file":"ExternalServerWrapper.js","sourceRoot":"","sources":["../../../src/wrappers/ExternalServerWrapper.ts"],"names":[],"mappings":"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"}
+\ No newline at end of file
++{"version":3,"file":"ExternalServerWrapper.js","sourceRoot":"","sources":["../../../src/wrappers/ExternalServerWrapper.ts"],"names":[],"mappings":"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"}
+\ No newline at end of file
+diff --git a/dist/src/wrappers/PTYServerWrapper.d.ts b/dist/src/wrappers/PTYServerWrapper.d.ts
+index b353b56..0047f7f 100644
+--- a/dist/src/wrappers/PTYServerWrapper.d.ts
++++ b/dist/src/wrappers/PTYServerWrapper.d.ts
+@@ -8,6 +8,7 @@ export declare class PTYServerWrapper extends ExternalServerWrapper {
+     private dataDisposable?;
+     constructor(kernel: Kernel, hostess: Hostess, manifest: ExternalServerManifest);
+     spawn(): Promise<void>;
++    protected registerWithHostess(): Promise<void>;
+     resize(cols: number, rows: number): void;
+     shutdown(timeout?: number): Promise<void>;
+     sendSignal(signal: string): void;
+diff --git a/dist/src/wrappers/PTYServerWrapper.d.ts.map b/dist/src/wrappers/PTYServerWrapper.d.ts.map
+index 04b440f..2d61a12 100644
+--- a/dist/src/wrappers/PTYServerWrapper.d.ts.map
++++ b/dist/src/wrappers/PTYServerWrapper.d.ts.map
+@@ -1 +1 @@
+-{"version":3,"file":"PTYServerWrapper.d.ts","sourceRoot":"","sources":["../../../src/wrappers/PTYServerWrapper.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,qBAAqB,EAAE,MAAM,4BAA4B,CAAC;AACnE,OAAO,EAAE,MAAM,EAAE,MAAM,qBAAqB,CAAC;AAC7C,OAAO,EAAE,OAAO,EAAE,MAAM,uBAAuB,CAAC;AAChD,OAAO,KAAK,EAAE,sBAAsB,EAAE,MAAM,aAAa,CAAC;AAG1D,qBAAa,gBAAiB,SAAQ,qBAAqB;IACzD,OAAO,CAAC,UAAU,CAAC,CAAW;IAC9B,OAAO,CAAC,YAAY,CAAiC;IACrD,OAAO,CAAC,cAAc,CAAC,CAA0B;gBAG/C,MAAM,EAAE,MAAM,EACd,OAAO,EAAE,OAAO,EAChB,QAAQ,EAAE,sBAAsB;IAU5B,KAAK,IAAI,OAAO,CAAC,IAAI,CAAC;IAwD5B,MAAM,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,GAAG,IAAI;IASlC,QAAQ,CAAC,OAAO,GAAE,MAAY,GAAG,OAAO,CAAC,IAAI,CAAC;IAyBpD,UAAU,CAAC,MAAM,EAAE,MAAM,GAAG,IAAI;IAOhC,SAAS,IAAI,OAAO;IAIpB,cAAc;;;;;;IAiBR,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC;CAU/B"}
+\ No newline at end of file
++{"version":3,"file":"PTYServerWrapper.d.ts","sourceRoot":"","sources":["../../../src/wrappers/PTYServerWrapper.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,qBAAqB,EAAE,MAAM,4BAA4B,CAAC;AACnE,OAAO,EAAE,MAAM,EAAE,MAAM,qBAAqB,CAAC;AAC7C,OAAO,EAAE,OAAO,EAAE,MAAM,uBAAuB,CAAC;AAChD,OAAO,KAAK,EAAE,sBAAsB,EAAE,MAAM,aAAa,CAAC;AAG1D,qBAAa,gBAAiB,SAAQ,qBAAqB;IACzD,OAAO,CAAC,UAAU,CAAC,CAAW;IAC9B,OAAO,CAAC,YAAY,CAAiC;IACrD,OAAO,CAAC,cAAc,CAAC,CAA0B;gBAG/C,MAAM,EAAE,MAAM,EACd,OAAO,EAAE,OAAO,EAChB,QAAQ,EAAE,sBAAsB;IAU5B,KAAK,IAAI,OAAO,CAAC,IAAI,CAAC;cAwDZ,mBAAmB,IAAI,OAAO,CAAC,IAAI,CAAC;IAcpD,MAAM,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,GAAG,IAAI;IASlC,QAAQ,CAAC,OAAO,GAAE,MAAY,GAAG,OAAO,CAAC,IAAI,CAAC;IAyBpD,UAAU,CAAC,MAAM,EAAE,MAAM,GAAG,IAAI;IAOhC,SAAS,IAAI,OAAO;IAIpB,cAAc;;;;;;IAiBR,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC;CAU/B"}
+\ No newline at end of file
+diff --git a/dist/src/wrappers/PTYServerWrapper.js b/dist/src/wrappers/PTYServerWrapper.js
+index 70b5b05..f78ae0b 100644
+--- a/dist/src/wrappers/PTYServerWrapper.js
++++ b/dist/src/wrappers/PTYServerWrapper.js
+@@ -58,6 +58,18 @@ export class PTYServerWrapper extends ExternalServerWrapper {
+         });
+         await this.registerWithHostess();
+     }
++    async registerWithHostess() {
++        const identity = this.hostess.register(this.manifest);
++        this.hostess.registerEndpoint(identity, {
++            type: 'pty',
++            coordinates: `pid:${this.ptyProcess?.pid}`,
++            metadata: {
++                cols: this.terminalSize.cols,
++                rows: this.terminalSize.rows,
++                terminalType: this.manifest.terminalType || 'xterm-256color'
++            }
++        });
++    }
+     resize(cols, rows) {
+         if (!this.ptyProcess) {
+             throw new Error('PTY process not running');
+diff --git a/dist/src/wrappers/PTYServerWrapper.js.map b/dist/src/wrappers/PTYServerWrapper.js.map
+index fa70ec2..7be15ad 100644
+--- a/dist/src/wrappers/PTYServerWrapper.js.map
++++ b/dist/src/wrappers/PTYServerWrapper.js.map
+@@ -1 +1 @@
+-{"version":3,"file":"PTYServerWrapper.js","sourceRoot":"","sources":["../../../src/wrappers/PTYServerWrapper.ts"],"names":[],"mappings":"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"}
+\ No newline at end of file
++{"version":3,"file":"PTYServerWrapper.js","sourceRoot":"","sources":["../../../src/wrappers/PTYServerWrapper.ts"],"names":[],"mappings":"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"}
+\ No newline at end of file
+diff --git a/docs/rfcs/stream-kernel/02-core-architecture.md b/docs/rfcs/stream-kernel/02-core-architecture.md
+index 6500a52..27cfa4b 100644
+--- a/docs/rfcs/stream-kernel/02-core-architecture.md
++++ b/docs/rfcs/stream-kernel/02-core-architecture.md
+@@ -363,6 +363,129 @@ Same API, different stream implementation!
+ 
+ **All of those are module responsibilities.**
+ 
++## Endpoints
++
++### Overview
++
++Endpoints provide addressability and metadata for modules in the system. Each registered module has an associated endpoint that describes:
++- **Type** - The execution environment (inproc, worker, external, pty)
++- **Coordinates** - Location/identifier for reaching the module
++- **Metadata** - Additional context specific to the endpoint type
++
++### Endpoint Model
++
++```typescript
++interface HostessEndpoint {
++  type: string;           // Execution environment type
++  coordinates: string;    // Location/identifier
++  metadata?: Record<string, any>;  // Type-specific metadata
++}
++```
++
++### Endpoint Types
++
++**inproc** - In-process modules
++```typescript
++{
++  type: 'inproc',
++  coordinates: 'node:timer-source',
++  metadata: {
++    module: 'TimerSource',
++    runMode: 'inproc'
++  }
++}
++```
++
++**worker** - Worker thread modules
++```typescript
++{
++  type: 'worker',
++  coordinates: 'node:transform-worker',
++  metadata: {
++    module: 'UppercaseTransform',
++    runMode: 'worker'
++  }
++}
++```
++
++**external** - External process via stdio
++```typescript
++{
++  type: 'external',
++  coordinates: '/usr/bin/python3 script.py',
++  metadata: {
++    cwd: '/path/to/working/dir',
++    ioMode: 'stdio'
++  }
++}
++```
++
++**pty** - PTY-based process
++```typescript
++{
++  type: 'pty',
++  coordinates: 'pid:12345',
++  metadata: {
++    cols: 80,
++    rows: 24,
++    terminalType: 'xterm-256color'
++  }
++}
++```
++
++### Registration
++
++Endpoints are registered automatically when modules are instantiated:
++
++**Via Executor:**
++```typescript
++// Executor registers endpoints during node instantiation
++const executor = new Executor(kernel, hostess, stateManager);
++executor.load(topologyConfig);
++await executor.up();  // Registers endpoints for all nodes
++```
++
++**Via Wrappers:**
++```typescript
++// PTY wrapper registers on spawn
++const ptyWrapper = new PTYServerWrapper(kernel, hostess, manifest);
++await ptyWrapper.spawn();  // Registers pty endpoint
++
++// External wrapper registers on spawn
++const extWrapper = new ExternalServerWrapper(kernel, hostess, manifest);
++await extWrapper.spawn();  // Registers external endpoint
++```
++
++### Discovery Pattern
++
++The Hostess provides discovery of registered endpoints:
++
++```typescript
++// Get all endpoints
++const endpoints = hostess.listEndpoints();
++
++// Iterate over endpoints
++for (const [id, endpoint] of endpoints) {
++  console.log(`${endpoint.type}: ${endpoint.coordinates}`);
++}
++```
++
++**CLI Discovery:**
++```bash
++# List all registered endpoints
++node dist/scripts/mkctl.js endpoints
++```
++
++### Use Cases
++
++**Dynamic routing** - Discover available endpoints at runtime and route connections dynamically
++
++**Health monitoring** - Track which endpoints are registered and available
++
++**Debugging** - Inspect endpoint metadata to understand system topology
++
++**Tool integration** - External tools can query endpoints to understand system structure
++
+ ## Next Steps
+ 
+ See:
+diff --git a/laminar.config.json b/laminar.config.json
+index 5335d04..ab7fe1f 100644
+--- a/laminar.config.json
++++ b/laminar.config.json
+@@ -1,63 +1 @@
+-{
+-  "enabled": true,
+-  "budget": {
+-    "kb": 10,
+-    "lines": 200
+-  },
+-  "hints": {
+-    "enabled": false,
+-    "showTrends": true,
+-    "maxLines": 1
+-  },
+-  "rules": [
+-    {
+-      "match": {
+-        "lvl": "error"
+-      },
+-      "actions": [
+-        {
+-          "type": "include"
+-        },
+-        {
+-          "type": "codeframe",
+-          "contextLines": 2
+-        }
+-      ],
+-      "priority": 10
+-    },
+-    {
+-      "match": {
+-        "evt": "assert.fail"
+-      },
+-      "actions": [
+-        {
+-          "type": "include"
+-        },
+-        {
+-          "type": "slice",
+-          "window": 10
+-        },
+-        {
+-          "type": "codeframe",
+-          "contextLines": 2
+-        }
+-      ],
+-      "priority": 9
+-    },
+-    {
+-      "match": {
+-        "evt": [
+-          "worker.ready",
+-          "worker.exit",
+-          "worker.error"
+-        ]
+-      },
+-      "actions": [
+-        {
+-          "type": "include"
+-        }
+-      ],
+-      "priority": 7
+-    }
+-  ]
+-}
++"{\"enabled\": true, \"budget\": {\"kb\": 15}}"
+\ No newline at end of file
+diff --git a/package-lock.json b/package-lock.json
+index 8a255fc..9b32d74 100644
+--- a/package-lock.json
++++ b/package-lock.json
+@@ -11,7 +11,11 @@
+       "dependencies": {
+         "node-pty": "^1.0.0"
+       },
++      "bin": {
++        "lam": "dist/scripts/lam.js"
++      },
+       "devDependencies": {
++        "@agent_vega/laminar": "github:anteew/Laminar#54b54a1",
+         "@types/node": "^20.12.12",
+         "fast-check": "^4.3.0",
+         "tsx": "^4.19.2",
+@@ -19,6 +23,49 @@
+         "vitest": "^1.6.0"
+       }
+     },
++    "../../../home/ubuntu/repos/Laminar": {
++      "name": "@agent_vega/laminar",
++      "version": "0.1.11",
++      "extraneous": true,
++      "hasInstallScript": true,
++      "license": "MIT",
++      "bin": {
++        "lam": "dist/scripts/lam.js",
++        "laminar-mcp": "dist/scripts/mcp-server.js"
++      },
++      "devDependencies": {
++        "@types/node": "^20.12.12",
++        "typescript": "^5.6.2",
++        "vitest": "^1.6.0"
++      }
++    },
++    "../Laminar": {
++      "name": "@agent_vega/laminar",
++      "version": "0.1.11",
++      "extraneous": true,
++      "hasInstallScript": true,
++      "license": "MIT",
++      "bin": {
++        "lam": "dist/scripts/lam.js",
++        "laminar-mcp": "dist/scripts/mcp-server.js"
++      },
++      "devDependencies": {
++        "@types/node": "^20.12.12",
++        "typescript": "^5.6.2",
++        "vitest": "^1.6.0"
++      }
++    },
++    "node_modules/@agent_vega/laminar": {
++      "version": "0.1.11",
++      "resolved": "git+ssh://git@github.com/anteew/Laminar.git#54b54a181f16a573ae09a495d31bc42448520750",
++      "dev": true,
++      "hasInstallScript": true,
++      "license": "MIT",
++      "bin": {
++        "lam": "dist/scripts/lam.js",
++        "laminar-mcp": "dist/scripts/mcp-server.js"
++      }
++    },
+     "node_modules/@esbuild/aix-ppc64": {
+       "version": "0.21.5",
+       "resolved": "https://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.21.5.tgz",
+diff --git a/package.json b/package.json
+index 1169686..f35ba4f 100644
+--- a/package.json
++++ b/package.json
+@@ -68,7 +68,7 @@
+     "node-pty": "^1.0.0"
+   },
+   "devDependencies": {
+-    "laminar": "file:/home/ubuntu/repos/Laminar",
++    "@agent_vega/laminar": "github:anteew/Laminar#54b54a1",
+     "@types/node": "^20.12.12",
+     "fast-check": "^4.3.0",
+     "tsx": "^4.19.2",
+diff --git a/src/executor/Executor.ts b/src/executor/Executor.ts
+index 9053d03..8dbe33b 100644
+--- a/src/executor/Executor.ts
++++ b/src/executor/Executor.ts
+@@ -187,7 +187,16 @@ export class Executor {
+         produces: []
+       }
+     };
+-    this.hostess.register(manifest);
++    const identity = this.hostess.register(manifest);
++
++    this.hostess.registerEndpoint(identity, {
++      type: 'inproc',
++      coordinates: `node:${nodeConfig.id}`,
++      metadata: {
++        module: nodeConfig.module,
++        runMode: 'inproc'
++      }
++    });
+ 
+     this.stateManager.addNode({
+       id: nodeConfig.id,
+@@ -281,7 +290,16 @@ export class Executor {
+         produces: []
+       }
+     };
+-    this.hostess.register(manifest);
++    const identity = this.hostess.register(manifest);
++
++    this.hostess.registerEndpoint(identity, {
++      type: 'worker',
++      coordinates: `node:${nodeConfig.id}`,
++      metadata: {
++        module: nodeConfig.module,
++        runMode: 'worker'
++      }
++    });
+ 
+     this.stateManager.addNode({
+       id: nodeConfig.id,
+diff --git a/src/hostess/Hostess.ts b/src/hostess/Hostess.ts
+index 62a6905..5ec8054 100644
+--- a/src/hostess/Hostess.ts
++++ b/src/hostess/Hostess.ts
+@@ -1,5 +1,5 @@
+ import crypto from 'node:crypto';
+-import { CapabilityQuery, GuestBookEntry, ServerManifest, buildServerIdentity } from '../types.js';
++import { CapabilityQuery, GuestBookEntry, HostessEndpoint, ServerManifest, buildServerIdentity } from '../types.js';
+ import { TestEventEnvelope, createEvent } from '../logging/TestEvent.js';
+ import { createLogger } from '../logging/logger.js';
+ import { debug } from '../debug/api.js';
+@@ -12,6 +12,7 @@ interface HostessOptions {
+ 
+ export class Hostess {
+   private guestBook = new Map<string, GuestBookEntry>();
++  private endpoints = new Map<string, HostessEndpoint>();
+   private interval?: NodeJS.Timeout;
+   private readonly heartbeatIntervalMs: number;
+   private readonly evictionThresholdMs: number;
+@@ -137,6 +138,19 @@ export class Hostess {
+     return Array.from(this.guestBook.values());
+   }
+ 
++  registerEndpoint(id: string, endpoint: HostessEndpoint): void {
++    this.endpoints.set(id, endpoint);
++    this.logger?.(createEvent('hostess:registerEndpoint', 'hostess', {
++      id,
++      payload: { type: endpoint.type, coordinates: endpoint.coordinates }
++    }));
++    debug.emit('hostess', 'registerEndpoint', { id, type: endpoint.type, coordinates: endpoint.coordinates });
++  }
++
++  listEndpoints(): Map<string, HostessEndpoint> {
++    return new Map(this.endpoints);
++  }
++
+   startEvictionLoop(): void {
+     if (this.interval) return;
+     this.interval = setInterval(() => {
+diff --git a/src/types.ts b/src/types.ts
+index c9dd9c4..1f2b5a9 100644
+--- a/src/types.ts
++++ b/src/types.ts
+@@ -122,3 +122,9 @@ export interface EscapeSequence {
+   length: number;
+   raw?: string;
+ }
++
++export interface HostessEndpoint {
++  type: string;
++  coordinates: string;
++  metadata?: Record<string, any>;
++}
+diff --git a/src/wrappers/ExternalServerWrapper.ts b/src/wrappers/ExternalServerWrapper.ts
+index 995b958..2c6a869 100644
+--- a/src/wrappers/ExternalServerWrapper.ts
++++ b/src/wrappers/ExternalServerWrapper.ts
+@@ -181,7 +181,16 @@ export class ExternalServerWrapper {
+   }
+ 
+   protected async registerWithHostess(): Promise<void> {
+-    this.hostess.register(this.manifest);
++    const identity = this.hostess.register(this.manifest);
++
++    this.hostess.registerEndpoint(identity, {
++      type: 'external',
++      coordinates: `${this.manifest.command} ${this.manifest.args.join(' ')}`,
++      metadata: {
++        cwd: this.manifest.cwd,
++        ioMode: this.manifest.ioMode
++      }
++    });
+   }
+ 
+   protected async deregisterFromHostess(): Promise<void> {
+diff --git a/src/wrappers/PTYServerWrapper.ts b/src/wrappers/PTYServerWrapper.ts
+index 1941cde..8a7eacf 100644
+--- a/src/wrappers/PTYServerWrapper.ts
++++ b/src/wrappers/PTYServerWrapper.ts
+@@ -79,6 +79,20 @@ export class PTYServerWrapper extends ExternalServerWrapper {
+     await this.registerWithHostess();
+   }
+ 
++  protected async registerWithHostess(): Promise<void> {
++    const identity = this.hostess.register(this.manifest);
++
++    this.hostess.registerEndpoint(identity, {
++      type: 'pty',
++      coordinates: `pid:${this.ptyProcess?.pid}`,
++      metadata: {
++        cols: this.terminalSize.cols,
++        rows: this.terminalSize.rows,
++        terminalType: this.manifest.terminalType || 'xterm-256color'
++      }
++    });
++  }
++
+   resize(cols: number, rows: number): void {
+     if (!this.ptyProcess) {
+       throw new Error('PTY process not running');
diff --git a/patches/DIFF_T4605_tests-endpoints.patch b/patches/DIFF_T4605_tests-endpoints.patch
new file mode 100644
index 0000000..b176874
--- /dev/null
+++ b/patches/DIFF_T4605_tests-endpoints.patch
@@ -0,0 +1,524 @@
+diff --git a/tests/hostess/hostessEndpoints.spec.ts b/tests/hostess/hostessEndpoints.spec.ts
+new file mode 100644
+index 0000000..fc5d88b
+--- /dev/null
++++ b/tests/hostess/hostessEndpoints.spec.ts
+@@ -0,0 +1,219 @@
++import { describe, it, expect, beforeEach } from 'vitest';
++import { Hostess } from '../../src/hostess/Hostess.js';
++import type { HostessEndpoint } from '../../src/types.js';
++
++describe('Hostess Endpoints', () => {
++  let hostess: Hostess;
++
++  beforeEach(() => {
++    hostess = new Hostess();
++  });
++
++  describe('registerEndpoint', () => {
++    it('should register an endpoint with id and coordinates', () => {
++      const endpoint: HostessEndpoint = {
++        type: 'inproc',
++        coordinates: 'node:test1',
++        metadata: { module: 'TestModule' }
++      };
++
++      hostess.registerEndpoint('test-id-1', endpoint);
++
++      const endpoints = hostess.listEndpoints();
++      expect(endpoints.size).toBe(1);
++      expect(endpoints.get('test-id-1')).toEqual(endpoint);
++    });
++
++    it('should register multiple endpoints with different ids', () => {
++      const endpoint1: HostessEndpoint = {
++        type: 'inproc',
++        coordinates: 'node:test1'
++      };
++      const endpoint2: HostessEndpoint = {
++        type: 'worker',
++        coordinates: 'node:test2'
++      };
++
++      hostess.registerEndpoint('id1', endpoint1);
++      hostess.registerEndpoint('id2', endpoint2);
++
++      const endpoints = hostess.listEndpoints();
++      expect(endpoints.size).toBe(2);
++      expect(endpoints.get('id1')).toEqual(endpoint1);
++      expect(endpoints.get('id2')).toEqual(endpoint2);
++    });
++
++    it('should overwrite endpoint if registered with same id', () => {
++      const endpoint1: HostessEndpoint = {
++        type: 'inproc',
++        coordinates: 'node:test1'
++      };
++      const endpoint2: HostessEndpoint = {
++        type: 'external',
++        coordinates: '/bin/bash'
++      };
++
++      hostess.registerEndpoint('same-id', endpoint1);
++      hostess.registerEndpoint('same-id', endpoint2);
++
++      const endpoints = hostess.listEndpoints();
++      expect(endpoints.size).toBe(1);
++      expect(endpoints.get('same-id')).toEqual(endpoint2);
++    });
++
++    it('should handle endpoint without metadata', () => {
++      const endpoint: HostessEndpoint = {
++        type: 'pty',
++        coordinates: 'pid:12345'
++      };
++
++      hostess.registerEndpoint('pty-id', endpoint);
++
++      const endpoints = hostess.listEndpoints();
++      expect(endpoints.get('pty-id')).toEqual(endpoint);
++      expect(endpoints.get('pty-id')?.metadata).toBeUndefined();
++    });
++  });
++
++  describe('listEndpoints', () => {
++    it('should return empty map when no endpoints registered', () => {
++      const endpoints = hostess.listEndpoints();
++      expect(endpoints.size).toBe(0);
++    });
++
++    it('should return a copy of the endpoints map', () => {
++      const endpoint: HostessEndpoint = {
++        type: 'inproc',
++        coordinates: 'node:test'
++      };
++
++      hostess.registerEndpoint('test-id', endpoint);
++      const endpoints1 = hostess.listEndpoints();
++      const endpoints2 = hostess.listEndpoints();
++
++      // Should be different map instances
++      expect(endpoints1).not.toBe(endpoints2);
++      // But with same content
++      expect(endpoints1.size).toBe(endpoints2.size);
++      expect(endpoints1.get('test-id')).toEqual(endpoints2.get('test-id'));
++    });
++
++    it('should contain all registered endpoints', () => {
++      hostess.registerEndpoint('e1', { type: 'inproc', coordinates: 'n1' });
++      hostess.registerEndpoint('e2', { type: 'worker', coordinates: 'n2' });
++      hostess.registerEndpoint('e3', { type: 'external', coordinates: 'n3' });
++      hostess.registerEndpoint('e4', { type: 'pty', coordinates: 'n4' });
++
++      const endpoints = hostess.listEndpoints();
++      expect(endpoints.size).toBe(4);
++      expect(endpoints.has('e1')).toBe(true);
++      expect(endpoints.has('e2')).toBe(true);
++      expect(endpoints.has('e3')).toBe(true);
++      expect(endpoints.has('e4')).toBe(true);
++    });
++  });
++
++  describe('endpoint types', () => {
++    it('should support inproc endpoint type', () => {
++      const endpoint: HostessEndpoint = {
++        type: 'inproc',
++        coordinates: 'node:timer1',
++        metadata: {
++          module: 'TimerSource',
++          runMode: 'inproc'
++        }
++      };
++
++      hostess.registerEndpoint('timer1-id', endpoint);
++      const stored = hostess.listEndpoints().get('timer1-id');
++      expect(stored?.type).toBe('inproc');
++      expect(stored?.metadata?.runMode).toBe('inproc');
++    });
++
++    it('should support worker endpoint type', () => {
++      const endpoint: HostessEndpoint = {
++        type: 'worker',
++        coordinates: 'node:worker1',
++        metadata: {
++          module: 'UppercaseTransform',
++          runMode: 'worker'
++        }
++      };
++
++      hostess.registerEndpoint('worker1-id', endpoint);
++      const stored = hostess.listEndpoints().get('worker1-id');
++      expect(stored?.type).toBe('worker');
++      expect(stored?.metadata?.runMode).toBe('worker');
++    });
++
++    it('should support external endpoint type', () => {
++      const endpoint: HostessEndpoint = {
++        type: 'external',
++        coordinates: '/usr/bin/python3 script.py',
++        metadata: {
++          cwd: '/tmp',
++          ioMode: 'stdio'
++        }
++      };
++
++      hostess.registerEndpoint('external-id', endpoint);
++      const stored = hostess.listEndpoints().get('external-id');
++      expect(stored?.type).toBe('external');
++      expect(stored?.metadata?.ioMode).toBe('stdio');
++    });
++
++    it('should support pty endpoint type', () => {
++      const endpoint: HostessEndpoint = {
++        type: 'pty',
++        coordinates: 'pid:54321',
++        metadata: {
++          cols: 80,
++          rows: 24,
++          terminalType: 'xterm-256color'
++        }
++      };
++
++      hostess.registerEndpoint('pty-id', endpoint);
++      const stored = hostess.listEndpoints().get('pty-id');
++      expect(stored?.type).toBe('pty');
++      expect(stored?.metadata?.cols).toBe(80);
++      expect(stored?.metadata?.rows).toBe(24);
++    });
++  });
++
++  describe('integration with server registration', () => {
++    it('should allow endpoints to be registered alongside servers', () => {
++      // Register a server
++      const serverId = hostess.register({
++        fqdn: 'localhost',
++        servername: 'test-server',
++        classHex: '0x0001',
++        owner: 'test',
++        auth: 'no',
++        authMechanism: 'none',
++        terminals: [
++          { name: 'input', type: 'local', direction: 'input' },
++          { name: 'output', type: 'local', direction: 'output' }
++        ],
++        capabilities: {
++          type: 'transform'
++        }
++      });
++
++      // Register endpoint for the server
++      hostess.registerEndpoint(serverId, {
++        type: 'inproc',
++        coordinates: 'node:test-server',
++        metadata: { servername: 'test-server' }
++      });
++
++      // Verify both work
++      const servers = hostess.list();
++      expect(servers).toHaveLength(1);
++
++      const endpoints = hostess.listEndpoints();
++      expect(endpoints.size).toBe(1);
++      expect(endpoints.get(serverId)?.coordinates).toBe('node:test-server');
++    });
++  });
++});
+diff --git a/tests/integration/endpointsList.spec.ts b/tests/integration/endpointsList.spec.ts
+new file mode 100644
+index 0000000..9405910
+--- /dev/null
++++ b/tests/integration/endpointsList.spec.ts
+@@ -0,0 +1,293 @@
++import { describe, it, expect, beforeEach, afterEach } from 'vitest';
++import { Kernel } from '../../src/kernel/Kernel.js';
++import { Hostess } from '../../src/hostess/Hostess.js';
++import { StateManager } from '../../src/state/StateManager.js';
++import { Executor } from '../../src/executor/Executor.js';
++import { ExternalServerWrapper } from '../../src/wrappers/ExternalServerWrapper.js';
++import { PTYServerWrapper } from '../../src/wrappers/PTYServerWrapper.js';
++import type { TopologyConfig } from '../../src/config/schema.js';
++import type { ExternalServerManifest } from '../../src/types.js';
++
++describe('Endpoints List Integration', () => {
++  let kernel: Kernel;
++  let hostess: Hostess;
++  let stateManager: StateManager;
++  let executor: Executor;
++
++  beforeEach(() => {
++    kernel = new Kernel();
++    hostess = new Hostess();
++    stateManager = new StateManager(kernel);
++    executor = new Executor(kernel, hostess, stateManager);
++  });
++
++  afterEach(async () => {
++    if (executor) {
++      await executor.down();
++    }
++  });
++
++  describe('Executor endpoint registration', () => {
++    it('should register endpoints for inproc nodes', async () => {
++      const config: TopologyConfig = {
++        nodes: [
++          { id: 'timer1', module: 'TimerSource', params: { periodMs: 1000 } },
++          { id: 'sink1', module: 'ConsoleSink', params: { prefix: '[test]' } }
++        ],
++        connections: []
++      };
++
++      executor.load(config);
++      await executor.up();
++
++      const endpoints = hostess.listEndpoints();
++
++      // Should have 2 endpoints registered
++      expect(endpoints.size).toBeGreaterThanOrEqual(2);
++
++      // Find endpoints by their coordinates pattern
++      const endpointEntries = Array.from(endpoints.entries());
++      const timer1Endpoint = endpointEntries.find(([_, ep]) => ep.coordinates === 'node:timer1');
++      const sink1Endpoint = endpointEntries.find(([_, ep]) => ep.coordinates === 'node:sink1');
++
++      expect(timer1Endpoint).toBeDefined();
++      expect(timer1Endpoint![1].type).toBe('inproc');
++      expect(timer1Endpoint![1].metadata?.module).toBe('TimerSource');
++      expect(timer1Endpoint![1].metadata?.runMode).toBe('inproc');
++
++      expect(sink1Endpoint).toBeDefined();
++      expect(sink1Endpoint![1].type).toBe('inproc');
++      expect(sink1Endpoint![1].metadata?.module).toBe('ConsoleSink');
++    });
++
++    it('should register endpoints for worker nodes', async () => {
++      const config: TopologyConfig = {
++        nodes: [
++          { id: 'worker1', module: 'UppercaseTransform', runMode: 'worker' }
++        ],
++        connections: []
++      };
++
++      executor.load(config);
++      await executor.up();
++
++      const endpoints = hostess.listEndpoints();
++      expect(endpoints.size).toBeGreaterThanOrEqual(1);
++
++      const endpointEntries = Array.from(endpoints.entries());
++      const workerEndpoint = endpointEntries.find(([_, ep]) => ep.coordinates === 'node:worker1');
++
++      expect(workerEndpoint).toBeDefined();
++      expect(workerEndpoint![1].type).toBe('worker');
++      expect(workerEndpoint![1].metadata?.module).toBe('UppercaseTransform');
++      expect(workerEndpoint![1].metadata?.runMode).toBe('worker');
++    });
++
++    it('should list all registered endpoints across multiple nodes', async () => {
++      const config: TopologyConfig = {
++        nodes: [
++          { id: 'timer1', module: 'TimerSource' },
++          { id: 'upper1', module: 'UppercaseTransform' },
++          { id: 'sink1', module: 'ConsoleSink' }
++        ],
++        connections: [
++          { from: 'timer1.output', to: 'upper1.input' },
++          { from: 'upper1.output', to: 'sink1.input' }
++        ]
++      };
++
++      executor.load(config);
++      await executor.up();
++
++      const endpoints = hostess.listEndpoints();
++
++      // Should have endpoints for all 3 nodes
++      expect(endpoints.size).toBeGreaterThanOrEqual(3);
++
++      const coordinatesSet = new Set(Array.from(endpoints.values()).map(ep => ep.coordinates));
++      expect(coordinatesSet.has('node:timer1')).toBe(true);
++      expect(coordinatesSet.has('node:upper1')).toBe(true);
++      expect(coordinatesSet.has('node:sink1')).toBe(true);
++    });
++  });
++
++  describe('ExternalServerWrapper endpoint registration', () => {
++    let wrapper: ExternalServerWrapper;
++
++    afterEach(async () => {
++      if (wrapper && wrapper.isRunning()) {
++        await wrapper.shutdown();
++      }
++    });
++
++    it('should register external endpoint when wrapper spawns', async () => {
++      const manifest: ExternalServerManifest = {
++        fqdn: 'localhost',
++        servername: 'echo-server',
++        classHex: '0xFFFF',
++        owner: 'test',
++        auth: 'no',
++        authMechanism: 'none',
++        terminals: [
++          { name: 'input', type: 'local', direction: 'input' },
++          { name: 'output', type: 'local', direction: 'output' }
++        ],
++        capabilities: {
++          type: 'transform'
++        },
++        command: '/bin/cat',
++        args: [],
++        env: {},
++        cwd: process.cwd(),
++        ioMode: 'stdio'
++      };
++
++      wrapper = new ExternalServerWrapper(kernel, hostess, manifest);
++      await wrapper.spawn();
++
++      const endpoints = hostess.listEndpoints();
++      expect(endpoints.size).toBeGreaterThanOrEqual(1);
++
++      const endpointEntries = Array.from(endpoints.entries());
++      const externalEndpoint = endpointEntries.find(([_, ep]) => ep.type === 'external');
++
++      expect(externalEndpoint).toBeDefined();
++      expect(externalEndpoint![1].coordinates).toContain('/bin/cat');
++      expect(externalEndpoint![1].metadata?.cwd).toBe(process.cwd());
++      expect(externalEndpoint![1].metadata?.ioMode).toBe('stdio');
++    });
++  });
++
++  describe('PTYServerWrapper endpoint registration', () => {
++    let wrapper: PTYServerWrapper;
++
++    afterEach(async () => {
++      if (wrapper && wrapper.isRunning()) {
++        await wrapper.shutdown();
++      }
++    });
++
++    it('should register pty endpoint when wrapper spawns', async () => {
++      const manifest: ExternalServerManifest = {
++        fqdn: 'localhost',
++        servername: 'bash-pty',
++        classHex: '0xFFFF',
++        owner: 'test',
++        auth: 'no',
++        authMechanism: 'none',
++        terminals: [
++          { name: 'input', type: 'local', direction: 'input' },
++          { name: 'output', type: 'local', direction: 'output' }
++        ],
++        capabilities: {
++          type: 'transform'
++        },
++        command: '/bin/bash',
++        args: [],
++        env: {},
++        cwd: process.cwd(),
++        ioMode: 'pty',
++        initialCols: 80,
++        initialRows: 24,
++        terminalType: 'xterm-256color'
++      };
++
++      wrapper = new PTYServerWrapper(kernel, hostess, manifest);
++      await wrapper.spawn();
++
++      const endpoints = hostess.listEndpoints();
++      expect(endpoints.size).toBeGreaterThanOrEqual(1);
++
++      const endpointEntries = Array.from(endpoints.entries());
++      const ptyEndpoint = endpointEntries.find(([_, ep]) => ep.type === 'pty');
++
++      expect(ptyEndpoint).toBeDefined();
++      expect(ptyEndpoint![1].coordinates).toMatch(/^pid:\d+$/);
++      expect(ptyEndpoint![1].metadata?.cols).toBe(80);
++      expect(ptyEndpoint![1].metadata?.rows).toBe(24);
++      expect(ptyEndpoint![1].metadata?.terminalType).toBe('xterm-256color');
++    });
++  });
++
++  describe('Full topology with mixed endpoint types', () => {
++    let externalWrapper: ExternalServerWrapper;
++
++    afterEach(async () => {
++      if (externalWrapper && externalWrapper.isRunning()) {
++        await externalWrapper.shutdown();
++      }
++    });
++
++    it('should list all endpoint types in a mixed topology', async () => {
++      // Create executor with inproc nodes
++      const config: TopologyConfig = {
++        nodes: [
++          { id: 'timer1', module: 'TimerSource' },
++          { id: 'sink1', module: 'ConsoleSink' }
++        ],
++        connections: []
++      };
++
++      executor.load(config);
++      await executor.up();
++
++      // Add an external wrapper
++      const externalManifest: ExternalServerManifest = {
++        fqdn: 'localhost',
++        servername: 'external-cat',
++        classHex: '0xEEEE',
++        owner: 'test',
++        auth: 'no',
++        authMechanism: 'none',
++        terminals: [
++          { name: 'input', type: 'local', direction: 'input' },
++          { name: 'output', type: 'local', direction: 'output' }
++        ],
++        capabilities: {
++          type: 'transform'
++        },
++        command: '/bin/cat',
++        args: [],
++        env: {},
++        cwd: process.cwd(),
++        ioMode: 'stdio'
++      };
++
++      externalWrapper = new ExternalServerWrapper(kernel, hostess, externalManifest);
++      await externalWrapper.spawn();
++
++      // List all endpoints
++      const endpoints = hostess.listEndpoints();
++
++      // Should have at least 3 endpoints (2 inproc + 1 external)
++      expect(endpoints.size).toBeGreaterThanOrEqual(3);
++
++      const types = new Set(Array.from(endpoints.values()).map(ep => ep.type));
++      expect(types.has('inproc')).toBe(true);
++      expect(types.has('external')).toBe(true);
++    });
++  });
++
++  describe('Endpoint lifecycle', () => {
++    it('should maintain endpoints after executor restart', async () => {
++      const config: TopologyConfig = {
++        nodes: [
++          { id: 'timer1', module: 'TimerSource' }
++        ],
++        connections: []
++      };
++
++      executor.load(config);
++      await executor.up();
++
++      const endpointsBefore = hostess.listEndpoints();
++      expect(endpointsBefore.size).toBeGreaterThanOrEqual(1);
++
++      await executor.restartNode('timer1');
++
++      const endpointsAfter = hostess.listEndpoints();
++      // After restart, should still have endpoints (may have more due to re-registration)
++      expect(endpointsAfter.size).toBeGreaterThanOrEqual(1);
++    });
++  });
++});
diff --git a/patches/DIFF_T4611_gate-worker-test.patch b/patches/DIFF_T4611_gate-worker-test.patch
new file mode 100644
index 0000000..47c06eb
--- /dev/null
+++ b/patches/DIFF_T4611_gate-worker-test.patch
@@ -0,0 +1,301 @@
+diff --git a/tests/integration/endpointsList.spec.ts b/tests/integration/endpointsList.spec.ts
+new file mode 100644
+index 0000000..a2a29f5
+--- /dev/null
++++ b/tests/integration/endpointsList.spec.ts
+@@ -0,0 +1,295 @@
++import { describe, it, expect, beforeEach, afterEach } from 'vitest';
++import { Kernel } from '../../src/kernel/Kernel.js';
++import { Hostess } from '../../src/hostess/Hostess.js';
++import { StateManager } from '../../src/state/StateManager.js';
++import { Executor } from '../../src/executor/Executor.js';
++import { ExternalServerWrapper } from '../../src/wrappers/ExternalServerWrapper.js';
++import { PTYServerWrapper } from '../../src/wrappers/PTYServerWrapper.js';
++import type { TopologyConfig } from '../../src/config/schema.js';
++import type { ExternalServerManifest } from '../../src/types.js';
++
++describe('Endpoints List Integration', () => {
++  let kernel: Kernel;
++  let hostess: Hostess;
++  let stateManager: StateManager;
++  let executor: Executor;
++
++  beforeEach(() => {
++    kernel = new Kernel();
++    hostess = new Hostess();
++    stateManager = new StateManager(kernel);
++    executor = new Executor(kernel, hostess, stateManager);
++  });
++
++  afterEach(async () => {
++    if (executor) {
++      await executor.down();
++    }
++  });
++
++  describe('Executor endpoint registration', () => {
++    it('should register endpoints for inproc nodes', async () => {
++      const config: TopologyConfig = {
++        nodes: [
++          { id: 'timer1', module: 'TimerSource', params: { periodMs: 1000 } },
++          { id: 'sink1', module: 'ConsoleSink', params: { prefix: '[test]' } }
++        ],
++        connections: []
++      };
++
++      executor.load(config);
++      await executor.up();
++
++      const endpoints = hostess.listEndpoints();
++
++      // Should have 2 endpoints registered
++      expect(endpoints.size).toBeGreaterThanOrEqual(2);
++
++      // Find endpoints by their coordinates pattern
++      const endpointEntries = Array.from(endpoints.entries());
++      const timer1Endpoint = endpointEntries.find(([_, ep]) => ep.coordinates === 'node:timer1');
++      const sink1Endpoint = endpointEntries.find(([_, ep]) => ep.coordinates === 'node:sink1');
++
++      expect(timer1Endpoint).toBeDefined();
++      expect(timer1Endpoint![1].type).toBe('inproc');
++      expect(timer1Endpoint![1].metadata?.module).toBe('TimerSource');
++      expect(timer1Endpoint![1].metadata?.runMode).toBe('inproc');
++
++      expect(sink1Endpoint).toBeDefined();
++      expect(sink1Endpoint![1].type).toBe('inproc');
++      expect(sink1Endpoint![1].metadata?.module).toBe('ConsoleSink');
++    });
++
++    // GATED: Worker endpoint test requires worker harness infrastructure (T4611)
++    // Only run when MK_WORKER_EXPERIMENTAL=1 is set
++    it.skipIf(!process.env.MK_WORKER_EXPERIMENTAL)('should register endpoints for worker nodes', async () => {
++      const config: TopologyConfig = {
++        nodes: [
++          { id: 'worker1', module: 'UppercaseTransform', runMode: 'worker' }
++        ],
++        connections: []
++      };
++
++      executor.load(config);
++      await executor.up();
++
++      const endpoints = hostess.listEndpoints();
++      expect(endpoints.size).toBeGreaterThanOrEqual(1);
++
++      const endpointEntries = Array.from(endpoints.entries());
++      const workerEndpoint = endpointEntries.find(([_, ep]) => ep.coordinates === 'node:worker1');
++
++      expect(workerEndpoint).toBeDefined();
++      expect(workerEndpoint![1].type).toBe('worker');
++      expect(workerEndpoint![1].metadata?.module).toBe('UppercaseTransform');
++      expect(workerEndpoint![1].metadata?.runMode).toBe('worker');
++    });
++
++    it('should list all registered endpoints across multiple nodes', async () => {
++      const config: TopologyConfig = {
++        nodes: [
++          { id: 'timer1', module: 'TimerSource' },
++          { id: 'upper1', module: 'UppercaseTransform' },
++          { id: 'sink1', module: 'ConsoleSink' }
++        ],
++        connections: [
++          { from: 'timer1.output', to: 'upper1.input' },
++          { from: 'upper1.output', to: 'sink1.input' }
++        ]
++      };
++
++      executor.load(config);
++      await executor.up();
++
++      const endpoints = hostess.listEndpoints();
++
++      // Should have endpoints for all 3 nodes
++      expect(endpoints.size).toBeGreaterThanOrEqual(3);
++
++      const coordinatesSet = new Set(Array.from(endpoints.values()).map(ep => ep.coordinates));
++      expect(coordinatesSet.has('node:timer1')).toBe(true);
++      expect(coordinatesSet.has('node:upper1')).toBe(true);
++      expect(coordinatesSet.has('node:sink1')).toBe(true);
++    });
++  });
++
++  describe('ExternalServerWrapper endpoint registration', () => {
++    let wrapper: ExternalServerWrapper;
++
++    afterEach(async () => {
++      if (wrapper && wrapper.isRunning()) {
++        await wrapper.shutdown();
++      }
++    });
++
++    it('should register external endpoint when wrapper spawns', async () => {
++      const manifest: ExternalServerManifest = {
++        fqdn: 'localhost',
++        servername: 'echo-server',
++        classHex: '0xFFFF',
++        owner: 'test',
++        auth: 'no',
++        authMechanism: 'none',
++        terminals: [
++          { name: 'input', type: 'local', direction: 'input' },
++          { name: 'output', type: 'local', direction: 'output' }
++        ],
++        capabilities: {
++          type: 'transform'
++        },
++        command: '/bin/cat',
++        args: [],
++        env: {},
++        cwd: process.cwd(),
++        ioMode: 'stdio'
++      };
++
++      wrapper = new ExternalServerWrapper(kernel, hostess, manifest);
++      await wrapper.spawn();
++
++      const endpoints = hostess.listEndpoints();
++      expect(endpoints.size).toBeGreaterThanOrEqual(1);
++
++      const endpointEntries = Array.from(endpoints.entries());
++      const externalEndpoint = endpointEntries.find(([_, ep]) => ep.type === 'external');
++
++      expect(externalEndpoint).toBeDefined();
++      expect(externalEndpoint![1].coordinates).toContain('/bin/cat');
++      expect(externalEndpoint![1].metadata?.cwd).toBe(process.cwd());
++      expect(externalEndpoint![1].metadata?.ioMode).toBe('stdio');
++    });
++  });
++
++  describe('PTYServerWrapper endpoint registration', () => {
++    let wrapper: PTYServerWrapper;
++
++    afterEach(async () => {
++      if (wrapper && wrapper.isRunning()) {
++        await wrapper.shutdown();
++      }
++    });
++
++    it('should register pty endpoint when wrapper spawns', async () => {
++      const manifest: ExternalServerManifest = {
++        fqdn: 'localhost',
++        servername: 'bash-pty',
++        classHex: '0xFFFF',
++        owner: 'test',
++        auth: 'no',
++        authMechanism: 'none',
++        terminals: [
++          { name: 'input', type: 'local', direction: 'input' },
++          { name: 'output', type: 'local', direction: 'output' }
++        ],
++        capabilities: {
++          type: 'transform'
++        },
++        command: '/bin/bash',
++        args: [],
++        env: {},
++        cwd: process.cwd(),
++        ioMode: 'pty',
++        initialCols: 80,
++        initialRows: 24,
++        terminalType: 'xterm-256color'
++      };
++
++      wrapper = new PTYServerWrapper(kernel, hostess, manifest);
++      await wrapper.spawn();
++
++      const endpoints = hostess.listEndpoints();
++      expect(endpoints.size).toBeGreaterThanOrEqual(1);
++
++      const endpointEntries = Array.from(endpoints.entries());
++      const ptyEndpoint = endpointEntries.find(([_, ep]) => ep.type === 'pty');
++
++      expect(ptyEndpoint).toBeDefined();
++      expect(ptyEndpoint![1].coordinates).toMatch(/^pid:\d+$/);
++      expect(ptyEndpoint![1].metadata?.cols).toBe(80);
++      expect(ptyEndpoint![1].metadata?.rows).toBe(24);
++      expect(ptyEndpoint![1].metadata?.terminalType).toBe('xterm-256color');
++    });
++  });
++
++  describe('Full topology with mixed endpoint types', () => {
++    let externalWrapper: ExternalServerWrapper;
++
++    afterEach(async () => {
++      if (externalWrapper && externalWrapper.isRunning()) {
++        await externalWrapper.shutdown();
++      }
++    });
++
++    it('should list all endpoint types in a mixed topology', async () => {
++      // Create executor with inproc nodes
++      const config: TopologyConfig = {
++        nodes: [
++          { id: 'timer1', module: 'TimerSource' },
++          { id: 'sink1', module: 'ConsoleSink' }
++        ],
++        connections: []
++      };
++
++      executor.load(config);
++      await executor.up();
++
++      // Add an external wrapper
++      const externalManifest: ExternalServerManifest = {
++        fqdn: 'localhost',
++        servername: 'external-cat',
++        classHex: '0xEEEE',
++        owner: 'test',
++        auth: 'no',
++        authMechanism: 'none',
++        terminals: [
++          { name: 'input', type: 'local', direction: 'input' },
++          { name: 'output', type: 'local', direction: 'output' }
++        ],
++        capabilities: {
++          type: 'transform'
++        },
++        command: '/bin/cat',
++        args: [],
++        env: {},
++        cwd: process.cwd(),
++        ioMode: 'stdio'
++      };
++
++      externalWrapper = new ExternalServerWrapper(kernel, hostess, externalManifest);
++      await externalWrapper.spawn();
++
++      // List all endpoints
++      const endpoints = hostess.listEndpoints();
++
++      // Should have at least 3 endpoints (2 inproc + 1 external)
++      expect(endpoints.size).toBeGreaterThanOrEqual(3);
++
++      const types = new Set(Array.from(endpoints.values()).map(ep => ep.type));
++      expect(types.has('inproc')).toBe(true);
++      expect(types.has('external')).toBe(true);
++    });
++  });
++
++  describe('Endpoint lifecycle', () => {
++    it('should maintain endpoints after executor restart', async () => {
++      const config: TopologyConfig = {
++        nodes: [
++          { id: 'timer1', module: 'TimerSource' }
++        ],
++        connections: []
++      };
++
++      executor.load(config);
++      await executor.up();
++
++      const endpointsBefore = hostess.listEndpoints();
++      expect(endpointsBefore.size).toBeGreaterThanOrEqual(1);
++
++      await executor.restartNode('timer1');
++
++      const endpointsAfter = hostess.listEndpoints();
++      // After restart, should still have endpoints (may have more due to re-registration)
++      expect(endpointsAfter.size).toBeGreaterThanOrEqual(1);
++    });
++  });
++});
diff --git a/patches/DIFF_T4612_ci-split-timeouts.patch b/patches/DIFF_T4612_ci-split-timeouts.patch
new file mode 100644
index 0000000..2e720b7
--- /dev/null
+++ b/patches/DIFF_T4612_ci-split-timeouts.patch
@@ -0,0 +1,319 @@
+diff --git a/package.json b/package.json
+index 5171145..f0627d2 100644
+--- a/package.json
++++ b/package.json
+@@ -42,8 +42,8 @@
+     "docs": "echo 'See docs/rfcs/stream-kernel/00-index.md for architecture documentation'",
+     "build": "tsc -p tsconfig.json",
+     "test": "vitest run",
+-    "test:ci": "vitest run --pool=threads --exclude='**/{ptyServerWrapper,multiModalOutput}.spec.ts' --reporter=./node_modules/@agent_vega/laminar/dist/src/test/reporter/jsonlReporter.js",
+-    "test:pty": "vitest run --pool=forks --poolOptions.forks.singleFork=true tests/wrappers/ptyServerWrapper.spec.ts tests/integration/multiModalOutput.spec.ts --reporter=./node_modules/@agent_vega/laminar/dist/src/test/reporter/jsonlReporter.js",
++    "test:ci": "vitest run --pool=threads --exclude='**/{ptyServerWrapper,multiModalOutput,endpointsList}.spec.ts' --reporter=./node_modules/@agent_vega/laminar/dist/src/test/reporter/jsonlReporter.js",
++    "test:pty": "vitest run --pool=forks --poolOptions.forks.singleFork=true tests/wrappers/ptyServerWrapper.spec.ts tests/integration/multiModalOutput.spec.ts tests/integration/endpointsList.spec.ts --reporter=./node_modules/@agent_vega/laminar/dist/src/test/reporter/jsonlReporter.js",
+     "test:watch": "vitest",
+     "lam": "node node_modules/laminar/dist/scripts/lam.js",
+     "logq": "lam logq",
+diff --git a/tests/integration/endpointsList.spec.ts b/tests/integration/endpointsList.spec.ts
+new file mode 100644
+index 0000000..c0e20fc
+--- /dev/null
++++ b/tests/integration/endpointsList.spec.ts
+@@ -0,0 +1,298 @@
++import { describe, it, expect, beforeEach, afterEach } from 'vitest';
++import { Kernel } from '../../src/kernel/Kernel.js';
++import { Hostess } from '../../src/hostess/Hostess.js';
++import { StateManager } from '../../src/state/StateManager.js';
++import { Executor } from '../../src/executor/Executor.js';
++import { ExternalServerWrapper } from '../../src/wrappers/ExternalServerWrapper.js';
++import { PTYServerWrapper } from '../../src/wrappers/PTYServerWrapper.js';
++import type { TopologyConfig } from '../../src/config/schema.js';
++import type { ExternalServerManifest } from '../../src/types.js';
++
++describe('Endpoints List Integration', () => {
++  let kernel: Kernel;
++  let hostess: Hostess;
++  let stateManager: StateManager;
++  let executor: Executor;
++
++  // PTY operations can be slow, especially under load
++  const testTimeout = 10000;
++
++  beforeEach(() => {
++    kernel = new Kernel();
++    hostess = new Hostess();
++    stateManager = new StateManager(kernel);
++    executor = new Executor(kernel, hostess, stateManager);
++  });
++
++  afterEach(async () => {
++    if (executor) {
++      await executor.down();
++    }
++  });
++
++  describe('Executor endpoint registration', () => {
++    it('should register endpoints for inproc nodes', async () => {
++      const config: TopologyConfig = {
++        nodes: [
++          { id: 'timer1', module: 'TimerSource', params: { periodMs: 1000 } },
++          { id: 'sink1', module: 'ConsoleSink', params: { prefix: '[test]' } }
++        ],
++        connections: []
++      };
++
++      executor.load(config);
++      await executor.up();
++
++      const endpoints = hostess.listEndpoints();
++
++      // Should have 2 endpoints registered
++      expect(endpoints.size).toBeGreaterThanOrEqual(2);
++
++      // Find endpoints by their coordinates pattern
++      const endpointEntries = Array.from(endpoints.entries());
++      const timer1Endpoint = endpointEntries.find(([_, ep]) => ep.coordinates === 'node:timer1');
++      const sink1Endpoint = endpointEntries.find(([_, ep]) => ep.coordinates === 'node:sink1');
++
++      expect(timer1Endpoint).toBeDefined();
++      expect(timer1Endpoint![1].type).toBe('inproc');
++      expect(timer1Endpoint![1].metadata?.module).toBe('TimerSource');
++      expect(timer1Endpoint![1].metadata?.runMode).toBe('inproc');
++
++      expect(sink1Endpoint).toBeDefined();
++      expect(sink1Endpoint![1].type).toBe('inproc');
++      expect(sink1Endpoint![1].metadata?.module).toBe('ConsoleSink');
++    });
++
++    // GATED: Worker endpoint test requires worker harness infrastructure (T4611)
++    // Only run when MK_WORKER_EXPERIMENTAL=1 is set
++    it.skipIf(!process.env.MK_WORKER_EXPERIMENTAL)('should register endpoints for worker nodes', async () => {
++      const config: TopologyConfig = {
++        nodes: [
++          { id: 'worker1', module: 'UppercaseTransform', runMode: 'worker' }
++        ],
++        connections: []
++      };
++
++      executor.load(config);
++      await executor.up();
++
++      const endpoints = hostess.listEndpoints();
++      expect(endpoints.size).toBeGreaterThanOrEqual(1);
++
++      const endpointEntries = Array.from(endpoints.entries());
++      const workerEndpoint = endpointEntries.find(([_, ep]) => ep.coordinates === 'node:worker1');
++
++      expect(workerEndpoint).toBeDefined();
++      expect(workerEndpoint![1].type).toBe('worker');
++      expect(workerEndpoint![1].metadata?.module).toBe('UppercaseTransform');
++      expect(workerEndpoint![1].metadata?.runMode).toBe('worker');
++    });
++
++    it('should list all registered endpoints across multiple nodes', async () => {
++      const config: TopologyConfig = {
++        nodes: [
++          { id: 'timer1', module: 'TimerSource' },
++          { id: 'upper1', module: 'UppercaseTransform' },
++          { id: 'sink1', module: 'ConsoleSink' }
++        ],
++        connections: [
++          { from: 'timer1.output', to: 'upper1.input' },
++          { from: 'upper1.output', to: 'sink1.input' }
++        ]
++      };
++
++      executor.load(config);
++      await executor.up();
++
++      const endpoints = hostess.listEndpoints();
++
++      // Should have endpoints for all 3 nodes
++      expect(endpoints.size).toBeGreaterThanOrEqual(3);
++
++      const coordinatesSet = new Set(Array.from(endpoints.values()).map(ep => ep.coordinates));
++      expect(coordinatesSet.has('node:timer1')).toBe(true);
++      expect(coordinatesSet.has('node:upper1')).toBe(true);
++      expect(coordinatesSet.has('node:sink1')).toBe(true);
++    });
++  });
++
++  describe('ExternalServerWrapper endpoint registration', () => {
++    let wrapper: ExternalServerWrapper;
++
++    afterEach(async () => {
++      if (wrapper && wrapper.isRunning()) {
++        await wrapper.shutdown();
++      }
++    });
++
++    it('should register external endpoint when wrapper spawns', async () => {
++      const manifest: ExternalServerManifest = {
++        fqdn: 'localhost',
++        servername: 'echo-server',
++        classHex: '0xFFFF',
++        owner: 'test',
++        auth: 'no',
++        authMechanism: 'none',
++        terminals: [
++          { name: 'input', type: 'local', direction: 'input' },
++          { name: 'output', type: 'local', direction: 'output' }
++        ],
++        capabilities: {
++          type: 'transform'
++        },
++        command: '/bin/cat',
++        args: [],
++        env: {},
++        cwd: process.cwd(),
++        ioMode: 'stdio'
++      };
++
++      wrapper = new ExternalServerWrapper(kernel, hostess, manifest);
++      await wrapper.spawn();
++
++      const endpoints = hostess.listEndpoints();
++      expect(endpoints.size).toBeGreaterThanOrEqual(1);
++
++      const endpointEntries = Array.from(endpoints.entries());
++      const externalEndpoint = endpointEntries.find(([_, ep]) => ep.type === 'external');
++
++      expect(externalEndpoint).toBeDefined();
++      expect(externalEndpoint![1].coordinates).toContain('/bin/cat');
++      expect(externalEndpoint![1].metadata?.cwd).toBe(process.cwd());
++      expect(externalEndpoint![1].metadata?.ioMode).toBe('stdio');
++    });
++  });
++
++  describe('PTYServerWrapper endpoint registration', () => {
++    let wrapper: PTYServerWrapper;
++
++    afterEach(async () => {
++      if (wrapper && wrapper.isRunning()) {
++        await wrapper.shutdown();
++      }
++    });
++
++    it('should register pty endpoint when wrapper spawns', { timeout: testTimeout }, async () => {
++      const manifest: ExternalServerManifest = {
++        fqdn: 'localhost',
++        servername: 'bash-pty',
++        classHex: '0xFFFF',
++        owner: 'test',
++        auth: 'no',
++        authMechanism: 'none',
++        terminals: [
++          { name: 'input', type: 'local', direction: 'input' },
++          { name: 'output', type: 'local', direction: 'output' }
++        ],
++        capabilities: {
++          type: 'transform'
++        },
++        command: '/bin/bash',
++        args: [],
++        env: {},
++        cwd: process.cwd(),
++        ioMode: 'pty',
++        initialCols: 80,
++        initialRows: 24,
++        terminalType: 'xterm-256color'
++      };
++
++      wrapper = new PTYServerWrapper(kernel, hostess, manifest);
++      await wrapper.spawn();
++
++      const endpoints = hostess.listEndpoints();
++      expect(endpoints.size).toBeGreaterThanOrEqual(1);
++
++      const endpointEntries = Array.from(endpoints.entries());
++      const ptyEndpoint = endpointEntries.find(([_, ep]) => ep.type === 'pty');
++
++      expect(ptyEndpoint).toBeDefined();
++      expect(ptyEndpoint![1].coordinates).toMatch(/^pid:\d+$/);
++      expect(ptyEndpoint![1].metadata?.cols).toBe(80);
++      expect(ptyEndpoint![1].metadata?.rows).toBe(24);
++      expect(ptyEndpoint![1].metadata?.terminalType).toBe('xterm-256color');
++    });
++  });
++
++  describe('Full topology with mixed endpoint types', () => {
++    let externalWrapper: ExternalServerWrapper;
++
++    afterEach(async () => {
++      if (externalWrapper && externalWrapper.isRunning()) {
++        await externalWrapper.shutdown();
++      }
++    });
++
++    it('should list all endpoint types in a mixed topology', async () => {
++      // Create executor with inproc nodes
++      const config: TopologyConfig = {
++        nodes: [
++          { id: 'timer1', module: 'TimerSource' },
++          { id: 'sink1', module: 'ConsoleSink' }
++        ],
++        connections: []
++      };
++
++      executor.load(config);
++      await executor.up();
++
++      // Add an external wrapper
++      const externalManifest: ExternalServerManifest = {
++        fqdn: 'localhost',
++        servername: 'external-cat',
++        classHex: '0xEEEE',
++        owner: 'test',
++        auth: 'no',
++        authMechanism: 'none',
++        terminals: [
++          { name: 'input', type: 'local', direction: 'input' },
++          { name: 'output', type: 'local', direction: 'output' }
++        ],
++        capabilities: {
++          type: 'transform'
++        },
++        command: '/bin/cat',
++        args: [],
++        env: {},
++        cwd: process.cwd(),
++        ioMode: 'stdio'
++      };
++
++      externalWrapper = new ExternalServerWrapper(kernel, hostess, externalManifest);
++      await externalWrapper.spawn();
++
++      // List all endpoints
++      const endpoints = hostess.listEndpoints();
++
++      // Should have at least 3 endpoints (2 inproc + 1 external)
++      expect(endpoints.size).toBeGreaterThanOrEqual(3);
++
++      const types = new Set(Array.from(endpoints.values()).map(ep => ep.type));
++      expect(types.has('inproc')).toBe(true);
++      expect(types.has('external')).toBe(true);
++    });
++  });
++
++  describe('Endpoint lifecycle', () => {
++    it('should maintain endpoints after executor restart', async () => {
++      const config: TopologyConfig = {
++        nodes: [
++          { id: 'timer1', module: 'TimerSource' }
++        ],
++        connections: []
++      };
++
++      executor.load(config);
++      await executor.up();
++
++      const endpointsBefore = hostess.listEndpoints();
++      expect(endpointsBefore.size).toBeGreaterThanOrEqual(1);
++
++      await executor.restartNode('timer1');
++
++      const endpointsAfter = hostess.listEndpoints();
++      // After restart, should still have endpoints (may have more due to re-registration)
++      expect(endpointsAfter.size).toBeGreaterThanOrEqual(1);
++    });
++  });
++});
diff --git a/scripts/mkctl.ts b/scripts/mkctl.ts
new file mode 100644
index 0000000..6995b60
--- /dev/null
+++ b/scripts/mkctl.ts
@@ -0,0 +1,69 @@
+#!/usr/bin/env node
+import fs from 'node:fs/promises';
+import path from 'node:path';
+
+function printHelp() {
+  console.log(`mkctl - Microkernel Control CLI
+
+USAGE
+  mkctl <command>
+
+COMMANDS
+  endpoints    List all registered endpoints with type and coordinates
+
+EXAMPLES
+  mkctl endpoints
+
+LEARN MORE
+  Documentation: https://github.com/anteew/mkolbol
+`);
+}
+
+async function main() {
+  const [,, cmd] = process.argv;
+
+  switch (cmd) {
+    case 'endpoints': {
+      const snapshotPath = path.resolve(process.cwd(), 'reports', 'endpoints.json');
+      
+      let endpoints: Array<{ id: string; type: string; coordinates: string; metadata?: Record<string, any> }>;
+      try {
+        const data = await fs.readFile(snapshotPath, 'utf-8');
+        endpoints = JSON.parse(data);
+      } catch (err) {
+        console.log('No endpoints registered.');
+        break;
+      }
+
+      if (endpoints.length === 0) {
+        console.log('No endpoints registered.');
+        break;
+      }
+
+      console.log('Registered Endpoints:');
+      console.log('');
+
+      for (const endpoint of endpoints) {
+        console.log(`ID:          ${endpoint.id}`);
+        console.log(`Type:        ${endpoint.type}`);
+        console.log(`Coordinates: ${endpoint.coordinates}`);
+        if (endpoint.metadata && Object.keys(endpoint.metadata).length > 0) {
+          console.log(`Metadata:    ${JSON.stringify(endpoint.metadata)}`);
+        }
+        console.log('');
+      }
+      break;
+    }
+    default:
+      printHelp();
+      if (cmd) {
+        console.error(`\nUnknown command: ${cmd}`);
+        process.exit(1);
+      }
+  }
+}
+
+main().catch(e => {
+  console.error(e);
+  process.exit(1);
+});
diff --git a/src/hostess/Hostess.ts b/src/hostess/Hostess.ts
index 5ec8054..422f982 100644
--- a/src/hostess/Hostess.ts
+++ b/src/hostess/Hostess.ts
@@ -1,4 +1,6 @@
 import crypto from 'node:crypto';
+import fs from 'node:fs';
+import path from 'node:path';
 import { CapabilityQuery, GuestBookEntry, HostessEndpoint, ServerManifest, buildServerIdentity } from '../types.js';
 import { TestEventEnvelope, createEvent } from '../logging/TestEvent.js';
 import { createLogger } from '../logging/logger.js';
@@ -145,6 +147,11 @@ export class Hostess {
       payload: { type: endpoint.type, coordinates: endpoint.coordinates }
     }));
     debug.emit('hostess', 'registerEndpoint', { id, type: endpoint.type, coordinates: endpoint.coordinates });
+    try {
+      this.writeEndpointsSnapshot();
+    } catch (err) {
+      debug.emit('hostess', 'writeEndpointsSnapshot:error', { error: String(err) });
+    }
   }
 
   listEndpoints(): Map<string, HostessEndpoint> {
@@ -179,4 +186,15 @@ export class Hostess {
   private computeAvailable(inUse: Record<string, string | undefined>): boolean {
     return Object.values(inUse).some(v => v === undefined);
   }
+
+  private writeEndpointsSnapshot(): void {
+    const snapshotDir = path.resolve(process.cwd(), 'reports');
+    const snapshotPath = path.join(snapshotDir, 'endpoints.json');
+    const endpointsArray = Array.from(this.endpoints.entries()).map(([id, endpoint]) => ({
+      id,
+      ...endpoint
+    }));
+    fs.mkdirSync(snapshotDir, { recursive: true });
+    fs.writeFileSync(snapshotPath, JSON.stringify(endpointsArray, null, 2));
+  }
 }
diff --git a/test-endpoints-inline.js b/test-endpoints-inline.js
new file mode 100644
index 0000000..73bc67e
--- /dev/null
+++ b/test-endpoints-inline.js
@@ -0,0 +1,20 @@
+import { Hostess } from './dist/src/hostess/Hostess.js';
+
+async function test() {
+  const hostess = new Hostess();
+  hostess.registerEndpoint('ctrl-1', {
+    type: 'control-bus',
+    coordinates: 'http://localhost:8080/ctrl',
+    metadata: { version: '1.0' }
+  });
+
+  hostess.registerEndpoint('stream-1', {
+    type: 'stream-kernel',
+    coordinates: 'tcp://localhost:9000'
+  });
+
+  await new Promise(resolve => setTimeout(resolve, 500));
+  console.log('Done');
+}
+
+test();
diff --git a/tests/hostess/hostessEndpoints.spec.ts b/tests/hostess/hostessEndpoints.spec.ts
new file mode 100644
index 0000000..fc5d88b
--- /dev/null
+++ b/tests/hostess/hostessEndpoints.spec.ts
@@ -0,0 +1,219 @@
+import { describe, it, expect, beforeEach } from 'vitest';
+import { Hostess } from '../../src/hostess/Hostess.js';
+import type { HostessEndpoint } from '../../src/types.js';
+
+describe('Hostess Endpoints', () => {
+  let hostess: Hostess;
+
+  beforeEach(() => {
+    hostess = new Hostess();
+  });
+
+  describe('registerEndpoint', () => {
+    it('should register an endpoint with id and coordinates', () => {
+      const endpoint: HostessEndpoint = {
+        type: 'inproc',
+        coordinates: 'node:test1',
+        metadata: { module: 'TestModule' }
+      };
+
+      hostess.registerEndpoint('test-id-1', endpoint);
+
+      const endpoints = hostess.listEndpoints();
+      expect(endpoints.size).toBe(1);
+      expect(endpoints.get('test-id-1')).toEqual(endpoint);
+    });
+
+    it('should register multiple endpoints with different ids', () => {
+      const endpoint1: HostessEndpoint = {
+        type: 'inproc',
+        coordinates: 'node:test1'
+      };
+      const endpoint2: HostessEndpoint = {
+        type: 'worker',
+        coordinates: 'node:test2'
+      };
+
+      hostess.registerEndpoint('id1', endpoint1);
+      hostess.registerEndpoint('id2', endpoint2);
+
+      const endpoints = hostess.listEndpoints();
+      expect(endpoints.size).toBe(2);
+      expect(endpoints.get('id1')).toEqual(endpoint1);
+      expect(endpoints.get('id2')).toEqual(endpoint2);
+    });
+
+    it('should overwrite endpoint if registered with same id', () => {
+      const endpoint1: HostessEndpoint = {
+        type: 'inproc',
+        coordinates: 'node:test1'
+      };
+      const endpoint2: HostessEndpoint = {
+        type: 'external',
+        coordinates: '/bin/bash'
+      };
+
+      hostess.registerEndpoint('same-id', endpoint1);
+      hostess.registerEndpoint('same-id', endpoint2);
+
+      const endpoints = hostess.listEndpoints();
+      expect(endpoints.size).toBe(1);
+      expect(endpoints.get('same-id')).toEqual(endpoint2);
+    });
+
+    it('should handle endpoint without metadata', () => {
+      const endpoint: HostessEndpoint = {
+        type: 'pty',
+        coordinates: 'pid:12345'
+      };
+
+      hostess.registerEndpoint('pty-id', endpoint);
+
+      const endpoints = hostess.listEndpoints();
+      expect(endpoints.get('pty-id')).toEqual(endpoint);
+      expect(endpoints.get('pty-id')?.metadata).toBeUndefined();
+    });
+  });
+
+  describe('listEndpoints', () => {
+    it('should return empty map when no endpoints registered', () => {
+      const endpoints = hostess.listEndpoints();
+      expect(endpoints.size).toBe(0);
+    });
+
+    it('should return a copy of the endpoints map', () => {
+      const endpoint: HostessEndpoint = {
+        type: 'inproc',
+        coordinates: 'node:test'
+      };
+
+      hostess.registerEndpoint('test-id', endpoint);
+      const endpoints1 = hostess.listEndpoints();
+      const endpoints2 = hostess.listEndpoints();
+
+      // Should be different map instances
+      expect(endpoints1).not.toBe(endpoints2);
+      // But with same content
+      expect(endpoints1.size).toBe(endpoints2.size);
+      expect(endpoints1.get('test-id')).toEqual(endpoints2.get('test-id'));
+    });
+
+    it('should contain all registered endpoints', () => {
+      hostess.registerEndpoint('e1', { type: 'inproc', coordinates: 'n1' });
+      hostess.registerEndpoint('e2', { type: 'worker', coordinates: 'n2' });
+      hostess.registerEndpoint('e3', { type: 'external', coordinates: 'n3' });
+      hostess.registerEndpoint('e4', { type: 'pty', coordinates: 'n4' });
+
+      const endpoints = hostess.listEndpoints();
+      expect(endpoints.size).toBe(4);
+      expect(endpoints.has('e1')).toBe(true);
+      expect(endpoints.has('e2')).toBe(true);
+      expect(endpoints.has('e3')).toBe(true);
+      expect(endpoints.has('e4')).toBe(true);
+    });
+  });
+
+  describe('endpoint types', () => {
+    it('should support inproc endpoint type', () => {
+      const endpoint: HostessEndpoint = {
+        type: 'inproc',
+        coordinates: 'node:timer1',
+        metadata: {
+          module: 'TimerSource',
+          runMode: 'inproc'
+        }
+      };
+
+      hostess.registerEndpoint('timer1-id', endpoint);
+      const stored = hostess.listEndpoints().get('timer1-id');
+      expect(stored?.type).toBe('inproc');
+      expect(stored?.metadata?.runMode).toBe('inproc');
+    });
+
+    it('should support worker endpoint type', () => {
+      const endpoint: HostessEndpoint = {
+        type: 'worker',
+        coordinates: 'node:worker1',
+        metadata: {
+          module: 'UppercaseTransform',
+          runMode: 'worker'
+        }
+      };
+
+      hostess.registerEndpoint('worker1-id', endpoint);
+      const stored = hostess.listEndpoints().get('worker1-id');
+      expect(stored?.type).toBe('worker');
+      expect(stored?.metadata?.runMode).toBe('worker');
+    });
+
+    it('should support external endpoint type', () => {
+      const endpoint: HostessEndpoint = {
+        type: 'external',
+        coordinates: '/usr/bin/python3 script.py',
+        metadata: {
+          cwd: '/tmp',
+          ioMode: 'stdio'
+        }
+      };
+
+      hostess.registerEndpoint('external-id', endpoint);
+      const stored = hostess.listEndpoints().get('external-id');
+      expect(stored?.type).toBe('external');
+      expect(stored?.metadata?.ioMode).toBe('stdio');
+    });
+
+    it('should support pty endpoint type', () => {
+      const endpoint: HostessEndpoint = {
+        type: 'pty',
+        coordinates: 'pid:54321',
+        metadata: {
+          cols: 80,
+          rows: 24,
+          terminalType: 'xterm-256color'
+        }
+      };
+
+      hostess.registerEndpoint('pty-id', endpoint);
+      const stored = hostess.listEndpoints().get('pty-id');
+      expect(stored?.type).toBe('pty');
+      expect(stored?.metadata?.cols).toBe(80);
+      expect(stored?.metadata?.rows).toBe(24);
+    });
+  });
+
+  describe('integration with server registration', () => {
+    it('should allow endpoints to be registered alongside servers', () => {
+      // Register a server
+      const serverId = hostess.register({
+        fqdn: 'localhost',
+        servername: 'test-server',
+        classHex: '0x0001',
+        owner: 'test',
+        auth: 'no',
+        authMechanism: 'none',
+        terminals: [
+          { name: 'input', type: 'local', direction: 'input' },
+          { name: 'output', type: 'local', direction: 'output' }
+        ],
+        capabilities: {
+          type: 'transform'
+        }
+      });
+
+      // Register endpoint for the server
+      hostess.registerEndpoint(serverId, {
+        type: 'inproc',
+        coordinates: 'node:test-server',
+        metadata: { servername: 'test-server' }
+      });
+
+      // Verify both work
+      const servers = hostess.list();
+      expect(servers).toHaveLength(1);
+
+      const endpoints = hostess.listEndpoints();
+      expect(endpoints.size).toBe(1);
+      expect(endpoints.get(serverId)?.coordinates).toBe('node:test-server');
+    });
+  });
+});
diff --git a/tests/integration/endpointsList.spec.ts b/tests/integration/endpointsList.spec.ts
new file mode 100644
index 0000000..c0e20fc
--- /dev/null
+++ b/tests/integration/endpointsList.spec.ts
@@ -0,0 +1,298 @@
+import { describe, it, expect, beforeEach, afterEach } from 'vitest';
+import { Kernel } from '../../src/kernel/Kernel.js';
+import { Hostess } from '../../src/hostess/Hostess.js';
+import { StateManager } from '../../src/state/StateManager.js';
+import { Executor } from '../../src/executor/Executor.js';
+import { ExternalServerWrapper } from '../../src/wrappers/ExternalServerWrapper.js';
+import { PTYServerWrapper } from '../../src/wrappers/PTYServerWrapper.js';
+import type { TopologyConfig } from '../../src/config/schema.js';
+import type { ExternalServerManifest } from '../../src/types.js';
+
+describe('Endpoints List Integration', () => {
+  let kernel: Kernel;
+  let hostess: Hostess;
+  let stateManager: StateManager;
+  let executor: Executor;
+
+  // PTY operations can be slow, especially under load
+  const testTimeout = 10000;
+
+  beforeEach(() => {
+    kernel = new Kernel();
+    hostess = new Hostess();
+    stateManager = new StateManager(kernel);
+    executor = new Executor(kernel, hostess, stateManager);
+  });
+
+  afterEach(async () => {
+    if (executor) {
+      await executor.down();
+    }
+  });
+
+  describe('Executor endpoint registration', () => {
+    it('should register endpoints for inproc nodes', async () => {
+      const config: TopologyConfig = {
+        nodes: [
+          { id: 'timer1', module: 'TimerSource', params: { periodMs: 1000 } },
+          { id: 'sink1', module: 'ConsoleSink', params: { prefix: '[test]' } }
+        ],
+        connections: []
+      };
+
+      executor.load(config);
+      await executor.up();
+
+      const endpoints = hostess.listEndpoints();
+
+      // Should have 2 endpoints registered
+      expect(endpoints.size).toBeGreaterThanOrEqual(2);
+
+      // Find endpoints by their coordinates pattern
+      const endpointEntries = Array.from(endpoints.entries());
+      const timer1Endpoint = endpointEntries.find(([_, ep]) => ep.coordinates === 'node:timer1');
+      const sink1Endpoint = endpointEntries.find(([_, ep]) => ep.coordinates === 'node:sink1');
+
+      expect(timer1Endpoint).toBeDefined();
+      expect(timer1Endpoint![1].type).toBe('inproc');
+      expect(timer1Endpoint![1].metadata?.module).toBe('TimerSource');
+      expect(timer1Endpoint![1].metadata?.runMode).toBe('inproc');
+
+      expect(sink1Endpoint).toBeDefined();
+      expect(sink1Endpoint![1].type).toBe('inproc');
+      expect(sink1Endpoint![1].metadata?.module).toBe('ConsoleSink');
+    });
+
+    // GATED: Worker endpoint test requires worker harness infrastructure (T4611)
+    // Only run when MK_WORKER_EXPERIMENTAL=1 is set
+    it.skipIf(!process.env.MK_WORKER_EXPERIMENTAL)('should register endpoints for worker nodes', async () => {
+      const config: TopologyConfig = {
+        nodes: [
+          { id: 'worker1', module: 'UppercaseTransform', runMode: 'worker' }
+        ],
+        connections: []
+      };
+
+      executor.load(config);
+      await executor.up();
+
+      const endpoints = hostess.listEndpoints();
+      expect(endpoints.size).toBeGreaterThanOrEqual(1);
+
+      const endpointEntries = Array.from(endpoints.entries());
+      const workerEndpoint = endpointEntries.find(([_, ep]) => ep.coordinates === 'node:worker1');
+
+      expect(workerEndpoint).toBeDefined();
+      expect(workerEndpoint![1].type).toBe('worker');
+      expect(workerEndpoint![1].metadata?.module).toBe('UppercaseTransform');
+      expect(workerEndpoint![1].metadata?.runMode).toBe('worker');
+    });
+
+    it('should list all registered endpoints across multiple nodes', async () => {
+      const config: TopologyConfig = {
+        nodes: [
+          { id: 'timer1', module: 'TimerSource' },
+          { id: 'upper1', module: 'UppercaseTransform' },
+          { id: 'sink1', module: 'ConsoleSink' }
+        ],
+        connections: [
+          { from: 'timer1.output', to: 'upper1.input' },
+          { from: 'upper1.output', to: 'sink1.input' }
+        ]
+      };
+
+      executor.load(config);
+      await executor.up();
+
+      const endpoints = hostess.listEndpoints();
+
+      // Should have endpoints for all 3 nodes
+      expect(endpoints.size).toBeGreaterThanOrEqual(3);
+
+      const coordinatesSet = new Set(Array.from(endpoints.values()).map(ep => ep.coordinates));
+      expect(coordinatesSet.has('node:timer1')).toBe(true);
+      expect(coordinatesSet.has('node:upper1')).toBe(true);
+      expect(coordinatesSet.has('node:sink1')).toBe(true);
+    });
+  });
+
+  describe('ExternalServerWrapper endpoint registration', () => {
+    let wrapper: ExternalServerWrapper;
+
+    afterEach(async () => {
+      if (wrapper && wrapper.isRunning()) {
+        await wrapper.shutdown();
+      }
+    });
+
+    it('should register external endpoint when wrapper spawns', async () => {
+      const manifest: ExternalServerManifest = {
+        fqdn: 'localhost',
+        servername: 'echo-server',
+        classHex: '0xFFFF',
+        owner: 'test',
+        auth: 'no',
+        authMechanism: 'none',
+        terminals: [
+          { name: 'input', type: 'local', direction: 'input' },
+          { name: 'output', type: 'local', direction: 'output' }
+        ],
+        capabilities: {
+          type: 'transform'
+        },
+        command: '/bin/cat',
+        args: [],
+        env: {},
+        cwd: process.cwd(),
+        ioMode: 'stdio'
+      };
+
+      wrapper = new ExternalServerWrapper(kernel, hostess, manifest);
+      await wrapper.spawn();
+
+      const endpoints = hostess.listEndpoints();
+      expect(endpoints.size).toBeGreaterThanOrEqual(1);
+
+      const endpointEntries = Array.from(endpoints.entries());
+      const externalEndpoint = endpointEntries.find(([_, ep]) => ep.type === 'external');
+
+      expect(externalEndpoint).toBeDefined();
+      expect(externalEndpoint![1].coordinates).toContain('/bin/cat');
+      expect(externalEndpoint![1].metadata?.cwd).toBe(process.cwd());
+      expect(externalEndpoint![1].metadata?.ioMode).toBe('stdio');
+    });
+  });
+
+  describe('PTYServerWrapper endpoint registration', () => {
+    let wrapper: PTYServerWrapper;
+
+    afterEach(async () => {
+      if (wrapper && wrapper.isRunning()) {
+        await wrapper.shutdown();
+      }
+    });
+
+    it('should register pty endpoint when wrapper spawns', { timeout: testTimeout }, async () => {
+      const manifest: ExternalServerManifest = {
+        fqdn: 'localhost',
+        servername: 'bash-pty',
+        classHex: '0xFFFF',
+        owner: 'test',
+        auth: 'no',
+        authMechanism: 'none',
+        terminals: [
+          { name: 'input', type: 'local', direction: 'input' },
+          { name: 'output', type: 'local', direction: 'output' }
+        ],
+        capabilities: {
+          type: 'transform'
+        },
+        command: '/bin/bash',
+        args: [],
+        env: {},
+        cwd: process.cwd(),
+        ioMode: 'pty',
+        initialCols: 80,
+        initialRows: 24,
+        terminalType: 'xterm-256color'
+      };
+
+      wrapper = new PTYServerWrapper(kernel, hostess, manifest);
+      await wrapper.spawn();
+
+      const endpoints = hostess.listEndpoints();
+      expect(endpoints.size).toBeGreaterThanOrEqual(1);
+
+      const endpointEntries = Array.from(endpoints.entries());
+      const ptyEndpoint = endpointEntries.find(([_, ep]) => ep.type === 'pty');
+
+      expect(ptyEndpoint).toBeDefined();
+      expect(ptyEndpoint![1].coordinates).toMatch(/^pid:\d+$/);
+      expect(ptyEndpoint![1].metadata?.cols).toBe(80);
+      expect(ptyEndpoint![1].metadata?.rows).toBe(24);
+      expect(ptyEndpoint![1].metadata?.terminalType).toBe('xterm-256color');
+    });
+  });
+
+  describe('Full topology with mixed endpoint types', () => {
+    let externalWrapper: ExternalServerWrapper;
+
+    afterEach(async () => {
+      if (externalWrapper && externalWrapper.isRunning()) {
+        await externalWrapper.shutdown();
+      }
+    });
+
+    it('should list all endpoint types in a mixed topology', async () => {
+      // Create executor with inproc nodes
+      const config: TopologyConfig = {
+        nodes: [
+          { id: 'timer1', module: 'TimerSource' },
+          { id: 'sink1', module: 'ConsoleSink' }
+        ],
+        connections: []
+      };
+
+      executor.load(config);
+      await executor.up();
+
+      // Add an external wrapper
+      const externalManifest: ExternalServerManifest = {
+        fqdn: 'localhost',
+        servername: 'external-cat',
+        classHex: '0xEEEE',
+        owner: 'test',
+        auth: 'no',
+        authMechanism: 'none',
+        terminals: [
+          { name: 'input', type: 'local', direction: 'input' },
+          { name: 'output', type: 'local', direction: 'output' }
+        ],
+        capabilities: {
+          type: 'transform'
+        },
+        command: '/bin/cat',
+        args: [],
+        env: {},
+        cwd: process.cwd(),
+        ioMode: 'stdio'
+      };
+
+      externalWrapper = new ExternalServerWrapper(kernel, hostess, externalManifest);
+      await externalWrapper.spawn();
+
+      // List all endpoints
+      const endpoints = hostess.listEndpoints();
+
+      // Should have at least 3 endpoints (2 inproc + 1 external)
+      expect(endpoints.size).toBeGreaterThanOrEqual(3);
+
+      const types = new Set(Array.from(endpoints.values()).map(ep => ep.type));
+      expect(types.has('inproc')).toBe(true);
+      expect(types.has('external')).toBe(true);
+    });
+  });
+
+  describe('Endpoint lifecycle', () => {
+    it('should maintain endpoints after executor restart', async () => {
+      const config: TopologyConfig = {
+        nodes: [
+          { id: 'timer1', module: 'TimerSource' }
+        ],
+        connections: []
+      };
+
+      executor.load(config);
+      await executor.up();
+
+      const endpointsBefore = hostess.listEndpoints();
+      expect(endpointsBefore.size).toBeGreaterThanOrEqual(1);
+
+      await executor.restartNode('timer1');
+
+      const endpointsAfter = hostess.listEndpoints();
+      // After restart, should still have endpoints (may have more due to re-registration)
+      expect(endpointsAfter.size).toBeGreaterThanOrEqual(1);
+    });
+  });
+});
