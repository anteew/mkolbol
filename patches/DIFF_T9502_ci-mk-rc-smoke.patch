diff --git a/.github/workflows/tests.yml b/.github/workflows/tests.yml
index 2295309..bac2bfc 100644
--- a/.github/workflows/tests.yml
+++ b/.github/workflows/tests.yml
@@ -228,3 +228,98 @@ jobs:
             /tmp/smoke-test.log
             logs/
           if-no-files-found: warn
+
+  # RC smoke test: validate mk init/build/package commands (best-effort)
+  mk-rc-smoke:
+    name: MK RC Smoke Test (init/build/package)
+    runs-on: ubuntu-latest
+    needs: test
+    if: ${{ always() }}
+    continue-on-error: true
+    steps:
+      - name: Checkout
+        uses: actions/checkout@v4
+
+      - name: Setup Node.js
+        uses: actions/setup-node@v4
+        with:
+          node-version: '24'
+          cache: npm
+
+      - name: Install
+        run: npm ci
+
+      - name: Build
+        run: npm run build
+
+      - name: Run mk RC smoke test
+        run: |
+          mkdir -p reports
+          TEST_RESULT_FILE="reports/mk-rc-smoke.jsonl"
+
+          # Test 1: mk init test-project
+          echo "▶ Testing: mk init test-project"
+          if node dist/scripts/mk.js init test-project > /tmp/mk-init.log 2>&1; then
+            INIT_PASS="true"
+            echo "✅ mk init PASSED"
+          else
+            INIT_PASS="false"
+            echo "⚠️  mk init FAILED"
+            cat /tmp/mk-init.log
+          fi
+
+          # Test 2: mk build
+          echo "▶ Testing: mk build"
+          if [ "$INIT_PASS" = "true" ] && [ -d test-project ]; then
+            cd test-project
+            if node ../dist/scripts/mk.js build > /tmp/mk-build.log 2>&1; then
+              BUILD_PASS="true"
+              echo "✅ mk build PASSED"
+            else
+              BUILD_PASS="false"
+              echo "⚠️  mk build FAILED"
+              cat /tmp/mk-build.log
+            fi
+
+            # Test 3: mk package
+            echo "▶ Testing: mk package"
+            if [ "$BUILD_PASS" = "true" ]; then
+              if node ../dist/scripts/mk.js package > /tmp/mk-package.log 2>&1; then
+                PACKAGE_PASS="true"
+                echo "✅ mk package PASSED"
+                
+                # Verify outputs
+                if [ -f *.tgz ]; then
+                  echo "✅ Package tarball created: $(ls *.tgz)"
+                else
+                  echo "⚠️  No .tgz file found"
+                fi
+              else
+                PACKAGE_PASS="false"
+                echo "⚠️  mk package FAILED"
+                cat /tmp/mk-package.log
+              fi
+            else
+              PACKAGE_PASS="false"
+              echo "⚠️  mk package skipped (build failed)"
+            fi
+
+            cd ..
+          else
+            BUILD_PASS="false"
+            PACKAGE_PASS="false"
+            echo "⚠️  mk build/package skipped (init failed)"
+          fi
+
+          # Record results
+          echo "{\"type\":\"mk-rc-smoke\",\"init\":$INIT_PASS,\"build\":$BUILD_PASS,\"package\":$PACKAGE_PASS,\"timestamp\":\"$(date -u +%Y-%m-%dT%H:%M:%SZ)\"}" >> "$TEST_RESULT_FILE"
+
+      - name: Upload mk smoke test logs
+        if: always()
+        uses: actions/upload-artifact@v4
+        with:
+          name: mk-rc-smoke-logs
+          path: |
+            /tmp/mk-*.log
+            test-project/
+          if-no-files-found: warn
diff --git a/docs/devex/ci-acceptance-smoke.md b/docs/devex/ci-acceptance-smoke.md
index 98047c1..b35cccc 100644
--- a/docs/devex/ci-acceptance-smoke.md
+++ b/docs/devex/ci-acceptance-smoke.md
@@ -483,6 +483,90 @@ acceptance-smoke:
 
 ---
 
+---
+
+## MK RC Smoke Test Job
+
+### Overview
+
+The `mk-rc-smoke` job validates the **mk CLI release candidate** workflow: `mk init`, `mk build`, and `mk package`. This is a **non-gating, best-effort** CI job that runs in parallel with the acceptance smoke test.
+
+### Job Configuration
+
+```yaml
+mk-rc-smoke:
+  name: MK RC Smoke Test (init/build/package)
+  runs-on: ubuntu-latest
+  needs: test
+  if: ${{ always() }}           # Run even if test job fails
+  continue-on-error: true       # Don't block PR on smoke test failure
+```
+
+### Test Sequence
+
+The job performs three sequential tests:
+
+1. **mk init test-project** — Initialize a new mkolbol project
+2. **mk build** — Build the initialized project
+3. **mk package** — Create a distributable tarball
+
+Each test is conditional on the previous step passing.
+
+### Validation Checks
+
+**Check 1: mk init**
+```bash
+node dist/scripts/mk.js init test-project > /tmp/mk-init.log 2>&1
+# Validates: Project scaffolding, package.json creation, default config generation
+```
+
+**Check 2: mk build**
+```bash
+cd test-project
+node ../dist/scripts/mk.js build > /tmp/mk-build.log 2>&1
+# Validates: TypeScript compilation, module bundling, dist/ output
+```
+
+**Check 3: mk package**
+```bash
+node ../dist/scripts/mk.js package > /tmp/mk-package.log 2>&1
+# Validates: Tarball creation, dependency bundling, package metadata
+```
+
+### Results Format
+
+Results are recorded to `reports/mk-rc-smoke.jsonl`:
+
+```json
+{
+  "type": "mk-rc-smoke",
+  "init": true,
+  "build": true,
+  "package": true,
+  "timestamp": "2025-10-16T04:15:23Z"
+}
+```
+
+### Artifacts
+
+CI artifacts include:
+- `/tmp/mk-init.log` — mk init command output
+- `/tmp/mk-build.log` — mk build command output
+- `/tmp/mk-package.log` — mk package command output
+- `test-project/` — Generated project directory
+
+### Local Reproduction
+
+```bash
+npm run build
+node dist/scripts/mk.js init test-project
+cd test-project && node ../dist/scripts/mk.js build
+node ../dist/scripts/mk.js package
+ls -la *.tgz
+```
+
+---
+
 ## Related Documentation
 
 - **[Doctor Guide](./doctor.md)** — Troubleshooting mkctl errors and health checks
