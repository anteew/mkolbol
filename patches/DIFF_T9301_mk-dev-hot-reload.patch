diff --git a/dist/scripts/mk.js b/dist/scripts/mk.js
index c780b3a..7fb38ad 100644
--- a/dist/scripts/mk.js
+++ b/dist/scripts/mk.js
@@ -23,6 +23,85 @@ const commands = [
             return runHandler(args);
         },
     },
+    {
+        name: 'dev',
+        description: 'Run topology with hot-reload for in-proc modules',
+        usage: 'mk dev <config> [--verbose]',
+        handler: async (args) => {
+            if (args.length === 0) {
+                console.error('Error: Missing topology config file');
+                console.error('Usage: mk dev <config> [--verbose]');
+                return EXIT_USAGE;
+            }
+            const configPath = args[0];
+            const verbose = args.includes('--verbose');
+            try {
+                const { loadConfig } = await import('../src/config/loader.js');
+                const { Kernel } = await import('../src/kernel/Kernel.js');
+                const { Hostess } = await import('../src/hostess/Hostess.js');
+                const { StateManager } = await import('../src/state/StateManager.js');
+                const { Executor } = await import('../src/executor/Executor.js');
+                const { watchModules } = await import('../src/mk/dev.js');
+                // Load topology
+                const topology = loadConfig(configPath);
+                console.log('[mk dev] Starting topology with hot-reload...');
+                // Initialize system
+                const kernel = new Kernel();
+                const hostess = new Hostess();
+                const stateManager = new StateManager(kernel);
+                const executor = new Executor(kernel, hostess, stateManager);
+                // Register modules
+                const modules = [
+                    { name: 'TimerSource', path: '../src/modules/timer.js' },
+                    { name: 'UppercaseTransform', path: '../src/modules/uppercase.js' },
+                    { name: 'ConsoleSink', path: '../src/modules/consoleSink.js' },
+                    { name: 'FilesystemSink', path: '../src/modules/filesystem-sink.js' },
+                    { name: 'PipeMeterTransform', path: '../src/transforms/pipeMeter.js' },
+                    { name: 'RateLimiterTransform', path: '../src/transforms/rateLimiter.js' },
+                    { name: 'TeeTransform', path: '../src/transforms/tee.js' },
+                ];
+                for (const mod of modules) {
+                    try {
+                        const modulePath = new URL(mod.path, import.meta.url).pathname;
+                        const moduleExport = await import(modulePath);
+                        executor.registerModule(mod.name, moduleExport.default || moduleExport[mod.name]);
+                    }
+                    catch (err) {
+                        // Module might not exist, skip
+                    }
+                }
+                // Load and start executor
+                executor.load(topology);
+                await executor.up();
+                // Start file watchers
+                const watcher = watchModules(executor, topology, {
+                    verbose,
+                    onReload: (nodeId) => {
+                        console.log(`[mk dev] Node ${nodeId} hot-reloaded`);
+                    }
+                });
+                console.log('[mk dev] System running. Press Ctrl+C to stop.');
+                // Handle graceful shutdown
+                const shutdown = async () => {
+                    console.log('\n[mk dev] Shutting down...');
+                    watcher.stop();
+                    await executor.down();
+                    process.exit(EXIT_SUCCESS);
+                };
+                process.on('SIGINT', shutdown);
+                process.on('SIGTERM', shutdown);
+                // Keep process alive
+                await new Promise((resolve) => {
+                    // Never resolves - keeps process running until signal
+                });
+                return EXIT_SUCCESS;
+            }
+            catch (error) {
+                console.error(`Error: ${error instanceof Error ? error.message : String(error)}`);
+                return EXIT_ERROR;
+            }
+        },
+    },
     {
         name: 'doctor',
         description: 'Diagnose system and dependency issues',
@@ -130,6 +209,52 @@ const commands = [
             }
         },
     },
+    {
+        name: 'logs',
+        description: 'Tail module logs with filtering',
+        usage: 'mk logs [--module <name>] [--level <error|warn|info|debug>] [--json] [--follow] [--lines <n>]',
+        handler: async (args) => {
+            const { tailLogs } = await import('../src/mk/logs.js');
+            const options = {};
+            for (let i = 0; i < args.length; i++) {
+                const arg = args[i];
+                if (arg === '--module' && i + 1 < args.length) {
+                    options.module = args[++i];
+                }
+                else if (arg === '--level' && i + 1 < args.length) {
+                    const level = args[++i];
+                    if (level === 'error' || level === 'warn' || level === 'info' || level === 'debug') {
+                        options.level = level;
+                    }
+                    else {
+                        console.error(`Invalid level: ${level}. Use: error, warn, info, or debug`);
+                        return EXIT_USAGE;
+                    }
+                }
+                else if (arg === '--json') {
+                    options.json = true;
+                }
+                else if (arg === '--follow' || arg === '-f') {
+                    options.follow = true;
+                }
+                else if (arg === '--lines' && i + 1 < args.length) {
+                    options.lines = parseInt(args[++i], 10);
+                    if (isNaN(options.lines) || options.lines <= 0) {
+                        console.error('Invalid --lines value. Must be a positive number.');
+                        return EXIT_USAGE;
+                    }
+                }
+            }
+            try {
+                await tailLogs(options);
+                return EXIT_SUCCESS;
+            }
+            catch (error) {
+                console.error(`Error: ${error instanceof Error ? error.message : String(error)}`);
+                return EXIT_ERROR;
+            }
+        },
+    },
 ];
 function printMainHelp() {
     console.log(`mk â€” mkolbol CLI toolkit\n`);
diff --git a/dist/scripts/mk.js.map b/dist/scripts/mk.js.map
index c2b1b45..f10fbb6 100644
--- a/dist/scripts/mk.js.map
+++ b/dist/scripts/mk.js.map
@@ -1 +1 @@
-{"version":3,"file":"mk.js","sourceRoot":"","sources":["../../scripts/mk.ts"],"names":[],"mappings":";AAEA,OAAO,EAAE,qBAAqB,EAAE,aAAa,EAAE,YAAY,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;AAC3G,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,qBAAqB,EAAE,OAAO,EAAE,MAAM,qBAAqB,CAAC;AAE/F,MAAM,YAAY,GAAG,CAAC,CAAC;AACvB,MAAM,UAAU,GAAG,CAAC,CAAC;AACrB,MAAM,UAAU,GAAG,EAAE,CAAC;AAStB,MAAM,QAAQ,GAAc;IAC1B;QACE,IAAI,EAAE,MAAM;QACZ,WAAW,EAAE,kCAAkC;QAC/C,KAAK,EAAE,wBAAwB;QAC/B,OAAO,EAAE,KAAK,EAAE,IAAc,EAAE,EAAE;YAChC,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;YACnC,OAAO,YAAY,CAAC;QACtB,CAAC;KACF;IACD;QACE,IAAI,EAAE,KAAK;QACX,WAAW,EAAE,kCAAkC;QAC/C,KAAK,EAAE,oCAAoC;QAC3C,OAAO,EAAE,KAAK,EAAE,IAAc,EAAE,EAAE;YAChC,MAAM,EAAE,UAAU,EAAE,GAAG,MAAM,MAAM,CAAC,yBAAyB,CAAC,CAAC;YAC/D,OAAO,UAAU,CAAC,IAAI,CAAC,CAAC;QAC1B,CAAC;KACF;IACD;QACE,IAAI,EAAE,QAAQ;QACd,WAAW,EAAE,uCAAuC;QACpD,KAAK,EAAE,uBAAuB;QAC9B,OAAO,EAAE,KAAK,EAAE,IAAc,EAAE,EAAE;YAChC,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;YAC3C,MAAM,EAAE,eAAe,EAAE,kBAAkB,EAAE,GAAG,MAAM,MAAM,CAAC,qBAAqB,CAAC,CAAC;YAEpF,MAAM,OAAO,GAAG,MAAM,eAAe,CAAC,OAAO,CAAC,CAAC;YAC/C,MAAM,MAAM,GAAG,kBAAkB,CAAC,OAAO,CAAC,CAAC;YAC3C,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAEpB,MAAM,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,CAAC;YACzD,OAAO,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,YAAY,CAAC;QAC/C,CAAC;KACF;IACD;QACE,IAAI,EAAE,OAAO;QACb,WAAW,EAAE,0BAA0B;QACvC,KAAK,EAAE,4BAA4B;QACnC,OAAO,EAAE,KAAK,EAAE,IAAc,EAAE,EAAE;YAChC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gBACtB,OAAO,CAAC,KAAK,CAAC,qCAAqC,CAAC,CAAC;gBACrD,OAAO,CAAC,KAAK,CAAC,mCAAmC,CAAC,CAAC;gBACnD,OAAO,UAAU,CAAC;YACpB,CAAC;YAED,MAAM,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YAC3B,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAE3C,IAAI,CAAC;gBACH,MAAM,EAAE,UAAU,EAAE,GAAG,MAAM,MAAM,CAAC,yBAAyB,CAAC,CAAC;gBAC/D,MAAM,EAAE,kBAAkB,EAAE,iBAAiB,EAAE,GAAG,MAAM,MAAM,CAAC,oBAAoB,CAAC,CAAC;gBAErF,MAAM,QAAQ,GAAG,UAAU,CAAC,UAAU,CAAC,CAAC;gBAExC,IAAI,UAAU,EAAE,CAAC;oBACf,MAAM,KAAK,GAAG,iBAAiB,CAAC,QAAQ,CAAC,CAAC;oBAC1C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;gBAC9C,CAAC;qBAAM,CAAC;oBACN,MAAM,KAAK,GAAG,kBAAkB,CAAC,QAAQ,CAAC,CAAC;oBAC3C,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACrB,CAAC;gBAED,OAAO,YAAY,CAAC;YACtB,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,OAAO,CAAC,KAAK,CAAC,UAAU,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;gBAClF,OAAO,UAAU,CAAC;YACpB,CAAC;QACH,CAAC;KACF;IACD;QACE,IAAI,EAAE,QAAQ;QACd,WAAW,EAAE,uCAAuC;QACpD,KAAK,EAAE,+HAA+H;QACtI,OAAO,EAAE,KAAK,EAAE,IAAc,EAAE,EAAE;YAChC,MAAM,EAAE,aAAa,EAAE,GAAG,MAAM,MAAM,CAAC,4BAA4B,CAAC,CAAC;YACrE,OAAO,aAAa,CAAC,IAAI,CAAC,CAAC;QAC7B,CAAC;KACF;IACD;QACE,IAAI,EAAE,QAAQ;QACd,WAAW,EAAE,6CAA6C;QAC1D,KAAK,EAAE,0BAA0B;QACjC,OAAO,EAAE,KAAK,EAAE,IAAc,EAAE,EAAE;YAChC,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YAErB,IAAI,IAAI,KAAK,OAAO,EAAE,CAAC;gBACrB,MAAM,aAAa,EAAE,CAAC;gBACtB,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;gBAC/C,OAAO,CAAC,GAAG,CAAC,2CAA2C,CAAC,CAAC;gBACzD,OAAO,YAAY,CAAC;YACtB,CAAC;YAED,IAAI,IAAI,KAAK,MAAM,EAAE,CAAC;gBACpB,MAAM,YAAY,EAAE,CAAC;gBACrB,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;gBAC9C,OAAO,YAAY,CAAC;YACtB,CAAC;YAED,MAAM,QAAQ,GAAG,MAAM,gBAAgB,EAAE,CAAC;YAC1C,IAAI,QAAQ,EAAE,CAAC;gBACb,OAAO,CAAC,KAAK,CAAC,qEAAqE,CAAC,CAAC;gBACrF,OAAO,UAAU,CAAC;YACpB,CAAC;YAED,MAAM,OAAO,GAAG,MAAM,qBAAqB,EAAE,CAAC;YAC9C,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YACrB,OAAO,YAAY,CAAC;QACtB,CAAC;KACF;IACD;QACE,IAAI,EAAE,OAAO;QACb,WAAW,EAAE,4DAA4D;QACzE,KAAK,EAAE,gBAAgB;QACvB,OAAO,EAAE,KAAK,EAAE,IAAc,EAAE,EAAE;YAChC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gBACtB,OAAO,CAAC,KAAK,CAAC,4BAA4B,CAAC,CAAC;gBAC5C,OAAO,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;gBACvC,OAAO,CAAC,KAAK,CAAC,4CAA4C,CAAC,CAAC;gBAC5D,OAAO,UAAU,CAAC;YACpB,CAAC;YAED,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YAEpB,IAAI,CAAC;gBACH,MAAM,EAAE,eAAe,EAAE,cAAc,EAAE,GAAG,MAAM,MAAM,CAAC,oBAAoB,CAAC,CAAC;gBAE/E,OAAO,CAAC,GAAG,CAAC,oBAAoB,GAAG,KAAK,CAAC,CAAC;gBAC1C,MAAM,WAAW,GAAG,MAAM,eAAe,CAAC,GAAG,CAAC,CAAC;gBAE/C,MAAM,cAAc,CAAC,WAAW,CAAC,CAAC;gBAElC,OAAO,YAAY,CAAC;YACtB,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,OAAO,CAAC,KAAK,CAAC,UAAU,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;gBAClF,OAAO,UAAU,CAAC;YACpB,CAAC;QACH,CAAC;KACF;CACF,CAAC;AAEF,SAAS,aAAa;IACpB,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;IAC1C,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;IAC/C,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IACzB,KAAK,MAAM,GAAG,IAAI,QAAQ,EAAE,CAAC;QAC3B,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC;IAC7D,CAAC;IACD,OAAO,CAAC,GAAG,CAAC,mEAAmE,CAAC,CAAC;AACnF,CAAC;AAED,SAAS,gBAAgB,CAAC,GAAY;IACpC,OAAO,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,WAAW,IAAI,CAAC,CAAC;IACpC,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;AACrC,CAAC;AAED,KAAK,UAAU,MAAM;IACnB,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAEnC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC;QAClE,aAAa,EAAE,CAAC;QAChB,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC7B,CAAC;IAED,MAAM,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5B,MAAM,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,KAAK,WAAW,CAAC,CAAC;IAEjE,IAAI,CAAC,OAAO,EAAE,CAAC;QACb,MAAM,UAAU,GAAG,qBAAqB,CAAC,IAAI,CAAC,CAAC;QAC/C,MAAM,KAAK,GAAG,WAAW,CAAC,iBAAiB,EAAE,EAAE,OAAO,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE,EAAE,CAAC,CAAC;QAEpF,IAAI,UAAU,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;QAC5C,CAAC;aAAM,CAAC;YACN,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;QAC5C,CAAC;QACD,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC3B,CAAC;IAED,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAElC,IAAI,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC;QACjE,gBAAgB,CAAC,OAAO,CAAC,CAAC;QAC1B,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC7B,CAAC;IAED,IAAI,CAAC;QACH,MAAM,QAAQ,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QACpD,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACzB,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,MAAM,UAAU,GAAG,qBAAqB,CAAC,WAAW,CAAC,CAAC;QAEtD,IAAI,KAAK,YAAY,OAAO,EAAE,CAAC;YAC7B,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QAClE,CAAC;aAAM,CAAC;YACN,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC,KAAc,EAAE,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QAC3E,CAAC;QACD,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC3B,CAAC;AACH,CAAC;AAED,MAAM,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;IACvB,MAAM,UAAU,GAAG,qBAAqB,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAEhE,IAAI,KAAK,YAAY,OAAO,EAAE,CAAC;QAC7B,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;IAClE,CAAC;SAAM,CAAC;QACN,MAAM,UAAU,GAAG,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;QAC7E,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;IACvE,CAAC;IACD,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC"}
\ No newline at end of file
+{"version":3,"file":"mk.js","sourceRoot":"","sources":["../../scripts/mk.ts"],"names":[],"mappings":";AAEA,OAAO,EAAE,qBAAqB,EAAE,aAAa,EAAE,YAAY,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;AAC3G,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,qBAAqB,EAAE,OAAO,EAAE,MAAM,qBAAqB,CAAC;AAE/F,MAAM,YAAY,GAAG,CAAC,CAAC;AACvB,MAAM,UAAU,GAAG,CAAC,CAAC;AACrB,MAAM,UAAU,GAAG,EAAE,CAAC;AAStB,MAAM,QAAQ,GAAc;IAC1B;QACE,IAAI,EAAE,MAAM;QACZ,WAAW,EAAE,kCAAkC;QAC/C,KAAK,EAAE,wBAAwB;QAC/B,OAAO,EAAE,KAAK,EAAE,IAAc,EAAE,EAAE;YAChC,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;YACnC,OAAO,YAAY,CAAC;QACtB,CAAC;KACF;IACD;QACE,IAAI,EAAE,KAAK;QACX,WAAW,EAAE,kCAAkC;QAC/C,KAAK,EAAE,oCAAoC;QAC3C,OAAO,EAAE,KAAK,EAAE,IAAc,EAAE,EAAE;YAChC,MAAM,EAAE,UAAU,EAAE,GAAG,MAAM,MAAM,CAAC,yBAAyB,CAAC,CAAC;YAC/D,OAAO,UAAU,CAAC,IAAI,CAAC,CAAC;QAC1B,CAAC;KACF;IACD;QACE,IAAI,EAAE,KAAK;QACX,WAAW,EAAE,kDAAkD;QAC/D,KAAK,EAAE,6BAA6B;QACpC,OAAO,EAAE,KAAK,EAAE,IAAc,EAAE,EAAE;YAChC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gBACtB,OAAO,CAAC,KAAK,CAAC,qCAAqC,CAAC,CAAC;gBACrD,OAAO,CAAC,KAAK,CAAC,oCAAoC,CAAC,CAAC;gBACpD,OAAO,UAAU,CAAC;YACpB,CAAC;YAED,MAAM,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YAC3B,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;YAE3C,IAAI,CAAC;gBACH,MAAM,EAAE,UAAU,EAAE,GAAG,MAAM,MAAM,CAAC,yBAAyB,CAAC,CAAC;gBAC/D,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,MAAM,CAAC,yBAAyB,CAAC,CAAC;gBAC3D,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,MAAM,CAAC,2BAA2B,CAAC,CAAC;gBAC9D,MAAM,EAAE,YAAY,EAAE,GAAG,MAAM,MAAM,CAAC,8BAA8B,CAAC,CAAC;gBACtE,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,MAAM,CAAC,6BAA6B,CAAC,CAAC;gBACjE,MAAM,EAAE,YAAY,EAAE,GAAG,MAAM,MAAM,CAAC,kBAAkB,CAAC,CAAC;gBAE1D,gBAAgB;gBAChB,MAAM,QAAQ,GAAG,UAAU,CAAC,UAAU,CAAC,CAAC;gBAExC,OAAO,CAAC,GAAG,CAAC,+CAA+C,CAAC,CAAC;gBAE7D,oBAAoB;gBACpB,MAAM,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;gBAC5B,MAAM,OAAO,GAAG,IAAI,OAAO,EAAE,CAAC;gBAC9B,MAAM,YAAY,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC,CAAC;gBAC9C,MAAM,QAAQ,GAAG,IAAI,QAAQ,CAAC,MAAM,EAAE,OAAO,EAAE,YAAY,CAAC,CAAC;gBAE7D,mBAAmB;gBACnB,MAAM,OAAO,GAAG;oBACd,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,yBAAyB,EAAE;oBACxD,EAAE,IAAI,EAAE,oBAAoB,EAAE,IAAI,EAAE,6BAA6B,EAAE;oBACnE,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,+BAA+B,EAAE;oBAC9D,EAAE,IAAI,EAAE,gBAAgB,EAAE,IAAI,EAAE,mCAAmC,EAAE;oBACrE,EAAE,IAAI,EAAE,oBAAoB,EAAE,IAAI,EAAE,gCAAgC,EAAE;oBACtE,EAAE,IAAI,EAAE,sBAAsB,EAAE,IAAI,EAAE,kCAAkC,EAAE;oBAC1E,EAAE,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,0BAA0B,EAAE;iBAC3D,CAAC;gBAEF,KAAK,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;oBAC1B,IAAI,CAAC;wBACH,MAAM,UAAU,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC;wBAC/D,MAAM,YAAY,GAAG,MAAM,MAAM,CAAC,UAAU,CAAC,CAAC;wBAC9C,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,EAAE,YAAY,CAAC,OAAO,IAAI,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;oBACpF,CAAC;oBAAC,OAAO,GAAG,EAAE,CAAC;wBACb,+BAA+B;oBACjC,CAAC;gBACH,CAAC;gBAED,0BAA0B;gBAC1B,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACxB,MAAM,QAAQ,CAAC,EAAE,EAAE,CAAC;gBAEpB,sBAAsB;gBACtB,MAAM,OAAO,GAAG,YAAY,CAAC,QAAQ,EAAE,QAAQ,EAAE;oBAC/C,OAAO;oBACP,QAAQ,EAAE,CAAC,MAAM,EAAE,EAAE;wBACnB,OAAO,CAAC,GAAG,CAAC,iBAAiB,MAAM,eAAe,CAAC,CAAC;oBACtD,CAAC;iBACF,CAAC,CAAC;gBAEH,OAAO,CAAC,GAAG,CAAC,gDAAgD,CAAC,CAAC;gBAE9D,2BAA2B;gBAC3B,MAAM,QAAQ,GAAG,KAAK,IAAI,EAAE;oBAC1B,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;oBAC3C,OAAO,CAAC,IAAI,EAAE,CAAC;oBACf,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;oBACtB,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBAC7B,CAAC,CAAC;gBAEF,OAAO,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;gBAC/B,OAAO,CAAC,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;gBAEhC,qBAAqB;gBACrB,MAAM,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,EAAE;oBAClC,sDAAsD;gBACxD,CAAC,CAAC,CAAC;gBAEH,OAAO,YAAY,CAAC;YACtB,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,OAAO,CAAC,KAAK,CAAC,UAAU,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;gBAClF,OAAO,UAAU,CAAC;YACpB,CAAC;QACH,CAAC;KACF;IACD;QACE,IAAI,EAAE,QAAQ;QACd,WAAW,EAAE,uCAAuC;QACpD,KAAK,EAAE,uBAAuB;QAC9B,OAAO,EAAE,KAAK,EAAE,IAAc,EAAE,EAAE;YAChC,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;YAC3C,MAAM,EAAE,eAAe,EAAE,kBAAkB,EAAE,GAAG,MAAM,MAAM,CAAC,qBAAqB,CAAC,CAAC;YAEpF,MAAM,OAAO,GAAG,MAAM,eAAe,CAAC,OAAO,CAAC,CAAC;YAC/C,MAAM,MAAM,GAAG,kBAAkB,CAAC,OAAO,CAAC,CAAC;YAC3C,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAEpB,MAAM,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,CAAC;YACzD,OAAO,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,YAAY,CAAC;QAC/C,CAAC;KACF;IACD;QACE,IAAI,EAAE,OAAO;QACb,WAAW,EAAE,0BAA0B;QACvC,KAAK,EAAE,4BAA4B;QACnC,OAAO,EAAE,KAAK,EAAE,IAAc,EAAE,EAAE;YAChC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gBACtB,OAAO,CAAC,KAAK,CAAC,qCAAqC,CAAC,CAAC;gBACrD,OAAO,CAAC,KAAK,CAAC,mCAAmC,CAAC,CAAC;gBACnD,OAAO,UAAU,CAAC;YACpB,CAAC;YAED,MAAM,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YAC3B,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAE3C,IAAI,CAAC;gBACH,MAAM,EAAE,UAAU,EAAE,GAAG,MAAM,MAAM,CAAC,yBAAyB,CAAC,CAAC;gBAC/D,MAAM,EAAE,kBAAkB,EAAE,iBAAiB,EAAE,GAAG,MAAM,MAAM,CAAC,oBAAoB,CAAC,CAAC;gBAErF,MAAM,QAAQ,GAAG,UAAU,CAAC,UAAU,CAAC,CAAC;gBAExC,IAAI,UAAU,EAAE,CAAC;oBACf,MAAM,KAAK,GAAG,iBAAiB,CAAC,QAAQ,CAAC,CAAC;oBAC1C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;gBAC9C,CAAC;qBAAM,CAAC;oBACN,MAAM,KAAK,GAAG,kBAAkB,CAAC,QAAQ,CAAC,CAAC;oBAC3C,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACrB,CAAC;gBAED,OAAO,YAAY,CAAC;YACtB,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,OAAO,CAAC,KAAK,CAAC,UAAU,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;gBAClF,OAAO,UAAU,CAAC;YACpB,CAAC;QACH,CAAC;KACF;IACD;QACE,IAAI,EAAE,QAAQ;QACd,WAAW,EAAE,uCAAuC;QACpD,KAAK,EAAE,+HAA+H;QACtI,OAAO,EAAE,KAAK,EAAE,IAAc,EAAE,EAAE;YAChC,MAAM,EAAE,aAAa,EAAE,GAAG,MAAM,MAAM,CAAC,4BAA4B,CAAC,CAAC;YACrE,OAAO,aAAa,CAAC,IAAI,CAAC,CAAC;QAC7B,CAAC;KACF;IACD;QACE,IAAI,EAAE,QAAQ;QACd,WAAW,EAAE,6CAA6C;QAC1D,KAAK,EAAE,0BAA0B;QACjC,OAAO,EAAE,KAAK,EAAE,IAAc,EAAE,EAAE;YAChC,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YAErB,IAAI,IAAI,KAAK,OAAO,EAAE,CAAC;gBACrB,MAAM,aAAa,EAAE,CAAC;gBACtB,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;gBAC/C,OAAO,CAAC,GAAG,CAAC,2CAA2C,CAAC,CAAC;gBACzD,OAAO,YAAY,CAAC;YACtB,CAAC;YAED,IAAI,IAAI,KAAK,MAAM,EAAE,CAAC;gBACpB,MAAM,YAAY,EAAE,CAAC;gBACrB,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;gBAC9C,OAAO,YAAY,CAAC;YACtB,CAAC;YAED,MAAM,QAAQ,GAAG,MAAM,gBAAgB,EAAE,CAAC;YAC1C,IAAI,QAAQ,EAAE,CAAC;gBACb,OAAO,CAAC,KAAK,CAAC,qEAAqE,CAAC,CAAC;gBACrF,OAAO,UAAU,CAAC;YACpB,CAAC;YAED,MAAM,OAAO,GAAG,MAAM,qBAAqB,EAAE,CAAC;YAC9C,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YACrB,OAAO,YAAY,CAAC;QACtB,CAAC;KACF;IACD;QACE,IAAI,EAAE,OAAO;QACb,WAAW,EAAE,4DAA4D;QACzE,KAAK,EAAE,gBAAgB;QACvB,OAAO,EAAE,KAAK,EAAE,IAAc,EAAE,EAAE;YAChC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gBACtB,OAAO,CAAC,KAAK,CAAC,4BAA4B,CAAC,CAAC;gBAC5C,OAAO,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;gBACvC,OAAO,CAAC,KAAK,CAAC,4CAA4C,CAAC,CAAC;gBAC5D,OAAO,UAAU,CAAC;YACpB,CAAC;YAED,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YAEpB,IAAI,CAAC;gBACH,MAAM,EAAE,eAAe,EAAE,cAAc,EAAE,GAAG,MAAM,MAAM,CAAC,oBAAoB,CAAC,CAAC;gBAE/E,OAAO,CAAC,GAAG,CAAC,oBAAoB,GAAG,KAAK,CAAC,CAAC;gBAC1C,MAAM,WAAW,GAAG,MAAM,eAAe,CAAC,GAAG,CAAC,CAAC;gBAE/C,MAAM,cAAc,CAAC,WAAW,CAAC,CAAC;gBAElC,OAAO,YAAY,CAAC;YACtB,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,OAAO,CAAC,KAAK,CAAC,UAAU,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;gBAClF,OAAO,UAAU,CAAC;YACpB,CAAC;QACH,CAAC;KACF;IACD;QACE,IAAI,EAAE,MAAM;QACZ,WAAW,EAAE,iCAAiC;QAC9C,KAAK,EAAE,+FAA+F;QACtG,OAAO,EAAE,KAAK,EAAE,IAAc,EAAE,EAAE;YAChC,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,MAAM,CAAC,mBAAmB,CAAC,CAAC;YAEvD,MAAM,OAAO,GAMT,EAAE,CAAC;YAEP,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACrC,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBACpB,IAAI,GAAG,KAAK,UAAU,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;oBAC9C,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC7B,CAAC;qBAAM,IAAI,GAAG,KAAK,SAAS,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;oBACpD,MAAM,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;oBACxB,IAAI,KAAK,KAAK,OAAO,IAAI,KAAK,KAAK,MAAM,IAAI,KAAK,KAAK,MAAM,IAAI,KAAK,KAAK,OAAO,EAAE,CAAC;wBACnF,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;oBACxB,CAAC;yBAAM,CAAC;wBACN,OAAO,CAAC,KAAK,CAAC,kBAAkB,KAAK,oCAAoC,CAAC,CAAC;wBAC3E,OAAO,UAAU,CAAC;oBACpB,CAAC;gBACH,CAAC;qBAAM,IAAI,GAAG,KAAK,QAAQ,EAAE,CAAC;oBAC5B,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;gBACtB,CAAC;qBAAM,IAAI,GAAG,KAAK,UAAU,IAAI,GAAG,KAAK,IAAI,EAAE,CAAC;oBAC9C,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;gBACxB,CAAC;qBAAM,IAAI,GAAG,KAAK,SAAS,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;oBACpD,OAAO,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;oBACxC,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC;wBAC/C,OAAO,CAAC,KAAK,CAAC,mDAAmD,CAAC,CAAC;wBACnE,OAAO,UAAU,CAAC;oBACpB,CAAC;gBACH,CAAC;YACH,CAAC;YAED,IAAI,CAAC;gBACH,MAAM,QAAQ,CAAC,OAAO,CAAC,CAAC;gBACxB,OAAO,YAAY,CAAC;YACtB,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,OAAO,CAAC,KAAK,CAAC,UAAU,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;gBAClF,OAAO,UAAU,CAAC;YACpB,CAAC;QACH,CAAC;KACF;CACF,CAAC;AAEF,SAAS,aAAa;IACpB,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;IAC1C,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;IAC/C,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IACzB,KAAK,MAAM,GAAG,IAAI,QAAQ,EAAE,CAAC;QAC3B,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC;IAC7D,CAAC;IACD,OAAO,CAAC,GAAG,CAAC,mEAAmE,CAAC,CAAC;AACnF,CAAC;AAED,SAAS,gBAAgB,CAAC,GAAY;IACpC,OAAO,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,WAAW,IAAI,CAAC,CAAC;IACpC,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;AACrC,CAAC;AAED,KAAK,UAAU,MAAM;IACnB,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAEnC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC;QAClE,aAAa,EAAE,CAAC;QAChB,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC7B,CAAC;IAED,MAAM,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5B,MAAM,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,KAAK,WAAW,CAAC,CAAC;IAEjE,IAAI,CAAC,OAAO,EAAE,CAAC;QACb,MAAM,UAAU,GAAG,qBAAqB,CAAC,IAAI,CAAC,CAAC;QAC/C,MAAM,KAAK,GAAG,WAAW,CAAC,iBAAiB,EAAE,EAAE,OAAO,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE,EAAE,CAAC,CAAC;QAEpF,IAAI,UAAU,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;QAC5C,CAAC;aAAM,CAAC;YACN,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;QAC5C,CAAC;QACD,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC3B,CAAC;IAED,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAElC,IAAI,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC;QACjE,gBAAgB,CAAC,OAAO,CAAC,CAAC;QAC1B,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC7B,CAAC;IAED,IAAI,CAAC;QACH,MAAM,QAAQ,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QACpD,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACzB,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,MAAM,UAAU,GAAG,qBAAqB,CAAC,WAAW,CAAC,CAAC;QAEtD,IAAI,KAAK,YAAY,OAAO,EAAE,CAAC;YAC7B,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QAClE,CAAC;aAAM,CAAC;YACN,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC,KAAc,EAAE,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QAC3E,CAAC;QACD,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC3B,CAAC;AACH,CAAC;AAED,MAAM,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;IACvB,MAAM,UAAU,GAAG,qBAAqB,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAEhE,IAAI,KAAK,YAAY,OAAO,EAAE,CAAC;QAC7B,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;IAClE,CAAC;SAAM,CAAC;QACN,MAAM,UAAU,GAAG,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;QAC7E,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;IACvE,CAAC;IACD,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC"}
\ No newline at end of file
diff --git a/dist/src/mk/dev.d.ts b/dist/src/mk/dev.d.ts
new file mode 100644
index 0000000..e2e1168
--- /dev/null
+++ b/dist/src/mk/dev.d.ts
@@ -0,0 +1,24 @@
+import type { TopologyConfig } from '../config/schema.js';
+import type { Executor } from '../executor/Executor.js';
+export interface DevWatcherOptions {
+    onReload?: (nodeId: string, modulePath: string) => void;
+    verbose?: boolean;
+}
+export declare class DevWatcher {
+    private executor;
+    private topology;
+    private options;
+    private watchers;
+    private modulePathCache;
+    private debounceTimers;
+    private debounceMs;
+    constructor(executor: Executor, topology: TopologyConfig, options?: DevWatcherOptions);
+    start(): void;
+    stop(): void;
+    private watchModule;
+    private handleFileChange;
+    private reloadModule;
+    private resolveModulePath;
+}
+export declare function watchModules(executor: Executor, topology: TopologyConfig, options?: DevWatcherOptions): DevWatcher;
+//# sourceMappingURL=dev.d.ts.map
\ No newline at end of file
diff --git a/dist/src/mk/dev.d.ts.map b/dist/src/mk/dev.d.ts.map
new file mode 100644
index 0000000..e078ba3
--- /dev/null
+++ b/dist/src/mk/dev.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"dev.d.ts","sourceRoot":"","sources":["../../../src/mk/dev.ts"],"names":[],"mappings":"AAEA,OAAO,KAAK,EAAE,cAAc,EAAE,MAAM,qBAAqB,CAAC;AAC1D,OAAO,KAAK,EAAE,QAAQ,EAAE,MAAM,yBAAyB,CAAC;AAExD,MAAM,WAAW,iBAAiB;IAChC,QAAQ,CAAC,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,KAAK,IAAI,CAAC;IACxD,OAAO,CAAC,EAAE,OAAO,CAAC;CACnB;AAED,qBAAa,UAAU;IAOnB,OAAO,CAAC,QAAQ;IAChB,OAAO,CAAC,QAAQ;IAChB,OAAO,CAAC,OAAO;IARjB,OAAO,CAAC,QAAQ,CAAqC;IACrD,OAAO,CAAC,eAAe,CAAkC;IACzD,OAAO,CAAC,cAAc,CAA0C;IAChE,OAAO,CAAC,UAAU,CAAO;gBAGf,QAAQ,EAAE,QAAQ,EAClB,QAAQ,EAAE,cAAc,EACxB,OAAO,GAAE,iBAAsB;IAGzC,KAAK,IAAI,IAAI;IAmCb,IAAI,IAAI,IAAI;IAeZ,OAAO,CAAC,WAAW;IAsBnB,OAAO,CAAC,gBAAgB;YAgBV,YAAY;IAuB1B,OAAO,CAAC,iBAAiB;CAoB1B;AAED,wBAAgB,YAAY,CAC1B,QAAQ,EAAE,QAAQ,EAClB,QAAQ,EAAE,cAAc,EACxB,OAAO,CAAC,EAAE,iBAAiB,GAC1B,UAAU,CAIZ"}
\ No newline at end of file
diff --git a/dist/src/mk/dev.js b/dist/src/mk/dev.js
new file mode 100644
index 0000000..107bbe6
--- /dev/null
+++ b/dist/src/mk/dev.js
@@ -0,0 +1,133 @@
+import { watch } from 'node:fs';
+import { resolve } from 'node:path';
+export class DevWatcher {
+    executor;
+    topology;
+    options;
+    watchers = new Map();
+    modulePathCache = new Map();
+    debounceTimers = new Map();
+    debounceMs = 300;
+    constructor(executor, topology, options = {}) {
+        this.executor = executor;
+        this.topology = topology;
+        this.options = options;
+    }
+    start() {
+        const { verbose } = this.options;
+        if (verbose) {
+            console.log('[mk dev] Starting file watchers...');
+        }
+        for (const node of this.topology.nodes) {
+            // Only watch in-proc modules (not external processes or workers)
+            const runMode = node.runMode || 'inproc';
+            if (runMode !== 'inproc') {
+                if (verbose) {
+                    console.log(`[mk dev] Skipping ${node.id} (runMode: ${runMode})`);
+                }
+                continue;
+            }
+            // Try to resolve module path
+            const modulePath = this.resolveModulePath(node.module);
+            if (!modulePath) {
+                if (verbose) {
+                    console.log(`[mk dev] Could not resolve module path for ${node.module}`);
+                }
+                continue;
+            }
+            this.modulePathCache.set(node.id, modulePath);
+            this.watchModule(node.id, modulePath);
+        }
+        if (verbose) {
+            console.log(`[mk dev] Watching ${this.watchers.size} module(s) for changes`);
+        }
+    }
+    stop() {
+        for (const [nodeId, watcher] of this.watchers.entries()) {
+            watcher.close();
+            if (this.options.verbose) {
+                console.log(`[mk dev] Stopped watching ${nodeId}`);
+            }
+        }
+        this.watchers.clear();
+        for (const timer of this.debounceTimers.values()) {
+            clearTimeout(timer);
+        }
+        this.debounceTimers.clear();
+    }
+    watchModule(nodeId, modulePath) {
+        try {
+            const watcher = watch(modulePath, (eventType, filename) => {
+                if (eventType === 'change') {
+                    this.handleFileChange(nodeId, modulePath);
+                }
+            });
+            watcher.on('error', (error) => {
+                console.error(`[mk dev] Watcher error for ${nodeId}:`, error.message);
+            });
+            this.watchers.set(nodeId, watcher);
+            if (this.options.verbose) {
+                console.log(`[mk dev] Watching ${modulePath} for node ${nodeId}`);
+            }
+        }
+        catch (error) {
+            console.error(`[mk dev] Failed to watch ${modulePath}:`, error instanceof Error ? error.message : String(error));
+        }
+    }
+    handleFileChange(nodeId, modulePath) {
+        // Clear existing debounce timer
+        const existingTimer = this.debounceTimers.get(nodeId);
+        if (existingTimer) {
+            clearTimeout(existingTimer);
+        }
+        // Set new debounce timer
+        const timer = setTimeout(() => {
+            this.reloadModule(nodeId, modulePath);
+            this.debounceTimers.delete(nodeId);
+        }, this.debounceMs);
+        this.debounceTimers.set(nodeId, timer);
+    }
+    async reloadModule(nodeId, modulePath) {
+        console.log(`\n[mk dev] Module ${nodeId} changed, reloading...`);
+        try {
+            // Clear Node.js module cache for the module
+            const absolutePath = resolve(modulePath);
+            if (require.cache[absolutePath]) {
+                delete require.cache[absolutePath];
+            }
+            // Restart the node via Executor
+            await this.executor.restartNode(nodeId);
+            console.log(`[mk dev] âœ“ Module ${nodeId} reloaded successfully`);
+            if (this.options.onReload) {
+                this.options.onReload(nodeId, modulePath);
+            }
+        }
+        catch (error) {
+            console.error(`[mk dev] âœ— Failed to reload ${nodeId}:`, error instanceof Error ? error.message : String(error));
+        }
+    }
+    resolveModulePath(moduleName) {
+        // Map of known module names to their paths
+        const moduleMap = {
+            'TimerSource': './src/modules/timer.ts',
+            'UppercaseTransform': './src/modules/uppercase.ts',
+            'ConsoleSink': './src/modules/consoleSink.ts',
+            'FilesystemSink': './src/modules/filesystem-sink.ts',
+            'PipeMeterTransform': './src/transforms/pipeMeter.ts',
+            'RateLimiterTransform': './src/transforms/rateLimiter.ts',
+            'TeeTransform': './src/transforms/tee.ts',
+        };
+        const relativePath = moduleMap[moduleName];
+        if (!relativePath) {
+            return null;
+        }
+        // Resolve relative to project root
+        return resolve(process.cwd(), relativePath);
+    }
+}
+export function watchModules(executor, topology, options) {
+    const watcher = new DevWatcher(executor, topology, options);
+    watcher.start();
+    return watcher;
+}
+//# sourceMappingURL=dev.js.map
\ No newline at end of file
diff --git a/dist/src/mk/dev.js.map b/dist/src/mk/dev.js.map
new file mode 100644
index 0000000..f9fdf0b
--- /dev/null
+++ b/dist/src/mk/dev.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"dev.js","sourceRoot":"","sources":["../../../src/mk/dev.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAa,MAAM,SAAS,CAAC;AAC3C,OAAO,EAAE,OAAO,EAAW,MAAM,WAAW,CAAC;AAS7C,MAAM,OAAO,UAAU;IAOX;IACA;IACA;IARF,QAAQ,GAA2B,IAAI,GAAG,EAAE,CAAC;IAC7C,eAAe,GAAwB,IAAI,GAAG,EAAE,CAAC;IACjD,cAAc,GAAgC,IAAI,GAAG,EAAE,CAAC;IACxD,UAAU,GAAG,GAAG,CAAC;IAEzB,YACU,QAAkB,EAClB,QAAwB,EACxB,UAA6B,EAAE;QAF/B,aAAQ,GAAR,QAAQ,CAAU;QAClB,aAAQ,GAAR,QAAQ,CAAgB;QACxB,YAAO,GAAP,OAAO,CAAwB;IACtC,CAAC;IAEJ,KAAK;QACH,MAAM,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;QAEjC,IAAI,OAAO,EAAE,CAAC;YACZ,OAAO,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC;QACpD,CAAC;QAED,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;YACvC,iEAAiE;YACjE,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,QAAQ,CAAC;YACzC,IAAI,OAAO,KAAK,QAAQ,EAAE,CAAC;gBACzB,IAAI,OAAO,EAAE,CAAC;oBACZ,OAAO,CAAC,GAAG,CAAC,qBAAqB,IAAI,CAAC,EAAE,cAAc,OAAO,GAAG,CAAC,CAAC;gBACpE,CAAC;gBACD,SAAS;YACX,CAAC;YAED,6BAA6B;YAC7B,MAAM,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACvD,IAAI,CAAC,UAAU,EAAE,CAAC;gBAChB,IAAI,OAAO,EAAE,CAAC;oBACZ,OAAO,CAAC,GAAG,CAAC,8CAA8C,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;gBAC3E,CAAC;gBACD,SAAS;YACX,CAAC;YAED,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC;YAC9C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC;QACxC,CAAC;QAED,IAAI,OAAO,EAAE,CAAC;YACZ,OAAO,CAAC,GAAG,CAAC,qBAAqB,IAAI,CAAC,QAAQ,CAAC,IAAI,wBAAwB,CAAC,CAAC;QAC/E,CAAC;IACH,CAAC;IAED,IAAI;QACF,KAAK,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAE,CAAC;YACxD,OAAO,CAAC,KAAK,EAAE,CAAC;YAChB,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;gBACzB,OAAO,CAAC,GAAG,CAAC,6BAA6B,MAAM,EAAE,CAAC,CAAC;YACrD,CAAC;QACH,CAAC;QACD,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;QAEtB,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,EAAE,CAAC;YACjD,YAAY,CAAC,KAAK,CAAC,CAAC;QACtB,CAAC;QACD,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;IAC9B,CAAC;IAEO,WAAW,CAAC,MAAc,EAAE,UAAkB;QACpD,IAAI,CAAC;YACH,MAAM,OAAO,GAAG,KAAK,CAAC,UAAU,EAAE,CAAC,SAAS,EAAE,QAAQ,EAAE,EAAE;gBACxD,IAAI,SAAS,KAAK,QAAQ,EAAE,CAAC;oBAC3B,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;gBAC5C,CAAC;YACH,CAAC,CAAC,CAAC;YAEH,OAAO,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE;gBAC5B,OAAO,CAAC,KAAK,CAAC,8BAA8B,MAAM,GAAG,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;YACxE,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;YAEnC,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;gBACzB,OAAO,CAAC,GAAG,CAAC,qBAAqB,UAAU,aAAa,MAAM,EAAE,CAAC,CAAC;YACpE,CAAC;QACH,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,4BAA4B,UAAU,GAAG,EAAE,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;QACnH,CAAC;IACH,CAAC;IAEO,gBAAgB,CAAC,MAAc,EAAE,UAAkB;QACzD,gCAAgC;QAChC,MAAM,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACtD,IAAI,aAAa,EAAE,CAAC;YAClB,YAAY,CAAC,aAAa,CAAC,CAAC;QAC9B,CAAC;QAED,yBAAyB;QACzB,MAAM,KAAK,GAAG,UAAU,CAAC,GAAG,EAAE;YAC5B,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;YACtC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACrC,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QAEpB,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IACzC,CAAC;IAEO,KAAK,CAAC,YAAY,CAAC,MAAc,EAAE,UAAkB;QAC3D,OAAO,CAAC,GAAG,CAAC,qBAAqB,MAAM,wBAAwB,CAAC,CAAC;QAEjE,IAAI,CAAC;YACH,4CAA4C;YAC5C,MAAM,YAAY,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;YACzC,IAAI,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE,CAAC;gBAChC,OAAO,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;YACrC,CAAC;YAED,gCAAgC;YAChC,MAAM,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YAExC,OAAO,CAAC,GAAG,CAAC,qBAAqB,MAAM,wBAAwB,CAAC,CAAC;YAEjE,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;gBAC1B,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;YAC5C,CAAC;QACH,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,+BAA+B,MAAM,GAAG,EAAE,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;QAClH,CAAC;IACH,CAAC;IAEO,iBAAiB,CAAC,UAAkB;QAC1C,2CAA2C;QAC3C,MAAM,SAAS,GAA2B;YACxC,aAAa,EAAE,wBAAwB;YACvC,oBAAoB,EAAE,4BAA4B;YAClD,aAAa,EAAE,8BAA8B;YAC7C,gBAAgB,EAAE,kCAAkC;YACpD,oBAAoB,EAAE,+BAA+B;YACrD,sBAAsB,EAAE,iCAAiC;YACzD,cAAc,EAAE,yBAAyB;SAC1C,CAAC;QAEF,MAAM,YAAY,GAAG,SAAS,CAAC,UAAU,CAAC,CAAC;QAC3C,IAAI,CAAC,YAAY,EAAE,CAAC;YAClB,OAAO,IAAI,CAAC;QACd,CAAC;QAED,mCAAmC;QACnC,OAAO,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,YAAY,CAAC,CAAC;IAC9C,CAAC;CACF;AAED,MAAM,UAAU,YAAY,CAC1B,QAAkB,EAClB,QAAwB,EACxB,OAA2B;IAE3B,MAAM,OAAO,GAAG,IAAI,UAAU,CAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;IAC5D,OAAO,CAAC,KAAK,EAAE,CAAC;IAChB,OAAO,OAAO,CAAC;AACjB,CAAC"}
\ No newline at end of file
diff --git a/dist/src/mk/logs.d.ts b/dist/src/mk/logs.d.ts
new file mode 100644
index 0000000..2e6d0d2
--- /dev/null
+++ b/dist/src/mk/logs.d.ts
@@ -0,0 +1,17 @@
+export type LogLevel = 'error' | 'warn' | 'info' | 'debug';
+export interface LogsOptions {
+    module?: string;
+    level?: LogLevel;
+    json?: boolean;
+    follow?: boolean;
+    lines?: number;
+}
+export interface LogEntry {
+    timestamp: string;
+    level: LogLevel;
+    module: string;
+    event: string;
+    payload?: unknown;
+}
+export declare function tailLogs(options: LogsOptions): Promise<void>;
+//# sourceMappingURL=logs.d.ts.map
\ No newline at end of file
diff --git a/dist/src/mk/logs.d.ts.map b/dist/src/mk/logs.d.ts.map
new file mode 100644
index 0000000..0dcf054
--- /dev/null
+++ b/dist/src/mk/logs.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"logs.d.ts","sourceRoot":"","sources":["../../../src/mk/logs.ts"],"names":[],"mappings":"AAIA,MAAM,MAAM,QAAQ,GAAG,OAAO,GAAG,MAAM,GAAG,MAAM,GAAG,OAAO,CAAC;AAE3D,MAAM,WAAW,WAAW;IAC1B,MAAM,CAAC,EAAE,MAAM,CAAC;IAChB,KAAK,CAAC,EAAE,QAAQ,CAAC;IACjB,IAAI,CAAC,EAAE,OAAO,CAAC;IACf,MAAM,CAAC,EAAE,OAAO,CAAC;IACjB,KAAK,CAAC,EAAE,MAAM,CAAC;CAChB;AAED,MAAM,WAAW,QAAQ;IACvB,SAAS,EAAE,MAAM,CAAC;IAClB,KAAK,EAAE,QAAQ,CAAC;IAChB,MAAM,EAAE,MAAM,CAAC;IACf,KAAK,EAAE,MAAM,CAAC;IACd,OAAO,CAAC,EAAE,OAAO,CAAC;CACnB;AAkMD,wBAAsB,QAAQ,CAAC,OAAO,EAAE,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC,CAwClE"}
\ No newline at end of file
diff --git a/dist/src/mk/logs.js b/dist/src/mk/logs.js
new file mode 100644
index 0000000..39636fc
--- /dev/null
+++ b/dist/src/mk/logs.js
@@ -0,0 +1,202 @@
+import * as fs from 'fs';
+import * as path from 'path';
+import { createInterface } from 'readline';
+const LEVEL_VALUES = {
+    error: 0,
+    warn: 1,
+    info: 2,
+    debug: 3,
+};
+function parseDebugLog(line) {
+    try {
+        const timestampMatch = line.match(/^\[([\d-T:.Z]+)\]/);
+        const levelMatch = line.match(/\[([A-Z]+)\]/);
+        const moduleMatch = line.match(/\[([a-z-]+)\]/);
+        const eventMatch = line.match(/\]\s+([^:]+)(?::(.*))?$/);
+        if (timestampMatch && levelMatch && moduleMatch) {
+            const level = levelMatch[1].toLowerCase();
+            const event = eventMatch ? eventMatch[1].trim() : 'unknown';
+            const payloadStr = eventMatch && eventMatch[2] ? eventMatch[2].trim() : undefined;
+            let payload = undefined;
+            if (payloadStr) {
+                try {
+                    payload = JSON.parse(payloadStr);
+                }
+                catch {
+                    payload = payloadStr;
+                }
+            }
+            return {
+                timestamp: timestampMatch[1],
+                level,
+                module: moduleMatch[1],
+                event,
+                payload,
+            };
+        }
+    }
+    catch (e) {
+        return null;
+    }
+    return null;
+}
+function parseJsonlLog(line) {
+    try {
+        const data = JSON.parse(line);
+        if (data.evt && data.evt.startsWith('debug.')) {
+            const parts = data.evt.split('.');
+            const module = parts[1] || 'unknown';
+            const event = parts.slice(2).join('.') || 'unknown';
+            return {
+                timestamp: data.ts ? new Date(data.ts).toISOString() : new Date().toISOString(),
+                level: data.lvl || 'info',
+                module,
+                event,
+                payload: data.payload,
+            };
+        }
+    }
+    catch (e) {
+        return null;
+    }
+    return null;
+}
+function shouldIncludeLog(entry, options) {
+    if (options.module && entry.module !== options.module) {
+        return false;
+    }
+    if (options.level) {
+        const entryLevel = LEVEL_VALUES[entry.level];
+        const filterLevel = LEVEL_VALUES[options.level];
+        if (entryLevel > filterLevel) {
+            return false;
+        }
+    }
+    return true;
+}
+function formatLogHuman(entry) {
+    const timestamp = new Date(entry.timestamp).toISOString();
+    const levelStr = entry.level.toUpperCase().padEnd(5);
+    const moduleStr = entry.module.padEnd(15);
+    const payload = entry.payload ? ` ${JSON.stringify(entry.payload)}` : '';
+    return `[${timestamp}] ${levelStr} [${moduleStr}] ${entry.event}${payload}`;
+}
+function formatLogJson(entry) {
+    return JSON.stringify(entry);
+}
+async function tailDebugLogs(options) {
+    const debugLog = process.env.DEBUG === '1' || process.env.MK_DEBUG_MODULES;
+    if (!debugLog) {
+        console.error('Debug logging is not enabled. Set DEBUG=1 or MK_DEBUG_MODULES to enable.');
+        return;
+    }
+    console.error('Reading from console output (DEBUG mode)...');
+    console.error('This command works best with pre-captured logs or JSONL files.');
+    console.error('Use: DEBUG=1 mk run <topology> 2>&1 | mk logs [options]');
+}
+async function tailJsonlLogs(logPath, options) {
+    if (!fs.existsSync(logPath)) {
+        throw new Error(`Log file not found: ${logPath}`);
+    }
+    const stream = fs.createReadStream(logPath);
+    const rl = createInterface({
+        input: stream,
+        crlfDelay: Infinity,
+    });
+    const entries = [];
+    for await (const line of rl) {
+        const entry = parseJsonlLog(line);
+        if (entry && shouldIncludeLog(entry, options)) {
+            entries.push(entry);
+        }
+    }
+    const linesToShow = options.lines || 50;
+    const toDisplay = entries.slice(-linesToShow);
+    for (const entry of toDisplay) {
+        const formatted = options.json ? formatLogJson(entry) : formatLogHuman(entry);
+        console.log(formatted);
+    }
+}
+async function followJsonlLogs(logPath, options) {
+    if (!fs.existsSync(logPath)) {
+        throw new Error(`Log file not found: ${logPath}`);
+    }
+    let position = 0;
+    const fileStats = fs.statSync(logPath);
+    position = Math.max(0, fileStats.size);
+    console.error(`Following logs from: ${logPath}`);
+    console.error('Press Ctrl+C to stop...\n');
+    const checkForChanges = () => {
+        const currentStats = fs.statSync(logPath);
+        if (currentStats.size > position) {
+            const stream = fs.createReadStream(logPath, {
+                start: position,
+                encoding: 'utf8',
+            });
+            let buffer = '';
+            stream.on('data', (chunk) => {
+                buffer += chunk;
+                const lines = buffer.split('\n');
+                buffer = lines.pop() || '';
+                for (const line of lines) {
+                    if (line.trim()) {
+                        const entry = parseJsonlLog(line);
+                        if (entry && shouldIncludeLog(entry, options)) {
+                            const formatted = options.json ? formatLogJson(entry) : formatLogHuman(entry);
+                            console.log(formatted);
+                        }
+                    }
+                }
+            });
+            stream.on('end', () => {
+                position = currentStats.size;
+            });
+        }
+    };
+    const interval = setInterval(checkForChanges, 500);
+    process.on('SIGINT', () => {
+        clearInterval(interval);
+        console.error('\nStopped following logs.');
+        process.exit(0);
+    });
+    process.on('SIGTERM', () => {
+        clearInterval(interval);
+        process.exit(0);
+    });
+}
+export async function tailLogs(options) {
+    const reportsDir = path.join(process.cwd(), 'reports');
+    if (!fs.existsSync(reportsDir)) {
+        await tailDebugLogs(options);
+        return;
+    }
+    const suites = fs.readdirSync(reportsDir).filter(f => {
+        const stat = fs.statSync(path.join(reportsDir, f));
+        return stat.isDirectory();
+    });
+    if (suites.length === 0) {
+        await tailDebugLogs(options);
+        return;
+    }
+    const suite = suites[0];
+    const suiteDir = path.join(reportsDir, suite);
+    const logFiles = fs.readdirSync(suiteDir).filter(f => f.endsWith('.jsonl'));
+    if (logFiles.length === 0) {
+        await tailDebugLogs(options);
+        return;
+    }
+    const latestLog = logFiles
+        .map(f => ({
+        name: f,
+        path: path.join(suiteDir, f),
+        mtime: fs.statSync(path.join(suiteDir, f)).mtime,
+    }))
+        .sort((a, b) => b.mtime.getTime() - a.mtime.getTime())[0];
+    if (options.follow) {
+        await followJsonlLogs(latestLog.path, options);
+    }
+    else {
+        await tailJsonlLogs(latestLog.path, options);
+    }
+}
+//# sourceMappingURL=logs.js.map
\ No newline at end of file
diff --git a/dist/src/mk/logs.js.map b/dist/src/mk/logs.js.map
new file mode 100644
index 0000000..721bc94
--- /dev/null
+++ b/dist/src/mk/logs.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"logs.js","sourceRoot":"","sources":["../../../src/mk/logs.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,MAAM,IAAI,CAAC;AACzB,OAAO,KAAK,IAAI,MAAM,MAAM,CAAC;AAC7B,OAAO,EAAE,eAAe,EAAE,MAAM,UAAU,CAAC;AAoB3C,MAAM,YAAY,GAA6B;IAC7C,KAAK,EAAE,CAAC;IACR,IAAI,EAAE,CAAC;IACP,IAAI,EAAE,CAAC;IACP,KAAK,EAAE,CAAC;CACT,CAAC;AAEF,SAAS,aAAa,CAAC,IAAY;IACjC,IAAI,CAAC;QACH,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;QACvD,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;QAC9C,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;QAChD,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;QAEzD,IAAI,cAAc,IAAI,UAAU,IAAI,WAAW,EAAE,CAAC;YAChD,MAAM,KAAK,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,EAAc,CAAC;YACtD,MAAM,KAAK,GAAG,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;YAC5D,MAAM,UAAU,GAAG,UAAU,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;YAClF,IAAI,OAAO,GAAY,SAAS,CAAC;YAEjC,IAAI,UAAU,EAAE,CAAC;gBACf,IAAI,CAAC;oBACH,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;gBACnC,CAAC;gBAAC,MAAM,CAAC;oBACP,OAAO,GAAG,UAAU,CAAC;gBACvB,CAAC;YACH,CAAC;YAED,OAAO;gBACL,SAAS,EAAE,cAAc,CAAC,CAAC,CAAC;gBAC5B,KAAK;gBACL,MAAM,EAAE,WAAW,CAAC,CAAC,CAAC;gBACtB,KAAK;gBACL,OAAO;aACR,CAAC;QACJ,CAAC;IACH,CAAC;IAAC,OAAO,CAAC,EAAE,CAAC;QACX,OAAO,IAAI,CAAC;IACd,CAAC;IACD,OAAO,IAAI,CAAC;AACd,CAAC;AAED,SAAS,aAAa,CAAC,IAAY;IACjC,IAAI,CAAC;QACH,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAE9B,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC;YAC9C,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAClC,MAAM,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC;YACrC,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,SAAS,CAAC;YAEpD,OAAO;gBACL,SAAS,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;gBAC/E,KAAK,EAAG,IAAI,CAAC,GAAgB,IAAI,MAAM;gBACvC,MAAM;gBACN,KAAK;gBACL,OAAO,EAAE,IAAI,CAAC,OAAO;aACtB,CAAC;QACJ,CAAC;IACH,CAAC;IAAC,OAAO,CAAC,EAAE,CAAC;QACX,OAAO,IAAI,CAAC;IACd,CAAC;IACD,OAAO,IAAI,CAAC;AACd,CAAC;AAED,SAAS,gBAAgB,CAAC,KAAe,EAAE,OAAoB;IAC7D,IAAI,OAAO,CAAC,MAAM,IAAI,KAAK,CAAC,MAAM,KAAK,OAAO,CAAC,MAAM,EAAE,CAAC;QACtD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,IAAI,OAAO,CAAC,KAAK,EAAE,CAAC;QAClB,MAAM,UAAU,GAAG,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC7C,MAAM,WAAW,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAChD,IAAI,UAAU,GAAG,WAAW,EAAE,CAAC;YAC7B,OAAO,KAAK,CAAC;QACf,CAAC;IACH,CAAC;IAED,OAAO,IAAI,CAAC;AACd,CAAC;AAED,SAAS,cAAc,CAAC,KAAe;IACrC,MAAM,SAAS,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,WAAW,EAAE,CAAC;IAC1D,MAAM,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACrD,MAAM,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IAC1C,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;IACzE,OAAO,IAAI,SAAS,KAAK,QAAQ,KAAK,SAAS,KAAK,KAAK,CAAC,KAAK,GAAG,OAAO,EAAE,CAAC;AAC9E,CAAC;AAED,SAAS,aAAa,CAAC,KAAe;IACpC,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AAC/B,CAAC;AAED,KAAK,UAAU,aAAa,CAAC,OAAoB;IAC/C,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,KAAK,GAAG,IAAI,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;IAE3E,IAAI,CAAC,QAAQ,EAAE,CAAC;QACd,OAAO,CAAC,KAAK,CAAC,0EAA0E,CAAC,CAAC;QAC1F,OAAO;IACT,CAAC;IAED,OAAO,CAAC,KAAK,CAAC,6CAA6C,CAAC,CAAC;IAC7D,OAAO,CAAC,KAAK,CAAC,gEAAgE,CAAC,CAAC;IAChF,OAAO,CAAC,KAAK,CAAC,yDAAyD,CAAC,CAAC;AAC3E,CAAC;AAED,KAAK,UAAU,aAAa,CAAC,OAAe,EAAE,OAAoB;IAChE,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC;QAC5B,MAAM,IAAI,KAAK,CAAC,uBAAuB,OAAO,EAAE,CAAC,CAAC;IACpD,CAAC;IAED,MAAM,MAAM,GAAG,EAAE,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;IAC5C,MAAM,EAAE,GAAG,eAAe,CAAC;QACzB,KAAK,EAAE,MAAM;QACb,SAAS,EAAE,QAAQ;KACpB,CAAC,CAAC;IAEH,MAAM,OAAO,GAAe,EAAE,CAAC;IAE/B,IAAI,KAAK,EAAE,MAAM,IAAI,IAAI,EAAE,EAAE,CAAC;QAC5B,MAAM,KAAK,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC;QAClC,IAAI,KAAK,IAAI,gBAAgB,CAAC,KAAK,EAAE,OAAO,CAAC,EAAE,CAAC;YAC9C,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACtB,CAAC;IACH,CAAC;IAED,MAAM,WAAW,GAAG,OAAO,CAAC,KAAK,IAAI,EAAE,CAAC;IACxC,MAAM,SAAS,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,CAAC;IAE9C,KAAK,MAAM,KAAK,IAAI,SAAS,EAAE,CAAC;QAC9B,MAAM,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QAC9E,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IACzB,CAAC;AACH,CAAC;AAED,KAAK,UAAU,eAAe,CAAC,OAAe,EAAE,OAAoB;IAClE,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC;QAC5B,MAAM,IAAI,KAAK,CAAC,uBAAuB,OAAO,EAAE,CAAC,CAAC;IACpD,CAAC;IAED,IAAI,QAAQ,GAAG,CAAC,CAAC;IACjB,MAAM,SAAS,GAAG,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IACvC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC;IAEvC,OAAO,CAAC,KAAK,CAAC,wBAAwB,OAAO,EAAE,CAAC,CAAC;IACjD,OAAO,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAC;IAE3C,MAAM,eAAe,GAAG,GAAG,EAAE;QAC3B,MAAM,YAAY,GAAG,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAC1C,IAAI,YAAY,CAAC,IAAI,GAAG,QAAQ,EAAE,CAAC;YACjC,MAAM,MAAM,GAAG,EAAE,CAAC,gBAAgB,CAAC,OAAO,EAAE;gBAC1C,KAAK,EAAE,QAAQ;gBACf,QAAQ,EAAE,MAAM;aACjB,CAAC,CAAC;YAEH,IAAI,MAAM,GAAG,EAAE,CAAC;YAChB,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,EAAE;gBAC1B,MAAM,IAAI,KAAK,CAAC;gBAChB,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBACjC,MAAM,GAAG,KAAK,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC;gBAE3B,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE,CAAC;oBACzB,IAAI,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC;wBAChB,MAAM,KAAK,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC;wBAClC,IAAI,KAAK,IAAI,gBAAgB,CAAC,KAAK,EAAE,OAAO,CAAC,EAAE,CAAC;4BAC9C,MAAM,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;4BAC9E,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;wBACzB,CAAC;oBACH,CAAC;gBACH,CAAC;YACH,CAAC,CAAC,CAAC;YAEH,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE;gBACpB,QAAQ,GAAG,YAAY,CAAC,IAAI,CAAC;YAC/B,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC,CAAC;IAEF,MAAM,QAAQ,GAAG,WAAW,CAAC,eAAe,EAAE,GAAG,CAAC,CAAC;IAEnD,OAAO,CAAC,EAAE,CAAC,QAAQ,EAAE,GAAG,EAAE;QACxB,aAAa,CAAC,QAAQ,CAAC,CAAC;QACxB,OAAO,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAC;QAC3C,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,CAAC;IAEH,OAAO,CAAC,EAAE,CAAC,SAAS,EAAE,GAAG,EAAE;QACzB,aAAa,CAAC,QAAQ,CAAC,CAAC;QACxB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,CAAC;AACL,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,QAAQ,CAAC,OAAoB;IACjD,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,SAAS,CAAC,CAAC;IAEvD,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,CAAC;QAC/B,MAAM,aAAa,CAAC,OAAO,CAAC,CAAC;QAC7B,OAAO;IACT,CAAC;IAED,MAAM,MAAM,GAAG,EAAE,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;QACnD,MAAM,IAAI,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC;QACnD,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC;IAC5B,CAAC,CAAC,CAAC;IAEH,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;QACxB,MAAM,aAAa,CAAC,OAAO,CAAC,CAAC;QAC7B,OAAO;IACT,CAAC;IAED,MAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IACxB,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;IAC9C,MAAM,QAAQ,GAAG,EAAE,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;IAE5E,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;QAC1B,MAAM,aAAa,CAAC,OAAO,CAAC,CAAC;QAC7B,OAAO;IACT,CAAC;IAED,MAAM,SAAS,GAAG,QAAQ;SACvB,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QACT,IAAI,EAAE,CAAC;QACP,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC5B,KAAK,EAAE,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK;KACjD,CAAC,CAAC;SACF,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAE5D,IAAI,OAAO,CAAC,MAAM,EAAE,CAAC;QACnB,MAAM,eAAe,CAAC,SAAS,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IACjD,CAAC;SAAM,CAAC;QACN,MAAM,aAAa,CAAC,SAAS,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IAC/C,CAAC;AACH,CAAC"}
\ No newline at end of file
diff --git a/patches/DIFF_T9302_mk-logs.patch b/patches/DIFF_T9302_mk-logs.patch
new file mode 100644
index 0000000..8ad68d9
--- /dev/null
+++ b/patches/DIFF_T9302_mk-logs.patch
@@ -0,0 +1,712 @@
+diff --git a/src/mk/logs.ts b/src/mk/logs.ts
+new file mode 100644
+index 0000000..9d20ca9
+--- /dev/null
++++ b/src/mk/logs.ts
+@@ -0,0 +1,255 @@
++import * as fs from 'fs';
++import * as path from 'path';
++import { createInterface } from 'readline';
++
++export type LogLevel = 'error' | 'warn' | 'info' | 'debug';
++
++export interface LogsOptions {
++  module?: string;
++  level?: LogLevel;
++  json?: boolean;
++  follow?: boolean;
++  lines?: number;
++}
++
++export interface LogEntry {
++  timestamp: string;
++  level: LogLevel;
++  module: string;
++  event: string;
++  payload?: unknown;
++}
++
++const LEVEL_VALUES: Record<LogLevel, number> = {
++  error: 0,
++  warn: 1,
++  info: 2,
++  debug: 3,
++};
++
++function parseDebugLog(line: string): LogEntry | null {
++  try {
++    const timestampMatch = line.match(/^\[([\d-T:.Z]+)\]/);
++    const levelMatch = line.match(/\[([A-Z]+)\]/);
++    const moduleMatch = line.match(/\[([a-z-]+)\]/);
++    const eventMatch = line.match(/\]\s+([^:]+)(?::(.*))?$/);
++
++    if (timestampMatch && levelMatch && moduleMatch) {
++      const level = levelMatch[1].toLowerCase() as LogLevel;
++      const event = eventMatch ? eventMatch[1].trim() : 'unknown';
++      const payloadStr = eventMatch && eventMatch[2] ? eventMatch[2].trim() : undefined;
++      let payload: unknown = undefined;
++
++      if (payloadStr) {
++        try {
++          payload = JSON.parse(payloadStr);
++        } catch {
++          payload = payloadStr;
++        }
++      }
++
++      return {
++        timestamp: timestampMatch[1],
++        level,
++        module: moduleMatch[1],
++        event,
++        payload,
++      };
++    }
++  } catch (e) {
++    return null;
++  }
++  return null;
++}
++
++function parseJsonlLog(line: string): LogEntry | null {
++  try {
++    const data = JSON.parse(line);
++    
++    if (data.evt && data.evt.startsWith('debug.')) {
++      const parts = data.evt.split('.');
++      const module = parts[1] || 'unknown';
++      const event = parts.slice(2).join('.') || 'unknown';
++      
++      return {
++        timestamp: data.ts ? new Date(data.ts).toISOString() : new Date().toISOString(),
++        level: (data.lvl as LogLevel) || 'info',
++        module,
++        event,
++        payload: data.payload,
++      };
++    }
++  } catch (e) {
++    return null;
++  }
++  return null;
++}
++
++function shouldIncludeLog(entry: LogEntry, options: LogsOptions): boolean {
++  if (options.module && entry.module !== options.module) {
++    return false;
++  }
++
++  if (options.level) {
++    const entryLevel = LEVEL_VALUES[entry.level];
++    const filterLevel = LEVEL_VALUES[options.level];
++    if (entryLevel > filterLevel) {
++      return false;
++    }
++  }
++
++  return true;
++}
++
++function formatLogHuman(entry: LogEntry): string {
++  const timestamp = new Date(entry.timestamp).toISOString();
++  const levelStr = entry.level.toUpperCase().padEnd(5);
++  const moduleStr = entry.module.padEnd(15);
++  const payload = entry.payload ? ` ${JSON.stringify(entry.payload)}` : '';
++  return `[${timestamp}] ${levelStr} [${moduleStr}] ${entry.event}${payload}`;
++}
++
++function formatLogJson(entry: LogEntry): string {
++  return JSON.stringify(entry);
++}
++
++async function tailDebugLogs(options: LogsOptions): Promise<void> {
++  const debugLog = process.env.DEBUG === '1' || process.env.MK_DEBUG_MODULES;
++  
++  if (!debugLog) {
++    console.error('Debug logging is not enabled. Set DEBUG=1 or MK_DEBUG_MODULES to enable.');
++    return;
++  }
++
++  console.error('Reading from console output (DEBUG mode)...');
++  console.error('This command works best with pre-captured logs or JSONL files.');
++  console.error('Use: DEBUG=1 mk run <topology> 2>&1 | mk logs [options]');
++}
++
++async function tailJsonlLogs(logPath: string, options: LogsOptions): Promise<void> {
++  if (!fs.existsSync(logPath)) {
++    throw new Error(`Log file not found: ${logPath}`);
++  }
++
++  const stream = fs.createReadStream(logPath);
++  const rl = createInterface({
++    input: stream,
++    crlfDelay: Infinity,
++  });
++
++  const entries: LogEntry[] = [];
++
++  for await (const line of rl) {
++    const entry = parseJsonlLog(line);
++    if (entry && shouldIncludeLog(entry, options)) {
++      entries.push(entry);
++    }
++  }
++
++  const linesToShow = options.lines || 50;
++  const toDisplay = entries.slice(-linesToShow);
++
++  for (const entry of toDisplay) {
++    const formatted = options.json ? formatLogJson(entry) : formatLogHuman(entry);
++    console.log(formatted);
++  }
++}
++
++async function followJsonlLogs(logPath: string, options: LogsOptions): Promise<void> {
++  if (!fs.existsSync(logPath)) {
++    throw new Error(`Log file not found: ${logPath}`);
++  }
++
++  let position = 0;
++  const fileStats = fs.statSync(logPath);
++  position = Math.max(0, fileStats.size);
++
++  console.error(`Following logs from: ${logPath}`);
++  console.error('Press Ctrl+C to stop...\n');
++
++  const checkForChanges = () => {
++    const currentStats = fs.statSync(logPath);
++    if (currentStats.size > position) {
++      const stream = fs.createReadStream(logPath, {
++        start: position,
++        encoding: 'utf8',
++      });
++
++      let buffer = '';
++      stream.on('data', (chunk) => {
++        buffer += chunk;
++        const lines = buffer.split('\n');
++        buffer = lines.pop() || '';
++
++        for (const line of lines) {
++          if (line.trim()) {
++            const entry = parseJsonlLog(line);
++            if (entry && shouldIncludeLog(entry, options)) {
++              const formatted = options.json ? formatLogJson(entry) : formatLogHuman(entry);
++              console.log(formatted);
++            }
++          }
++        }
++      });
++
++      stream.on('end', () => {
++        position = currentStats.size;
++      });
++    }
++  };
++
++  const interval = setInterval(checkForChanges, 500);
++
++  process.on('SIGINT', () => {
++    clearInterval(interval);
++    console.error('\nStopped following logs.');
++    process.exit(0);
++  });
++
++  process.on('SIGTERM', () => {
++    clearInterval(interval);
++    process.exit(0);
++  });
++}
++
++export async function tailLogs(options: LogsOptions): Promise<void> {
++  const reportsDir = path.join(process.cwd(), 'reports');
++  
++  if (!fs.existsSync(reportsDir)) {
++    await tailDebugLogs(options);
++    return;
++  }
++
++  const suites = fs.readdirSync(reportsDir).filter(f => {
++    const stat = fs.statSync(path.join(reportsDir, f));
++    return stat.isDirectory();
++  });
++
++  if (suites.length === 0) {
++    await tailDebugLogs(options);
++    return;
++  }
++
++  const suite = suites[0];
++  const suiteDir = path.join(reportsDir, suite);
++  const logFiles = fs.readdirSync(suiteDir).filter(f => f.endsWith('.jsonl'));
++
++  if (logFiles.length === 0) {
++    await tailDebugLogs(options);
++    return;
++  }
++
++  const latestLog = logFiles
++    .map(f => ({
++      name: f,
++      path: path.join(suiteDir, f),
++      mtime: fs.statSync(path.join(suiteDir, f)).mtime,
++    }))
++    .sort((a, b) => b.mtime.getTime() - a.mtime.getTime())[0];
++
++  if (options.follow) {
++    await followJsonlLogs(latestLog.path, options);
++  } else {
++    await tailJsonlLogs(latestLog.path, options);
++  }
++}
+diff --git a/tests/cli/mkLogs.spec.ts b/tests/cli/mkLogs.spec.ts
+new file mode 100644
+index 0000000..74c17a3
+--- /dev/null
++++ b/tests/cli/mkLogs.spec.ts
+@@ -0,0 +1,287 @@
++import { describe, it, expect, beforeAll, afterAll } from 'vitest';
++import { spawnSync, spawn, ChildProcess } from 'node:child_process';
++import { join } from 'node:path';
++import { writeFileSync, unlinkSync, mkdirSync, existsSync, rmSync } from 'node:fs';
++import { tmpdir } from 'node:os';
++
++describe('mk logs command', () => {
++  const mkPath = join(process.cwd(), 'dist', 'scripts', 'mk.js');
++  const testDir = join(tmpdir(), 'mk-logs-test');
++  const reportsDir = join(testDir, 'reports', 'test-suite');
++  const testLogPath = join(reportsDir, 'test.case.jsonl');
++
++  beforeAll(() => {
++    if (existsSync(testDir)) {
++      rmSync(testDir, { recursive: true, force: true });
++    }
++    mkdirSync(reportsDir, { recursive: true });
++
++    const logEntries = [
++      {
++        ts: Date.now() - 5000,
++        lvl: 'error',
++        case: 'test.case',
++        evt: 'debug.kernel.pipe.error',
++        payload: { pipeId: 'pipe-1', error: 'connection failed' },
++      },
++      {
++        ts: Date.now() - 4000,
++        lvl: 'warn',
++        case: 'test.case',
++        evt: 'debug.router.sweep.stale',
++        payload: { serverId: 'server-1', ttl: 5000 },
++      },
++      {
++        ts: Date.now() - 3000,
++        lvl: 'info',
++        case: 'test.case',
++        evt: 'debug.kernel.pipe.connect',
++        payload: { fromId: 'node-1', toId: 'node-2' },
++      },
++      {
++        ts: Date.now() - 2000,
++        lvl: 'debug',
++        case: 'test.case',
++        evt: 'debug.executor.start',
++        payload: { nodeCount: 3 },
++      },
++      {
++        ts: Date.now() - 1000,
++        lvl: 'info',
++        case: 'test.case',
++        evt: 'debug.filesystem-sink.write',
++        payload: { path: '/tmp/output.txt', bytes: 1024 },
++      },
++    ];
++
++    const logContent = logEntries.map((e) => JSON.stringify(e)).join('\n') + '\n';
++    writeFileSync(testLogPath, logContent);
++  });
++
++  afterAll(() => {
++    try {
++      rmSync(testDir, { recursive: true, force: true });
++    } catch (e) {
++      // ignore
++    }
++  });
++
++  it('shows help when --help flag is used', () => {
++    const r = spawnSync('node', [mkPath, 'logs', '--help'], { encoding: 'utf8' });
++
++    expect(r.status).toBe(0);
++    expect(r.stdout).toContain('Tail module logs with filtering');
++    expect(r.stdout).toContain('Usage: mk logs');
++  });
++
++  it('tails logs in human-readable format by default', () => {
++    const r = spawnSync('node', [mkPath, 'logs'], {
++      encoding: 'utf8',
++      cwd: testDir,
++    });
++
++    expect(r.status).toBe(0);
++    expect(r.stdout).toContain('kernel');
++    expect(r.stdout).toContain('router');
++    expect(r.stdout).toContain('executor');
++    expect(r.stdout).toContain('filesystem-sink');
++  });
++
++  it('filters logs by module name', () => {
++    const r = spawnSync('node', [mkPath, 'logs', '--module', 'kernel'], {
++      encoding: 'utf8',
++      cwd: testDir,
++    });
++
++    expect(r.status).toBe(0);
++    expect(r.stdout).toContain('kernel');
++    expect(r.stdout).not.toContain('router');
++    expect(r.stdout).not.toContain('executor');
++  });
++
++  it('filters logs by level (error)', () => {
++    const r = spawnSync('node', [mkPath, 'logs', '--level', 'error'], {
++      encoding: 'utf8',
++      cwd: testDir,
++    });
++
++    expect(r.status).toBe(0);
++    expect(r.stdout).toContain('ERROR');
++    expect(r.stdout).not.toContain('WARN');
++    expect(r.stdout).not.toContain('INFO');
++    expect(r.stdout).not.toContain('DEBUG');
++  });
++
++  it('filters logs by level (warn) includes error and warn', () => {
++    const r = spawnSync('node', [mkPath, 'logs', '--level', 'warn'], {
++      encoding: 'utf8',
++      cwd: testDir,
++    });
++
++    expect(r.status).toBe(0);
++    expect(r.stdout).toContain('ERROR');
++    expect(r.stdout).toContain('WARN');
++    expect(r.stdout).not.toContain('INFO');
++    expect(r.stdout).not.toContain('DEBUG');
++  });
++
++  it('filters logs by level (info) includes error, warn, and info', () => {
++    const r = spawnSync('node', [mkPath, 'logs', '--level', 'info'], {
++      encoding: 'utf8',
++      cwd: testDir,
++    });
++
++    expect(r.status).toBe(0);
++    expect(r.stdout).toContain('ERROR');
++    expect(r.stdout).toContain('WARN');
++    expect(r.stdout).toContain('INFO');
++    expect(r.stdout).not.toContain('DEBUG');
++  });
++
++  it('outputs logs in JSON format with --json flag', () => {
++    const r = spawnSync('node', [mkPath, 'logs', '--json'], {
++      encoding: 'utf8',
++      cwd: testDir,
++    });
++
++    expect(r.status).toBe(0);
++
++    const lines = r.stdout.trim().split('\n');
++    expect(lines.length).toBeGreaterThan(0);
++
++    const firstLog = JSON.parse(lines[0]);
++    expect(firstLog).toHaveProperty('timestamp');
++    expect(firstLog).toHaveProperty('level');
++    expect(firstLog).toHaveProperty('module');
++    expect(firstLog).toHaveProperty('event');
++  });
++
++  it('combines multiple filters (module and level)', () => {
++    const r = spawnSync('node', [mkPath, 'logs', '--module', 'kernel', '--level', 'error'], {
++      encoding: 'utf8',
++      cwd: testDir,
++    });
++
++    expect(r.status).toBe(0);
++    expect(r.stdout).toContain('kernel');
++    expect(r.stdout).toContain('ERROR');
++    expect(r.stdout).not.toContain('router');
++    expect(r.stdout).not.toContain('INFO');
++  });
++
++  it('limits output lines with --lines flag', () => {
++    const r = spawnSync('node', [mkPath, 'logs', '--lines', '2'], {
++      encoding: 'utf8',
++      cwd: testDir,
++    });
++
++    expect(r.status).toBe(0);
++    const lines = r.stdout.trim().split('\n').filter(l => l.length > 0);
++    expect(lines.length).toBeLessThanOrEqual(2);
++  });
++
++  it('shows error for invalid level', () => {
++    const r = spawnSync('node', [mkPath, 'logs', '--level', 'invalid'], {
++      encoding: 'utf8',
++      cwd: testDir,
++    });
++
++    expect(r.status).toBe(64);
++    expect(r.stderr).toContain('Invalid level');
++  });
++
++  it('shows error for invalid --lines value', () => {
++    const r = spawnSync('node', [mkPath, 'logs', '--lines', 'abc'], {
++      encoding: 'utf8',
++      cwd: testDir,
++    });
++
++    expect(r.status).toBe(64);
++    expect(r.stderr).toContain('Invalid --lines value');
++  });
++
++  it('accepts -f as short form of --follow', () => {
++    const proc = spawn('node', [mkPath, 'logs', '-f'], {
++      cwd: testDir,
++      stdio: 'pipe',
++    });
++
++    let stderr = '';
++    proc.stderr?.on('data', (chunk) => {
++      stderr += chunk.toString();
++    });
++
++    setTimeout(() => {
++      proc.kill('SIGTERM');
++    }, 500);
++
++    return new Promise<void>((resolve) => {
++      proc.on('exit', () => {
++        expect(stderr).toContain('Following logs from');
++        resolve();
++      });
++    });
++  });
++
++  it('shows human-readable timestamps in output', () => {
++    const r = spawnSync('node', [mkPath, 'logs'], {
++      encoding: 'utf8',
++      cwd: testDir,
++    });
++
++    expect(r.status).toBe(0);
++    expect(r.stdout).toMatch(/\[\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d{3}Z\]/);
++  });
++
++  it('includes payload in human-readable output', () => {
++    const r = spawnSync('node', [mkPath, 'logs', '--module', 'kernel', '--level', 'error'], {
++      encoding: 'utf8',
++      cwd: testDir,
++    });
++
++    expect(r.status).toBe(0);
++    expect(r.stdout).toContain('pipeId');
++    expect(r.stdout).toContain('pipe-1');
++    expect(r.stdout).toContain('connection failed');
++  });
++
++  it('handles empty reports directory gracefully', () => {
++    const emptyDir = join(tmpdir(), 'mk-logs-empty');
++    if (existsSync(emptyDir)) {
++      rmSync(emptyDir, { recursive: true, force: true });
++    }
++    mkdirSync(emptyDir, { recursive: true });
++
++    const r = spawnSync('node', [mkPath, 'logs'], {
++      encoding: 'utf8',
++      cwd: emptyDir,
++    });
++
++    expect(r.status).toBe(0);
++    expect(r.stderr).toContain('Debug logging is not enabled');
++
++    rmSync(emptyDir, { recursive: true, force: true });
++  });
++
++  it('displays module names padded in human format', () => {
++    const r = spawnSync('node', [mkPath, 'logs'], {
++      encoding: 'utf8',
++      cwd: testDir,
++    });
++
++    expect(r.status).toBe(0);
++    expect(r.stdout).toMatch(/\[kernel\s+\]/);
++    expect(r.stdout).toMatch(/\[router\s+\]/);
++  });
++
++  it('shows event names after module', () => {
++    const r = spawnSync('node', [mkPath, 'logs', '--module', 'kernel'], {
++      encoding: 'utf8',
++      cwd: testDir,
++    });
++
++    expect(r.status).toBe(0);
++    expect(r.stdout).toContain('pipe.error');
++    expect(r.stdout).toContain('pipe.connect');
++  });
++});
+diff --git a/scripts/mk.ts b/scripts/mk.ts
+index 2cf317c..b0565f2 100644
+--- a/scripts/mk.ts
++++ b/scripts/mk.ts
+@@ -33,6 +33,97 @@ const commands: Command[] = [
+       return runHandler(args);
+     },
+   },
++  {
++    name: 'dev',
++    description: 'Run topology with hot-reload for in-proc modules',
++    usage: 'mk dev <config> [--verbose]',
++    handler: async (args: string[]) => {
++      if (args.length === 0) {
++        console.error('Error: Missing topology config file');
++        console.error('Usage: mk dev <config> [--verbose]');
++        return EXIT_USAGE;
++      }
++
++      const configPath = args[0];
++      const verbose = args.includes('--verbose');
++
++      try {
++        const { loadConfig } = await import('../src/config/loader.js');
++        const { Kernel } = await import('../src/kernel/Kernel.js');
++        const { Hostess } = await import('../src/hostess/Hostess.js');
++        const { StateManager } = await import('../src/state/StateManager.js');
++        const { Executor } = await import('../src/executor/Executor.js');
++        const { watchModules } = await import('../src/mk/dev.js');
++        
++        // Load topology
++        const topology = loadConfig(configPath);
++        
++        console.log('[mk dev] Starting topology with hot-reload...');
++        
++        // Initialize system
++        const kernel = new Kernel();
++        const hostess = new Hostess();
++        const stateManager = new StateManager(kernel);
++        const executor = new Executor(kernel, hostess, stateManager);
++        
++        // Register modules
++        const modules = [
++          { name: 'TimerSource', path: '../src/modules/timer.js' },
++          { name: 'UppercaseTransform', path: '../src/modules/uppercase.js' },
++          { name: 'ConsoleSink', path: '../src/modules/consoleSink.js' },
++          { name: 'FilesystemSink', path: '../src/modules/filesystem-sink.js' },
++          { name: 'PipeMeterTransform', path: '../src/transforms/pipeMeter.js' },
++          { name: 'RateLimiterTransform', path: '../src/transforms/rateLimiter.js' },
++          { name: 'TeeTransform', path: '../src/transforms/tee.js' },
++        ];
++        
++        for (const mod of modules) {
++          try {
++            const modulePath = new URL(mod.path, import.meta.url).pathname;
++            const moduleExport = await import(modulePath);
++            executor.registerModule(mod.name, moduleExport.default || moduleExport[mod.name]);
++          } catch (err) {
++            // Module might not exist, skip
++          }
++        }
++        
++        // Load and start executor
++        executor.load(topology);
++        await executor.up();
++        
++        // Start file watchers
++        const watcher = watchModules(executor, topology, {
++          verbose,
++          onReload: (nodeId) => {
++            console.log(`[mk dev] Node ${nodeId} hot-reloaded`);
++          }
++        });
++        
++        console.log('[mk dev] System running. Press Ctrl+C to stop.');
++        
++        // Handle graceful shutdown
++        const shutdown = async () => {
++          console.log('\n[mk dev] Shutting down...');
++          watcher.stop();
++          await executor.down();
++          process.exit(EXIT_SUCCESS);
++        };
++        
++        process.on('SIGINT', shutdown);
++        process.on('SIGTERM', shutdown);
++        
++        // Keep process alive
++        await new Promise<void>((resolve) => {
++          // Never resolves - keeps process running until signal
++        });
++        
++        return EXIT_SUCCESS;
++      } catch (error) {
++        console.error(`Error: ${error instanceof Error ? error.message : String(error)}`);
++        return EXIT_ERROR;
++      }
++    },
++  },
+   {
+     name: 'doctor',
+     description: 'Diagnose system and dependency issues',
+@@ -153,6 +244,55 @@ const commands: Command[] = [
+       }
+     },
+   },
++  {
++    name: 'logs',
++    description: 'Tail module logs with filtering',
++    usage: 'mk logs [--module <name>] [--level <error|warn|info|debug>] [--json] [--follow] [--lines <n>]',
++    handler: async (args: string[]) => {
++      const { tailLogs } = await import('../src/mk/logs.js');
++      
++      const options: {
++        module?: string;
++        level?: 'error' | 'warn' | 'info' | 'debug';
++        json?: boolean;
++        follow?: boolean;
++        lines?: number;
++      } = {};
++      
++      for (let i = 0; i < args.length; i++) {
++        const arg = args[i];
++        if (arg === '--module' && i + 1 < args.length) {
++          options.module = args[++i];
++        } else if (arg === '--level' && i + 1 < args.length) {
++          const level = args[++i];
++          if (level === 'error' || level === 'warn' || level === 'info' || level === 'debug') {
++            options.level = level;
++          } else {
++            console.error(`Invalid level: ${level}. Use: error, warn, info, or debug`);
++            return EXIT_USAGE;
++          }
++        } else if (arg === '--json') {
++          options.json = true;
++        } else if (arg === '--follow' || arg === '-f') {
++          options.follow = true;
++        } else if (arg === '--lines' && i + 1 < args.length) {
++          options.lines = parseInt(args[++i], 10);
++          if (isNaN(options.lines) || options.lines <= 0) {
++            console.error('Invalid --lines value. Must be a positive number.');
++            return EXIT_USAGE;
++          }
++        }
++      }
++      
++      try {
++        await tailLogs(options);
++        return EXIT_SUCCESS;
++      } catch (error) {
++        console.error(`Error: ${error instanceof Error ? error.message : String(error)}`);
++        return EXIT_ERROR;
++      }
++    },
++  },
+ ];
+ 
+ function printMainHelp() {
diff --git a/patches/DIFF_T9302_mk-logs_new_files.patch b/patches/DIFF_T9302_mk-logs_new_files.patch
new file mode 100644
index 0000000..59e66ac
--- /dev/null
+++ b/patches/DIFF_T9302_mk-logs_new_files.patch
@@ -0,0 +1,554 @@
+diff --git a/src/mk/logs.ts b/src/mk/logs.ts
+new file mode 100644
+index 0000000..9d20ca9
+--- /dev/null
++++ b/src/mk/logs.ts
+@@ -0,0 +1,255 @@
++import * as fs from 'fs';
++import * as path from 'path';
++import { createInterface } from 'readline';
++
++export type LogLevel = 'error' | 'warn' | 'info' | 'debug';
++
++export interface LogsOptions {
++  module?: string;
++  level?: LogLevel;
++  json?: boolean;
++  follow?: boolean;
++  lines?: number;
++}
++
++export interface LogEntry {
++  timestamp: string;
++  level: LogLevel;
++  module: string;
++  event: string;
++  payload?: unknown;
++}
++
++const LEVEL_VALUES: Record<LogLevel, number> = {
++  error: 0,
++  warn: 1,
++  info: 2,
++  debug: 3,
++};
++
++function parseDebugLog(line: string): LogEntry | null {
++  try {
++    const timestampMatch = line.match(/^\[([\d-T:.Z]+)\]/);
++    const levelMatch = line.match(/\[([A-Z]+)\]/);
++    const moduleMatch = line.match(/\[([a-z-]+)\]/);
++    const eventMatch = line.match(/\]\s+([^:]+)(?::(.*))?$/);
++
++    if (timestampMatch && levelMatch && moduleMatch) {
++      const level = levelMatch[1].toLowerCase() as LogLevel;
++      const event = eventMatch ? eventMatch[1].trim() : 'unknown';
++      const payloadStr = eventMatch && eventMatch[2] ? eventMatch[2].trim() : undefined;
++      let payload: unknown = undefined;
++
++      if (payloadStr) {
++        try {
++          payload = JSON.parse(payloadStr);
++        } catch {
++          payload = payloadStr;
++        }
++      }
++
++      return {
++        timestamp: timestampMatch[1],
++        level,
++        module: moduleMatch[1],
++        event,
++        payload,
++      };
++    }
++  } catch (e) {
++    return null;
++  }
++  return null;
++}
++
++function parseJsonlLog(line: string): LogEntry | null {
++  try {
++    const data = JSON.parse(line);
++    
++    if (data.evt && data.evt.startsWith('debug.')) {
++      const parts = data.evt.split('.');
++      const module = parts[1] || 'unknown';
++      const event = parts.slice(2).join('.') || 'unknown';
++      
++      return {
++        timestamp: data.ts ? new Date(data.ts).toISOString() : new Date().toISOString(),
++        level: (data.lvl as LogLevel) || 'info',
++        module,
++        event,
++        payload: data.payload,
++      };
++    }
++  } catch (e) {
++    return null;
++  }
++  return null;
++}
++
++function shouldIncludeLog(entry: LogEntry, options: LogsOptions): boolean {
++  if (options.module && entry.module !== options.module) {
++    return false;
++  }
++
++  if (options.level) {
++    const entryLevel = LEVEL_VALUES[entry.level];
++    const filterLevel = LEVEL_VALUES[options.level];
++    if (entryLevel > filterLevel) {
++      return false;
++    }
++  }
++
++  return true;
++}
++
++function formatLogHuman(entry: LogEntry): string {
++  const timestamp = new Date(entry.timestamp).toISOString();
++  const levelStr = entry.level.toUpperCase().padEnd(5);
++  const moduleStr = entry.module.padEnd(15);
++  const payload = entry.payload ? ` ${JSON.stringify(entry.payload)}` : '';
++  return `[${timestamp}] ${levelStr} [${moduleStr}] ${entry.event}${payload}`;
++}
++
++function formatLogJson(entry: LogEntry): string {
++  return JSON.stringify(entry);
++}
++
++async function tailDebugLogs(options: LogsOptions): Promise<void> {
++  const debugLog = process.env.DEBUG === '1' || process.env.MK_DEBUG_MODULES;
++  
++  if (!debugLog) {
++    console.error('Debug logging is not enabled. Set DEBUG=1 or MK_DEBUG_MODULES to enable.');
++    return;
++  }
++
++  console.error('Reading from console output (DEBUG mode)...');
++  console.error('This command works best with pre-captured logs or JSONL files.');
++  console.error('Use: DEBUG=1 mk run <topology> 2>&1 | mk logs [options]');
++}
++
++async function tailJsonlLogs(logPath: string, options: LogsOptions): Promise<void> {
++  if (!fs.existsSync(logPath)) {
++    throw new Error(`Log file not found: ${logPath}`);
++  }
++
++  const stream = fs.createReadStream(logPath);
++  const rl = createInterface({
++    input: stream,
++    crlfDelay: Infinity,
++  });
++
++  const entries: LogEntry[] = [];
++
++  for await (const line of rl) {
++    const entry = parseJsonlLog(line);
++    if (entry && shouldIncludeLog(entry, options)) {
++      entries.push(entry);
++    }
++  }
++
++  const linesToShow = options.lines || 50;
++  const toDisplay = entries.slice(-linesToShow);
++
++  for (const entry of toDisplay) {
++    const formatted = options.json ? formatLogJson(entry) : formatLogHuman(entry);
++    console.log(formatted);
++  }
++}
++
++async function followJsonlLogs(logPath: string, options: LogsOptions): Promise<void> {
++  if (!fs.existsSync(logPath)) {
++    throw new Error(`Log file not found: ${logPath}`);
++  }
++
++  let position = 0;
++  const fileStats = fs.statSync(logPath);
++  position = Math.max(0, fileStats.size);
++
++  console.error(`Following logs from: ${logPath}`);
++  console.error('Press Ctrl+C to stop...\n');
++
++  const checkForChanges = () => {
++    const currentStats = fs.statSync(logPath);
++    if (currentStats.size > position) {
++      const stream = fs.createReadStream(logPath, {
++        start: position,
++        encoding: 'utf8',
++      });
++
++      let buffer = '';
++      stream.on('data', (chunk) => {
++        buffer += chunk;
++        const lines = buffer.split('\n');
++        buffer = lines.pop() || '';
++
++        for (const line of lines) {
++          if (line.trim()) {
++            const entry = parseJsonlLog(line);
++            if (entry && shouldIncludeLog(entry, options)) {
++              const formatted = options.json ? formatLogJson(entry) : formatLogHuman(entry);
++              console.log(formatted);
++            }
++          }
++        }
++      });
++
++      stream.on('end', () => {
++        position = currentStats.size;
++      });
++    }
++  };
++
++  const interval = setInterval(checkForChanges, 500);
++
++  process.on('SIGINT', () => {
++    clearInterval(interval);
++    console.error('\nStopped following logs.');
++    process.exit(0);
++  });
++
++  process.on('SIGTERM', () => {
++    clearInterval(interval);
++    process.exit(0);
++  });
++}
++
++export async function tailLogs(options: LogsOptions): Promise<void> {
++  const reportsDir = path.join(process.cwd(), 'reports');
++  
++  if (!fs.existsSync(reportsDir)) {
++    await tailDebugLogs(options);
++    return;
++  }
++
++  const suites = fs.readdirSync(reportsDir).filter(f => {
++    const stat = fs.statSync(path.join(reportsDir, f));
++    return stat.isDirectory();
++  });
++
++  if (suites.length === 0) {
++    await tailDebugLogs(options);
++    return;
++  }
++
++  const suite = suites[0];
++  const suiteDir = path.join(reportsDir, suite);
++  const logFiles = fs.readdirSync(suiteDir).filter(f => f.endsWith('.jsonl'));
++
++  if (logFiles.length === 0) {
++    await tailDebugLogs(options);
++    return;
++  }
++
++  const latestLog = logFiles
++    .map(f => ({
++      name: f,
++      path: path.join(suiteDir, f),
++      mtime: fs.statSync(path.join(suiteDir, f)).mtime,
++    }))
++    .sort((a, b) => b.mtime.getTime() - a.mtime.getTime())[0];
++
++  if (options.follow) {
++    await followJsonlLogs(latestLog.path, options);
++  } else {
++    await tailJsonlLogs(latestLog.path, options);
++  }
++}
+diff --git a/tests/cli/mkLogs.spec.ts b/tests/cli/mkLogs.spec.ts
+new file mode 100644
+index 0000000..74c17a3
+--- /dev/null
++++ b/tests/cli/mkLogs.spec.ts
+@@ -0,0 +1,287 @@
++import { describe, it, expect, beforeAll, afterAll } from 'vitest';
++import { spawnSync, spawn, ChildProcess } from 'node:child_process';
++import { join } from 'node:path';
++import { writeFileSync, unlinkSync, mkdirSync, existsSync, rmSync } from 'node:fs';
++import { tmpdir } from 'node:os';
++
++describe('mk logs command', () => {
++  const mkPath = join(process.cwd(), 'dist', 'scripts', 'mk.js');
++  const testDir = join(tmpdir(), 'mk-logs-test');
++  const reportsDir = join(testDir, 'reports', 'test-suite');
++  const testLogPath = join(reportsDir, 'test.case.jsonl');
++
++  beforeAll(() => {
++    if (existsSync(testDir)) {
++      rmSync(testDir, { recursive: true, force: true });
++    }
++    mkdirSync(reportsDir, { recursive: true });
++
++    const logEntries = [
++      {
++        ts: Date.now() - 5000,
++        lvl: 'error',
++        case: 'test.case',
++        evt: 'debug.kernel.pipe.error',
++        payload: { pipeId: 'pipe-1', error: 'connection failed' },
++      },
++      {
++        ts: Date.now() - 4000,
++        lvl: 'warn',
++        case: 'test.case',
++        evt: 'debug.router.sweep.stale',
++        payload: { serverId: 'server-1', ttl: 5000 },
++      },
++      {
++        ts: Date.now() - 3000,
++        lvl: 'info',
++        case: 'test.case',
++        evt: 'debug.kernel.pipe.connect',
++        payload: { fromId: 'node-1', toId: 'node-2' },
++      },
++      {
++        ts: Date.now() - 2000,
++        lvl: 'debug',
++        case: 'test.case',
++        evt: 'debug.executor.start',
++        payload: { nodeCount: 3 },
++      },
++      {
++        ts: Date.now() - 1000,
++        lvl: 'info',
++        case: 'test.case',
++        evt: 'debug.filesystem-sink.write',
++        payload: { path: '/tmp/output.txt', bytes: 1024 },
++      },
++    ];
++
++    const logContent = logEntries.map((e) => JSON.stringify(e)).join('\n') + '\n';
++    writeFileSync(testLogPath, logContent);
++  });
++
++  afterAll(() => {
++    try {
++      rmSync(testDir, { recursive: true, force: true });
++    } catch (e) {
++      // ignore
++    }
++  });
++
++  it('shows help when --help flag is used', () => {
++    const r = spawnSync('node', [mkPath, 'logs', '--help'], { encoding: 'utf8' });
++
++    expect(r.status).toBe(0);
++    expect(r.stdout).toContain('Tail module logs with filtering');
++    expect(r.stdout).toContain('Usage: mk logs');
++  });
++
++  it('tails logs in human-readable format by default', () => {
++    const r = spawnSync('node', [mkPath, 'logs'], {
++      encoding: 'utf8',
++      cwd: testDir,
++    });
++
++    expect(r.status).toBe(0);
++    expect(r.stdout).toContain('kernel');
++    expect(r.stdout).toContain('router');
++    expect(r.stdout).toContain('executor');
++    expect(r.stdout).toContain('filesystem-sink');
++  });
++
++  it('filters logs by module name', () => {
++    const r = spawnSync('node', [mkPath, 'logs', '--module', 'kernel'], {
++      encoding: 'utf8',
++      cwd: testDir,
++    });
++
++    expect(r.status).toBe(0);
++    expect(r.stdout).toContain('kernel');
++    expect(r.stdout).not.toContain('router');
++    expect(r.stdout).not.toContain('executor');
++  });
++
++  it('filters logs by level (error)', () => {
++    const r = spawnSync('node', [mkPath, 'logs', '--level', 'error'], {
++      encoding: 'utf8',
++      cwd: testDir,
++    });
++
++    expect(r.status).toBe(0);
++    expect(r.stdout).toContain('ERROR');
++    expect(r.stdout).not.toContain('WARN');
++    expect(r.stdout).not.toContain('INFO');
++    expect(r.stdout).not.toContain('DEBUG');
++  });
++
++  it('filters logs by level (warn) includes error and warn', () => {
++    const r = spawnSync('node', [mkPath, 'logs', '--level', 'warn'], {
++      encoding: 'utf8',
++      cwd: testDir,
++    });
++
++    expect(r.status).toBe(0);
++    expect(r.stdout).toContain('ERROR');
++    expect(r.stdout).toContain('WARN');
++    expect(r.stdout).not.toContain('INFO');
++    expect(r.stdout).not.toContain('DEBUG');
++  });
++
++  it('filters logs by level (info) includes error, warn, and info', () => {
++    const r = spawnSync('node', [mkPath, 'logs', '--level', 'info'], {
++      encoding: 'utf8',
++      cwd: testDir,
++    });
++
++    expect(r.status).toBe(0);
++    expect(r.stdout).toContain('ERROR');
++    expect(r.stdout).toContain('WARN');
++    expect(r.stdout).toContain('INFO');
++    expect(r.stdout).not.toContain('DEBUG');
++  });
++
++  it('outputs logs in JSON format with --json flag', () => {
++    const r = spawnSync('node', [mkPath, 'logs', '--json'], {
++      encoding: 'utf8',
++      cwd: testDir,
++    });
++
++    expect(r.status).toBe(0);
++
++    const lines = r.stdout.trim().split('\n');
++    expect(lines.length).toBeGreaterThan(0);
++
++    const firstLog = JSON.parse(lines[0]);
++    expect(firstLog).toHaveProperty('timestamp');
++    expect(firstLog).toHaveProperty('level');
++    expect(firstLog).toHaveProperty('module');
++    expect(firstLog).toHaveProperty('event');
++  });
++
++  it('combines multiple filters (module and level)', () => {
++    const r = spawnSync('node', [mkPath, 'logs', '--module', 'kernel', '--level', 'error'], {
++      encoding: 'utf8',
++      cwd: testDir,
++    });
++
++    expect(r.status).toBe(0);
++    expect(r.stdout).toContain('kernel');
++    expect(r.stdout).toContain('ERROR');
++    expect(r.stdout).not.toContain('router');
++    expect(r.stdout).not.toContain('INFO');
++  });
++
++  it('limits output lines with --lines flag', () => {
++    const r = spawnSync('node', [mkPath, 'logs', '--lines', '2'], {
++      encoding: 'utf8',
++      cwd: testDir,
++    });
++
++    expect(r.status).toBe(0);
++    const lines = r.stdout.trim().split('\n').filter(l => l.length > 0);
++    expect(lines.length).toBeLessThanOrEqual(2);
++  });
++
++  it('shows error for invalid level', () => {
++    const r = spawnSync('node', [mkPath, 'logs', '--level', 'invalid'], {
++      encoding: 'utf8',
++      cwd: testDir,
++    });
++
++    expect(r.status).toBe(64);
++    expect(r.stderr).toContain('Invalid level');
++  });
++
++  it('shows error for invalid --lines value', () => {
++    const r = spawnSync('node', [mkPath, 'logs', '--lines', 'abc'], {
++      encoding: 'utf8',
++      cwd: testDir,
++    });
++
++    expect(r.status).toBe(64);
++    expect(r.stderr).toContain('Invalid --lines value');
++  });
++
++  it('accepts -f as short form of --follow', () => {
++    const proc = spawn('node', [mkPath, 'logs', '-f'], {
++      cwd: testDir,
++      stdio: 'pipe',
++    });
++
++    let stderr = '';
++    proc.stderr?.on('data', (chunk) => {
++      stderr += chunk.toString();
++    });
++
++    setTimeout(() => {
++      proc.kill('SIGTERM');
++    }, 500);
++
++    return new Promise<void>((resolve) => {
++      proc.on('exit', () => {
++        expect(stderr).toContain('Following logs from');
++        resolve();
++      });
++    });
++  });
++
++  it('shows human-readable timestamps in output', () => {
++    const r = spawnSync('node', [mkPath, 'logs'], {
++      encoding: 'utf8',
++      cwd: testDir,
++    });
++
++    expect(r.status).toBe(0);
++    expect(r.stdout).toMatch(/\[\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d{3}Z\]/);
++  });
++
++  it('includes payload in human-readable output', () => {
++    const r = spawnSync('node', [mkPath, 'logs', '--module', 'kernel', '--level', 'error'], {
++      encoding: 'utf8',
++      cwd: testDir,
++    });
++
++    expect(r.status).toBe(0);
++    expect(r.stdout).toContain('pipeId');
++    expect(r.stdout).toContain('pipe-1');
++    expect(r.stdout).toContain('connection failed');
++  });
++
++  it('handles empty reports directory gracefully', () => {
++    const emptyDir = join(tmpdir(), 'mk-logs-empty');
++    if (existsSync(emptyDir)) {
++      rmSync(emptyDir, { recursive: true, force: true });
++    }
++    mkdirSync(emptyDir, { recursive: true });
++
++    const r = spawnSync('node', [mkPath, 'logs'], {
++      encoding: 'utf8',
++      cwd: emptyDir,
++    });
++
++    expect(r.status).toBe(0);
++    expect(r.stderr).toContain('Debug logging is not enabled');
++
++    rmSync(emptyDir, { recursive: true, force: true });
++  });
++
++  it('displays module names padded in human format', () => {
++    const r = spawnSync('node', [mkPath, 'logs'], {
++      encoding: 'utf8',
++      cwd: testDir,
++    });
++
++    expect(r.status).toBe(0);
++    expect(r.stdout).toMatch(/\[kernel\s+\]/);
++    expect(r.stdout).toMatch(/\[router\s+\]/);
++  });
++
++  it('shows event names after module', () => {
++    const r = spawnSync('node', [mkPath, 'logs', '--module', 'kernel'], {
++      encoding: 'utf8',
++      cwd: testDir,
++    });
++
++    expect(r.status).toBe(0);
++    expect(r.stdout).toContain('pipe.error');
++    expect(r.stdout).toContain('pipe.connect');
++  });
++});
diff --git a/patches/DIFF_T9302_mk-logs_updates.patch b/patches/DIFF_T9302_mk-logs_updates.patch
new file mode 100644
index 0000000..226957e
--- /dev/null
+++ b/patches/DIFF_T9302_mk-logs_updates.patch
@@ -0,0 +1,158 @@
+diff --git a/scripts/mk.ts b/scripts/mk.ts
+index 2cf317c..b0565f2 100644
+--- a/scripts/mk.ts
++++ b/scripts/mk.ts
+@@ -33,6 +33,97 @@ const commands: Command[] = [
+       return runHandler(args);
+     },
+   },
++  {
++    name: 'dev',
++    description: 'Run topology with hot-reload for in-proc modules',
++    usage: 'mk dev <config> [--verbose]',
++    handler: async (args: string[]) => {
++      if (args.length === 0) {
++        console.error('Error: Missing topology config file');
++        console.error('Usage: mk dev <config> [--verbose]');
++        return EXIT_USAGE;
++      }
++
++      const configPath = args[0];
++      const verbose = args.includes('--verbose');
++
++      try {
++        const { loadConfig } = await import('../src/config/loader.js');
++        const { Kernel } = await import('../src/kernel/Kernel.js');
++        const { Hostess } = await import('../src/hostess/Hostess.js');
++        const { StateManager } = await import('../src/state/StateManager.js');
++        const { Executor } = await import('../src/executor/Executor.js');
++        const { watchModules } = await import('../src/mk/dev.js');
++        
++        // Load topology
++        const topology = loadConfig(configPath);
++        
++        console.log('[mk dev] Starting topology with hot-reload...');
++        
++        // Initialize system
++        const kernel = new Kernel();
++        const hostess = new Hostess();
++        const stateManager = new StateManager(kernel);
++        const executor = new Executor(kernel, hostess, stateManager);
++        
++        // Register modules
++        const modules = [
++          { name: 'TimerSource', path: '../src/modules/timer.js' },
++          { name: 'UppercaseTransform', path: '../src/modules/uppercase.js' },
++          { name: 'ConsoleSink', path: '../src/modules/consoleSink.js' },
++          { name: 'FilesystemSink', path: '../src/modules/filesystem-sink.js' },
++          { name: 'PipeMeterTransform', path: '../src/transforms/pipeMeter.js' },
++          { name: 'RateLimiterTransform', path: '../src/transforms/rateLimiter.js' },
++          { name: 'TeeTransform', path: '../src/transforms/tee.js' },
++        ];
++        
++        for (const mod of modules) {
++          try {
++            const modulePath = new URL(mod.path, import.meta.url).pathname;
++            const moduleExport = await import(modulePath);
++            executor.registerModule(mod.name, moduleExport.default || moduleExport[mod.name]);
++          } catch (err) {
++            // Module might not exist, skip
++          }
++        }
++        
++        // Load and start executor
++        executor.load(topology);
++        await executor.up();
++        
++        // Start file watchers
++        const watcher = watchModules(executor, topology, {
++          verbose,
++          onReload: (nodeId) => {
++            console.log(`[mk dev] Node ${nodeId} hot-reloaded`);
++          }
++        });
++        
++        console.log('[mk dev] System running. Press Ctrl+C to stop.');
++        
++        // Handle graceful shutdown
++        const shutdown = async () => {
++          console.log('\n[mk dev] Shutting down...');
++          watcher.stop();
++          await executor.down();
++          process.exit(EXIT_SUCCESS);
++        };
++        
++        process.on('SIGINT', shutdown);
++        process.on('SIGTERM', shutdown);
++        
++        // Keep process alive
++        await new Promise<void>((resolve) => {
++          // Never resolves - keeps process running until signal
++        });
++        
++        return EXIT_SUCCESS;
++      } catch (error) {
++        console.error(`Error: ${error instanceof Error ? error.message : String(error)}`);
++        return EXIT_ERROR;
++      }
++    },
++  },
+   {
+     name: 'doctor',
+     description: 'Diagnose system and dependency issues',
+@@ -153,6 +244,55 @@ const commands: Command[] = [
+       }
+     },
+   },
++  {
++    name: 'logs',
++    description: 'Tail module logs with filtering',
++    usage: 'mk logs [--module <name>] [--level <error|warn|info|debug>] [--json] [--follow] [--lines <n>]',
++    handler: async (args: string[]) => {
++      const { tailLogs } = await import('../src/mk/logs.js');
++      
++      const options: {
++        module?: string;
++        level?: 'error' | 'warn' | 'info' | 'debug';
++        json?: boolean;
++        follow?: boolean;
++        lines?: number;
++      } = {};
++      
++      for (let i = 0; i < args.length; i++) {
++        const arg = args[i];
++        if (arg === '--module' && i + 1 < args.length) {
++          options.module = args[++i];
++        } else if (arg === '--level' && i + 1 < args.length) {
++          const level = args[++i];
++          if (level === 'error' || level === 'warn' || level === 'info' || level === 'debug') {
++            options.level = level;
++          } else {
++            console.error(`Invalid level: ${level}. Use: error, warn, info, or debug`);
++            return EXIT_USAGE;
++          }
++        } else if (arg === '--json') {
++          options.json = true;
++        } else if (arg === '--follow' || arg === '-f') {
++          options.follow = true;
++        } else if (arg === '--lines' && i + 1 < args.length) {
++          options.lines = parseInt(args[++i], 10);
++          if (isNaN(options.lines) || options.lines <= 0) {
++            console.error('Invalid --lines value. Must be a positive number.');
++            return EXIT_USAGE;
++          }
++        }
++      }
++      
++      try {
++        await tailLogs(options);
++        return EXIT_SUCCESS;
++      } catch (error) {
++        console.error(`Error: ${error instanceof Error ? error.message : String(error)}`);
++        return EXIT_ERROR;
++      }
++    },
++  },
+ ];
+ 
+ function printMainHelp() {
diff --git a/reports/ansiParser.spec/should_handle_line_wrapping.jsonl b/reports/ansiParser.spec/should_handle_line_wrapping.jsonl
index e2c8932..2e0e01b 100644
--- a/reports/ansiParser.spec/should_handle_line_wrapping.jsonl
+++ b/reports/ansiParser.spec/should_handle_line_wrapping.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636127552,"lvl":"info","case":"should handle line wrapping","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636127553,"lvl":"info","case":"should handle line wrapping","phase":"execution","evt":"test.run"}
-{"ts":1760636127554,"lvl":"info","case":"should handle line wrapping","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
+{"ts":1760641846497,"lvl":"info","case":"should handle line wrapping","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641846498,"lvl":"info","case":"should handle line wrapping","phase":"execution","evt":"test.run"}
+{"ts":1760641846499,"lvl":"info","case":"should handle line wrapping","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/debug-api.spec/checks_module_against_config_modules_when_enabled.jsonl b/reports/debug-api.spec/checks_module_against_config_modules_when_enabled.jsonl
index c98bc06..18a134e 100644
--- a/reports/debug-api.spec/checks_module_against_config_modules_when_enabled.jsonl
+++ b/reports/debug-api.spec/checks_module_against_config_modules_when_enabled.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636127751,"lvl":"info","case":"checks module against config.modules when enabled","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636127752,"lvl":"info","case":"checks module against config.modules when enabled","phase":"execution","evt":"test.run"}
-{"ts":1760636127753,"lvl":"info","case":"checks module against config.modules when enabled","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
+{"ts":1760641846961,"lvl":"info","case":"checks module against config.modules when enabled","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641846962,"lvl":"info","case":"checks module against config.modules when enabled","phase":"execution","evt":"test.run"}
+{"ts":1760641846963,"lvl":"info","case":"checks module against config.modules when enabled","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/debug-api.spec/does_not_emit_when_on___returns_false.jsonl b/reports/debug-api.spec/does_not_emit_when_on___returns_false.jsonl
index 5aeebfc..9a27f87 100644
--- a/reports/debug-api.spec/does_not_emit_when_on___returns_false.jsonl
+++ b/reports/debug-api.spec/does_not_emit_when_on___returns_false.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636127751,"lvl":"info","case":"does not emit when on() returns false","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636127752,"lvl":"info","case":"does not emit when on() returns false","phase":"execution","evt":"test.run"}
-{"ts":1760636127753,"lvl":"info","case":"does not emit when on() returns false","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760641846961,"lvl":"info","case":"does not emit when on() returns false","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641846962,"lvl":"info","case":"does not emit when on() returns false","phase":"execution","evt":"test.run"}
+{"ts":1760641846963,"lvl":"info","case":"does not emit when on() returns false","phase":"teardown","evt":"case.end","payload":{"duration":5,"status":"passed"}}
diff --git a/reports/debug-api.spec/emit_returns_immediately_when_module_is_disabled.jsonl b/reports/debug-api.spec/emit_returns_immediately_when_module_is_disabled.jsonl
index 59d46f6..eaabfee 100644
--- a/reports/debug-api.spec/emit_returns_immediately_when_module_is_disabled.jsonl
+++ b/reports/debug-api.spec/emit_returns_immediately_when_module_is_disabled.jsonl
@@ -1,4 +1,3 @@
-{"ts":1760636127780,"lvl":"info","case":"emit returns immediately when module is disabled","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636127781,"lvl":"info","case":"emit returns immediately when module is disabled","phase":"execution","evt":"test.run"}
-{"ts":1760636127782,"lvl":"error","case":"emit returns immediately when module is disabled","phase":"execution","evt":"test.error","payload":{"message":"expected 20.39718700000003 to be less than 10","stack":"AssertionError: expected 20.39718700000003 to be less than 10\n    at /srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:64:37\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:135:14\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:60:26\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:17)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7"}}
-{"ts":1760636127783,"lvl":"error","case":"emit returns immediately when module is disabled","phase":"teardown","evt":"case.end","payload":{"duration":65,"status":"failed"}}
+{"ts":1760641846961,"lvl":"info","case":"emit returns immediately when module is disabled","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641846962,"lvl":"info","case":"emit returns immediately when module is disabled","phase":"execution","evt":"test.run"}
+{"ts":1760641846963,"lvl":"info","case":"emit returns immediately when module is disabled","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/debug-api.spec/emits_formatted_output_to_console.jsonl b/reports/debug-api.spec/emits_formatted_output_to_console.jsonl
index ffef672..bd8db6c 100644
--- a/reports/debug-api.spec/emits_formatted_output_to_console.jsonl
+++ b/reports/debug-api.spec/emits_formatted_output_to_console.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636127782,"lvl":"info","case":"emits formatted output to console","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636127783,"lvl":"info","case":"emits formatted output to console","phase":"execution","evt":"test.run"}
-{"ts":1760636127784,"lvl":"info","case":"emits formatted output to console","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
+{"ts":1760641846962,"lvl":"info","case":"emits formatted output to console","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641846963,"lvl":"info","case":"emits formatted output to console","phase":"execution","evt":"test.run"}
+{"ts":1760641846964,"lvl":"info","case":"emits formatted output to console","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/debug-api.spec/emits_to_console_when_module_is_enabled.jsonl b/reports/debug-api.spec/emits_to_console_when_module_is_enabled.jsonl
index 6bf68f1..db626ad 100644
--- a/reports/debug-api.spec/emits_to_console_when_module_is_enabled.jsonl
+++ b/reports/debug-api.spec/emits_to_console_when_module_is_enabled.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636127781,"lvl":"info","case":"emits to console when module is enabled","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636127782,"lvl":"info","case":"emits to console when module is enabled","phase":"execution","evt":"test.run"}
-{"ts":1760636127783,"lvl":"info","case":"emits to console when module is enabled","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
+{"ts":1760641846962,"lvl":"info","case":"emits to console when module is enabled","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641846963,"lvl":"info","case":"emits to console when module is enabled","phase":"execution","evt":"test.run"}
+{"ts":1760641846964,"lvl":"info","case":"emits to console when module is enabled","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/debug-api.spec/handles_emit_without_payload.jsonl b/reports/debug-api.spec/handles_emit_without_payload.jsonl
index f1f1aba..cfa08dd 100644
--- a/reports/debug-api.spec/handles_emit_without_payload.jsonl
+++ b/reports/debug-api.spec/handles_emit_without_payload.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636127782,"lvl":"info","case":"handles emit without payload","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636127783,"lvl":"info","case":"handles emit without payload","phase":"execution","evt":"test.run"}
-{"ts":1760636127784,"lvl":"info","case":"handles emit without payload","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760641846962,"lvl":"info","case":"handles emit without payload","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641846963,"lvl":"info","case":"handles emit without payload","phase":"execution","evt":"test.run"}
+{"ts":1760641846964,"lvl":"info","case":"handles emit without payload","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/debug-api.spec/respects_debug_level_filtering.jsonl b/reports/debug-api.spec/respects_debug_level_filtering.jsonl
index 1a83b8f..96ed354 100644
--- a/reports/debug-api.spec/respects_debug_level_filtering.jsonl
+++ b/reports/debug-api.spec/respects_debug_level_filtering.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636127782,"lvl":"info","case":"respects debug level filtering","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636127783,"lvl":"info","case":"respects debug level filtering","phase":"execution","evt":"test.run"}
-{"ts":1760636127784,"lvl":"info","case":"respects debug level filtering","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760641846962,"lvl":"info","case":"respects debug level filtering","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641846963,"lvl":"info","case":"respects debug level filtering","phase":"execution","evt":"test.run"}
+{"ts":1760641846964,"lvl":"info","case":"respects debug level filtering","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/debug-api.spec/returns_consistent_value_for_same_module.jsonl b/reports/debug-api.spec/returns_consistent_value_for_same_module.jsonl
index 1c6b8cc..77e9452 100644
--- a/reports/debug-api.spec/returns_consistent_value_for_same_module.jsonl
+++ b/reports/debug-api.spec/returns_consistent_value_for_same_module.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636127750,"lvl":"info","case":"returns consistent value for same module","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636127751,"lvl":"info","case":"returns consistent value for same module","phase":"execution","evt":"test.run"}
-{"ts":1760636127752,"lvl":"info","case":"returns consistent value for same module","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760641846960,"lvl":"info","case":"returns consistent value for same module","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641846961,"lvl":"info","case":"returns consistent value for same module","phase":"execution","evt":"test.run"}
+{"ts":1760641846962,"lvl":"info","case":"returns consistent value for same module","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/debug-api.spec/returns_false_when_config_is_disabled.jsonl b/reports/debug-api.spec/returns_false_when_config_is_disabled.jsonl
index 7f8fe16..4a8505c 100644
--- a/reports/debug-api.spec/returns_false_when_config_is_disabled.jsonl
+++ b/reports/debug-api.spec/returns_false_when_config_is_disabled.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636127751,"lvl":"info","case":"returns false when config is disabled","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636127752,"lvl":"info","case":"returns false when config is disabled","phase":"execution","evt":"test.run"}
-{"ts":1760636127753,"lvl":"info","case":"returns false when config is disabled","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
+{"ts":1760641846960,"lvl":"info","case":"returns false when config is disabled","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641846961,"lvl":"info","case":"returns false when config is disabled","phase":"execution","evt":"test.run"}
+{"ts":1760641846962,"lvl":"info","case":"returns false when config is disabled","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/debug-api.spec/returns_false_when_module_is_not_enabled.jsonl b/reports/debug-api.spec/returns_false_when_module_is_not_enabled.jsonl
index 8368cca..6864c51 100644
--- a/reports/debug-api.spec/returns_false_when_module_is_not_enabled.jsonl
+++ b/reports/debug-api.spec/returns_false_when_module_is_not_enabled.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636127750,"lvl":"info","case":"returns false when module is not enabled","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636127751,"lvl":"info","case":"returns false when module is not enabled","phase":"execution","evt":"test.run"}
-{"ts":1760636127752,"lvl":"info","case":"returns false when module is not enabled","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
+{"ts":1760641846960,"lvl":"info","case":"returns false when module is not enabled","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641846961,"lvl":"info","case":"returns false when module is not enabled","phase":"execution","evt":"test.run"}
+{"ts":1760641846962,"lvl":"info","case":"returns false when module is not enabled","phase":"teardown","evt":"case.end","payload":{"duration":4,"status":"passed"}}
diff --git a/reports/debug-api.spec/shouldEmit_respects_level_hierarchy.jsonl b/reports/debug-api.spec/shouldEmit_respects_level_hierarchy.jsonl
index 77345f7..146c135 100644
--- a/reports/debug-api.spec/shouldEmit_respects_level_hierarchy.jsonl
+++ b/reports/debug-api.spec/shouldEmit_respects_level_hierarchy.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636127782,"lvl":"info","case":"shouldEmit respects level hierarchy","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636127783,"lvl":"info","case":"shouldEmit respects level hierarchy","phase":"execution","evt":"test.run"}
-{"ts":1760636127784,"lvl":"info","case":"shouldEmit respects level hierarchy","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760641846963,"lvl":"info","case":"shouldEmit respects level hierarchy","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641846964,"lvl":"info","case":"shouldEmit respects level hierarchy","phase":"execution","evt":"test.run"}
+{"ts":1760641846965,"lvl":"info","case":"shouldEmit respects level hierarchy","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/debug-api.spec/shouldEmit_returns_false_when_module_is_disabled.jsonl b/reports/debug-api.spec/shouldEmit_returns_false_when_module_is_disabled.jsonl
index 9622fe1..16ff106 100644
--- a/reports/debug-api.spec/shouldEmit_returns_false_when_module_is_disabled.jsonl
+++ b/reports/debug-api.spec/shouldEmit_returns_false_when_module_is_disabled.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636127781,"lvl":"info","case":"shouldEmit returns false when module is disabled","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636127782,"lvl":"info","case":"shouldEmit returns false when module is disabled","phase":"execution","evt":"test.run"}
-{"ts":1760636127783,"lvl":"info","case":"shouldEmit returns false when module is disabled","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
+{"ts":1760641846961,"lvl":"info","case":"shouldEmit returns false when module is disabled","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641846962,"lvl":"info","case":"shouldEmit returns false when module is disabled","phase":"execution","evt":"test.run"}
+{"ts":1760641846963,"lvl":"info","case":"shouldEmit returns false when module is disabled","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/executor.spec/should_instantiate_modules_and_register_with_hostess.jsonl b/reports/executor.spec/should_instantiate_modules_and_register_with_hostess.jsonl
index bda8a46..21c4af9 100644
--- a/reports/executor.spec/should_instantiate_modules_and_register_with_hostess.jsonl
+++ b/reports/executor.spec/should_instantiate_modules_and_register_with_hostess.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636151988,"lvl":"info","case":"should instantiate modules and register with hostess","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636151989,"lvl":"info","case":"should instantiate modules and register with hostess","phase":"execution","evt":"test.run"}
-{"ts":1760636151990,"lvl":"info","case":"should instantiate modules and register with hostess","phase":"teardown","evt":"case.end","payload":{"duration":19,"status":"passed"}}
+{"ts":1760641849339,"lvl":"info","case":"should instantiate modules and register with hostess","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641849340,"lvl":"info","case":"should instantiate modules and register with hostess","phase":"execution","evt":"test.run"}
+{"ts":1760641849341,"lvl":"info","case":"should instantiate modules and register with hostess","phase":"teardown","evt":"case.end","payload":{"duration":181,"status":"passed"}}
diff --git a/reports/executor.spec/should_load_configuration.jsonl b/reports/executor.spec/should_load_configuration.jsonl
index c5a66ba..7f66581 100644
--- a/reports/executor.spec/should_load_configuration.jsonl
+++ b/reports/executor.spec/should_load_configuration.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636151987,"lvl":"info","case":"should load configuration","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636151988,"lvl":"info","case":"should load configuration","phase":"execution","evt":"test.run"}
-{"ts":1760636151989,"lvl":"info","case":"should load configuration","phase":"teardown","evt":"case.end","payload":{"duration":55,"status":"passed"}}
+{"ts":1760641849338,"lvl":"info","case":"should load configuration","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641849339,"lvl":"info","case":"should load configuration","phase":"execution","evt":"test.run"}
+{"ts":1760641849340,"lvl":"info","case":"should load configuration","phase":"teardown","evt":"case.end","payload":{"duration":76,"status":"passed"}}
diff --git a/reports/executor.spec/should_support_restartNode.jsonl b/reports/executor.spec/should_support_restartNode.jsonl
index cf31d7d..df4ba6d 100644
--- a/reports/executor.spec/should_support_restartNode.jsonl
+++ b/reports/executor.spec/should_support_restartNode.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636151988,"lvl":"info","case":"should support restartNode","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636151989,"lvl":"info","case":"should support restartNode","phase":"execution","evt":"test.run"}
-{"ts":1760636151990,"lvl":"info","case":"should support restartNode","phase":"teardown","evt":"case.end","payload":{"duration":27,"status":"passed"}}
+{"ts":1760641849341,"lvl":"info","case":"should support restartNode","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641849342,"lvl":"info","case":"should support restartNode","phase":"execution","evt":"test.run"}
+{"ts":1760641849343,"lvl":"info","case":"should support restartNode","phase":"teardown","evt":"case.end","payload":{"duration":4,"status":"passed"}}
diff --git a/reports/executor.spec/should_throw_if_up___called_without_load__.jsonl b/reports/executor.spec/should_throw_if_up___called_without_load__.jsonl
index 47ef89a..92f3889 100644
--- a/reports/executor.spec/should_throw_if_up___called_without_load__.jsonl
+++ b/reports/executor.spec/should_throw_if_up___called_without_load__.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636151987,"lvl":"info","case":"should throw if up() called without load()","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636151988,"lvl":"info","case":"should throw if up() called without load()","phase":"execution","evt":"test.run"}
-{"ts":1760636151989,"lvl":"info","case":"should throw if up() called without load()","phase":"teardown","evt":"case.end","payload":{"duration":33,"status":"passed"}}
+{"ts":1760641849339,"lvl":"info","case":"should throw if up() called without load()","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641849340,"lvl":"info","case":"should throw if up() called without load()","phase":"execution","evt":"test.run"}
+{"ts":1760641849341,"lvl":"info","case":"should throw if up() called without load()","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
diff --git a/reports/executor.spec/should_throw_on_restartNode_for_non-existent_node.jsonl b/reports/executor.spec/should_throw_on_restartNode_for_non-existent_node.jsonl
index c4a803b..021b565 100644
--- a/reports/executor.spec/should_throw_on_restartNode_for_non-existent_node.jsonl
+++ b/reports/executor.spec/should_throw_on_restartNode_for_non-existent_node.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636151989,"lvl":"info","case":"should throw on restartNode for non-existent node","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636151990,"lvl":"info","case":"should throw on restartNode for non-existent node","phase":"execution","evt":"test.run"}
-{"ts":1760636151991,"lvl":"info","case":"should throw on restartNode for non-existent node","phase":"teardown","evt":"case.end","payload":{"duration":75,"status":"passed"}}
+{"ts":1760641849341,"lvl":"info","case":"should throw on restartNode for non-existent node","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641849342,"lvl":"info","case":"should throw on restartNode for non-existent node","phase":"execution","evt":"test.run"}
+{"ts":1760641849343,"lvl":"info","case":"should throw on restartNode for non-existent node","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/executor.spec/should_wire_connections_via_StateManager.jsonl b/reports/executor.spec/should_wire_connections_via_StateManager.jsonl
index 072d12b..093f8ca 100644
--- a/reports/executor.spec/should_wire_connections_via_StateManager.jsonl
+++ b/reports/executor.spec/should_wire_connections_via_StateManager.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636151988,"lvl":"info","case":"should wire connections via StateManager","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636151989,"lvl":"info","case":"should wire connections via StateManager","phase":"execution","evt":"test.run"}
-{"ts":1760636151990,"lvl":"info","case":"should wire connections via StateManager","phase":"teardown","evt":"case.end","payload":{"duration":46,"status":"passed"}}
+{"ts":1760641849340,"lvl":"info","case":"should wire connections via StateManager","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641849341,"lvl":"info","case":"should wire connections via StateManager","phase":"execution","evt":"test.run"}
+{"ts":1760641849342,"lvl":"info","case":"should wire connections via StateManager","phase":"teardown","evt":"case.end","payload":{"duration":24,"status":"passed"}}
diff --git a/reports/externalServerWrapper.spec/should_gracefully_shutdown_with_SIGTERM.jsonl b/reports/externalServerWrapper.spec/should_gracefully_shutdown_with_SIGTERM.jsonl
index 316285f..8263284 100644
--- a/reports/externalServerWrapper.spec/should_gracefully_shutdown_with_SIGTERM.jsonl
+++ b/reports/externalServerWrapper.spec/should_gracefully_shutdown_with_SIGTERM.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636129565,"lvl":"info","case":"should gracefully shutdown with SIGTERM","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636129566,"lvl":"info","case":"should gracefully shutdown with SIGTERM","phase":"execution","evt":"test.run"}
-{"ts":1760636129567,"lvl":"info","case":"should gracefully shutdown with SIGTERM","phase":"teardown","evt":"case.end","payload":{"duration":80,"status":"passed"}}
+{"ts":1760641849335,"lvl":"info","case":"should gracefully shutdown with SIGTERM","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641849336,"lvl":"info","case":"should gracefully shutdown with SIGTERM","phase":"execution","evt":"test.run"}
+{"ts":1760641849337,"lvl":"info","case":"should gracefully shutdown with SIGTERM","phase":"teardown","evt":"case.end","payload":{"duration":123,"status":"passed"}}
diff --git a/reports/externalServerWrapper.spec/should_handle_environment_variables.jsonl b/reports/externalServerWrapper.spec/should_handle_environment_variables.jsonl
index 345254a..17c5f2b 100644
--- a/reports/externalServerWrapper.spec/should_handle_environment_variables.jsonl
+++ b/reports/externalServerWrapper.spec/should_handle_environment_variables.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636129563,"lvl":"info","case":"should handle environment variables","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636129564,"lvl":"info","case":"should handle environment variables","phase":"execution","evt":"test.run"}
-{"ts":1760636129565,"lvl":"info","case":"should handle environment variables","phase":"teardown","evt":"case.end","payload":{"duration":293,"status":"passed"}}
+{"ts":1760641801835,"lvl":"info","case":"should handle environment variables","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641801836,"lvl":"info","case":"should handle environment variables","phase":"execution","evt":"test.run"}
+{"ts":1760641801837,"lvl":"info","case":"should handle environment variables","phase":"teardown","evt":"case.end","payload":{"duration":294,"status":"passed"}}
diff --git a/reports/externalServerWrapper.spec/should_not_restart_with__never__policy.jsonl b/reports/externalServerWrapper.spec/should_not_restart_with__never__policy.jsonl
index 1e80630..ee0c172 100644
--- a/reports/externalServerWrapper.spec/should_not_restart_with__never__policy.jsonl
+++ b/reports/externalServerWrapper.spec/should_not_restart_with__never__policy.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636152027,"lvl":"info","case":"should not restart with \"never\" policy","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636152028,"lvl":"info","case":"should not restart with \"never\" policy","phase":"execution","evt":"test.run"}
-{"ts":1760636152029,"lvl":"info","case":"should not restart with \"never\" policy","phase":"teardown","evt":"case.end","payload":{"duration":404,"status":"passed"}}
+{"ts":1760641791921,"lvl":"info","case":"should not restart with \"never\" policy","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641791922,"lvl":"info","case":"should not restart with \"never\" policy","phase":"execution","evt":"test.run"}
+{"ts":1760641791923,"lvl":"info","case":"should not restart with \"never\" policy","phase":"teardown","evt":"case.end","payload":{"duration":346,"status":"passed"}}
diff --git a/reports/externalServerWrapper.spec/should_pipe_data_bidirectionally.jsonl b/reports/externalServerWrapper.spec/should_pipe_data_bidirectionally.jsonl
index 88b85d1..a0fea96 100644
--- a/reports/externalServerWrapper.spec/should_pipe_data_bidirectionally.jsonl
+++ b/reports/externalServerWrapper.spec/should_pipe_data_bidirectionally.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636129535,"lvl":"info","case":"should pipe data bidirectionally","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636129536,"lvl":"info","case":"should pipe data bidirectionally","phase":"execution","evt":"test.run"}
-{"ts":1760636129537,"lvl":"info","case":"should pipe data bidirectionally","phase":"teardown","evt":"case.end","payload":{"duration":196,"status":"passed"}}
+{"ts":1760641848470,"lvl":"info","case":"should pipe data bidirectionally","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641848471,"lvl":"info","case":"should pipe data bidirectionally","phase":"execution","evt":"test.run"}
+{"ts":1760641848472,"lvl":"info","case":"should pipe data bidirectionally","phase":"teardown","evt":"case.end","payload":{"duration":243,"status":"passed"}}
diff --git a/reports/externalServerWrapper.spec/should_provide_process_info.jsonl b/reports/externalServerWrapper.spec/should_provide_process_info.jsonl
index 560451a..0071f16 100644
--- a/reports/externalServerWrapper.spec/should_provide_process_info.jsonl
+++ b/reports/externalServerWrapper.spec/should_provide_process_info.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636152028,"lvl":"info","case":"should provide process info","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636152029,"lvl":"info","case":"should provide process info","phase":"execution","evt":"test.run"}
-{"ts":1760636152030,"lvl":"info","case":"should provide process info","phase":"teardown","evt":"case.end","payload":{"duration":76,"status":"passed"}}
+{"ts":1760641870296,"lvl":"info","case":"should provide process info","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641870297,"lvl":"info","case":"should provide process info","phase":"execution","evt":"test.run"}
+{"ts":1760641870298,"lvl":"info","case":"should provide process info","phase":"teardown","evt":"case.end","payload":{"duration":53,"status":"passed"}}
diff --git a/reports/externalServerWrapper.spec/should_register_with_Hostess_on_spawn.jsonl b/reports/externalServerWrapper.spec/should_register_with_Hostess_on_spawn.jsonl
index 9d1bc06..d1848c2 100644
--- a/reports/externalServerWrapper.spec/should_register_with_Hostess_on_spawn.jsonl
+++ b/reports/externalServerWrapper.spec/should_register_with_Hostess_on_spawn.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636129565,"lvl":"info","case":"should register with Hostess on spawn","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636129566,"lvl":"info","case":"should register with Hostess on spawn","phase":"execution","evt":"test.run"}
-{"ts":1760636129567,"lvl":"info","case":"should register with Hostess on spawn","phase":"teardown","evt":"case.end","payload":{"duration":170,"status":"passed"}}
+{"ts":1760641849334,"lvl":"info","case":"should register with Hostess on spawn","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641849335,"lvl":"info","case":"should register with Hostess on spawn","phase":"execution","evt":"test.run"}
+{"ts":1760641849336,"lvl":"info","case":"should register with Hostess on spawn","phase":"teardown","evt":"case.end","payload":{"duration":115,"status":"passed"}}
diff --git a/reports/externalServerWrapper.spec/should_respect_maxRestarts_limit.jsonl b/reports/externalServerWrapper.spec/should_respect_maxRestarts_limit.jsonl
index ea77f25..252eacc 100644
--- a/reports/externalServerWrapper.spec/should_respect_maxRestarts_limit.jsonl
+++ b/reports/externalServerWrapper.spec/should_respect_maxRestarts_limit.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636152027,"lvl":"info","case":"should respect maxRestarts limit","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636152028,"lvl":"info","case":"should respect maxRestarts limit","phase":"execution","evt":"test.run"}
-{"ts":1760636152029,"lvl":"info","case":"should respect maxRestarts limit","phase":"teardown","evt":"case.end","payload":{"duration":621,"status":"passed"}}
+{"ts":1760641870296,"lvl":"info","case":"should respect maxRestarts limit","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641870297,"lvl":"info","case":"should respect maxRestarts limit","phase":"execution","evt":"test.run"}
+{"ts":1760641870298,"lvl":"info","case":"should respect maxRestarts limit","phase":"teardown","evt":"case.end","payload":{"duration":562,"status":"passed"}}
diff --git a/reports/externalServerWrapper.spec/should_spawn_a_simple_process.jsonl b/reports/externalServerWrapper.spec/should_spawn_a_simple_process.jsonl
index 446ece9..11374a8 100644
--- a/reports/externalServerWrapper.spec/should_spawn_a_simple_process.jsonl
+++ b/reports/externalServerWrapper.spec/should_spawn_a_simple_process.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636129535,"lvl":"info","case":"should spawn a simple process","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636129536,"lvl":"info","case":"should spawn a simple process","phase":"execution","evt":"test.run"}
-{"ts":1760636129537,"lvl":"info","case":"should spawn a simple process","phase":"teardown","evt":"case.end","payload":{"duration":366,"status":"passed"}}
+{"ts":1760641848469,"lvl":"info","case":"should spawn a simple process","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641848470,"lvl":"info","case":"should spawn a simple process","phase":"execution","evt":"test.run"}
+{"ts":1760641848471,"lvl":"info","case":"should spawn a simple process","phase":"teardown","evt":"case.end","payload":{"duration":379,"status":"passed"}}
diff --git a/reports/hostess.spec/evicts_after_missed_heartbeats.jsonl b/reports/hostess.spec/evicts_after_missed_heartbeats.jsonl
index 2e97eee..4dc374f 100644
--- a/reports/hostess.spec/evicts_after_missed_heartbeats.jsonl
+++ b/reports/hostess.spec/evicts_after_missed_heartbeats.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636128162,"lvl":"info","case":"evicts after missed heartbeats","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636128163,"lvl":"info","case":"evicts after missed heartbeats","phase":"execution","evt":"test.run"}
-{"ts":1760636128164,"lvl":"info","case":"evicts after missed heartbeats","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
+{"ts":1760641847423,"lvl":"info","case":"evicts after missed heartbeats","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641847424,"lvl":"info","case":"evicts after missed heartbeats","phase":"execution","evt":"test.run"}
+{"ts":1760641847425,"lvl":"info","case":"evicts after missed heartbeats","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/hostess.spec/heartbeat_maintains_liveness.jsonl b/reports/hostess.spec/heartbeat_maintains_liveness.jsonl
index c9a1520..e754442 100644
--- a/reports/hostess.spec/heartbeat_maintains_liveness.jsonl
+++ b/reports/hostess.spec/heartbeat_maintains_liveness.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636128163,"lvl":"info","case":"heartbeat maintains liveness","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636128164,"lvl":"info","case":"heartbeat maintains liveness","phase":"execution","evt":"test.run"}
-{"ts":1760636128165,"lvl":"info","case":"heartbeat maintains liveness","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760641847423,"lvl":"info","case":"heartbeat maintains liveness","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641847424,"lvl":"info","case":"heartbeat maintains liveness","phase":"execution","evt":"test.run"}
+{"ts":1760641847425,"lvl":"info","case":"heartbeat maintains liveness","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/hostess.spec/marks_in-use_and_back_to_available.jsonl b/reports/hostess.spec/marks_in-use_and_back_to_available.jsonl
index 7512987..12042a3 100644
--- a/reports/hostess.spec/marks_in-use_and_back_to_available.jsonl
+++ b/reports/hostess.spec/marks_in-use_and_back_to_available.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636128161,"lvl":"info","case":"marks in-use and back to available","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636128162,"lvl":"info","case":"marks in-use and back to available","phase":"execution","evt":"test.run"}
-{"ts":1760636128163,"lvl":"info","case":"marks in-use and back to available","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
+{"ts":1760641847423,"lvl":"info","case":"marks in-use and back to available","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641847424,"lvl":"info","case":"marks in-use and back to available","phase":"execution","evt":"test.run"}
+{"ts":1760641847425,"lvl":"info","case":"marks in-use and back to available","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/hostess.spec/registers_and_queries_by_capabilities.jsonl b/reports/hostess.spec/registers_and_queries_by_capabilities.jsonl
index abb7950..e9fda5c 100644
--- a/reports/hostess.spec/registers_and_queries_by_capabilities.jsonl
+++ b/reports/hostess.spec/registers_and_queries_by_capabilities.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636128136,"lvl":"info","case":"registers and queries by capabilities","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636128137,"lvl":"info","case":"registers and queries by capabilities","phase":"execution","evt":"test.run"}
-{"ts":1760636128138,"lvl":"info","case":"registers and queries by capabilities","phase":"teardown","evt":"case.end","payload":{"duration":15,"status":"passed"}}
+{"ts":1760641847423,"lvl":"info","case":"registers and queries by capabilities","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641847424,"lvl":"info","case":"registers and queries by capabilities","phase":"execution","evt":"test.run"}
+{"ts":1760641847425,"lvl":"info","case":"registers and queries by capabilities","phase":"teardown","evt":"case.end","payload":{"duration":13,"status":"passed"}}
diff --git a/reports/index.json b/reports/index.json
index 68e91c3..f38ebca 100644
--- a/reports/index.json
+++ b/reports/index.json
@@ -1,222 +1,189 @@
 {
-  "generated": "2025-10-16T17:35:52.031Z",
-  "totalTests": 514,
+  "generated": "2025-10-16T19:11:10.300Z",
+  "totalTests": 524,
   "artifacts": [
     {
-      "testName": "prints structured help with sections and examples",
-      "status": "pass",
-      "duration": 100,
-      "location": "/srv/repos0/mkolbol/tests/cli/mkdxHelp.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.254Z",
-      "artifacts": {
-        "summary": "reports/summary.jsonl",
-        "caseFile": "reports/mkdxHelp.spec/prints_structured_help_with_sections_and_examples.jsonl"
-      }
-    },
-    {
-      "testName": "should forward raw ANSI to writer",
+      "testName": "should create and compare snapshots with masking",
       "status": "pass",
-      "duration": 41,
-      "location": "/srv/repos0/mkolbol/tests/renderers/xtermTTYRenderer.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.255Z",
+      "duration": 5,
+      "location": "/srv/repos0/mkolbol/tests/golden/sample.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:45.985Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/xtermTTYRenderer.spec/should_forward_raw_ANSI_to_writer.jsonl"
+        "caseFile": "reports/sample.spec/should_create_and_compare_snapshots_with_masking.jsonl"
       }
     },
     {
-      "testName": "should emit alt buffer enter/leave when enabled and start/stop called",
+      "testName": "should detect mismatches",
       "status": "pass",
       "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/renderers/xtermTTYRenderer.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.255Z",
-      "artifacts": {
-        "summary": "reports/summary.jsonl",
-        "caseFile": "reports/xtermTTYRenderer.spec/should_emit_alt_buffer_enter_leave_when_enabled_and_start_stop_called.jsonl"
-      }
-    },
-    {
-      "testName": "accepts initial dimensions via constructor options",
-      "status": "pass",
-      "duration": 3,
-      "location": "/srv/repos0/mkolbol/tests/transforms/ansiParser.resize.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.274Z",
+      "location": "/srv/repos0/mkolbol/tests/golden/sample.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:45.986Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.resize.spec/accepts_initial_dimensions_via_constructor_options.jsonl"
+        "caseFile": "reports/sample.spec/should_detect_mismatches.jsonl"
       }
     },
     {
-      "testName": "clamps cursor state when resized to smaller dimensions",
+      "testName": "should support custom mask rules",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/transforms/ansiParser.resize.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.275Z",
-      "artifacts": {
-        "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.resize.spec/clamps_cursor_state_when_resized_to_smaller_dimensions.jsonl"
-      }
-    },
-    {
-      "testName": "emits resize events from CSI 8;n;m t sequences",
-      "status": "pass",
-      "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/transforms/ansiParser.resize.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.275Z",
+      "location": "/srv/repos0/mkolbol/tests/golden/sample.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:45.986Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.resize.spec/emits_resize_events_from_CSI_8_n_m_t_sequences.jsonl"
+        "caseFile": "reports/sample.spec/should_support_custom_mask_rules.jsonl"
       }
     },
     {
-      "testName": "toggles auto-wrap mode via DECSET/DECRST (mode 7)",
+      "testName": "should forward raw ANSI to writer",
       "status": "pass",
-      "duration": 4,
-      "location": "/srv/repos0/mkolbol/tests/transforms/ansiParser.decModes.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.318Z",
+      "duration": 7,
+      "location": "/srv/repos0/mkolbol/tests/renderers/xtermTTYRenderer.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:45.986Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.decModes.spec/toggles_auto-wrap_mode_via_DECSET_DECRST__mode_7_.jsonl"
+        "caseFile": "reports/xtermTTYRenderer.spec/should_forward_raw_ANSI_to_writer.jsonl"
       }
     },
     {
-      "testName": "wraps to the next line when auto-wrap is enabled",
+      "testName": "should emit alt buffer enter/leave when enabled and start/stop called",
       "status": "pass",
-      "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/transforms/ansiParser.decModes.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.319Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/renderers/xtermTTYRenderer.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:45.987Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.decModes.spec/wraps_to_the_next_line_when_auto-wrap_is_enabled.jsonl"
+        "caseFile": "reports/xtermTTYRenderer.spec/should_emit_alt_buffer_enter_leave_when_enabled_and_start_stop_called.jsonl"
       }
     },
     {
-      "testName": "does not wrap when auto-wrap is disabled",
+      "testName": "maps 256-color foreground indices to hex values",
       "status": "pass",
-      "duration": 22,
-      "location": "/srv/repos0/mkolbol/tests/transforms/ansiParser.decModes.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.319Z",
+      "duration": 3,
+      "location": "/srv/repos0/mkolbol/tests/transforms/ansiParser.colors.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:45.987Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.decModes.spec/does_not_wrap_when_auto-wrap_is_disabled.jsonl"
+        "caseFile": "reports/ansiParser.colors.spec/maps_256-color_foreground_indices_to_hex_values.jsonl"
       }
     },
     {
-      "testName": "tracks screen inverse mode via DECSCNM (mode 5)",
+      "testName": "maps 256-color background indices to hex values",
       "status": "pass",
-      "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/transforms/ansiParser.decModes.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.319Z",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/transforms/ansiParser.colors.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:45.987Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.decModes.spec/tracks_screen_inverse_mode_via_DECSCNM__mode_5_.jsonl"
+        "caseFile": "reports/ansiParser.colors.spec/maps_256-color_background_indices_to_hex_values.jsonl"
       }
     },
     {
-      "testName": "maps 256-color foreground indices to hex values",
+      "testName": "converts truecolor RGB foreground values into hex",
       "status": "pass",
-      "duration": 4,
+      "duration": 0,
       "location": "/srv/repos0/mkolbol/tests/transforms/ansiParser.colors.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.319Z",
+      "timestamp": "2025-10-16T19:10:45.990Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.colors.spec/maps_256-color_foreground_indices_to_hex_values.jsonl"
+        "caseFile": "reports/ansiParser.colors.spec/converts_truecolor_RGB_foreground_values_into_hex.jsonl"
       }
     },
     {
-      "testName": "maps 256-color background indices to hex values",
+      "testName": "clamps out-of-range high values for truecolor and palette indices",
       "status": "pass",
-      "duration": 0,
+      "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/transforms/ansiParser.colors.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.320Z",
+      "timestamp": "2025-10-16T19:10:45.990Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.colors.spec/maps_256-color_background_indices_to_hex_values.jsonl"
+        "caseFile": "reports/ansiParser.colors.spec/clamps_out-of-range_high_values_for_truecolor_and_palette_indices.jsonl"
       }
     },
     {
-      "testName": "converts truecolor RGB foreground values into hex",
+      "testName": "toggles auto-wrap mode via DECSET/DECRST (mode 7)",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/transforms/ansiParser.colors.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.320Z",
+      "duration": 4,
+      "location": "/srv/repos0/mkolbol/tests/transforms/ansiParser.decModes.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:45.994Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.colors.spec/converts_truecolor_RGB_foreground_values_into_hex.jsonl"
+        "caseFile": "reports/ansiParser.decModes.spec/toggles_auto-wrap_mode_via_DECSET_DECRST__mode_7_.jsonl"
       }
     },
     {
-      "testName": "clamps out-of-range high values for truecolor and palette indices",
+      "testName": "wraps to the next line when auto-wrap is enabled",
       "status": "pass",
-      "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/transforms/ansiParser.colors.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.320Z",
+      "duration": 3,
+      "location": "/srv/repos0/mkolbol/tests/transforms/ansiParser.decModes.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:45.994Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.colors.spec/clamps_out-of-range_high_values_for_truecolor_and_palette_indices.jsonl"
+        "caseFile": "reports/ansiParser.decModes.spec/wraps_to_the_next_line_when_auto-wrap_is_enabled.jsonl"
       }
     },
     {
-      "testName": "initialize",
+      "testName": "does not wrap when auto-wrap is disabled",
       "status": "pass",
       "duration": 2,
-      "location": "/srv/repos0/mkolbol/archived/mcp-kernel/tests/router.test.ts:0",
-      "timestamp": "2025-10-16T17:35:27.320Z",
+      "location": "/srv/repos0/mkolbol/tests/transforms/ansiParser.decModes.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:45.994Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/router.test/initialize.jsonl"
+        "caseFile": "reports/ansiParser.decModes.spec/does_not_wrap_when_auto-wrap_is_disabled.jsonl"
       }
     },
     {
-      "testName": "tools/resources list read",
+      "testName": "tracks screen inverse mode via DECSCNM (mode 5)",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/archived/mcp-kernel/tests/router.test.ts:0",
-      "timestamp": "2025-10-16T17:35:27.320Z",
+      "location": "/srv/repos0/mkolbol/tests/transforms/ansiParser.decModes.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:45.994Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/router.test/tools_resources_list_read.jsonl"
+        "caseFile": "reports/ansiParser.decModes.spec/tracks_screen_inverse_mode_via_DECSCNM__mode_5_.jsonl"
       }
     },
     {
-      "testName": "should create and compare snapshots with masking",
+      "testName": "accepts initial dimensions via constructor options",
       "status": "pass",
       "duration": 5,
-      "location": "/srv/repos0/mkolbol/tests/golden/sample.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.321Z",
+      "location": "/srv/repos0/mkolbol/tests/transforms/ansiParser.resize.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:45.995Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/sample.spec/should_create_and_compare_snapshots_with_masking.jsonl"
+        "caseFile": "reports/ansiParser.resize.spec/accepts_initial_dimensions_via_constructor_options.jsonl"
       }
     },
     {
-      "testName": "should detect mismatches",
+      "testName": "clamps cursor state when resized to smaller dimensions",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/golden/sample.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.321Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/transforms/ansiParser.resize.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:45.995Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/sample.spec/should_detect_mismatches.jsonl"
+        "caseFile": "reports/ansiParser.resize.spec/clamps_cursor_state_when_resized_to_smaller_dimensions.jsonl"
       }
     },
     {
-      "testName": "should support custom mask rules",
+      "testName": "emits resize events from CSI 8;n;m t sequences",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/golden/sample.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.321Z",
+      "duration": 4,
+      "location": "/srv/repos0/mkolbol/tests/transforms/ansiParser.resize.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:45.995Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/sample.spec/should_support_custom_mask_rules.jsonl"
+        "caseFile": "reports/ansiParser.resize.spec/emits_resize_events_from_CSI_8_n_m_t_sequences.jsonl"
       }
     },
     {
       "testName": "should emit error when stdin is not a TTY",
       "status": "pass",
-      "duration": 12,
+      "duration": 38,
       "location": "/srv/repos0/mkolbol/tests/modules/keyboardInput.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.336Z",
+      "timestamp": "2025-10-16T19:10:46.214Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/keyboardInput.spec/should_emit_error_when_stdin_is_not_a_TTY.jsonl"
@@ -225,9 +192,9 @@
     {
       "testName": "should not activate when stdin is not a TTY",
       "status": "pass",
-      "duration": 1,
+      "duration": 2,
       "location": "/srv/repos0/mkolbol/tests/modules/keyboardInput.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.337Z",
+      "timestamp": "2025-10-16T19:10:46.216Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/keyboardInput.spec/should_not_activate_when_stdin_is_not_a_TTY.jsonl"
@@ -236,9 +203,9 @@
     {
       "testName": "should activate when stdin is a TTY",
       "status": "pass",
-      "duration": 2,
+      "duration": 31,
       "location": "/srv/repos0/mkolbol/tests/modules/keyboardInput.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.337Z",
+      "timestamp": "2025-10-16T19:10:46.216Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/keyboardInput.spec/should_activate_when_stdin_is_a_TTY.jsonl"
@@ -247,9 +214,9 @@
     {
       "testName": "should enable raw mode when starting",
       "status": "pass",
-      "duration": 1,
+      "duration": 19,
       "location": "/srv/repos0/mkolbol/tests/modules/keyboardInput.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.337Z",
+      "timestamp": "2025-10-16T19:10:46.217Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/keyboardInput.spec/should_enable_raw_mode_when_starting.jsonl"
@@ -258,9 +225,9 @@
     {
       "testName": "should store original raw mode state",
       "status": "pass",
-      "duration": 0,
+      "duration": 3,
       "location": "/srv/repos0/mkolbol/tests/modules/keyboardInput.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.337Z",
+      "timestamp": "2025-10-16T19:10:46.218Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/keyboardInput.spec/should_store_original_raw_mode_state.jsonl"
@@ -269,9 +236,9 @@
     {
       "testName": "should restore original raw mode when stopping",
       "status": "pass",
-      "duration": 1,
+      "duration": 3,
       "location": "/srv/repos0/mkolbol/tests/modules/keyboardInput.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.337Z",
+      "timestamp": "2025-10-16T19:10:46.219Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/keyboardInput.spec/should_restore_original_raw_mode_when_stopping.jsonl"
@@ -280,9 +247,9 @@
     {
       "testName": "should not call setRawMode when stopping if not started",
       "status": "pass",
-      "duration": 0,
+      "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/modules/keyboardInput.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.338Z",
+      "timestamp": "2025-10-16T19:10:46.220Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/keyboardInput.spec/should_not_call_setRawMode_when_stopping_if_not_started.jsonl"
@@ -291,9 +258,9 @@
     {
       "testName": "should handle missing setRawMode gracefully",
       "status": "pass",
-      "duration": 2,
+      "duration": 29,
       "location": "/srv/repos0/mkolbol/tests/modules/keyboardInput.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.338Z",
+      "timestamp": "2025-10-16T19:10:46.220Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/keyboardInput.spec/should_handle_missing_setRawMode_gracefully.jsonl"
@@ -304,7 +271,7 @@
       "status": "pass",
       "duration": 2,
       "location": "/srv/repos0/mkolbol/tests/modules/keyboardInput.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.338Z",
+      "timestamp": "2025-10-16T19:10:46.221Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/keyboardInput.spec/should_emit_keypress_event_for_regular_keys.jsonl"
@@ -313,9 +280,9 @@
     {
       "testName": "should handle ctrl modifier",
       "status": "pass",
-      "duration": 1,
+      "duration": 2,
       "location": "/srv/repos0/mkolbol/tests/modules/keyboardInput.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.338Z",
+      "timestamp": "2025-10-16T19:10:46.221Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/keyboardInput.spec/should_handle_ctrl_modifier.jsonl"
@@ -324,9 +291,9 @@
     {
       "testName": "should handle meta and shift modifiers",
       "status": "pass",
-      "duration": 0,
+      "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/modules/keyboardInput.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.338Z",
+      "timestamp": "2025-10-16T19:10:46.222Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/keyboardInput.spec/should_handle_meta_and_shift_modifiers.jsonl"
@@ -335,9 +302,9 @@
     {
       "testName": "should emit ctrl-c event and stop on Ctrl+C",
       "status": "pass",
-      "duration": 1,
+      "duration": 2,
       "location": "/srv/repos0/mkolbol/tests/modules/keyboardInput.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.338Z",
+      "timestamp": "2025-10-16T19:10:46.223Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/keyboardInput.spec/should_emit_ctrl-c_event_and_stop_on_Ctrl_C.jsonl"
@@ -348,7 +315,7 @@
       "status": "pass",
       "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/modules/keyboardInput.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.339Z",
+      "timestamp": "2025-10-16T19:10:46.223Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/keyboardInput.spec/should_not_emit_events_after_stop.jsonl"
@@ -357,9 +324,9 @@
     {
       "testName": "should handle multiple start calls gracefully",
       "status": "pass",
-      "duration": 0,
+      "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/modules/keyboardInput.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.339Z",
+      "timestamp": "2025-10-16T19:10:46.224Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/keyboardInput.spec/should_handle_multiple_start_calls_gracefully.jsonl"
@@ -370,150 +337,139 @@
       "status": "pass",
       "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/modules/keyboardInput.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.339Z",
+      "timestamp": "2025-10-16T19:10:46.224Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/keyboardInput.spec/should_handle_special_keys.jsonl"
       }
     },
     {
-      "testName": "processes extended palette sequences within budget",
-      "status": "pass",
-      "duration": 6,
-      "location": "/srv/repos0/mkolbol/tests/transforms/ansiParser.performance.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.348Z",
-      "artifacts": {
-        "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.performance.spec/processes_extended_palette_sequences_within_budget.jsonl"
-      }
-    },
-    {
-      "testName": "processes truecolor sequences within budget",
+      "testName": "should handle backpressure correctly",
       "status": "pass",
-      "duration": 23,
-      "location": "/srv/repos0/mkolbol/tests/transforms/ansiParser.performance.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.348Z",
+      "duration": 72,
+      "location": "/srv/repos0/mkolbol/tests/worker/workerPipe.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.252Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.performance.spec/processes_truecolor_sequences_within_budget.jsonl"
+        "caseFile": "reports/workerPipe.spec/should_handle_backpressure_correctly.jsonl"
       }
     },
     {
-      "testName": "limits large OSC payload to prevent DOS",
+      "testName": "should send resume signal on _read",
       "status": "pass",
-      "duration": 8,
-      "location": "/srv/repos0/mkolbol/tests/transforms/ansiParser.performance.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.348Z",
+      "duration": 36,
+      "location": "/srv/repos0/mkolbol/tests/worker/workerPipe.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.253Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.performance.spec/limits_large_OSC_payload_to_prevent_DOS.jsonl"
+        "caseFile": "reports/workerPipe.spec/should_send_resume_signal_on__read.jsonl"
       }
     },
     {
-      "testName": "handles incomplete OSC sequences gracefully",
+      "testName": "should create a DevWatcher instance",
       "status": "pass",
-      "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/transforms/ansiParser.performance.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.349Z",
+      "duration": 6,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkDev.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.255Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.performance.spec/handles_incomplete_OSC_sequences_gracefully.jsonl"
+        "caseFile": "reports/mkDev.spec/should_create_a_DevWatcher_instance.jsonl"
       }
     },
     {
-      "testName": "handles nested escape sequences",
+      "testName": "should accept verbose option",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/transforms/ansiParser.performance.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.349Z",
+      "location": "/srv/repos0/mkolbol/tests/cli/mkDev.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.256Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.performance.spec/handles_nested_escape_sequences.jsonl"
+        "caseFile": "reports/mkDev.spec/should_accept_verbose_option.jsonl"
       }
     },
     {
-      "testName": "handles malformed OSC input",
+      "testName": "should accept onReload callback",
       "status": "pass",
-      "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/transforms/ansiParser.performance.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.349Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkDev.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.257Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.performance.spec/handles_malformed_OSC_input.jsonl"
+        "caseFile": "reports/mkDev.spec/should_accept_onReload_callback.jsonl"
       }
     },
     {
-      "testName": "handles very long OSC sequences with proper termination",
+      "testName": "should start watching without errors for empty topology",
       "status": "pass",
-      "duration": 6,
-      "location": "/srv/repos0/mkolbol/tests/transforms/ansiParser.performance.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.349Z",
+      "duration": 27,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkDev.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.258Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.performance.spec/handles_very_long_OSC_sequences_with_proper_termination.jsonl"
+        "caseFile": "reports/mkDev.spec/should_start_watching_without_errors_for_empty_topology.jsonl"
       }
     },
     {
-      "testName": "prevents timeout on pathological input",
+      "testName": "should stop watchers cleanly",
       "status": "pass",
-      "duration": 18,
-      "location": "/srv/repos0/mkolbol/tests/transforms/ansiParser.performance.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.350Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkDev.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.258Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.performance.spec/prevents_timeout_on_pathological_input.jsonl"
+        "caseFile": "reports/mkDev.spec/should_stop_watchers_cleanly.jsonl"
       }
     },
     {
-      "testName": "handles multiple OSC sequences efficiently",
+      "testName": "should handle multiple start/stop cycles",
       "status": "pass",
       "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/transforms/ansiParser.performance.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.350Z",
+      "location": "/srv/repos0/mkolbol/tests/cli/mkDev.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.259Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.performance.spec/handles_multiple_OSC_sequences_efficiently.jsonl"
+        "caseFile": "reports/mkDev.spec/should_handle_multiple_start_stop_cycles.jsonl"
       }
     },
     {
-      "testName": "respects maxParseIterations guard",
+      "testName": "should skip non-inproc modules",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/transforms/ansiParser.performance.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.350Z",
+      "duration": 29,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkDev.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.260Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.performance.spec/respects_maxParseIterations_guard.jsonl"
+        "caseFile": "reports/mkDev.spec/should_skip_non-inproc_modules.jsonl"
       }
     },
     {
-      "testName": "handles OSC with ST terminator",
+      "testName": "should only watch inproc modules",
       "status": "pass",
-      "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/transforms/ansiParser.performance.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.350Z",
+      "duration": 3,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkDev.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.261Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.performance.spec/handles_OSC_with_ST_terminator.jsonl"
+        "caseFile": "reports/mkDev.spec/should_only_watch_inproc_modules.jsonl"
       }
     },
     {
-      "testName": "handles mixed OSC terminators",
+      "testName": "should handle unknown modules gracefully",
       "status": "pass",
-      "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/transforms/ansiParser.performance.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.351Z",
+      "duration": 19,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkDev.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.262Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.performance.spec/handles_mixed_OSC_terminators.jsonl"
+        "caseFile": "reports/mkDev.spec/should_handle_unknown_modules_gracefully.jsonl"
       }
     },
     {
       "testName": "round-trip a control frame",
       "status": "pass",
-      "duration": 8,
+      "duration": 89,
       "location": "/srv/repos0/mkolbol/tests/worker/workerAdapters.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.370Z",
+      "timestamp": "2025-10-16T19:10:46.262Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/workerAdapters.spec/round-trip_a_control_frame.jsonl"
@@ -522,9 +478,9 @@
     {
       "testName": "round-trip a Buffer",
       "status": "pass",
-      "duration": 3,
+      "duration": 4,
       "location": "/srv/repos0/mkolbol/tests/worker/workerAdapters.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.371Z",
+      "timestamp": "2025-10-16T19:10:46.263Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/workerAdapters.spec/round-trip_a_Buffer.jsonl"
@@ -533,3595 +489,4101 @@
     {
       "testName": "assert handshake event structure",
       "status": "pass",
-      "duration": 2,
+      "duration": 4,
       "location": "/srv/repos0/mkolbol/tests/worker/workerAdapters.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.372Z",
+      "timestamp": "2025-10-16T19:10:46.264Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/workerAdapters.spec/assert_handshake_event_structure.jsonl"
       }
     },
     {
-      "testName": "captures error events",
+      "testName": "creates error with code, message, and remediation",
       "status": "pass",
-      "duration": 11,
-      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.406Z",
+      "duration": 4,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.376Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/rulepacks.spec/captures_error_events.jsonl"
+        "caseFile": "reports/mkdxErrors.spec/creates_error_with_code__message__and_remediation.jsonl"
       }
     },
     {
-      "testName": "captures assertion failures",
+      "testName": "creates error with context",
       "status": "pass",
       "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.406Z",
+      "location": "/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.376Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/rulepacks.spec/captures_assertion_failures.jsonl"
+        "caseFile": "reports/mkdxErrors.spec/creates_error_with_context.jsonl"
       }
     },
     {
-      "testName": "captures console output",
+      "testName": "converts to JSON",
       "status": "pass",
-      "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.407Z",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.376Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/rulepacks.spec/captures_console_output.jsonl"
+        "caseFile": "reports/mkdxErrors.spec/converts_to_JSON.jsonl"
       }
     },
     {
-      "testName": "captures test errors",
+      "testName": "formats basic error in text",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.407Z",
+      "location": "/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.377Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/rulepacks.spec/captures_test_errors.jsonl"
+        "caseFile": "reports/mkdxErrors.spec/formats_basic_error_in_text.jsonl"
       }
     },
     {
-      "testName": "captures test failures and panics",
+      "testName": "formats error with file location",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.407Z",
+      "location": "/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.377Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/rulepacks.spec/captures_test_failures_and_panics.jsonl"
+        "caseFile": "reports/mkdxErrors.spec/formats_error_with_file_location.jsonl"
       }
     },
     {
-      "testName": "captures race conditions",
+      "testName": "formats error with expected values",
       "status": "pass",
-      "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.407Z",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.377Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/rulepacks.spec/captures_race_conditions.jsonl"
+        "caseFile": "reports/mkdxErrors.spec/formats_error_with_expected_values.jsonl"
       }
     },
     {
-      "testName": "captures test timeouts",
+      "testName": "formats standard Error in text",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.408Z",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.378Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/rulepacks.spec/captures_test_timeouts.jsonl"
+        "caseFile": "reports/mkdxErrors.spec/formats_standard_Error_in_text.jsonl"
       }
     },
     {
-      "testName": "merges multiple rules from different sources",
+      "testName": "formats error in JSON",
       "status": "pass",
-      "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.408Z",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.378Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/rulepacks.spec/merges_multiple_rules_from_different_sources.jsonl"
+        "caseFile": "reports/mkdxErrors.spec/formats_error_in_JSON.jsonl"
       }
     },
     {
-      "testName": "applies higher priority rules first",
+      "testName": "formats standard Error in JSON",
       "status": "pass",
-      "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.408Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.379Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/rulepacks.spec/applies_higher_priority_rules_first.jsonl"
+        "caseFile": "reports/mkdxErrors.spec/formats_standard_Error_in_JSON.jsonl"
       }
     },
     {
-      "testName": "overrides pack rules with local high-priority rules",
+      "testName": "contains all expected error codes",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.408Z",
+      "duration": 3,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.379Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/rulepacks.spec/overrides_pack_rules_with_local_high-priority_rules.jsonl"
+        "caseFile": "reports/mkdxErrors.spec/contains_all_expected_error_codes.jsonl"
       }
     },
     {
-      "testName": "creates input and output pipes",
+      "testName": "all errors have non-empty messages and remediations",
       "status": "pass",
-      "duration": 5,
-      "location": "/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.409Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.379Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/rateLimiter.spec/creates_input_and_output_pipes.jsonl"
+        "caseFile": "reports/mkdxErrors.spec/all_errors_have_non-empty_messages_and_remediations.jsonl"
       }
     },
     {
-      "testName": "initializes with full token capacity",
+      "testName": "outputs UNKNOWN_COMMAND error in text format",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.409Z",
+      "duration": 90,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.379Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/rateLimiter.spec/initializes_with_full_token_capacity.jsonl"
+        "caseFile": "reports/mkdxErrors.spec/outputs_UNKNOWN_COMMAND_error_in_text_format.jsonl"
       }
     },
     {
-      "testName": "creates input pipe and output pipes",
+      "testName": "outputs UNKNOWN_COMMAND error in JSON format",
       "status": "pass",
-      "duration": 4,
-      "location": "/srv/repos0/mkolbol/tests/transforms/tee.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.409Z",
+      "duration": 114,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.380Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/tee.spec/creates_input_pipe_and_output_pipes.jsonl"
+        "caseFile": "reports/mkdxErrors.spec/outputs_UNKNOWN_COMMAND_error_in_JSON_format.jsonl"
       }
     },
     {
-      "testName": "defaults to 2 output pipes",
+      "testName": "processes extended palette sequences within budget",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/transforms/tee.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.409Z",
+      "duration": 10,
+      "location": "/srv/repos0/mkolbol/tests/transforms/ansiParser.performance.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.380Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/tee.spec/defaults_to_2_output_pipes.jsonl"
+        "caseFile": "reports/ansiParser.performance.spec/processes_extended_palette_sequences_within_budget.jsonl"
       }
     },
     {
-      "testName": "creates configurable number of output pipes",
+      "testName": "processes truecolor sequences within budget",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/transforms/tee.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.409Z",
+      "duration": 26,
+      "location": "/srv/repos0/mkolbol/tests/transforms/ansiParser.performance.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.380Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/tee.spec/creates_configurable_number_of_output_pipes.jsonl"
+        "caseFile": "reports/ansiParser.performance.spec/processes_truecolor_sequences_within_budget.jsonl"
       }
     },
     {
-      "testName": "throws error if outputCount is less than 1",
+      "testName": "limits large OSC payload to prevent DOS",
       "status": "pass",
-      "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/transforms/tee.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.413Z",
+      "duration": 5,
+      "location": "/srv/repos0/mkolbol/tests/transforms/ansiParser.performance.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.381Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/tee.spec/throws_error_if_outputCount_is_less_than_1.jsonl"
+        "caseFile": "reports/ansiParser.performance.spec/limits_large_OSC_payload_to_prevent_DOS.jsonl"
       }
     },
     {
-      "testName": "creates input and output pipes",
+      "testName": "handles incomplete OSC sequences gracefully",
       "status": "pass",
-      "duration": 5,
-      "location": "/srv/repos0/mkolbol/tests/transforms/pipeMeter.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.413Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/transforms/ansiParser.performance.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.381Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/pipeMeter.spec/creates_input_and_output_pipes.jsonl"
+        "caseFile": "reports/ansiParser.performance.spec/handles_incomplete_OSC_sequences_gracefully.jsonl"
       }
     },
     {
-      "testName": "should parse ASCII printable characters",
+      "testName": "handles nested escape sequences",
       "status": "pass",
-      "duration": 4,
-      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.471Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/transforms/ansiParser.performance.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.381Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_parse_ASCII_printable_characters.jsonl"
+        "caseFile": "reports/ansiParser.performance.spec/handles_nested_escape_sequences.jsonl"
       }
     },
     {
-      "testName": "should parse special characters",
+      "testName": "handles malformed OSC input",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.471Z",
+      "duration": 28,
+      "location": "/srv/repos0/mkolbol/tests/transforms/ansiParser.performance.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.381Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_parse_special_characters.jsonl"
+        "caseFile": "reports/ansiParser.performance.spec/handles_malformed_OSC_input.jsonl"
       }
     },
     {
-      "testName": "should parse digits and punctuation",
+      "testName": "handles very long OSC sequences with proper termination",
       "status": "pass",
-      "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.472Z",
+      "duration": 60,
+      "location": "/srv/repos0/mkolbol/tests/transforms/ansiParser.performance.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.382Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_parse_digits_and_punctuation.jsonl"
+        "caseFile": "reports/ansiParser.performance.spec/handles_very_long_OSC_sequences_with_proper_termination.jsonl"
       }
     },
     {
-      "testName": "should handle line feed (LF)",
+      "testName": "prevents timeout on pathological input",
       "status": "pass",
-      "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.472Z",
+      "duration": 82,
+      "location": "/srv/repos0/mkolbol/tests/transforms/ansiParser.performance.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.382Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_line_feed__LF_.jsonl"
+        "caseFile": "reports/ansiParser.performance.spec/prevents_timeout_on_pathological_input.jsonl"
       }
     },
     {
-      "testName": "should handle carriage return (CR)",
+      "testName": "handles multiple OSC sequences efficiently",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.472Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/transforms/ansiParser.performance.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.382Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_carriage_return__CR_.jsonl"
+        "caseFile": "reports/ansiParser.performance.spec/handles_multiple_OSC_sequences_efficiently.jsonl"
       }
     },
     {
-      "testName": "should handle CRLF sequence",
+      "testName": "respects maxParseIterations guard",
       "status": "pass",
-      "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.473Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/transforms/ansiParser.performance.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.383Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_CRLF_sequence.jsonl"
+        "caseFile": "reports/ansiParser.performance.spec/respects_maxParseIterations_guard.jsonl"
       }
     },
     {
-      "testName": "should handle tab (TAB)",
+      "testName": "handles OSC with ST terminator",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.473Z",
+      "location": "/srv/repos0/mkolbol/tests/transforms/ansiParser.performance.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.383Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_tab__TAB_.jsonl"
+        "caseFile": "reports/ansiParser.performance.spec/handles_OSC_with_ST_terminator.jsonl"
       }
     },
     {
-      "testName": "should handle multiple tabs",
+      "testName": "handles mixed OSC terminators",
       "status": "pass",
       "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.474Z",
+      "location": "/srv/repos0/mkolbol/tests/transforms/ansiParser.performance.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.383Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_multiple_tabs.jsonl"
+        "caseFile": "reports/ansiParser.performance.spec/handles_mixed_OSC_terminators.jsonl"
       }
     },
     {
-      "testName": "should handle backspace (BS)",
+      "testName": "should handle simultaneous bidirectional writes",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.474Z",
+      "duration": 39,
+      "location": "/srv/repos0/mkolbol/tests/worker/workerPipe.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.384Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_backspace__BS_.jsonl"
+        "caseFile": "reports/workerPipe.spec/should_handle_simultaneous_bidirectional_writes.jsonl"
       }
     },
     {
-      "testName": "should handle backspace at column 0",
+      "testName": "should handle restartNode errors gracefully",
       "status": "pass",
-      "duration": 31,
-      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.474Z",
+      "duration": 5,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkDev.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.384Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_backspace_at_column_0.jsonl"
+        "caseFile": "reports/mkDev.spec/should_handle_restartNode_errors_gracefully.jsonl"
       }
     },
     {
-      "testName": "should handle foreground color codes (30-37)",
+      "testName": "should handle watch errors gracefully",
       "status": "pass",
-      "duration": 6,
-      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.475Z",
+      "duration": 3,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkDev.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.384Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_foreground_color_codes__30-37_.jsonl"
+        "caseFile": "reports/mkDev.spec/should_handle_watch_errors_gracefully.jsonl"
       }
     },
     {
-      "testName": "should handle all basic foreground colors",
+      "testName": "should create and start a watcher",
       "status": "pass",
-      "duration": 31,
-      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.475Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkDev.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.385Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_all_basic_foreground_colors.jsonl"
+        "caseFile": "reports/mkDev.spec/should_create_and_start_a_watcher.jsonl"
       }
     },
     {
-      "testName": "should handle background color codes (40-47)",
+      "testName": "should accept options",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.475Z",
+      "duration": 3,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkDev.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.385Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_background_color_codes__40-47_.jsonl"
+        "caseFile": "reports/mkDev.spec/should_accept_options.jsonl"
       }
     },
     {
-      "testName": "should handle bright foreground colors (90-97)",
+      "testName": "should log when verbose is enabled",
       "status": "pass",
       "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.476Z",
+      "location": "/srv/repos0/mkolbol/tests/cli/mkDev.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.385Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_bright_foreground_colors__90-97_.jsonl"
+        "caseFile": "reports/mkDev.spec/should_log_when_verbose_is_enabled.jsonl"
       }
     },
     {
-      "testName": "should handle bright background colors (100-107)",
+      "testName": "should not log when verbose is disabled",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.476Z",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkDev.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.385Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_bright_background_colors__100-107_.jsonl"
+        "caseFile": "reports/mkDev.spec/should_not_log_when_verbose_is_disabled.jsonl"
       }
     },
     {
-      "testName": "should handle SGR reset (m with no params)",
+      "testName": "should call onReload callback after successful reload",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.476Z",
+      "location": "/srv/repos0/mkolbol/tests/cli/mkDev.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.386Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_SGR_reset__m_with_no_params_.jsonl"
+        "caseFile": "reports/mkDev.spec/should_call_onReload_callback_after_successful_reload.jsonl"
       }
     },
     {
-      "testName": "should handle SGR reset with explicit 0",
+      "testName": "should handle modules with known paths",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.476Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkDev.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.386Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_SGR_reset_with_explicit_0.jsonl"
+        "caseFile": "reports/mkDev.spec/should_handle_modules_with_known_paths.jsonl"
       }
     },
     {
-      "testName": "should handle multiple SGR parameters",
+      "testName": "should handle modules without known paths",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.492Z",
+      "location": "/srv/repos0/mkolbol/tests/cli/mkDev.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.386Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_multiple_SGR_parameters.jsonl"
+        "caseFile": "reports/mkDev.spec/should_handle_modules_without_known_paths.jsonl"
       }
     },
     {
-      "testName": "should handle CUP (Cursor Position) H command",
+      "testName": "captures assertion failures",
       "status": "pass",
-      "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.493Z",
+      "duration": 3,
+      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.420Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_CUP__Cursor_Position__H_command.jsonl"
+        "caseFile": "reports/rulepacks.spec/captures_assertion_failures.jsonl"
       }
     },
     {
-      "testName": "should handle CUP f command",
+      "testName": "captures console output",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.494Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.421Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_CUP_f_command.jsonl"
+        "caseFile": "reports/rulepacks.spec/captures_console_output.jsonl"
       }
     },
     {
-      "testName": "should handle CUP with default parameters",
+      "testName": "captures test errors",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.494Z",
+      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.422Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_CUP_with_default_parameters.jsonl"
+        "caseFile": "reports/rulepacks.spec/captures_test_errors.jsonl"
       }
     },
     {
-      "testName": "should handle CUU (Cursor Up)",
+      "testName": "captures test failures and panics",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.495Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.422Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_CUU__Cursor_Up_.jsonl"
+        "caseFile": "reports/rulepacks.spec/captures_test_failures_and_panics.jsonl"
       }
     },
     {
-      "testName": "should handle CUU with count parameter",
+      "testName": "captures race conditions",
       "status": "pass",
-      "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.495Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.423Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_CUU_with_count_parameter.jsonl"
+        "caseFile": "reports/rulepacks.spec/captures_race_conditions.jsonl"
       }
     },
     {
-      "testName": "should handle CUU boundary (no move above row 0)",
+      "testName": "merges multiple rules from different sources",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.496Z",
+      "duration": 3,
+      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.438Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_CUU_boundary__no_move_above_row_0_.jsonl"
+        "caseFile": "reports/rulepacks.spec/merges_multiple_rules_from_different_sources.jsonl"
       }
     },
     {
-      "testName": "should handle CUD (Cursor Down)",
+      "testName": "applies higher priority rules first",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.496Z",
-      "artifacts": {
+      "duration": 3,
+      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.438Z",
+      "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_CUD__Cursor_Down_.jsonl"
+        "caseFile": "reports/rulepacks.spec/applies_higher_priority_rules_first.jsonl"
       }
     },
     {
-      "testName": "should handle CUD with count parameter",
+      "testName": "overrides pack rules with local high-priority rules",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.496Z",
+      "duration": 3,
+      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.439Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_CUD_with_count_parameter.jsonl"
+        "caseFile": "reports/rulepacks.spec/overrides_pack_rules_with_local_high-priority_rules.jsonl"
       }
     },
     {
-      "testName": "should handle CUD boundary (no move below last row)",
+      "testName": "redacts JWT tokens in Node.js test events",
       "status": "pass",
-      "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.497Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.457Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_CUD_boundary__no_move_below_last_row_.jsonl"
+        "caseFile": "reports/rulepacks.spec/redacts_JWT_tokens_in_Node_js_test_events.jsonl"
       }
     },
     {
-      "testName": "should handle CUF (Cursor Forward)",
+      "testName": "redacts API keys in test events",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.515Z",
+      "duration": 3,
+      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.469Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_CUF__Cursor_Forward_.jsonl"
+        "caseFile": "reports/rulepacks.spec/redacts_API_keys_in_test_events.jsonl"
       }
     },
     {
-      "testName": "should handle CUF with count parameter",
+      "testName": "should parse ASCII printable characters",
       "status": "pass",
-      "duration": 1,
+      "duration": 3,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.516Z",
+      "timestamp": "2025-10-16T19:10:46.485Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_CUF_with_count_parameter.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_parse_ASCII_printable_characters.jsonl"
       }
     },
     {
-      "testName": "should handle CUF boundary (no move beyond last column)",
+      "testName": "should parse special characters",
       "status": "pass",
-      "duration": 1,
+      "duration": 0,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.516Z",
+      "timestamp": "2025-10-16T19:10:46.485Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_CUF_boundary__no_move_beyond_last_column_.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_parse_special_characters.jsonl"
       }
     },
     {
-      "testName": "should handle CUB (Cursor Back)",
+      "testName": "should parse digits and punctuation",
       "status": "pass",
       "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.517Z",
+      "timestamp": "2025-10-16T19:10:46.486Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_CUB__Cursor_Back_.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_parse_digits_and_punctuation.jsonl"
       }
     },
     {
-      "testName": "should handle CUB with count parameter",
+      "testName": "should handle line feed (LF)",
       "status": "pass",
       "duration": 0,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.529Z",
+      "timestamp": "2025-10-16T19:10:46.486Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_CUB_with_count_parameter.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_line_feed__LF_.jsonl"
       }
     },
     {
-      "testName": "should handle CUB boundary (no move before column 0)",
+      "testName": "should handle carriage return (CR)",
       "status": "pass",
-      "duration": 31,
+      "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.530Z",
+      "timestamp": "2025-10-16T19:10:46.486Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_CUB_boundary__no_move_before_column_0_.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_carriage_return__CR_.jsonl"
       }
     },
     {
-      "testName": "should handle CHA (Cursor Horizontal Absolute) G command",
+      "testName": "should handle CRLF sequence",
       "status": "pass",
-      "duration": 1,
+      "duration": 0,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.530Z",
+      "timestamp": "2025-10-16T19:10:46.486Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_CHA__Cursor_Horizontal_Absolute__G_command.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_CRLF_sequence.jsonl"
       }
     },
     {
-      "testName": "should handle ED 0 (erase from cursor to end of display)",
+      "testName": "should handle tab (TAB)",
       "status": "pass",
-      "duration": 4,
+      "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.531Z",
+      "timestamp": "2025-10-16T19:10:46.486Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_ED_0__erase_from_cursor_to_end_of_display_.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_tab__TAB_.jsonl"
       }
     },
     {
-      "testName": "should handle ED 1 (erase from start to cursor)",
+      "testName": "should handle multiple tabs",
       "status": "pass",
-      "duration": 1,
+      "duration": 0,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.531Z",
+      "timestamp": "2025-10-16T19:10:46.487Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_ED_1__erase_from_start_to_cursor_.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_multiple_tabs.jsonl"
       }
     },
     {
-      "testName": "should handle ED 2 (erase entire display)",
+      "testName": "should handle backspace (BS)",
       "status": "pass",
-      "duration": 89,
+      "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.531Z",
+      "timestamp": "2025-10-16T19:10:46.487Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_ED_2__erase_entire_display_.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_backspace__BS_.jsonl"
       }
     },
     {
-      "testName": "should handle EL 0 (erase from cursor to end of line)",
+      "testName": "should handle backspace at column 0",
       "status": "pass",
-      "duration": 1,
+      "duration": 0,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.532Z",
+      "timestamp": "2025-10-16T19:10:46.487Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_EL_0__erase_from_cursor_to_end_of_line_.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_backspace_at_column_0.jsonl"
       }
     },
     {
-      "testName": "should handle EL 1 (erase from start of line to cursor)",
+      "testName": "should handle foreground color codes (30-37)",
       "status": "pass",
-      "duration": 0,
+      "duration": 22,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.547Z",
+      "timestamp": "2025-10-16T19:10:46.487Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_EL_1__erase_from_start_of_line_to_cursor_.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_foreground_color_codes__30-37_.jsonl"
       }
     },
     {
-      "testName": "should handle EL 2 (erase entire line)",
+      "testName": "should handle all basic foreground colors",
       "status": "pass",
-      "duration": 1,
+      "duration": 2,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.548Z",
+      "timestamp": "2025-10-16T19:10:46.487Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_EL_2__erase_entire_line_.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_all_basic_foreground_colors.jsonl"
       }
     },
     {
-      "testName": "should handle EL with default parameter (same as EL 0)",
+      "testName": "should handle background color codes (40-47)",
       "status": "pass",
-      "duration": 0,
+      "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.548Z",
+      "timestamp": "2025-10-16T19:10:46.487Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_EL_with_default_parameter__same_as_EL_0_.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_background_color_codes__40-47_.jsonl"
       }
     },
     {
-      "testName": "should update cursor position on character write",
+      "testName": "should handle bright foreground colors (90-97)",
       "status": "pass",
-      "duration": 0,
+      "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.549Z",
+      "timestamp": "2025-10-16T19:10:46.487Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_update_cursor_position_on_character_write.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_bright_foreground_colors__90-97_.jsonl"
       }
     },
     {
-      "testName": "should preserve color state across multiple writes",
+      "testName": "should handle bright background colors (100-107)",
       "status": "pass",
       "duration": 0,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.549Z",
+      "timestamp": "2025-10-16T19:10:46.488Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_preserve_color_state_across_multiple_writes.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_bright_background_colors__100-107_.jsonl"
       }
     },
     {
-      "testName": "should update both foreground and background independently",
+      "testName": "should handle SGR reset (m with no params)",
       "status": "pass",
       "duration": 0,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.550Z",
+      "timestamp": "2025-10-16T19:10:46.488Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_update_both_foreground_and_background_independently.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_SGR_reset__m_with_no_params_.jsonl"
       }
     },
     {
-      "testName": "should track cell attributes correctly",
+      "testName": "should handle SGR reset with explicit 0",
       "status": "pass",
       "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.550Z",
+      "timestamp": "2025-10-16T19:10:46.488Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_track_cell_attributes_correctly.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_SGR_reset_with_explicit_0.jsonl"
       }
     },
     {
-      "testName": "should handle invalid escape sequence gracefully",
+      "testName": "should handle multiple SGR parameters",
       "status": "pass",
-      "duration": 0,
+      "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.551Z",
+      "timestamp": "2025-10-16T19:10:46.488Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_invalid_escape_sequence_gracefully.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_multiple_SGR_parameters.jsonl"
       }
     },
     {
-      "testName": "should handle partial escape sequence at buffer end",
+      "testName": "should handle CUP (Cursor Position) H command",
       "status": "pass",
       "duration": 0,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.551Z",
+      "timestamp": "2025-10-16T19:10:46.489Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_partial_escape_sequence_at_buffer_end.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_CUP__Cursor_Position__H_command.jsonl"
       }
     },
     {
-      "testName": "should handle escape sequence with missing parameters",
+      "testName": "should handle CUP f command",
       "status": "pass",
       "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.551Z",
+      "timestamp": "2025-10-16T19:10:46.489Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_escape_sequence_with_missing_parameters.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_CUP_f_command.jsonl"
       }
     },
     {
-      "testName": "should handle empty SGR sequence",
+      "testName": "should handle CUP with default parameters",
       "status": "pass",
       "duration": 0,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.552Z",
+      "timestamp": "2025-10-16T19:10:46.489Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_empty_SGR_sequence.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_CUP_with_default_parameters.jsonl"
       }
     },
     {
-      "testName": "should handle line wrapping",
+      "testName": "should handle CUU (Cursor Up)",
       "status": "pass",
       "duration": 0,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.552Z",
+      "timestamp": "2025-10-16T19:10:46.490Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_line_wrapping.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_CUU__Cursor_Up_.jsonl"
       }
     },
     {
-      "testName": "should handle scrolling when reaching bottom",
+      "testName": "should handle CUU with count parameter",
       "status": "pass",
       "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.552Z",
+      "timestamp": "2025-10-16T19:10:46.490Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_scrolling_when_reaching_bottom.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_CUU_with_count_parameter.jsonl"
       }
     },
     {
-      "testName": "should handle overwrite with colors",
+      "testName": "should handle CUU boundary (no move above row 0)",
       "status": "pass",
       "duration": 0,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.553Z",
+      "timestamp": "2025-10-16T19:10:46.490Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_overwrite_with_colors.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_CUU_boundary__no_move_above_row_0_.jsonl"
       }
     },
     {
-      "testName": "should handle consecutive control characters",
+      "testName": "should handle CUD (Cursor Down)",
       "status": "pass",
       "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.553Z",
+      "timestamp": "2025-10-16T19:10:46.490Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_consecutive_control_characters.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_CUD__Cursor_Down_.jsonl"
       }
     },
     {
-      "testName": "should handle tab at end of line",
+      "testName": "should handle CUD with count parameter",
       "status": "pass",
-      "duration": 0,
+      "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.554Z",
+      "timestamp": "2025-10-16T19:10:46.491Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_tab_at_end_of_line.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_CUD_with_count_parameter.jsonl"
       }
     },
     {
-      "testName": "should handle escape sequence with semicolon but no params",
+      "testName": "should handle CUD boundary (no move below last row)",
       "status": "pass",
       "duration": 0,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.554Z",
+      "timestamp": "2025-10-16T19:10:46.491Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_escape_sequence_with_semicolon_but_no_params.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_CUD_boundary__no_move_below_last_row_.jsonl"
       }
     },
     {
-      "testName": "should handle OSC sequences (ignored)",
+      "testName": "should handle CUF (Cursor Forward)",
       "status": "pass",
-      "duration": 0,
+      "duration": 28,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.554Z",
+      "timestamp": "2025-10-16T19:10:46.491Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_OSC_sequences__ignored_.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_CUF__Cursor_Forward_.jsonl"
       }
     },
     {
-      "testName": "should reset to initial state",
+      "testName": "should handle CUF with count parameter",
       "status": "pass",
-      "duration": 2,
+      "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.555Z",
+      "timestamp": "2025-10-16T19:10:46.491Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_reset_to_initial_state.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_CUF_with_count_parameter.jsonl"
       }
     },
     {
-      "testName": "should maintain state dimensions after reset",
+      "testName": "should handle CUF boundary (no move beyond last column)",
       "status": "pass",
-      "duration": 0,
+      "duration": 20,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.555Z",
+      "timestamp": "2025-10-16T19:10:46.492Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_maintain_state_dimensions_after_reset.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_CUF_boundary__no_move_beyond_last_column_.jsonl"
       }
     },
     {
-      "testName": "should parse 2-byte UTF-8 characters (Latin Extended)",
+      "testName": "should handle CUB (Cursor Back)",
       "status": "pass",
-      "duration": 1,
+      "duration": 2,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.555Z",
+      "timestamp": "2025-10-16T19:10:46.492Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_parse_2-byte_UTF-8_characters__Latin_Extended_.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_CUB__Cursor_Back_.jsonl"
       }
     },
     {
-      "testName": "should parse 2-byte UTF-8 characters (Cyrillic)",
+      "testName": "should handle CUB with count parameter",
       "status": "pass",
-      "duration": 0,
+      "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.556Z",
+      "timestamp": "2025-10-16T19:10:46.492Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_parse_2-byte_UTF-8_characters__Cyrillic_.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_CUB_with_count_parameter.jsonl"
       }
     },
     {
-      "testName": "should parse 3-byte UTF-8 characters (CJK)",
+      "testName": "should handle CUB boundary (no move before column 0)",
       "status": "pass",
       "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.556Z",
+      "timestamp": "2025-10-16T19:10:46.493Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_parse_3-byte_UTF-8_characters__CJK_.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_CUB_boundary__no_move_before_column_0_.jsonl"
       }
     },
     {
-      "testName": "should parse 3-byte UTF-8 characters (Hangul)",
+      "testName": "should handle CHA (Cursor Horizontal Absolute) G command",
       "status": "pass",
-      "duration": 0,
+      "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.556Z",
+      "timestamp": "2025-10-16T19:10:46.493Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_parse_3-byte_UTF-8_characters__Hangul_.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_CHA__Cursor_Horizontal_Absolute__G_command.jsonl"
       }
     },
     {
-      "testName": "should parse 4-byte UTF-8 characters (emoji)",
+      "testName": "should handle ED 0 (erase from cursor to end of display)",
       "status": "pass",
-      "duration": 0,
+      "duration": 27,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.556Z",
+      "timestamp": "2025-10-16T19:10:46.493Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_parse_4-byte_UTF-8_characters__emoji_.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_ED_0__erase_from_cursor_to_end_of_display_.jsonl"
       }
     },
     {
-      "testName": "should handle mixed ASCII and UTF-8",
+      "testName": "should handle ED 1 (erase from start to cursor)",
       "status": "pass",
-      "duration": 1,
+      "duration": 7,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.579Z",
+      "timestamp": "2025-10-16T19:10:46.493Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_mixed_ASCII_and_UTF-8.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_ED_1__erase_from_start_to_cursor_.jsonl"
       }
     },
     {
-      "testName": "should handle UTF-8 with ANSI colors",
+      "testName": "should handle ED 2 (erase entire display)",
       "status": "pass",
-      "duration": 0,
+      "duration": 173,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.579Z",
+      "timestamp": "2025-10-16T19:10:46.494Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_UTF-8_with_ANSI_colors.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_ED_2__erase_entire_display_.jsonl"
       }
     },
     {
-      "testName": "should handle Chinese characters (CJK)",
+      "testName": "should handle EL 0 (erase from cursor to end of line)",
       "status": "pass",
-      "duration": 0,
+      "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.580Z",
+      "timestamp": "2025-10-16T19:10:46.494Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_Chinese_characters__CJK_.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_EL_0__erase_from_cursor_to_end_of_line_.jsonl"
       }
     },
     {
-      "testName": "should handle Japanese Hiragana and Katakana",
+      "testName": "should handle EL 1 (erase from start of line to cursor)",
       "status": "pass",
       "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.580Z",
+      "timestamp": "2025-10-16T19:10:46.494Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_Japanese_Hiragana_and_Katakana.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_EL_1__erase_from_start_of_line_to_cursor_.jsonl"
       }
     },
     {
-      "testName": "should handle emoji sequences",
+      "testName": "should handle EL 2 (erase entire line)",
       "status": "pass",
-      "duration": 0,
+      "duration": 2,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.581Z",
+      "timestamp": "2025-10-16T19:10:46.494Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_emoji_sequences.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_EL_2__erase_entire_line_.jsonl"
       }
     },
     {
-      "testName": "should handle fullwidth alphanumeric",
+      "testName": "should handle EL with default parameter (same as EL 0)",
       "status": "pass",
-      "duration": 1,
+      "duration": 0,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.581Z",
+      "timestamp": "2025-10-16T19:10:46.495Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_fullwidth_alphanumeric.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_EL_with_default_parameter__same_as_EL_0_.jsonl"
       }
     },
     {
-      "testName": "should handle wide chars with line wrapping",
+      "testName": "should update cursor position on character write",
       "status": "pass",
-      "duration": 0,
+      "duration": 28,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.581Z",
+      "timestamp": "2025-10-16T19:10:46.495Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_wide_chars_with_line_wrapping.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_update_cursor_position_on_character_write.jsonl"
       }
     },
     {
-      "testName": "should handle mixed narrow and wide characters",
+      "testName": "should preserve color state across multiple writes",
       "status": "pass",
       "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.581Z",
+      "timestamp": "2025-10-16T19:10:46.495Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_mixed_narrow_and_wide_characters.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_preserve_color_state_across_multiple_writes.jsonl"
       }
     },
     {
-      "testName": "should parse OSC title sequence with BEL terminator",
+      "testName": "should update both foreground and background independently",
       "status": "pass",
-      "duration": 0,
+      "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.594Z",
+      "timestamp": "2025-10-16T19:10:46.496Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_parse_OSC_title_sequence_with_BEL_terminator.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_update_both_foreground_and_background_independently.jsonl"
       }
     },
     {
-      "testName": "should parse OSC title sequence with ST terminator",
+      "testName": "should track cell attributes correctly",
       "status": "pass",
-      "duration": 0,
+      "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.595Z",
+      "timestamp": "2025-10-16T19:10:46.496Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_parse_OSC_title_sequence_with_ST_terminator.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_track_cell_attributes_correctly.jsonl"
       }
     },
     {
-      "testName": "should parse OSC 0 (icon and window title)",
+      "testName": "should handle invalid escape sequence gracefully",
       "status": "pass",
-      "duration": 1,
+      "duration": 5,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.596Z",
+      "timestamp": "2025-10-16T19:10:46.496Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_parse_OSC_0__icon_and_window_title_.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_invalid_escape_sequence_gracefully.jsonl"
       }
     },
     {
-      "testName": "should parse OSC 1 (icon title only)",
+      "testName": "should handle partial escape sequence at buffer end",
       "status": "pass",
-      "duration": 0,
+      "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.596Z",
+      "timestamp": "2025-10-16T19:10:46.496Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_parse_OSC_1__icon_title_only_.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_partial_escape_sequence_at_buffer_end.jsonl"
       }
     },
     {
-      "testName": "should parse OSC 2 (window title only)",
+      "testName": "should handle escape sequence with missing parameters",
       "status": "pass",
-      "duration": 0,
+      "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.596Z",
+      "timestamp": "2025-10-16T19:10:46.497Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_parse_OSC_2__window_title_only_.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_escape_sequence_with_missing_parameters.jsonl"
       }
     },
     {
-      "testName": "should parse OSC with semicolons in payload",
+      "testName": "should handle empty SGR sequence",
       "status": "pass",
-      "duration": 1,
+      "duration": 0,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.597Z",
+      "timestamp": "2025-10-16T19:10:46.497Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_parse_OSC_with_semicolons_in_payload.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_empty_SGR_sequence.jsonl"
       }
     },
     {
-      "testName": "should handle multiple OSC sequences",
+      "testName": "should handle line wrapping",
       "status": "pass",
-      "duration": 0,
+      "duration": 2,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.597Z",
+      "timestamp": "2025-10-16T19:10:46.497Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_multiple_OSC_sequences.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_line_wrapping.jsonl"
       }
     },
     {
-      "testName": "should handle OSC with ANSI sequences",
+      "testName": "should handle scrolling when reaching bottom",
       "status": "pass",
-      "duration": 0,
+      "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.598Z",
+      "timestamp": "2025-10-16T19:10:46.497Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_OSC_with_ANSI_sequences.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_scrolling_when_reaching_bottom.jsonl"
       }
     },
     {
-      "testName": "should handle RIS sequence (ESC c)",
+      "testName": "should handle overwrite with colors",
       "status": "pass",
       "duration": 0,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.598Z",
+      "timestamp": "2025-10-16T19:10:46.498Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_RIS_sequence__ESC_c_.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_overwrite_with_colors.jsonl"
       }
     },
     {
-      "testName": "should clear all formatting on RIS",
+      "testName": "should handle consecutive control characters",
       "status": "pass",
-      "duration": 0,
+      "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.598Z",
+      "timestamp": "2025-10-16T19:10:46.498Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_clear_all_formatting_on_RIS.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_consecutive_control_characters.jsonl"
       }
     },
     {
-      "testName": "should clear scrollback on reset",
+      "testName": "should handle tab at end of line",
       "status": "pass",
-      "duration": 1,
+      "duration": 0,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.599Z",
+      "timestamp": "2025-10-16T19:10:46.498Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_clear_scrollback_on_reset.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_tab_at_end_of_line.jsonl"
       }
     },
     {
-      "testName": "should reset cursor position on RIS",
+      "testName": "should handle escape sequence with semicolon but no params",
       "status": "pass",
       "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.599Z",
+      "timestamp": "2025-10-16T19:10:46.498Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_reset_cursor_position_on_RIS.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_escape_sequence_with_semicolon_but_no_params.jsonl"
       }
     },
     {
-      "testName": "should preserve dimensions on reset",
+      "testName": "should handle OSC sequences (ignored)",
       "status": "pass",
       "duration": 0,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.599Z",
+      "timestamp": "2025-10-16T19:10:46.519Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_preserve_dimensions_on_reset.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_OSC_sequences__ignored_.jsonl"
       }
     },
     {
-      "testName": "should push lines to scrollback on scroll",
+      "testName": "should reset to initial state",
       "status": "pass",
       "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.599Z",
+      "timestamp": "2025-10-16T19:10:46.520Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_push_lines_to_scrollback_on_scroll.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_reset_to_initial_state.jsonl"
       }
     },
     {
-      "testName": "should preserve scrollback content",
+      "testName": "should maintain state dimensions after reset",
       "status": "pass",
       "duration": 0,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.616Z",
+      "timestamp": "2025-10-16T19:10:46.521Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_preserve_scrollback_content.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_maintain_state_dimensions_after_reset.jsonl"
       }
     },
     {
-      "testName": "should preserve colors in scrollback",
+      "testName": "should parse 2-byte UTF-8 characters (Latin Extended)",
       "status": "pass",
-      "duration": 1,
+      "duration": 0,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.617Z",
+      "timestamp": "2025-10-16T19:10:46.521Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_preserve_colors_in_scrollback.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_parse_2-byte_UTF-8_characters__Latin_Extended_.jsonl"
       }
     },
     {
-      "testName": "should handle multiple scrolls",
+      "testName": "should parse 2-byte UTF-8 characters (Cyrillic)",
       "status": "pass",
       "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.617Z",
+      "timestamp": "2025-10-16T19:10:46.521Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_multiple_scrolls.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_parse_2-byte_UTF-8_characters__Cyrillic_.jsonl"
       }
     },
     {
-      "testName": "should maintain scrollback order (FIFO)",
+      "testName": "should parse 3-byte UTF-8 characters (CJK)",
       "status": "pass",
-      "duration": 1,
+      "duration": 0,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.618Z",
+      "timestamp": "2025-10-16T19:10:46.522Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_maintain_scrollback_order__FIFO_.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_parse_3-byte_UTF-8_characters__CJK_.jsonl"
       }
     },
     {
-      "testName": "should keep scrollback independent of visible buffer",
+      "testName": "should parse 3-byte UTF-8 characters (Hangul)",
       "status": "pass",
-      "duration": 0,
+      "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.618Z",
+      "timestamp": "2025-10-16T19:10:46.522Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_keep_scrollback_independent_of_visible_buffer.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_parse_3-byte_UTF-8_characters__Hangul_.jsonl"
       }
     },
     {
-      "testName": "should handle scrollback with wide characters",
+      "testName": "should parse 4-byte UTF-8 characters (emoji)",
       "status": "pass",
-      "duration": 1,
+      "duration": 22,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.619Z",
+      "timestamp": "2025-10-16T19:10:46.545Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_scrollback_with_wide_characters.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_parse_4-byte_UTF-8_characters__emoji_.jsonl"
       }
     },
     {
-      "testName": "should capture full terminal state",
+      "testName": "should handle mixed ASCII and UTF-8",
       "status": "pass",
-      "duration": 1,
+      "duration": 2,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.619Z",
+      "timestamp": "2025-10-16T19:10:46.547Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_capture_full_terminal_state.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_mixed_ASCII_and_UTF-8.jsonl"
       }
     },
     {
-      "testName": "should preserve exact cell content",
+      "testName": "should handle UTF-8 with ANSI colors",
       "status": "pass",
-      "duration": 0,
+      "duration": 31,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.619Z",
+      "timestamp": "2025-10-16T19:10:46.548Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_preserve_exact_cell_content.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_UTF-8_with_ANSI_colors.jsonl"
       }
     },
     {
-      "testName": "should capture cursor position accurately",
+      "testName": "should handle Chinese characters (CJK)",
       "status": "pass",
-      "duration": 0,
+      "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.620Z",
+      "timestamp": "2025-10-16T19:10:46.548Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_capture_cursor_position_accurately.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_Chinese_characters__CJK_.jsonl"
       }
     },
     {
-      "testName": "should capture current SGR state",
+      "testName": "should handle Japanese Hiragana and Katakana",
       "status": "pass",
-      "duration": 1,
+      "duration": 0,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.631Z",
+      "timestamp": "2025-10-16T19:10:46.549Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_capture_current_SGR_state.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_Japanese_Hiragana_and_Katakana.jsonl"
       }
     },
     {
-      "testName": "should export complete scrollback history",
+      "testName": "should handle emoji sequences",
       "status": "pass",
       "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.632Z",
+      "timestamp": "2025-10-16T19:10:46.549Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_export_complete_scrollback_history.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_emoji_sequences.jsonl"
       }
     },
     {
-      "testName": "should handle snapshot of empty buffer",
+      "testName": "should handle fullwidth alphanumeric",
       "status": "pass",
-      "duration": 0,
+      "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.633Z",
+      "timestamp": "2025-10-16T19:10:46.568Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_snapshot_of_empty_buffer.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_fullwidth_alphanumeric.jsonl"
       }
     },
     {
-      "testName": "should maintain state consistency across parses",
+      "testName": "should handle wide chars with line wrapping",
       "status": "pass",
       "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.633Z",
+      "timestamp": "2025-10-16T19:10:46.569Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_maintain_state_consistency_across_parses.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_wide_chars_with_line_wrapping.jsonl"
       }
     },
     {
-      "testName": "should export with metadata preserved",
+      "testName": "should handle mixed narrow and wide characters",
       "status": "pass",
-      "duration": 0,
+      "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.633Z",
+      "timestamp": "2025-10-16T19:10:46.570Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_export_with_metadata_preserved.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_mixed_narrow_and_wide_characters.jsonl"
       }
     },
     {
-      "testName": "should handle UTF-8 with scrollback",
+      "testName": "should parse OSC title sequence with BEL terminator",
       "status": "pass",
       "duration": 0,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.634Z",
+      "timestamp": "2025-10-16T19:10:46.571Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_UTF-8_with_scrollback.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_parse_OSC_title_sequence_with_BEL_terminator.jsonl"
       }
     },
     {
-      "testName": "should handle colors with wide characters",
+      "testName": "should parse OSC title sequence with ST terminator",
       "status": "pass",
-      "duration": 0,
+      "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.634Z",
+      "timestamp": "2025-10-16T19:10:46.571Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_colors_with_wide_characters.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_parse_OSC_title_sequence_with_ST_terminator.jsonl"
       }
     },
     {
-      "testName": "should handle OSC followed by CSI",
+      "testName": "should parse OSC 0 (icon and window title)",
       "status": "pass",
       "duration": 0,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.635Z",
+      "timestamp": "2025-10-16T19:10:46.572Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_OSC_followed_by_CSI.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_parse_OSC_0__icon_and_window_title_.jsonl"
       }
     },
     {
-      "testName": "should handle emoji in colored text",
+      "testName": "should parse OSC 1 (icon title only)",
       "status": "pass",
       "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.635Z",
+      "timestamp": "2025-10-16T19:10:46.572Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_emoji_in_colored_text.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_parse_OSC_1__icon_title_only_.jsonl"
       }
     },
     {
-      "testName": "should maintain deterministic state across resets",
+      "testName": "should parse OSC 2 (window title only)",
       "status": "pass",
       "duration": 0,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.636Z",
+      "timestamp": "2025-10-16T19:10:46.573Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_maintain_deterministic_state_across_resets.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_parse_OSC_2__window_title_only_.jsonl"
       }
     },
     {
-      "testName": "should parse 256-color foreground (38;5;n) without crashing",
+      "testName": "should parse OSC with semicolons in payload",
       "status": "pass",
       "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.636Z",
+      "timestamp": "2025-10-16T19:10:46.574Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_parse_256-color_foreground__38_5_n__without_crashing.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_parse_OSC_with_semicolons_in_payload.jsonl"
       }
     },
     {
-      "testName": "should parse 256-color background (48;5;n) without crashing",
+      "testName": "should handle multiple OSC sequences",
       "status": "pass",
       "duration": 0,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.636Z",
+      "timestamp": "2025-10-16T19:10:46.574Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_parse_256-color_background__48_5_n__without_crashing.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_multiple_OSC_sequences.jsonl"
       }
     },
     {
-      "testName": "should parse 256-color with standard colors (0-15) without crashing",
+      "testName": "should handle OSC with ANSI sequences",
       "status": "pass",
       "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.637Z",
+      "timestamp": "2025-10-16T19:10:46.575Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_parse_256-color_with_standard_colors__0-15__without_crashing.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_OSC_with_ANSI_sequences.jsonl"
       }
     },
     {
-      "testName": "should parse 256-color with 216 color cube (16-231) without crashing",
+      "testName": "should handle RIS sequence (ESC c)",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.575Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/ansiParser.spec/should_handle_RIS_sequence__ESC_c_.jsonl"
+      }
+    },
+    {
+      "testName": "should clear all formatting on RIS",
       "status": "pass",
       "duration": 0,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.637Z",
+      "timestamp": "2025-10-16T19:10:46.576Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_parse_256-color_with_216_color_cube__16-231__without_crashing.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_clear_all_formatting_on_RIS.jsonl"
       }
     },
     {
-      "testName": "should parse 256-color with grayscale (232-255) without crashing",
+      "testName": "should clear scrollback on reset",
       "status": "pass",
       "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.638Z",
+      "timestamp": "2025-10-16T19:10:46.576Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_parse_256-color_with_grayscale__232-255__without_crashing.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_clear_scrollback_on_reset.jsonl"
       }
     },
     {
-      "testName": "should handle both 256-color foreground and background without crashing",
+      "testName": "should reset cursor position on RIS",
       "status": "pass",
-      "duration": 0,
+      "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.638Z",
+      "timestamp": "2025-10-16T19:10:46.577Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_both_256-color_foreground_and_background_without_crashing.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_reset_cursor_position_on_RIS.jsonl"
       }
     },
     {
-      "testName": "should handle 256-color with SGR reset",
+      "testName": "should preserve dimensions on reset",
       "status": "pass",
       "duration": 0,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.638Z",
+      "timestamp": "2025-10-16T19:10:46.577Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_256-color_with_SGR_reset.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_preserve_dimensions_on_reset.jsonl"
       }
     },
     {
-      "testName": "should parse truecolor foreground (38;2;r;g;b) without crashing",
+      "testName": "should push lines to scrollback on scroll",
       "status": "pass",
       "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.639Z",
+      "timestamp": "2025-10-16T19:10:46.578Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_parse_truecolor_foreground__38_2_r_g_b__without_crashing.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_push_lines_to_scrollback_on_scroll.jsonl"
       }
     },
     {
-      "testName": "should parse truecolor background (48;2;r;g;b) without crashing",
+      "testName": "should preserve scrollback content",
       "status": "pass",
-      "duration": 0,
+      "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.639Z",
+      "timestamp": "2025-10-16T19:10:46.578Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_parse_truecolor_background__48_2_r_g_b__without_crashing.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_preserve_scrollback_content.jsonl"
       }
     },
     {
-      "testName": "should parse pure colors without crashing",
+      "testName": "should preserve colors in scrollback",
       "status": "pass",
       "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.667Z",
+      "timestamp": "2025-10-16T19:10:46.578Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_parse_pure_colors_without_crashing.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_preserve_colors_in_scrollback.jsonl"
       }
     },
     {
-      "testName": "should handle both truecolor foreground and background without crashing",
+      "testName": "should handle multiple scrolls",
       "status": "pass",
-      "duration": 0,
+      "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.668Z",
+      "timestamp": "2025-10-16T19:10:46.579Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_both_truecolor_foreground_and_background_without_crashing.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_multiple_scrolls.jsonl"
       }
     },
     {
-      "testName": "should handle truecolor with SGR reset",
+      "testName": "should maintain scrollback order (FIFO)",
       "status": "pass",
       "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.668Z",
+      "timestamp": "2025-10-16T19:10:46.579Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_truecolor_with_SGR_reset.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_maintain_scrollback_order__FIFO_.jsonl"
       }
     },
     {
-      "testName": "should handle truecolor with wide characters",
+      "testName": "should keep scrollback independent of visible buffer",
       "status": "pass",
       "duration": 0,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.669Z",
+      "timestamp": "2025-10-16T19:10:46.580Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_truecolor_with_wide_characters.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_keep_scrollback_independent_of_visible_buffer.jsonl"
       }
     },
     {
-      "testName": "should handle mix of basic colors and truecolor without crashing",
+      "testName": "should handle scrollback with wide characters",
       "status": "pass",
-      "duration": 0,
+      "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.669Z",
+      "timestamp": "2025-10-16T19:10:46.580Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_mix_of_basic_colors_and_truecolor_without_crashing.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_scrollback_with_wide_characters.jsonl"
       }
     },
     {
-      "testName": "should handle resize from constructor",
+      "testName": "should capture full terminal state",
       "status": "pass",
       "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.686Z",
+      "timestamp": "2025-10-16T19:10:46.580Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_resize_from_constructor.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_capture_full_terminal_state.jsonl"
       }
     },
     {
-      "testName": "should preserve content after resize (larger)",
+      "testName": "should preserve exact cell content",
       "status": "pass",
-      "duration": 0,
+      "duration": 20,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.687Z",
+      "timestamp": "2025-10-16T19:10:46.581Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_preserve_content_after_resize__larger_.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_preserve_exact_cell_content.jsonl"
       }
     },
     {
-      "testName": "should handle resize to smaller dimensions",
+      "testName": "should capture cursor position accurately",
       "status": "pass",
       "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.687Z",
+      "timestamp": "2025-10-16T19:10:46.581Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_resize_to_smaller_dimensions.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_capture_cursor_position_accurately.jsonl"
       }
     },
     {
-      "testName": "should reset cursor on dimension change",
+      "testName": "should capture current SGR state",
       "status": "pass",
-      "duration": 0,
+      "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.688Z",
+      "timestamp": "2025-10-16T19:10:46.581Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_reset_cursor_on_dimension_change.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_capture_current_SGR_state.jsonl"
       }
     },
     {
-      "testName": "should maintain determinism after resize",
+      "testName": "should export complete scrollback history",
       "status": "pass",
       "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.688Z",
+      "timestamp": "2025-10-16T19:10:46.581Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_maintain_determinism_after_resize.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_export_complete_scrollback_history.jsonl"
       }
     },
     {
-      "testName": "should handle extreme dimensions",
+      "testName": "should handle snapshot of empty buffer",
       "status": "pass",
-      "duration": 22,
+      "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.688Z",
+      "timestamp": "2025-10-16T19:10:46.582Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_extreme_dimensions.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_snapshot_of_empty_buffer.jsonl"
       }
     },
     {
-      "testName": "should handle minimum dimensions",
+      "testName": "should maintain state consistency across parses",
       "status": "pass",
-      "duration": 3,
+      "duration": 0,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.689Z",
+      "timestamp": "2025-10-16T19:10:46.582Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_minimum_dimensions.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_maintain_state_consistency_across_parses.jsonl"
       }
     },
     {
-      "testName": "should parse DECSET mode 7 (auto-wrap mode)",
+      "testName": "should export with metadata preserved",
       "status": "pass",
-      "duration": 0,
+      "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.689Z",
+      "timestamp": "2025-10-16T19:10:46.582Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_parse_DECSET_mode_7__auto-wrap_mode_.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_export_with_metadata_preserved.jsonl"
       }
     },
     {
-      "testName": "should parse DECRST mode 7 (disable auto-wrap)",
+      "testName": "should handle UTF-8 with scrollback",
       "status": "pass",
-      "duration": 1,
+      "duration": 2,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.689Z",
+      "timestamp": "2025-10-16T19:10:46.582Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_parse_DECRST_mode_7__disable_auto-wrap_.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_UTF-8_with_scrollback.jsonl"
       }
     },
     {
-      "testName": "should parse DECSET mode 1 (application cursor keys)",
+      "testName": "should handle colors with wide characters",
       "status": "pass",
       "duration": 0,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.690Z",
+      "timestamp": "2025-10-16T19:10:46.582Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_parse_DECSET_mode_1__application_cursor_keys_.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_colors_with_wide_characters.jsonl"
       }
     },
     {
-      "testName": "should parse DECRST mode 1 (normal cursor keys)",
+      "testName": "should handle OSC followed by CSI",
       "status": "pass",
       "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.690Z",
+      "timestamp": "2025-10-16T19:10:46.582Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_parse_DECRST_mode_1__normal_cursor_keys_.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_OSC_followed_by_CSI.jsonl"
       }
     },
     {
-      "testName": "should parse DECSET mode 1049 (alternate screen buffer)",
+      "testName": "should handle emoji in colored text",
       "status": "pass",
-      "duration": 23,
+      "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.708Z",
+      "timestamp": "2025-10-16T19:10:46.583Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_parse_DECSET_mode_1049__alternate_screen_buffer_.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_emoji_in_colored_text.jsonl"
       }
     },
     {
-      "testName": "should parse DECRST mode 1049 (restore primary screen)",
+      "testName": "should maintain deterministic state across resets",
       "status": "pass",
       "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.709Z",
+      "timestamp": "2025-10-16T19:10:46.583Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_parse_DECRST_mode_1049__restore_primary_screen_.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_maintain_deterministic_state_across_resets.jsonl"
       }
     },
     {
-      "testName": "should parse DECSET mode 25 (show cursor)",
+      "testName": "should parse 256-color foreground (38;5;n) without crashing",
       "status": "pass",
       "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.709Z",
+      "timestamp": "2025-10-16T19:10:46.583Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_parse_DECSET_mode_25__show_cursor_.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_parse_256-color_foreground__38_5_n__without_crashing.jsonl"
       }
     },
     {
-      "testName": "should parse DECRST mode 25 (hide cursor)",
+      "testName": "should parse 256-color background (48;5;n) without crashing",
       "status": "pass",
-      "duration": 1,
+      "duration": 0,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.709Z",
+      "timestamp": "2025-10-16T19:10:46.601Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_parse_DECRST_mode_25__hide_cursor_.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_parse_256-color_background__48_5_n__without_crashing.jsonl"
       }
     },
     {
-      "testName": "should handle multiple DEC mode switches",
+      "testName": "should parse 256-color with standard colors (0-15) without crashing",
       "status": "pass",
-      "duration": 4,
+      "duration": 2,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.709Z",
+      "timestamp": "2025-10-16T19:10:46.602Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_multiple_DEC_mode_switches.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_parse_256-color_with_standard_colors__0-15__without_crashing.jsonl"
       }
     },
     {
-      "testName": "should maintain content across mode changes",
+      "testName": "should parse 256-color with 216 color cube (16-231) without crashing",
       "status": "pass",
       "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.725Z",
+      "timestamp": "2025-10-16T19:10:46.630Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_maintain_content_across_mode_changes.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_parse_256-color_with_216_color_cube__16-231__without_crashing.jsonl"
       }
     },
     {
-      "testName": "should handle large 256-color sequences efficiently",
+      "testName": "should parse 256-color with grayscale (232-255) without crashing",
       "status": "pass",
       "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.726Z",
+      "timestamp": "2025-10-16T19:10:46.630Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_large_256-color_sequences_efficiently.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_parse_256-color_with_grayscale__232-255__without_crashing.jsonl"
       }
     },
     {
-      "testName": "should handle large truecolor sequences efficiently",
+      "testName": "should handle both 256-color foreground and background without crashing",
       "status": "pass",
-      "duration": 2,
+      "duration": 0,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.727Z",
+      "timestamp": "2025-10-16T19:10:46.656Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_large_truecolor_sequences_efficiently.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_both_256-color_foreground_and_background_without_crashing.jsonl"
       }
     },
     {
-      "testName": "should handle mixed color modes without crashing",
+      "testName": "should handle 256-color with SGR reset",
       "status": "pass",
       "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.727Z",
+      "timestamp": "2025-10-16T19:10:46.656Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_mixed_color_modes_without_crashing.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_256-color_with_SGR_reset.jsonl"
       }
     },
     {
-      "testName": "should handle invalid 256-color parameters gracefully",
+      "testName": "should parse truecolor foreground (38;2;r;g;b) without crashing",
       "status": "pass",
-      "duration": 0,
+      "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.727Z",
+      "timestamp": "2025-10-16T19:10:46.656Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_invalid_256-color_parameters_gracefully.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_parse_truecolor_foreground__38_2_r_g_b__without_crashing.jsonl"
       }
     },
     {
-      "testName": "should handle invalid truecolor parameters gracefully",
+      "testName": "should parse truecolor background (48;2;r;g;b) without crashing",
       "status": "pass",
       "duration": 0,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.728Z",
+      "timestamp": "2025-10-16T19:10:46.688Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_invalid_truecolor_parameters_gracefully.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_parse_truecolor_background__48_2_r_g_b__without_crashing.jsonl"
       }
     },
     {
-      "testName": "should handle partial color sequences at buffer boundary",
+      "testName": "should parse pure colors without crashing",
       "status": "pass",
-      "duration": 1,
+      "duration": 2,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.749Z",
+      "timestamp": "2025-10-16T19:10:46.690Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_partial_color_sequences_at_buffer_boundary.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_parse_pure_colors_without_crashing.jsonl"
       }
     },
     {
-      "testName": "should maintain determinism with complex sequences",
+      "testName": "should handle both truecolor foreground and background without crashing",
       "status": "pass",
       "duration": 0,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.749Z",
+      "timestamp": "2025-10-16T19:10:46.691Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_maintain_determinism_with_complex_sequences.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_both_truecolor_foreground_and_background_without_crashing.jsonl"
       }
     },
     {
-      "testName": "should handle color reset sequences deterministically",
+      "testName": "should handle truecolor with SGR reset",
       "status": "pass",
       "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.749Z",
-      "artifacts": {
-        "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_color_reset_sequences_deterministically.jsonl"
-      }
-    },
-    {
-      "testName": "returns false when module is not enabled",
-      "status": "pass",
-      "duration": 3,
-      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.750Z",
+      "timestamp": "2025-10-16T19:10:46.692Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/debug-api.spec/returns_false_when_module_is_not_enabled.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_truecolor_with_SGR_reset.jsonl"
       }
     },
     {
-      "testName": "returns consistent value for same module",
+      "testName": "should handle truecolor with wide characters",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.751Z",
+      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.692Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/debug-api.spec/returns_consistent_value_for_same_module.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_truecolor_with_wide_characters.jsonl"
       }
     },
     {
-      "testName": "returns false when config is disabled",
+      "testName": "should handle mix of basic colors and truecolor without crashing",
       "status": "pass",
-      "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.751Z",
+      "duration": 4,
+      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.693Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/debug-api.spec/returns_false_when_config_is_disabled.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_mix_of_basic_colors_and_truecolor_without_crashing.jsonl"
       }
     },
     {
-      "testName": "checks module against config.modules when enabled",
+      "testName": "should handle resize from constructor",
       "status": "pass",
       "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.751Z",
+      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.713Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/debug-api.spec/checks_module_against_config_modules_when_enabled.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_resize_from_constructor.jsonl"
       }
     },
     {
-      "testName": "does not emit when on() returns false",
+      "testName": "should preserve content after resize (larger)",
       "status": "pass",
-      "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.752Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.715Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/debug-api.spec/does_not_emit_when_on___returns_false.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_preserve_content_after_resize__larger_.jsonl"
       }
     },
     {
-      "testName": "emit returns immediately when module is disabled",
-      "status": "fail",
-      "duration": 65,
-      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.781Z",
+      "testName": "should handle resize to smaller dimensions",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.716Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/debug-api.spec/emit_returns_immediately_when_module_is_disabled.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_resize_to_smaller_dimensions.jsonl"
       }
     },
     {
-      "testName": "shouldEmit returns false when module is disabled",
+      "testName": "should reset cursor on dimension change",
       "status": "pass",
       "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.781Z",
+      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.717Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/debug-api.spec/shouldEmit_returns_false_when_module_is_disabled.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_reset_cursor_on_dimension_change.jsonl"
       }
     },
     {
-      "testName": "emits to console when module is enabled",
+      "testName": "should maintain determinism after resize",
       "status": "pass",
-      "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.782Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.717Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/debug-api.spec/emits_to_console_when_module_is_enabled.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_maintain_determinism_after_resize.jsonl"
       }
     },
     {
-      "testName": "respects debug level filtering",
+      "testName": "should handle extreme dimensions",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.782Z",
+      "duration": 37,
+      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.747Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/debug-api.spec/respects_debug_level_filtering.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_extreme_dimensions.jsonl"
       }
     },
     {
-      "testName": "emits formatted output to console",
+      "testName": "should handle minimum dimensions",
       "status": "pass",
       "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.782Z",
+      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.748Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/debug-api.spec/emits_formatted_output_to_console.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_minimum_dimensions.jsonl"
       }
     },
     {
-      "testName": "handles emit without payload",
+      "testName": "should parse DECSET mode 7 (auto-wrap mode)",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.782Z",
+      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.748Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/debug-api.spec/handles_emit_without_payload.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_parse_DECSET_mode_7__auto-wrap_mode_.jsonl"
       }
     },
     {
-      "testName": "shouldEmit respects level hierarchy",
+      "testName": "should parse DECRST mode 7 (disable auto-wrap)",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.782Z",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.749Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/debug-api.spec/shouldEmit_respects_level_hierarchy.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_parse_DECRST_mode_7__disable_auto-wrap_.jsonl"
       }
     },
     {
-      "testName": "should register an endpoint with id and coordinates",
+      "testName": "should parse DECSET mode 1 (application cursor keys)",
       "status": "pass",
-      "duration": 55,
-      "location": "/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.807Z",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.749Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/hostessEndpoints.spec/should_register_an_endpoint_with_id_and_coordinates.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_parse_DECSET_mode_1__application_cursor_keys_.jsonl"
       }
     },
     {
-      "testName": "should register multiple endpoints with different ids",
+      "testName": "should parse DECRST mode 1 (normal cursor keys)",
       "status": "pass",
-      "duration": 9,
-      "location": "/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.808Z",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.749Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/hostessEndpoints.spec/should_register_multiple_endpoints_with_different_ids.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_parse_DECRST_mode_1__normal_cursor_keys_.jsonl"
       }
     },
     {
-      "testName": "should overwrite endpoint if registered with same id",
+      "testName": "should parse DECSET mode 1049 (alternate screen buffer)",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.808Z",
+      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.781Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/hostessEndpoints.spec/should_overwrite_endpoint_if_registered_with_same_id.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_parse_DECSET_mode_1049__alternate_screen_buffer_.jsonl"
       }
     },
     {
-      "testName": "should handle endpoint without metadata",
+      "testName": "should parse DECRST mode 1049 (restore primary screen)",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.809Z",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.782Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/hostessEndpoints.spec/should_handle_endpoint_without_metadata.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_parse_DECRST_mode_1049__restore_primary_screen_.jsonl"
       }
     },
     {
-      "testName": "should return empty map when no endpoints registered",
+      "testName": "should parse DECSET mode 25 (show cursor)",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.809Z",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.783Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/hostessEndpoints.spec/should_return_empty_map_when_no_endpoints_registered.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_parse_DECSET_mode_25__show_cursor_.jsonl"
       }
     },
     {
-      "testName": "should return a copy of the endpoints map",
+      "testName": "should parse DECRST mode 25 (hide cursor)",
       "status": "pass",
-      "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.809Z",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.783Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/hostessEndpoints.spec/should_return_a_copy_of_the_endpoints_map.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_parse_DECRST_mode_25__hide_cursor_.jsonl"
       }
     },
     {
-      "testName": "should contain all registered endpoints",
+      "testName": "should handle multiple DEC mode switches",
       "status": "pass",
-      "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.810Z",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.784Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/hostessEndpoints.spec/should_contain_all_registered_endpoints.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_multiple_DEC_mode_switches.jsonl"
       }
     },
     {
-      "testName": "should support inproc endpoint type",
+      "testName": "should maintain content across mode changes",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.810Z",
+      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.785Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/hostessEndpoints.spec/should_support_inproc_endpoint_type.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_maintain_content_across_mode_changes.jsonl"
       }
     },
     {
-      "testName": "should support worker endpoint type",
+      "testName": "should handle large 256-color sequences efficiently",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.810Z",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.786Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/hostessEndpoints.spec/should_support_worker_endpoint_type.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_large_256-color_sequences_efficiently.jsonl"
       }
     },
     {
-      "testName": "should support external endpoint type",
+      "testName": "should handle large truecolor sequences efficiently",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.842Z",
+      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.786Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/hostessEndpoints.spec/should_support_external_endpoint_type.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_large_truecolor_sequences_efficiently.jsonl"
       }
     },
     {
-      "testName": "should support pty endpoint type",
+      "testName": "should handle mixed color modes without crashing",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.844Z",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.787Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/hostessEndpoints.spec/should_support_pty_endpoint_type.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_mixed_color_modes_without_crashing.jsonl"
       }
     },
     {
-      "testName": "should allow endpoints to be registered alongside servers",
+      "testName": "should handle invalid 256-color parameters gracefully",
       "status": "pass",
-      "duration": 5,
-      "location": "/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.845Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.788Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/hostessEndpoints.spec/should_allow_endpoints_to_be_registered_alongside_servers.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_invalid_256-color_parameters_gracefully.jsonl"
       }
     },
     {
-      "testName": "connect moves data 1:1",
+      "testName": "should handle invalid truecolor parameters gracefully",
       "status": "pass",
-      "duration": 18,
-      "location": "/srv/repos0/mkolbol/tests/kernel/kernel.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.846Z",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.788Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/kernel.spec/connect_moves_data_1_1.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_invalid_truecolor_parameters_gracefully.jsonl"
       }
     },
     {
-      "testName": "split fans out to multiple destinations",
+      "testName": "should handle partial color sequences at buffer boundary",
       "status": "pass",
-      "duration": 3,
-      "location": "/srv/repos0/mkolbol/tests/kernel/kernel.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.847Z",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.789Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/kernel.spec/split_fans_out_to_multiple_destinations.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_partial_color_sequences_at_buffer_boundary.jsonl"
       }
     },
     {
-      "testName": "merge combines multiple sources into one destination",
+      "testName": "should maintain determinism with complex sequences",
       "status": "pass",
-      "duration": 3,
-      "location": "/srv/repos0/mkolbol/tests/kernel/kernel.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.848Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.790Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/kernel.spec/merge_combines_multiple_sources_into_one_destination.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_maintain_determinism_with_complex_sequences.jsonl"
       }
     },
     {
-      "testName": "register/lookup filters by capabilities",
+      "testName": "should handle color reset sequences deterministically",
       "status": "pass",
-      "duration": 3,
-      "location": "/srv/repos0/mkolbol/tests/kernel/kernel.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.849Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.790Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/kernel.spec/register_lookup_filters_by_capabilities.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_color_reset_sequences_deterministically.jsonl"
       }
     },
     {
-      "testName": "stores announcements and returns copies via list()",
+      "testName": "connect moves data 1:1",
       "status": "pass",
-      "duration": 8,
-      "location": "/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.849Z",
+      "duration": 31,
+      "location": "/srv/repos0/mkolbol/tests/kernel/kernel.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.791Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/router-inproc.spec/stores_announcements_and_returns_copies_via_list__.jsonl"
+        "caseFile": "reports/kernel.spec/connect_moves_data_1_1.jsonl"
       }
     },
     {
-      "testName": "is idempotent and updates timestamps and metadata",
+      "testName": "split fans out to multiple destinations",
       "status": "pass",
-      "duration": 6,
-      "location": "/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.850Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/kernel/kernel.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.792Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/router-inproc.spec/is_idempotent_and_updates_timestamps_and_metadata.jsonl"
+        "caseFile": "reports/kernel.spec/split_fans_out_to_multiple_destinations.jsonl"
       }
     },
     {
-      "testName": "withdraw removes endpoints",
+      "testName": "merge combines multiple sources into one destination",
       "status": "pass",
       "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.850Z",
+      "location": "/srv/repos0/mkolbol/tests/kernel/kernel.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.793Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/router-inproc.spec/withdraw_removes_endpoints.jsonl"
+        "caseFile": "reports/kernel.spec/merge_combines_multiple_sources_into_one_destination.jsonl"
       }
     },
     {
-      "testName": "allows config without network features when MK_LOCAL_NODE=1",
+      "testName": "register/lookup filters by capabilities",
       "status": "pass",
-      "duration": 21,
-      "location": "/srv/repos0/mkolbol/tests/integration/local-node-gate.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.917Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/kernel/kernel.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.794Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/local-node-gate.spec/allows_config_without_network_features_when_MK_LOCAL_NODE_1.jsonl"
+        "caseFile": "reports/kernel.spec/register_lookup_filters_by_capabilities.jsonl"
       }
     },
     {
-      "testName": "rejects config with type=network when MK_LOCAL_NODE=1",
+      "testName": "redacts private keys in test events",
       "status": "pass",
-      "duration": 3,
-      "location": "/srv/repos0/mkolbol/tests/integration/local-node-gate.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.919Z",
+      "duration": 4,
+      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.909Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/local-node-gate.spec/rejects_config_with_type_network_when_MK_LOCAL_NODE_1.jsonl"
+        "caseFile": "reports/rulepacks.spec/redacts_private_keys_in_test_events.jsonl"
       }
     },
     {
-      "testName": "rejects config with address parameter when MK_LOCAL_NODE=1",
+      "testName": "redacts secrets in Go test output",
       "status": "pass",
       "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/integration/local-node-gate.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.920Z",
+      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.910Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/local-node-gate.spec/rejects_config_with_address_parameter_when_MK_LOCAL_NODE_1.jsonl"
+        "caseFile": "reports/rulepacks.spec/redacts_secrets_in_Go_test_output.jsonl"
       }
     },
     {
-      "testName": "allows config with network features when MK_LOCAL_NODE is not set",
+      "testName": "redacts AWS credentials in Go test logs",
       "status": "pass",
-      "duration": 22,
-      "location": "/srv/repos0/mkolbol/tests/integration/local-node-gate.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.921Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.911Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/local-node-gate.spec/allows_config_with_network_features_when_MK_LOCAL_NODE_is_not_set.jsonl"
+        "caseFile": "reports/rulepacks.spec/redacts_AWS_credentials_in_Go_test_logs.jsonl"
       }
     },
     {
-      "testName": "allows config with network features when MK_LOCAL_NODE=0",
+      "testName": "redacts database URLs in Go test failures",
       "status": "pass",
-      "duration": 3,
-      "location": "/srv/repos0/mkolbol/tests/integration/local-node-gate.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:27.922Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.911Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/local-node-gate.spec/allows_config_with_network_features_when_MK_LOCAL_NODE_0.jsonl"
+        "caseFile": "reports/rulepacks.spec/redacts_database_URLs_in_Go_test_failures.jsonl"
       }
     },
     {
-      "testName": "redacts AWS credentials in test events",
+      "testName": "respects global optOut flag",
       "status": "pass",
-      "duration": 29,
+      "duration": 2,
       "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.011Z",
+      "timestamp": "2025-10-16T19:10:46.912Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/rulepacks.spec/redacts_AWS_credentials_in_test_events.jsonl"
+        "caseFile": "reports/rulepacks.spec/respects_global_optOut_flag.jsonl"
       }
     },
     {
-      "testName": "redacts API keys in test events",
+      "testName": "respects secrets=false flag",
       "status": "pass",
-      "duration": 3,
+      "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.011Z",
+      "timestamp": "2025-10-16T19:10:46.912Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/rulepacks.spec/redacts_API_keys_in_test_events.jsonl"
+        "caseFile": "reports/rulepacks.spec/respects_secrets_false_flag.jsonl"
       }
     },
     {
-      "testName": "redacts URL credentials in test events",
+      "testName": "respects enabled=false flag",
       "status": "pass",
       "duration": 2,
       "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.012Z",
+      "timestamp": "2025-10-16T19:10:46.913Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/rulepacks.spec/redacts_URL_credentials_in_test_events.jsonl"
+        "caseFile": "reports/rulepacks.spec/respects_enabled_false_flag.jsonl"
       }
     },
     {
-      "testName": "redacts private keys in test events",
+      "testName": "detects and redacts all secret types in one event",
       "status": "pass",
       "duration": 2,
       "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.012Z",
+      "timestamp": "2025-10-16T19:10:46.913Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/rulepacks.spec/redacts_private_keys_in_test_events.jsonl"
+        "caseFile": "reports/rulepacks.spec/detects_and_redacts_all_secret_types_in_one_event.jsonl"
       }
     },
     {
-      "testName": "redacts secrets in Go test output",
+      "testName": "redacts multiple occurrences of the same secret type",
       "status": "pass",
       "duration": 2,
       "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.013Z",
+      "timestamp": "2025-10-16T19:10:46.913Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/rulepacks.spec/redacts_secrets_in_Go_test_output.jsonl"
+        "caseFile": "reports/rulepacks.spec/redacts_multiple_occurrences_of_the_same_secret_type.jsonl"
       }
     },
     {
-      "testName": "redacts AWS credentials in Go test logs",
+      "testName": "handles nested secrets in complex objects",
       "status": "pass",
-      "duration": 1,
+      "duration": 6,
       "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.013Z",
+      "timestamp": "2025-10-16T19:10:46.914Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/rulepacks.spec/redacts_AWS_credentials_in_Go_test_logs.jsonl"
+        "caseFile": "reports/rulepacks.spec/handles_nested_secrets_in_complex_objects.jsonl"
       }
     },
     {
-      "testName": "redacts database URLs in Go test failures",
+      "testName": "combines rules from node-defaults and custom rules",
       "status": "pass",
       "duration": 2,
       "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.013Z",
+      "timestamp": "2025-10-16T19:10:46.914Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/rulepacks.spec/redacts_database_URLs_in_Go_test_failures.jsonl"
+        "caseFile": "reports/rulepacks.spec/combines_rules_from_node-defaults_and_custom_rules.jsonl"
       }
     },
     {
-      "testName": "respects global optOut flag",
+      "testName": "combines rules from go-defaults and custom rules",
       "status": "pass",
-      "duration": 2,
+      "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.014Z",
+      "timestamp": "2025-10-16T19:10:46.915Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/rulepacks.spec/respects_global_optOut_flag.jsonl"
+        "caseFile": "reports/rulepacks.spec/combines_rules_from_go-defaults_and_custom_rules.jsonl"
       }
     },
     {
-      "testName": "respects secrets=false flag",
+      "testName": "enforces budget after redaction",
       "status": "pass",
-      "duration": 2,
+      "duration": 54,
       "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.014Z",
+      "timestamp": "2025-10-16T19:10:46.915Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/rulepacks.spec/respects_secrets_false_flag.jsonl"
+        "caseFile": "reports/rulepacks.spec/enforces_budget_after_redaction.jsonl"
       }
     },
     {
-      "testName": "respects enabled=false flag",
+      "testName": "prints ASCII graph by default",
       "status": "pass",
-      "duration": 3,
-      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.014Z",
+      "duration": 169,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkGraph.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.919Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/rulepacks.spec/respects_enabled_false_flag.jsonl"
+        "caseFile": "reports/mkGraph.spec/prints_ASCII_graph_by_default.jsonl"
       }
     },
     {
-      "testName": "detects and redacts all secret types in one event",
+      "testName": "prints JSON graph with --json flag",
       "status": "pass",
-      "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.015Z",
+      "duration": 143,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkGraph.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.942Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/rulepacks.spec/detects_and_redacts_all_secret_types_in_one_event.jsonl"
+        "caseFile": "reports/mkGraph.spec/prints_JSON_graph_with_--json_flag.jsonl"
       }
     },
     {
-      "testName": "redacts multiple occurrences of the same secret type",
+      "testName": "displays ASCII graph with connection types",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.015Z",
+      "duration": 128,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkGraph.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.943Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/rulepacks.spec/redacts_multiple_occurrences_of_the_same_secret_type.jsonl"
+        "caseFile": "reports/mkGraph.spec/displays_ASCII_graph_with_connection_types.jsonl"
       }
     },
     {
-      "testName": "handles nested secrets in complex objects",
+      "testName": "shows error when no config file provided",
       "status": "pass",
-      "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.015Z",
+      "duration": 74,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkGraph.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.944Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/rulepacks.spec/handles_nested_secrets_in_complex_objects.jsonl"
+        "caseFile": "reports/mkGraph.spec/shows_error_when_no_config_file_provided.jsonl"
       }
     },
     {
-      "testName": "combines rules from node-defaults and custom rules",
+      "testName": "shows error for non-existent config file",
       "status": "pass",
-      "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.016Z",
+      "duration": 114,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkGraph.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.944Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/rulepacks.spec/combines_rules_from_node-defaults_and_custom_rules.jsonl"
+        "caseFile": "reports/mkGraph.spec/shows_error_for_non-existent_config_file.jsonl"
       }
     },
     {
-      "testName": "combines rules from go-defaults and custom rules",
+      "testName": "shows help when --help flag is used",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.016Z",
+      "duration": 76,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkGraph.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.945Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/rulepacks.spec/combines_rules_from_go-defaults_and_custom_rules.jsonl"
+        "caseFile": "reports/mkGraph.spec/shows_help_when_--help_flag_is_used.jsonl"
       }
     },
     {
-      "testName": "enforces budget after redaction",
+      "testName": "displays node params in ASCII output",
       "status": "pass",
-      "duration": 6,
-      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.016Z",
+      "duration": 134,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkGraph.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.945Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/rulepacks.spec/enforces_budget_after_redaction.jsonl"
+        "caseFile": "reports/mkGraph.spec/displays_node_params_in_ASCII_output.jsonl"
       }
     },
     {
-      "testName": "creates error with code, message, and remediation",
+      "testName": "includes runMode indicators in ASCII output",
       "status": "pass",
-      "duration": 3,
-      "location": "/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.036Z",
+      "duration": 172,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkGraph.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.946Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/mkdxErrors.spec/creates_error_with_code__message__and_remediation.jsonl"
+        "caseFile": "reports/mkGraph.spec/includes_runMode_indicators_in_ASCII_output.jsonl"
       }
     },
     {
-      "testName": "creates error with context",
+      "testName": "should parse valid YAML",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.037Z",
+      "duration": 114,
+      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.948Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/mkdxErrors.spec/creates_error_with_context.jsonl"
+        "caseFile": "reports/loader.spec/should_parse_valid_YAML.jsonl"
       }
     },
     {
-      "testName": "converts to JSON",
+      "testName": "should parse valid JSON",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.037Z",
+      "duration": 4,
+      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.948Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/mkdxErrors.spec/converts_to_JSON.jsonl"
+        "caseFile": "reports/loader.spec/should_parse_valid_JSON.jsonl"
       }
     },
     {
-      "testName": "formats basic error in text",
+      "testName": "should reject missing nodes",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.037Z",
+      "duration": 12,
+      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.949Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/mkdxErrors.spec/formats_basic_error_in_text.jsonl"
+        "caseFile": "reports/loader.spec/should_reject_missing_nodes.jsonl"
       }
     },
     {
-      "testName": "formats error with file location",
+      "testName": "should reject missing connections",
       "status": "pass",
-      "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.038Z",
+      "duration": 6,
+      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.949Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/mkdxErrors.spec/formats_error_with_file_location.jsonl"
+        "caseFile": "reports/loader.spec/should_reject_missing_connections.jsonl"
       }
     },
     {
-      "testName": "formats error with expected values",
+      "testName": "should reject duplicate node ids",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.038Z",
+      "duration": 28,
+      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.949Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/mkdxErrors.spec/formats_error_with_expected_values.jsonl"
+        "caseFile": "reports/loader.spec/should_reject_duplicate_node_ids.jsonl"
       }
     },
     {
-      "testName": "formats standard Error in text",
+      "testName": "should reject invalid from address without dot",
+      "status": "pass",
+      "duration": 3,
+      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.950Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/loader.spec/should_reject_invalid_from_address_without_dot.jsonl"
+      }
+    },
+    {
+      "testName": "should reject invalid to address without dot",
+      "status": "pass",
+      "duration": 3,
+      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.950Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/loader.spec/should_reject_invalid_to_address_without_dot.jsonl"
+      }
+    },
+    {
+      "testName": "should reject address with multiple dots",
+      "status": "pass",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.950Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/loader.spec/should_reject_address_with_multiple_dots.jsonl"
+      }
+    },
+    {
+      "testName": "should reject address with empty node name",
+      "status": "pass",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.951Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/loader.spec/should_reject_address_with_empty_node_name.jsonl"
+      }
+    },
+    {
+      "testName": "should reject address with empty terminal name",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.951Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/loader.spec/should_reject_address_with_empty_terminal_name.jsonl"
+      }
+    },
+    {
+      "testName": "should reject connection referencing non-existent from node",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.951Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/loader.spec/should_reject_connection_referencing_non-existent_from_node.jsonl"
+      }
+    },
+    {
+      "testName": "should reject connection referencing non-existent to node",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.952Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/loader.spec/should_reject_connection_referencing_non-existent_to_node.jsonl"
+      }
+    },
+    {
+      "testName": "should reject non-object config",
       "status": "pass",
       "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.038Z",
+      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.952Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/loader.spec/should_reject_non-object_config.jsonl"
+      }
+    },
+    {
+      "testName": "should reject non-array nodes",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.952Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/loader.spec/should_reject_non-array_nodes.jsonl"
+      }
+    },
+    {
+      "testName": "should reject non-array connections",
+      "status": "pass",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.953Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/loader.spec/should_reject_non-array_connections.jsonl"
+      }
+    },
+    {
+      "testName": "should reject node without id",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.953Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/loader.spec/should_reject_node_without_id.jsonl"
+      }
+    },
+    {
+      "testName": "should reject node with non-string id",
+      "status": "pass",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.953Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/loader.spec/should_reject_node_with_non-string_id.jsonl"
+      }
+    },
+    {
+      "testName": "should reject node without module",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.954Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/loader.spec/should_reject_node_without_module.jsonl"
+      }
+    },
+    {
+      "testName": "should reject node with non-string module",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.954Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/loader.spec/should_reject_node_with_non-string_module.jsonl"
+      }
+    },
+    {
+      "testName": "should reject connection without from",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.955Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/loader.spec/should_reject_connection_without_from.jsonl"
+      }
+    },
+    {
+      "testName": "should reject connection without to",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.955Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/loader.spec/should_reject_connection_without_to.jsonl"
+      }
+    },
+    {
+      "testName": "should reject connection with non-string from",
+      "status": "pass",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.955Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/loader.spec/should_reject_connection_with_non-string_from.jsonl"
+      }
+    },
+    {
+      "testName": "should reject connection with non-string to",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.956Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/loader.spec/should_reject_connection_with_non-string_to.jsonl"
+      }
+    },
+    {
+      "testName": "should accept valid topology",
+      "status": "pass",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.956Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/loader.spec/should_accept_valid_topology.jsonl"
+      }
+    },
+    {
+      "testName": "creates input pipe and output pipes",
+      "status": "pass",
+      "duration": 37,
+      "location": "/srv/repos0/mkolbol/tests/transforms/tee.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.956Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/tee.spec/creates_input_pipe_and_output_pipes.jsonl"
+      }
+    },
+    {
+      "testName": "defaults to 2 output pipes",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/transforms/tee.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.957Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/tee.spec/defaults_to_2_output_pipes.jsonl"
+      }
+    },
+    {
+      "testName": "creates configurable number of output pipes",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/transforms/tee.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.957Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/tee.spec/creates_configurable_number_of_output_pipes.jsonl"
+      }
+    },
+    {
+      "testName": "throws error if outputCount is less than 1",
+      "status": "pass",
+      "duration": 4,
+      "location": "/srv/repos0/mkolbol/tests/transforms/tee.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.957Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/tee.spec/throws_error_if_outputCount_is_less_than_1.jsonl"
+      }
+    },
+    {
+      "testName": "stores announcements and returns copies via list()",
+      "status": "pass",
+      "duration": 31,
+      "location": "/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.958Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/router-inproc.spec/stores_announcements_and_returns_copies_via_list__.jsonl"
+      }
+    },
+    {
+      "testName": "is idempotent and updates timestamps and metadata",
+      "status": "pass",
+      "duration": 6,
+      "location": "/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.958Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/router-inproc.spec/is_idempotent_and_updates_timestamps_and_metadata.jsonl"
+      }
+    },
+    {
+      "testName": "withdraw removes endpoints",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.959Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/router-inproc.spec/withdraw_removes_endpoints.jsonl"
+      }
+    },
+    {
+      "testName": "creates input and output pipes",
+      "status": "pass",
+      "duration": 9,
+      "location": "/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.959Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/rateLimiter.spec/creates_input_and_output_pipes.jsonl"
+      }
+    },
+    {
+      "testName": "initializes with full token capacity",
+      "status": "pass",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.959Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/rateLimiter.spec/initializes_with_full_token_capacity.jsonl"
+      }
+    },
+    {
+      "testName": "returns false when module is not enabled",
+      "status": "pass",
+      "duration": 4,
+      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.960Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/debug-api.spec/returns_false_when_module_is_not_enabled.jsonl"
+      }
+    },
+    {
+      "testName": "returns consistent value for same module",
+      "status": "pass",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.960Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/debug-api.spec/returns_consistent_value_for_same_module.jsonl"
+      }
+    },
+    {
+      "testName": "returns false when config is disabled",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.961Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/debug-api.spec/returns_false_when_config_is_disabled.jsonl"
+      }
+    },
+    {
+      "testName": "checks module against config.modules when enabled",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.961Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/debug-api.spec/checks_module_against_config_modules_when_enabled.jsonl"
+      }
+    },
+    {
+      "testName": "does not emit when on() returns false",
+      "status": "pass",
+      "duration": 5,
+      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.961Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/debug-api.spec/does_not_emit_when_on___returns_false.jsonl"
+      }
+    },
+    {
+      "testName": "emit returns immediately when module is disabled",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.961Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/debug-api.spec/emit_returns_immediately_when_module_is_disabled.jsonl"
+      }
+    },
+    {
+      "testName": "shouldEmit returns false when module is disabled",
+      "status": "pass",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.962Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/debug-api.spec/shouldEmit_returns_false_when_module_is_disabled.jsonl"
+      }
+    },
+    {
+      "testName": "emits to console when module is enabled",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.962Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/debug-api.spec/emits_to_console_when_module_is_enabled.jsonl"
+      }
+    },
+    {
+      "testName": "respects debug level filtering",
+      "status": "pass",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.962Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/debug-api.spec/respects_debug_level_filtering.jsonl"
+      }
+    },
+    {
+      "testName": "emits formatted output to console",
+      "status": "pass",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.962Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/debug-api.spec/emits_formatted_output_to_console.jsonl"
+      }
+    },
+    {
+      "testName": "handles emit without payload",
+      "status": "pass",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.963Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/debug-api.spec/handles_emit_without_payload.jsonl"
+      }
+    },
+    {
+      "testName": "shouldEmit respects level hierarchy",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.963Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/debug-api.spec/shouldEmit_respects_level_hierarchy.jsonl"
+      }
+    },
+    {
+      "testName": "creates input and output pipes",
+      "status": "pass",
+      "duration": 6,
+      "location": "/srv/repos0/mkolbol/tests/transforms/pipeMeter.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.963Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/pipeMeter.spec/creates_input_and_output_pipes.jsonl"
+      }
+    },
+    {
+      "testName": "should register an endpoint with id and coordinates",
+      "status": "pass",
+      "duration": 7,
+      "location": "/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.981Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/hostessEndpoints.spec/should_register_an_endpoint_with_id_and_coordinates.jsonl"
+      }
+    },
+    {
+      "testName": "should register multiple endpoints with different ids",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.982Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/hostessEndpoints.spec/should_register_multiple_endpoints_with_different_ids.jsonl"
+      }
+    },
+    {
+      "testName": "should overwrite endpoint if registered with same id",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.982Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/hostessEndpoints.spec/should_overwrite_endpoint_if_registered_with_same_id.jsonl"
+      }
+    },
+    {
+      "testName": "should handle endpoint without metadata",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.983Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/hostessEndpoints.spec/should_handle_endpoint_without_metadata.jsonl"
+      }
+    },
+    {
+      "testName": "should return empty map when no endpoints registered",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.983Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/hostessEndpoints.spec/should_return_empty_map_when_no_endpoints_registered.jsonl"
+      }
+    },
+    {
+      "testName": "should return a copy of the endpoints map",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.983Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/mkdxErrors.spec/formats_standard_Error_in_text.jsonl"
+        "caseFile": "reports/hostessEndpoints.spec/should_return_a_copy_of_the_endpoints_map.jsonl"
       }
     },
     {
-      "testName": "formats error in JSON",
+      "testName": "should contain all registered endpoints",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.039Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.984Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/mkdxErrors.spec/formats_error_in_JSON.jsonl"
+        "caseFile": "reports/hostessEndpoints.spec/should_contain_all_registered_endpoints.jsonl"
       }
     },
     {
-      "testName": "formats standard Error in JSON",
+      "testName": "should support inproc endpoint type",
       "status": "pass",
-      "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.039Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.984Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/mkdxErrors.spec/formats_standard_Error_in_JSON.jsonl"
+        "caseFile": "reports/hostessEndpoints.spec/should_support_inproc_endpoint_type.jsonl"
       }
     },
     {
-      "testName": "contains all expected error codes",
+      "testName": "should support worker endpoint type",
       "status": "pass",
-      "duration": 3,
-      "location": "/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.039Z",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.984Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/mkdxErrors.spec/contains_all_expected_error_codes.jsonl"
+        "caseFile": "reports/hostessEndpoints.spec/should_support_worker_endpoint_type.jsonl"
       }
     },
     {
-      "testName": "all errors have non-empty messages and remediations",
+      "testName": "should support external endpoint type",
       "status": "pass",
-      "duration": 3,
-      "location": "/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.040Z",
+      "duration": 24,
+      "location": "/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.985Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/mkdxErrors.spec/all_errors_have_non-empty_messages_and_remediations.jsonl"
+        "caseFile": "reports/hostessEndpoints.spec/should_support_external_endpoint_type.jsonl"
       }
     },
     {
-      "testName": "outputs UNKNOWN_COMMAND error in text format",
+      "testName": "should support pty endpoint type",
       "status": "pass",
-      "duration": 99,
-      "location": "/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.040Z",
+      "duration": 28,
+      "location": "/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.985Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/mkdxErrors.spec/outputs_UNKNOWN_COMMAND_error_in_text_format.jsonl"
+        "caseFile": "reports/hostessEndpoints.spec/should_support_pty_endpoint_type.jsonl"
       }
     },
     {
-      "testName": "outputs UNKNOWN_COMMAND error in JSON format",
+      "testName": "should allow endpoints to be registered alongside servers",
       "status": "pass",
-      "duration": 97,
-      "location": "/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.040Z",
+      "duration": 25,
+      "location": "/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:46.985Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/mkdxErrors.spec/outputs_UNKNOWN_COMMAND_error_in_JSON_format.jsonl"
+        "caseFile": "reports/hostessEndpoints.spec/should_allow_endpoints_to_be_registered_alongside_servers.jsonl"
       }
     },
     {
-      "testName": "should handle Buffer data in non-object mode",
+      "testName": "shows help when --help flag is used",
       "status": "pass",
-      "duration": 60,
-      "location": "/srv/repos0/mkolbol/tests/worker/workerPipe.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.041Z",
+      "duration": 111,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkLogs.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.411Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/workerPipe.spec/should_handle_Buffer_data_in_non-object_mode.jsonl"
+        "caseFile": "reports/mkLogs.spec/shows_help_when_--help_flag_is_used.jsonl"
       }
     },
     {
-      "testName": "should propagate messageerror to stream",
+      "testName": "tails logs in human-readable format by default",
       "status": "pass",
-      "duration": 178,
-      "location": "/srv/repos0/mkolbol/tests/worker/workerPipe.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.041Z",
+      "duration": 129,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkLogs.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.412Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/workerPipe.spec/should_propagate_messageerror_to_stream.jsonl"
+        "caseFile": "reports/mkLogs.spec/tails_logs_in_human-readable_format_by_default.jsonl"
       }
     },
     {
-      "testName": "should handle port close event",
+      "testName": "filters logs by module name",
       "status": "pass",
-      "duration": 43,
-      "location": "/srv/repos0/mkolbol/tests/worker/workerPipe.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.041Z",
+      "duration": 98,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkLogs.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.412Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/workerPipe.spec/should_handle_port_close_event.jsonl"
+        "caseFile": "reports/mkLogs.spec/filters_logs_by_module_name.jsonl"
       }
     },
     {
-      "testName": "should handle errors in _write callback",
+      "testName": "filters logs by level (error)",
       "status": "pass",
-      "duration": 91,
-      "location": "/srv/repos0/mkolbol/tests/worker/workerPipe.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.042Z",
+      "duration": 100,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkLogs.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.413Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/workerPipe.spec/should_handle_errors_in__write_callback.jsonl"
+        "caseFile": "reports/mkLogs.spec/filters_logs_by_level__error_.jsonl"
       }
     },
     {
-      "testName": "should send end signal on finish event",
+      "testName": "filters logs by level (warn) includes error and warn",
       "status": "pass",
-      "duration": 65,
-      "location": "/srv/repos0/mkolbol/tests/worker/workerPipe.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.042Z",
+      "duration": 111,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkLogs.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.413Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/workerPipe.spec/should_send_end_signal_on_finish_event.jsonl"
+        "caseFile": "reports/mkLogs.spec/filters_logs_by_level__warn__includes_error_and_warn.jsonl"
       }
     },
     {
-      "testName": "should handle end signal from remote port",
+      "testName": "filters logs by level (info) includes error, warn, and info",
       "status": "pass",
-      "duration": 104,
-      "location": "/srv/repos0/mkolbol/tests/worker/workerPipe.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.042Z",
+      "duration": 103,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkLogs.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.414Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/workerPipe.spec/should_handle_end_signal_from_remote_port.jsonl"
+        "caseFile": "reports/mkLogs.spec/filters_logs_by_level__info__includes_error__warn__and_info.jsonl"
       }
     },
     {
-      "testName": "releases messages when tokens become available",
+      "testName": "outputs logs in JSON format with --json flag",
       "status": "pass",
-      "duration": 199,
-      "location": "/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.043Z",
+      "duration": 112,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkLogs.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.414Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/rateLimiter.spec/releases_messages_when_tokens_become_available.jsonl"
+        "caseFile": "reports/mkLogs.spec/outputs_logs_in_JSON_format_with_--json_flag.jsonl"
       }
     },
     {
-      "testName": "refills tokens at specified rate",
+      "testName": "combines multiple filters (module and level)",
       "status": "pass",
-      "duration": 211,
-      "location": "/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.043Z",
+      "duration": 143,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkLogs.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.415Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/rateLimiter.spec/refills_tokens_at_specified_rate.jsonl"
+        "caseFile": "reports/mkLogs.spec/combines_multiple_filters__module_and_level_.jsonl"
       }
     },
     {
-      "testName": "handles object mode data",
+      "testName": "limits output lines with --lines flag",
       "status": "pass",
-      "duration": 76,
-      "location": "/srv/repos0/mkolbol/tests/transforms/tee.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.043Z",
+      "duration": 159,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkLogs.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.415Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/tee.spec/handles_object_mode_data.jsonl"
+        "caseFile": "reports/mkLogs.spec/limits_output_lines_with_--lines_flag.jsonl"
       }
     },
     {
-      "testName": "handles buffer mode data",
+      "testName": "shows error for invalid level",
       "status": "pass",
-      "duration": 68,
-      "location": "/srv/repos0/mkolbol/tests/transforms/tee.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.044Z",
+      "duration": 111,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkLogs.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.415Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/tee.spec/handles_buffer_mode_data.jsonl"
+        "caseFile": "reports/mkLogs.spec/shows_error_for_invalid_level.jsonl"
       }
     },
     {
-      "testName": "tracks total bytes for string chunks",
+      "testName": "shows error for invalid --lines value",
       "status": "pass",
-      "duration": 61,
-      "location": "/srv/repos0/mkolbol/tests/transforms/pipeMeter.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.044Z",
+      "duration": 69,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkLogs.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.415Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/pipeMeter.spec/tracks_total_bytes_for_string_chunks.jsonl"
+        "caseFile": "reports/mkLogs.spec/shows_error_for_invalid_--lines_value.jsonl"
       }
     },
     {
-      "testName": "tracks total bytes for buffer chunks",
+      "testName": "should close port on destroy",
       "status": "pass",
-      "duration": 85,
-      "location": "/srv/repos0/mkolbol/tests/transforms/pipeMeter.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.044Z",
+      "duration": 25,
+      "location": "/srv/repos0/mkolbol/tests/worker/workerPipe.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.416Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/pipeMeter.spec/tracks_total_bytes_for_buffer_chunks.jsonl"
+        "caseFile": "reports/workerPipe.spec/should_close_port_on_destroy.jsonl"
       }
     },
     {
-      "testName": "tracks total bytes for object chunks",
+      "testName": "should propagate error in destroy",
       "status": "pass",
-      "duration": 53,
-      "location": "/srv/repos0/mkolbol/tests/transforms/pipeMeter.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.044Z",
+      "duration": 68,
+      "location": "/srv/repos0/mkolbol/tests/worker/workerPipe.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.416Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/pipeMeter.spec/tracks_total_bytes_for_object_chunks.jsonl"
+        "caseFile": "reports/workerPipe.spec/should_propagate_error_in_destroy.jsonl"
       }
     },
     {
-      "testName": "sweep keeps fresh endpoints",
+      "testName": "should handle complete lifecycle end-to-end",
       "status": "pass",
-      "duration": 130,
-      "location": "/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.045Z",
+      "duration": 6,
+      "location": "/srv/repos0/mkolbol/tests/worker/workerPipe.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.417Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/router-inproc.spec/sweep_keeps_fresh_endpoints.jsonl"
+        "caseFile": "reports/workerPipe.spec/should_handle_complete_lifecycle_end-to-end.jsonl"
       }
     },
     {
-      "testName": "startSweeper automatically removes stale endpoints",
+      "testName": "allows config without network features when MK_LOCAL_NODE=1",
       "status": "pass",
-      "duration": 279,
-      "location": "/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.045Z",
+      "duration": 78,
+      "location": "/srv/repos0/mkolbol/tests/integration/local-node-gate.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.417Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/router-inproc.spec/startSweeper_automatically_removes_stale_endpoints.jsonl"
+        "caseFile": "reports/local-node-gate.spec/allows_config_without_network_features_when_MK_LOCAL_NODE_1.jsonl"
       }
     },
     {
-      "testName": "should parse valid YAML",
+      "testName": "rejects config with type=network when MK_LOCAL_NODE=1",
       "status": "pass",
-      "duration": 15,
-      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.046Z",
+      "duration": 5,
+      "location": "/srv/repos0/mkolbol/tests/integration/local-node-gate.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.418Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/loader.spec/should_parse_valid_YAML.jsonl"
+        "caseFile": "reports/local-node-gate.spec/rejects_config_with_type_network_when_MK_LOCAL_NODE_1.jsonl"
       }
     },
     {
-      "testName": "should parse valid JSON",
+      "testName": "rejects config with address parameter when MK_LOCAL_NODE=1",
       "status": "pass",
-      "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.046Z",
+      "duration": 52,
+      "location": "/srv/repos0/mkolbol/tests/integration/local-node-gate.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.418Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/loader.spec/should_parse_valid_JSON.jsonl"
+        "caseFile": "reports/local-node-gate.spec/rejects_config_with_address_parameter_when_MK_LOCAL_NODE_1.jsonl"
       }
     },
     {
-      "testName": "should reject missing nodes",
+      "testName": "allows config with network features when MK_LOCAL_NODE is not set",
       "status": "pass",
-      "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.046Z",
+      "duration": 27,
+      "location": "/srv/repos0/mkolbol/tests/integration/local-node-gate.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.418Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/loader.spec/should_reject_missing_nodes.jsonl"
+        "caseFile": "reports/local-node-gate.spec/allows_config_with_network_features_when_MK_LOCAL_NODE_is_not_set.jsonl"
       }
     },
     {
-      "testName": "should reject missing connections",
+      "testName": "allows config with network features when MK_LOCAL_NODE=0",
       "status": "pass",
-      "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.046Z",
+      "duration": 6,
+      "location": "/srv/repos0/mkolbol/tests/integration/local-node-gate.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.418Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/loader.spec/should_reject_missing_connections.jsonl"
+        "caseFile": "reports/local-node-gate.spec/allows_config_with_network_features_when_MK_LOCAL_NODE_0.jsonl"
       }
     },
     {
-      "testName": "should reject duplicate node ids",
+      "testName": "handles single output pipe",
       "status": "pass",
-      "duration": 4,
-      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.047Z",
+      "duration": 85,
+      "location": "/srv/repos0/mkolbol/tests/transforms/tee.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.418Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/loader.spec/should_reject_duplicate_node_ids.jsonl"
+        "caseFile": "reports/tee.spec/handles_single_output_pipe.jsonl"
       }
     },
     {
-      "testName": "should reject invalid from address without dot",
+      "testName": "handles object mode data",
       "status": "pass",
-      "duration": 3,
-      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.047Z",
+      "duration": 93,
+      "location": "/srv/repos0/mkolbol/tests/transforms/tee.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.419Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/loader.spec/should_reject_invalid_from_address_without_dot.jsonl"
+        "caseFile": "reports/tee.spec/handles_object_mode_data.jsonl"
       }
     },
     {
-      "testName": "should reject invalid to address without dot",
+      "testName": "handles buffer mode data",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.047Z",
+      "duration": 97,
+      "location": "/srv/repos0/mkolbol/tests/transforms/tee.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.419Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/loader.spec/should_reject_invalid_to_address_without_dot.jsonl"
+        "caseFile": "reports/tee.spec/handles_buffer_mode_data.jsonl"
       }
     },
     {
-      "testName": "should reject address with multiple dots",
+      "testName": "sweep keeps fresh endpoints",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.048Z",
+      "duration": 175,
+      "location": "/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.420Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/loader.spec/should_reject_address_with_multiple_dots.jsonl"
+        "caseFile": "reports/router-inproc.spec/sweep_keeps_fresh_endpoints.jsonl"
       }
     },
     {
-      "testName": "should reject address with empty node name",
+      "testName": "startSweeper automatically removes stale endpoints",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.048Z",
+      "duration": 244,
+      "location": "/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.420Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/loader.spec/should_reject_address_with_empty_node_name.jsonl"
+        "caseFile": "reports/router-inproc.spec/startSweeper_automatically_removes_stale_endpoints.jsonl"
       }
     },
     {
-      "testName": "should reject address with empty terminal name",
+      "testName": "holds messages when bucket is empty",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.048Z",
+      "duration": 117,
+      "location": "/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.420Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/loader.spec/should_reject_address_with_empty_terminal_name.jsonl"
+        "caseFile": "reports/rateLimiter.spec/holds_messages_when_bucket_is_empty.jsonl"
       }
     },
     {
-      "testName": "should reject connection referencing non-existent from node",
-      "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.048Z",
+      "testName": "releases messages when tokens become available",
+      "status": "fail",
+      "duration": 272,
+      "location": "/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.420Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/loader.spec/should_reject_connection_referencing_non-existent_from_node.jsonl"
+        "caseFile": "reports/rateLimiter.spec/releases_messages_when_tokens_become_available.jsonl"
       }
     },
     {
-      "testName": "should reject connection referencing non-existent to node",
+      "testName": "refills tokens at specified rate",
       "status": "pass",
-      "duration": 5,
-      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.049Z",
+      "duration": 227,
+      "location": "/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.421Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/loader.spec/should_reject_connection_referencing_non-existent_to_node.jsonl"
+        "caseFile": "reports/rateLimiter.spec/refills_tokens_at_specified_rate.jsonl"
       }
     },
     {
-      "testName": "should reject non-object config",
+      "testName": "tracks total messages",
       "status": "pass",
-      "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.049Z",
+      "duration": 116,
+      "location": "/srv/repos0/mkolbol/tests/transforms/pipeMeter.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.421Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/loader.spec/should_reject_non-object_config.jsonl"
+        "caseFile": "reports/pipeMeter.spec/tracks_total_messages.jsonl"
       }
     },
     {
-      "testName": "should reject non-array nodes",
+      "testName": "tracks total bytes for string chunks",
       "status": "pass",
-      "duration": 19,
-      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.049Z",
+      "duration": 57,
+      "location": "/srv/repos0/mkolbol/tests/transforms/pipeMeter.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.421Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/loader.spec/should_reject_non-array_nodes.jsonl"
+        "caseFile": "reports/pipeMeter.spec/tracks_total_bytes_for_string_chunks.jsonl"
       }
     },
     {
-      "testName": "should reject non-array connections",
+      "testName": "tracks total bytes for buffer chunks",
       "status": "pass",
-      "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.049Z",
+      "duration": 105,
+      "location": "/srv/repos0/mkolbol/tests/transforms/pipeMeter.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.421Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/loader.spec/should_reject_non-array_connections.jsonl"
+        "caseFile": "reports/pipeMeter.spec/tracks_total_bytes_for_buffer_chunks.jsonl"
       }
     },
     {
-      "testName": "should reject node without id",
+      "testName": "tracks total bytes for object chunks",
       "status": "pass",
-      "duration": 34,
-      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.050Z",
+      "duration": 90,
+      "location": "/srv/repos0/mkolbol/tests/transforms/pipeMeter.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.422Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/loader.spec/should_reject_node_without_id.jsonl"
+        "caseFile": "reports/pipeMeter.spec/tracks_total_bytes_for_object_chunks.jsonl"
       }
     },
     {
-      "testName": "should reject node with non-string id",
+      "testName": "should render raw ANSI to stdout",
       "status": "pass",
-      "duration": 19,
-      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.050Z",
+      "duration": 93,
+      "location": "/srv/repos0/mkolbol/tests/renderers/passthroughRenderer.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.422Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/loader.spec/should_reject_node_with_non-string_id.jsonl"
+        "caseFile": "reports/passthroughRenderer.spec/should_render_raw_ANSI_to_stdout.jsonl"
       }
     },
     {
-      "testName": "should reject node without module",
+      "testName": "should handle ANSI escape sequences",
       "status": "pass",
-      "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.050Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/renderers/passthroughRenderer.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.422Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/loader.spec/should_reject_node_without_module.jsonl"
+        "caseFile": "reports/passthroughRenderer.spec/should_handle_ANSI_escape_sequences.jsonl"
       }
     },
     {
-      "testName": "should reject node with non-string module",
+      "testName": "should render raw ANSI to stdout by default",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.051Z",
+      "duration": 142,
+      "location": "/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.422Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/loader.spec/should_reject_node_with_non-string_module.jsonl"
+        "caseFile": "reports/ttyRenderer.spec/should_render_raw_ANSI_to_stdout_by_default.jsonl"
       }
     },
     {
-      "testName": "should reject connection without from",
+      "testName": "should handle ANSI escape sequences",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.051Z",
+      "duration": 162,
+      "location": "/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.422Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/loader.spec/should_reject_connection_without_from.jsonl"
+        "caseFile": "reports/ttyRenderer.spec/should_handle_ANSI_escape_sequences.jsonl"
       }
     },
     {
-      "testName": "should reject connection without to",
+      "testName": "should strip ANSI codes when stripAnsi is enabled",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.051Z",
+      "duration": 107,
+      "location": "/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.422Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/loader.spec/should_reject_connection_without_to.jsonl"
+        "caseFile": "reports/ttyRenderer.spec/should_strip_ANSI_codes_when_stripAnsi_is_enabled.jsonl"
       }
     },
     {
-      "testName": "should reject connection with non-string from",
+      "testName": "registers and queries by capabilities",
       "status": "pass",
-      "duration": 25,
-      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.051Z",
+      "duration": 13,
+      "location": "/srv/repos0/mkolbol/test/hostess.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.423Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/loader.spec/should_reject_connection_with_non-string_from.jsonl"
+        "caseFile": "reports/hostess.spec/registers_and_queries_by_capabilities.jsonl"
       }
     },
     {
-      "testName": "should reject connection with non-string to",
+      "testName": "marks in-use and back to available",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.052Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/test/hostess.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.423Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/loader.spec/should_reject_connection_with_non-string_to.jsonl"
+        "caseFile": "reports/hostess.spec/marks_in-use_and_back_to_available.jsonl"
       }
     },
     {
-      "testName": "should accept valid topology",
+      "testName": "evicts after missed heartbeats",
       "status": "pass",
-      "duration": 15,
-      "location": "/srv/repos0/mkolbol/tests/config/loader.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.052Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/test/hostess.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.423Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/loader.spec/should_accept_valid_topology.jsonl"
+        "caseFile": "reports/hostess.spec/evicts_after_missed_heartbeats.jsonl"
       }
     },
     {
-      "testName": "adds nodes and emits events",
+      "testName": "heartbeat maintains liveness",
       "status": "pass",
-      "duration": 9,
-      "location": "/srv/repos0/mkolbol/test/state/stateManager.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.072Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/test/hostess.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.423Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/stateManager.spec/adds_nodes_and_emits_events.jsonl"
+        "caseFile": "reports/hostess.spec/heartbeat_maintains_liveness.jsonl"
       }
     },
     {
-      "testName": "connects and emits connected",
+      "testName": "allows multiple startSweeper calls without error",
       "status": "pass",
-      "duration": 86,
-      "location": "/srv/repos0/mkolbol/test/state/stateManager.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.072Z",
+      "duration": 3,
+      "location": "/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.427Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/stateManager.spec/connects_and_emits_connected.jsonl"
+        "caseFile": "reports/router-inproc.spec/allows_multiple_startSweeper_calls_without_error.jsonl"
       }
     },
     {
-      "testName": "split and merge emit events",
+      "testName": "shows human-readable timestamps in output",
       "status": "pass",
-      "duration": 8,
-      "location": "/srv/repos0/mkolbol/test/state/stateManager.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.073Z",
+      "duration": 107,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkLogs.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.855Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/stateManager.spec/split_and_merge_emit_events.jsonl"
+        "caseFile": "reports/mkLogs.spec/shows_human-readable_timestamps_in_output.jsonl"
       }
     },
     {
-      "testName": "validator enforces directionality when set",
+      "testName": "includes payload in human-readable output",
       "status": "pass",
-      "duration": 7,
-      "location": "/srv/repos0/mkolbol/test/state/stateManager.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.073Z",
+      "duration": 100,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkLogs.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.856Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/stateManager.spec/validator_enforces_directionality_when_set.jsonl"
+        "caseFile": "reports/mkLogs.spec/includes_payload_in_human-readable_output.jsonl"
       }
     },
     {
-      "testName": "exporters produce strings",
+      "testName": "handles empty reports directory gracefully",
       "status": "pass",
-      "duration": 3,
-      "location": "/srv/repos0/mkolbol/test/state/stateManager.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.074Z",
+      "duration": 95,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkLogs.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.856Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/stateManager.spec/exporters_produce_strings.jsonl"
+        "caseFile": "reports/mkLogs.spec/handles_empty_reports_directory_gracefully.jsonl"
       }
     },
     {
-      "testName": "should render raw ANSI to stdout",
+      "testName": "displays module names padded in human format",
       "status": "pass",
-      "duration": 11,
-      "location": "/srv/repos0/mkolbol/tests/renderers/passthroughRenderer.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.074Z",
+      "duration": 122,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkLogs.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.856Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/passthroughRenderer.spec/should_render_raw_ANSI_to_stdout.jsonl"
+        "caseFile": "reports/mkLogs.spec/displays_module_names_padded_in_human_format.jsonl"
       }
     },
     {
-      "testName": "should handle ANSI escape sequences",
+      "testName": "shows event names after module",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/renderers/passthroughRenderer.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.074Z",
+      "duration": 178,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkLogs.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.856Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/passthroughRenderer.spec/should_handle_ANSI_escape_sequences.jsonl"
+        "caseFile": "reports/mkLogs.spec/shows_event_names_after_module.jsonl"
       }
     },
     {
-      "testName": "should write all data to log file",
+      "testName": "initializes metrics to zero",
       "status": "pass",
-      "duration": 8,
-      "location": "/srv/repos0/mkolbol/tests/renderers/loggerRenderer.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.075Z",
+      "duration": 18,
+      "location": "/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.858Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/loggerRenderer.spec/should_write_all_data_to_log_file.jsonl"
+        "caseFile": "reports/router-inproc.spec/initializes_metrics_to_zero.jsonl"
       }
     },
     {
-      "testName": "should append to existing log file",
+      "testName": "tracks totalSweeps after each sweep",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/renderers/loggerRenderer.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.075Z",
+      "duration": 46,
+      "location": "/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.858Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/loggerRenderer.spec/should_append_to_existing_log_file.jsonl"
+        "caseFile": "reports/router-inproc.spec/tracks_totalSweeps_after_each_sweep.jsonl"
       }
     },
     {
-      "testName": "registers and queries by capabilities",
+      "testName": "queues messages exceeding burst capacity",
       "status": "pass",
-      "duration": 15,
-      "location": "/srv/repos0/mkolbol/test/hostess.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.161Z",
+      "duration": 86,
+      "location": "/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.858Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/hostess.spec/registers_and_queries_by_capabilities.jsonl"
+        "caseFile": "reports/rateLimiter.spec/queues_messages_exceeding_burst_capacity.jsonl"
       }
     },
     {
-      "testName": "marks in-use and back to available",
+      "testName": "should handle object inputs by stringifying",
       "status": "pass",
-      "duration": 3,
-      "location": "/srv/repos0/mkolbol/test/hostess.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.162Z",
+      "duration": 60,
+      "location": "/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.859Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/hostess.spec/marks_in-use_and_back_to_available.jsonl"
+        "caseFile": "reports/ttyRenderer.spec/should_handle_object_inputs_by_stringifying.jsonl"
       }
     },
     {
-      "testName": "evicts after missed heartbeats",
+      "testName": "should write to file when target is a file path",
       "status": "pass",
-      "duration": 3,
-      "location": "/srv/repos0/mkolbol/test/hostess.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.163Z",
+      "duration": 202,
+      "location": "/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.859Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/hostess.spec/evicts_after_missed_heartbeats.jsonl"
+        "caseFile": "reports/ttyRenderer.spec/should_write_to_file_when_target_is_a_file_path.jsonl"
       }
     },
     {
-      "testName": "heartbeat maintains liveness",
+      "testName": "should write ANSI codes to file in raw mode",
       "status": "pass",
-      "duration": 2,
-      "location": "/srv/repos0/mkolbol/test/hostess.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:28.163Z",
+      "duration": 34,
+      "location": "/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.859Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/hostess.spec/heartbeat_maintains_liveness.jsonl"
+        "caseFile": "reports/ttyRenderer.spec/should_write_ANSI_codes_to_file_in_raw_mode.jsonl"
       }
     },
     {
-      "testName": "prints ASCII graph by default",
+      "testName": "should strip ANSI codes from file when stripAnsi is enabled",
       "status": "pass",
-      "duration": 129,
-      "location": "/srv/repos0/mkolbol/tests/cli/mkGraph.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.482Z",
+      "duration": 6,
+      "location": "/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.859Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/mkGraph.spec/prints_ASCII_graph_by_default.jsonl"
+        "caseFile": "reports/ttyRenderer.spec/should_strip_ANSI_codes_from_file_when_stripAnsi_is_enabled.jsonl"
       }
     },
     {
-      "testName": "prints JSON graph with --json flag",
+      "testName": "should write all data to log file",
       "status": "pass",
-      "duration": 129,
-      "location": "/srv/repos0/mkolbol/tests/cli/mkGraph.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.482Z",
+      "duration": 30,
+      "location": "/srv/repos0/mkolbol/tests/renderers/loggerRenderer.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.860Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/mkGraph.spec/prints_JSON_graph_with_--json_flag.jsonl"
+        "caseFile": "reports/loggerRenderer.spec/should_write_all_data_to_log_file.jsonl"
       }
     },
     {
-      "testName": "displays ASCII graph with connection types",
+      "testName": "should append to existing log file",
       "status": "pass",
-      "duration": 146,
-      "location": "/srv/repos0/mkolbol/tests/cli/mkGraph.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.483Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/renderers/loggerRenderer.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.860Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/mkGraph.spec/displays_ASCII_graph_with_connection_types.jsonl"
+        "caseFile": "reports/loggerRenderer.spec/should_append_to_existing_log_file.jsonl"
       }
     },
     {
-      "testName": "shows error when no config file provided",
+      "testName": "adds nodes and emits events",
       "status": "pass",
-      "duration": 101,
-      "location": "/srv/repos0/mkolbol/tests/cli/mkGraph.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.483Z",
+      "duration": 41,
+      "location": "/srv/repos0/mkolbol/test/state/stateManager.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.860Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/mkGraph.spec/shows_error_when_no_config_file_provided.jsonl"
+        "caseFile": "reports/stateManager.spec/adds_nodes_and_emits_events.jsonl"
       }
     },
     {
-      "testName": "shows error for non-existent config file",
+      "testName": "connects and emits connected",
       "status": "pass",
-      "duration": 155,
-      "location": "/srv/repos0/mkolbol/tests/cli/mkGraph.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.484Z",
+      "duration": 25,
+      "location": "/srv/repos0/mkolbol/test/state/stateManager.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.860Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/mkGraph.spec/shows_error_for_non-existent_config_file.jsonl"
+        "caseFile": "reports/stateManager.spec/connects_and_emits_connected.jsonl"
       }
     },
     {
-      "testName": "shows help when --help flag is used",
+      "testName": "split and merge emit events",
       "status": "pass",
-      "duration": 178,
-      "location": "/srv/repos0/mkolbol/tests/cli/mkGraph.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.484Z",
+      "duration": 3,
+      "location": "/srv/repos0/mkolbol/test/state/stateManager.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.861Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/mkGraph.spec/shows_help_when_--help_flag_is_used.jsonl"
+        "caseFile": "reports/stateManager.spec/split_and_merge_emit_events.jsonl"
       }
     },
     {
-      "testName": "displays node params in ASCII output",
+      "testName": "validator enforces directionality when set",
       "status": "pass",
-      "duration": 233,
-      "location": "/srv/repos0/mkolbol/tests/cli/mkGraph.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.485Z",
+      "duration": 31,
+      "location": "/srv/repos0/mkolbol/test/state/stateManager.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.861Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/mkGraph.spec/displays_node_params_in_ASCII_output.jsonl"
+        "caseFile": "reports/stateManager.spec/validator_enforces_directionality_when_set.jsonl"
       }
     },
     {
-      "testName": "includes runMode indicators in ASCII output",
+      "testName": "exporters produce strings",
       "status": "pass",
-      "duration": 110,
-      "location": "/srv/repos0/mkolbol/tests/cli/mkGraph.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.486Z",
+      "duration": 36,
+      "location": "/srv/repos0/mkolbol/test/state/stateManager.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:47.861Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/mkGraph.spec/includes_runMode_indicators_in_ASCII_output.jsonl"
+        "caseFile": "reports/stateManager.spec/exporters_produce_strings.jsonl"
       }
     },
     {
-      "testName": "should handle complete lifecycle end-to-end",
+      "testName": "updates lastSweepTime on each sweep",
       "status": "pass",
-      "duration": 12,
-      "location": "/srv/repos0/mkolbol/tests/worker/workerPipe.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.486Z",
+      "duration": 88,
+      "location": "/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:48.410Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/workerPipe.spec/should_handle_complete_lifecycle_end-to-end.jsonl"
+        "caseFile": "reports/router-inproc.spec/updates_lastSweepTime_on_each_sweep.jsonl"
       }
     },
     {
-      "testName": "processes burst after refill period",
+      "testName": "does not mutate returned metrics object",
       "status": "pass",
-      "duration": 306,
-      "location": "/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.487Z",
+      "duration": 21,
+      "location": "/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:48.433Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/rateLimiter.spec/processes_burst_after_refill_period.jsonl"
+        "caseFile": "reports/router-inproc.spec/does_not_mutate_returned_metrics_object.jsonl"
       }
     },
     {
       "testName": "maintains pending queue under backpressure",
       "status": "pass",
-      "duration": 82,
+      "duration": 74,
       "location": "/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.488Z",
+      "timestamp": "2025-10-16T19:10:48.434Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/rateLimiter.spec/maintains_pending_queue_under_backpressure.jsonl"
       }
     },
     {
-      "testName": "processes pending messages in FIFO order",
+      "testName": "returns metrics with correct structure",
       "status": "pass",
-      "duration": 383,
-      "location": "/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.488Z",
+      "duration": 87,
+      "location": "/srv/repos0/mkolbol/tests/transforms/pipeMeter.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:48.454Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/rateLimiter.spec/processes_pending_messages_in_FIFO_order.jsonl"
+        "caseFile": "reports/pipeMeter.spec/returns_metrics_with_correct_structure.jsonl"
       }
     },
     {
-      "testName": "calculates messages per second",
+      "testName": "respects custom emit interval",
       "status": "pass",
-      "duration": 507,
+      "duration": 253,
       "location": "/srv/repos0/mkolbol/tests/transforms/pipeMeter.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.489Z",
+      "timestamp": "2025-10-16T19:10:48.454Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/pipeMeter.spec/calculates_messages_per_second.jsonl"
+        "caseFile": "reports/pipeMeter.spec/respects_custom_emit_interval.jsonl"
       }
     },
     {
-      "testName": "returns metrics with correct structure",
+      "testName": "should append to existing file",
       "status": "pass",
-      "duration": 60,
-      "location": "/srv/repos0/mkolbol/tests/transforms/pipeMeter.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.489Z",
+      "duration": 6,
+      "location": "/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:48.455Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/pipeMeter.spec/returns_metrics_with_correct_structure.jsonl"
+        "caseFile": "reports/ttyRenderer.spec/should_append_to_existing_file.jsonl"
       }
     },
     {
-      "testName": "respects custom emit interval",
+      "testName": "should handle binary data",
       "status": "pass",
-      "duration": 255,
-      "location": "/srv/repos0/mkolbol/tests/transforms/pipeMeter.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.490Z",
+      "duration": 4,
+      "location": "/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:48.455Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/pipeMeter.spec/respects_custom_emit_interval.jsonl"
+        "caseFile": "reports/ttyRenderer.spec/should_handle_binary_data.jsonl"
       }
     },
     {
-      "testName": "updates lastUpdateTime on getMetrics call",
+      "testName": "should work in non-TTY environment",
       "status": "pass",
-      "duration": 80,
-      "location": "/srv/repos0/mkolbol/tests/transforms/pipeMeter.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.490Z",
+      "duration": 86,
+      "location": "/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:48.455Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/pipeMeter.spec/updates_lastUpdateTime_on_getMetrics_call.jsonl"
+        "caseFile": "reports/ttyRenderer.spec/should_work_in_non-TTY_environment.jsonl"
       }
     },
     {
-      "testName": "stops metrics emitter when stop is called",
+      "testName": "should handle rawMode gracefully when not a TTY",
       "status": "pass",
-      "duration": 274,
-      "location": "/srv/repos0/mkolbol/tests/transforms/pipeMeter.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.490Z",
+      "duration": 88,
+      "location": "/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:48.456Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/pipeMeter.spec/stops_metrics_emitter_when_stop_is_called.jsonl"
+        "caseFile": "reports/ttyRenderer.spec/should_handle_rawMode_gracefully_when_not_a_TTY.jsonl"
       }
     },
     {
-      "testName": "allows multiple startSweeper calls without error",
+      "testName": "should handle empty writes",
       "status": "pass",
-      "duration": 51,
-      "location": "/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.491Z",
+      "duration": 61,
+      "location": "/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:48.456Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/router-inproc.spec/allows_multiple_startSweeper_calls_without_error.jsonl"
+        "caseFile": "reports/ttyRenderer.spec/should_handle_empty_writes.jsonl"
       }
     },
     {
-      "testName": "heartbeat keeps endpoint alive",
+      "testName": "should handle rapid sequential writes",
       "status": "pass",
-      "duration": 258,
-      "location": "/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.491Z",
+      "duration": 30,
+      "location": "/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:48.456Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/router-inproc.spec/heartbeat_keeps_endpoint_alive.jsonl"
+        "caseFile": "reports/ttyRenderer.spec/should_handle_rapid_sequential_writes.jsonl"
       }
     },
     {
-      "testName": "initializes metrics to zero",
+      "testName": "should handle large buffers",
       "status": "pass",
-      "duration": 36,
-      "location": "/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.492Z",
+      "duration": 101,
+      "location": "/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:48.457Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/router-inproc.spec/initializes_metrics_to_zero.jsonl"
+        "caseFile": "reports/ttyRenderer.spec/should_handle_large_buffers.jsonl"
       }
     },
     {
-      "testName": "tracks totalSweeps after each sweep",
+      "testName": "should handle complex ANSI sequences",
       "status": "pass",
-      "duration": 4,
-      "location": "/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.492Z",
+      "duration": 76,
+      "location": "/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:48.457Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/router-inproc.spec/tracks_totalSweeps_after_each_sweep.jsonl"
+        "caseFile": "reports/ttyRenderer.spec/should_handle_complex_ANSI_sequences.jsonl"
       }
     },
     {
-      "testName": "tracks totalRemoved across multiple sweeps",
+      "testName": "should spawn a simple process",
       "status": "pass",
-      "duration": 211,
-      "location": "/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.492Z",
+      "duration": 379,
+      "location": "/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:48.469Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/router-inproc.spec/tracks_totalRemoved_across_multiple_sweeps.jsonl"
+        "caseFile": "reports/externalServerWrapper.spec/should_spawn_a_simple_process.jsonl"
       }
     },
     {
-      "testName": "updates lastSweepTime on each sweep",
+      "testName": "should pipe data bidirectionally",
       "status": "pass",
-      "duration": 55,
-      "location": "/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.493Z",
+      "duration": 243,
+      "location": "/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:48.470Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/router-inproc.spec/updates_lastSweepTime_on_each_sweep.jsonl"
+        "caseFile": "reports/externalServerWrapper.spec/should_pipe_data_bidirectionally.jsonl"
       }
     },
     {
-      "testName": "does not mutate returned metrics object",
+      "testName": "should handle multiple sequential messages",
       "status": "pass",
-      "duration": 3,
-      "location": "/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.493Z",
+      "duration": 89,
+      "location": "/srv/repos0/mkolbol/tests/devex/acceptance/streams.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:48.471Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/router-inproc.spec/does_not_mutate_returned_metrics_object.jsonl"
+        "caseFile": "reports/streams.spec/should_handle_multiple_sequential_messages.jsonl"
       }
     },
     {
-      "testName": "tracks metrics with automatic sweeper",
+      "testName": "should register endpoint after spawn",
       "status": "pass",
-      "duration": 202,
-      "location": "/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.494Z",
+      "duration": 380,
+      "location": "/srv/repos0/mkolbol/tests/devex/acceptance/hostess.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:48.471Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/router-inproc.spec/tracks_metrics_with_automatic_sweeper.jsonl"
+        "caseFile": "reports/hostess.spec/should_register_endpoint_after_spawn.jsonl"
       }
     },
     {
-      "testName": "continues tracking after removing no endpoints",
+      "testName": "should have required metadata fields",
       "status": "pass",
-      "duration": 24,
-      "location": "/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.494Z",
+      "duration": 92,
+      "location": "/srv/repos0/mkolbol/tests/devex/acceptance/hostess.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:48.472Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/router-inproc.spec/continues_tracking_after_removing_no_endpoints.jsonl"
+        "caseFile": "reports/hostess.spec/should_have_required_metadata_fields.jsonl"
       }
     },
     {
-      "testName": "should handle ANSI escape sequences",
+      "testName": "should declare capabilities",
       "status": "pass",
-      "duration": 88,
-      "location": "/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.495Z",
+      "duration": 75,
+      "location": "/srv/repos0/mkolbol/tests/devex/acceptance/hostess.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:48.472Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ttyRenderer.spec/should_handle_ANSI_escape_sequences.jsonl"
+        "caseFile": "reports/hostess.spec/should_declare_capabilities.jsonl"
       }
     },
     {
-      "testName": "should strip ANSI codes when stripAnsi is enabled",
+      "testName": "should be discoverable by capabilities",
       "status": "pass",
-      "duration": 139,
-      "location": "/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.495Z",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/devex/acceptance/hostess.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:48.473Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ttyRenderer.spec/should_strip_ANSI_codes_when_stripAnsi_is_enabled.jsonl"
+        "caseFile": "reports/hostess.spec/should_be_discoverable_by_capabilities.jsonl"
       }
     },
     {
-      "testName": "should handle multiple writes",
+      "testName": "continues tracking after removing no endpoints",
       "status": "pass",
-      "duration": 104,
-      "location": "/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.495Z",
+      "duration": 27,
+      "location": "/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:48.477Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ttyRenderer.spec/should_handle_multiple_writes.jsonl"
+        "caseFile": "reports/router-inproc.spec/continues_tracking_after_removing_no_endpoints.jsonl"
       }
     },
     {
-      "testName": "should handle string inputs",
+      "testName": "should preserve exact ANSI byte sequences when writing to file",
       "status": "pass",
-      "duration": 81,
+      "duration": 67,
       "location": "/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.496Z",
+      "timestamp": "2025-10-16T19:10:48.629Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ttyRenderer.spec/should_handle_string_inputs.jsonl"
+        "caseFile": "reports/ttyRenderer.spec/should_preserve_exact_ANSI_byte_sequences_when_writing_to_file.jsonl"
       }
     },
     {
-      "testName": "should handle object inputs by stringifying",
+      "testName": "should work when stdout is redirected (non-TTY)",
       "status": "pass",
-      "duration": 59,
+      "duration": 61,
       "location": "/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.496Z",
+      "timestamp": "2025-10-16T19:10:48.629Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ttyRenderer.spec/should_handle_object_inputs_by_stringifying.jsonl"
+        "caseFile": "reports/ttyRenderer.spec/should_work_when_stdout_is_redirected__non-TTY_.jsonl"
       }
     },
     {
-      "testName": "should write to file when target is a file path",
+      "testName": "should support multiple endpoint registrations",
       "status": "pass",
-      "duration": 13,
-      "location": "/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.496Z",
+      "duration": 143,
+      "location": "/srv/repos0/mkolbol/tests/devex/acceptance/hostess.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:48.630Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ttyRenderer.spec/should_write_to_file_when_target_is_a_file_path.jsonl"
+        "caseFile": "reports/hostess.spec/should_support_multiple_endpoint_registrations.jsonl"
       }
     },
     {
-      "testName": "should write ANSI codes to file in raw mode",
+      "testName": "should handle large ANSI escape sequences",
       "status": "pass",
-      "duration": 4,
+      "duration": 7,
       "location": "/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.519Z",
+      "timestamp": "2025-10-16T19:10:48.797Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ttyRenderer.spec/should_write_ANSI_codes_to_file_in_raw_mode.jsonl"
+        "caseFile": "reports/ttyRenderer.spec/should_handle_large_ANSI_escape_sequences.jsonl"
       }
     },
     {
-      "testName": "should strip ANSI codes from file when stripAnsi is enabled",
+      "testName": "should handle multiple large chunks without data loss",
       "status": "pass",
-      "duration": 3,
+      "duration": 0,
       "location": "/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.521Z",
+      "timestamp": "2025-10-16T19:10:48.797Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ttyRenderer.spec/should_strip_ANSI_codes_from_file_when_stripAnsi_is_enabled.jsonl"
+        "caseFile": "reports/ttyRenderer.spec/should_handle_multiple_large_chunks_without_data_loss.jsonl"
       }
     },
     {
-      "testName": "should create nested directories automatically",
+      "testName": "handles high throughput",
       "status": "pass",
-      "duration": 26,
-      "location": "/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.521Z",
+      "duration": 104,
+      "location": "/srv/repos0/mkolbol/tests/transforms/pipeMeter.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:49.290Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ttyRenderer.spec/should_create_nested_directories_automatically.jsonl"
+        "caseFile": "reports/pipeMeter.spec/handles_high_throughput.jsonl"
       }
     },
     {
-      "testName": "should append to existing file",
+      "testName": "handles mixed chunk types",
       "status": "pass",
-      "duration": 6,
-      "location": "/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.522Z",
+      "duration": 127,
+      "location": "/srv/repos0/mkolbol/tests/transforms/pipeMeter.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:49.292Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ttyRenderer.spec/should_append_to_existing_file.jsonl"
+        "caseFile": "reports/pipeMeter.spec/handles_mixed_chunk_types.jsonl"
       }
     },
     {
-      "testName": "should handle binary data",
+      "testName": "initializes with zero metrics",
       "status": "pass",
-      "duration": 25,
-      "location": "/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.523Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/transforms/pipeMeter.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:49.293Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ttyRenderer.spec/should_handle_binary_data.jsonl"
+        "caseFile": "reports/pipeMeter.spec/initializes_with_zero_metrics.jsonl"
       }
     },
     {
-      "testName": "should work in non-TTY environment",
+      "testName": "should preserve integrity of complex SGR sequences",
       "status": "pass",
-      "duration": 60,
+      "duration": 80,
       "location": "/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.524Z",
+      "timestamp": "2025-10-16T19:10:49.312Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ttyRenderer.spec/should_work_in_non-TTY_environment.jsonl"
+        "caseFile": "reports/ttyRenderer.spec/should_preserve_integrity_of_complex_SGR_sequences.jsonl"
       }
     },
     {
-      "testName": "should handle rawMode gracefully when not a TTY",
+      "testName": "should handle file write errors gracefully",
       "status": "pass",
-      "duration": 91,
+      "duration": 24,
       "location": "/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.524Z",
+      "timestamp": "2025-10-16T19:10:49.313Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ttyRenderer.spec/should_handle_rawMode_gracefully_when_not_a_TTY.jsonl"
+        "caseFile": "reports/ttyRenderer.spec/should_handle_file_write_errors_gracefully.jsonl"
       }
     },
     {
-      "testName": "should handle empty writes",
+      "testName": "should handle double start/stop calls",
       "status": "pass",
-      "duration": 68,
+      "duration": 41,
       "location": "/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.525Z",
+      "timestamp": "2025-10-16T19:10:49.313Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ttyRenderer.spec/should_handle_empty_writes.jsonl"
+        "caseFile": "reports/ttyRenderer.spec/should_handle_double_start_stop_calls.jsonl"
       }
     },
     {
-      "testName": "should handle rapid sequential writes",
+      "testName": "should preserve exact byte-for-byte ANSI sequences",
       "status": "pass",
-      "duration": 33,
+      "duration": 54,
       "location": "/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.526Z",
+      "timestamp": "2025-10-16T19:10:49.327Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ttyRenderer.spec/should_handle_rapid_sequential_writes.jsonl"
+        "caseFile": "reports/ttyRenderer.spec/should_preserve_exact_byte-for-byte_ANSI_sequences.jsonl"
       }
     },
     {
-      "testName": "should handle large buffers",
+      "testName": "should handle mixed text and ANSI without corruption",
       "status": "pass",
-      "duration": 105,
+      "duration": 81,
       "location": "/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.526Z",
+      "timestamp": "2025-10-16T19:10:49.328Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ttyRenderer.spec/should_handle_large_buffers.jsonl"
+        "caseFile": "reports/ttyRenderer.spec/should_handle_mixed_text_and_ANSI_without_corruption.jsonl"
       }
     },
     {
-      "testName": "should handle complex ANSI sequences",
+      "testName": "should handle ANSI C1 control codes",
       "status": "pass",
-      "duration": 65,
+      "duration": 4,
       "location": "/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.527Z",
+      "timestamp": "2025-10-16T19:10:49.330Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ttyRenderer.spec/should_handle_complex_ANSI_sequences.jsonl"
+        "caseFile": "reports/ttyRenderer.spec/should_handle_ANSI_C1_control_codes.jsonl"
       }
     },
     {
-      "testName": "should strip complex ANSI sequences correctly",
+      "testName": "should write to stdout target correctly",
       "status": "pass",
-      "duration": 105,
+      "duration": 71,
       "location": "/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.528Z",
+      "timestamp": "2025-10-16T19:10:49.331Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ttyRenderer.spec/should_strip_complex_ANSI_sequences_correctly.jsonl"
+        "caseFile": "reports/ttyRenderer.spec/should_write_to_stdout_target_correctly.jsonl"
       }
     },
     {
-      "testName": "should write ANSI content to file target and verify exact content",
+      "testName": "should handle concurrent writes to file target",
       "status": "pass",
-      "duration": 37,
+      "duration": 6,
       "location": "/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.528Z",
+      "timestamp": "2025-10-16T19:10:49.333Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ttyRenderer.spec/should_write_ANSI_content_to_file_target_and_verify_exact_content.jsonl"
+        "caseFile": "reports/ttyRenderer.spec/should_handle_concurrent_writes_to_file_target.jsonl"
       }
     },
     {
-      "testName": "should preserve exact ANSI byte sequences when writing to file",
+      "testName": "should handle file target vs stdout target independently",
       "status": "pass",
-      "duration": 20,
+      "duration": 2,
       "location": "/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.529Z",
+      "timestamp": "2025-10-16T19:10:49.334Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ttyRenderer.spec/should_preserve_exact_ANSI_byte_sequences_when_writing_to_file.jsonl"
+        "caseFile": "reports/ttyRenderer.spec/should_handle_file_target_vs_stdout_target_independently.jsonl"
       }
     },
     {
-      "testName": "should perform stdin â†’ stdout roundtrip",
+      "testName": "should register with Hostess on spawn",
       "status": "pass",
-      "duration": 605,
-      "location": "/srv/repos0/mkolbol/tests/integration/stdioPath.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.530Z",
+      "duration": 115,
+      "location": "/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:49.335Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/stdioPath.spec/should_perform_stdin___stdout_roundtrip.jsonl"
+        "caseFile": "reports/externalServerWrapper.spec/should_register_with_Hostess_on_spawn.jsonl"
       }
     },
     {
-      "testName": "should handle drain events under backpressure",
+      "testName": "should gracefully shutdown with SIGTERM",
       "status": "pass",
-      "duration": 407,
-      "location": "/srv/repos0/mkolbol/tests/integration/stdioPath.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.531Z",
+      "duration": 123,
+      "location": "/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:49.336Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/stdioPath.spec/should_handle_drain_events_under_backpressure.jsonl"
+        "caseFile": "reports/externalServerWrapper.spec/should_gracefully_shutdown_with_SIGTERM.jsonl"
       }
     },
     {
       "testName": "should manage lifecycle (start/stop)",
       "status": "pass",
-      "duration": 105,
+      "duration": 118,
       "location": "/srv/repos0/mkolbol/tests/integration/stdioPath.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.531Z",
+      "timestamp": "2025-10-16T19:10:49.337Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/stdioPath.spec/should_manage_lifecycle__start_stop_.jsonl"
@@ -4130,240 +4592,207 @@
     {
       "testName": "should register with Hostess correctly",
       "status": "pass",
-      "duration": 104,
+      "duration": 91,
       "location": "/srv/repos0/mkolbol/tests/integration/stdioPath.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.532Z",
+      "timestamp": "2025-10-16T19:10:49.338Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/stdioPath.spec/should_register_with_Hostess_correctly.jsonl"
       }
     },
     {
-      "testName": "should handle multiple sequential messages",
-      "status": "pass",
-      "duration": 105,
-      "location": "/srv/repos0/mkolbol/tests/devex/acceptance/streams.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.532Z",
-      "artifacts": {
-        "summary": "reports/summary.jsonl",
-        "caseFile": "reports/streams.spec/should_handle_multiple_sequential_messages.jsonl"
-      }
-    },
-    {
-      "testName": "should handle backpressure with drain events",
-      "status": "pass",
-      "duration": 373,
-      "location": "/srv/repos0/mkolbol/tests/devex/acceptance/streams.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.533Z",
-      "artifacts": {
-        "summary": "reports/summary.jsonl",
-        "caseFile": "reports/streams.spec/should_handle_backpressure_with_drain_events.jsonl"
-      }
-    },
-    {
-      "testName": "should register endpoint after spawn",
-      "status": "pass",
-      "duration": 225,
-      "location": "/srv/repos0/mkolbol/tests/devex/acceptance/hostess.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.533Z",
-      "artifacts": {
-        "summary": "reports/summary.jsonl",
-        "caseFile": "reports/hostess.spec/should_register_endpoint_after_spawn.jsonl"
-      }
-    },
-    {
-      "testName": "should have required metadata fields",
+      "testName": "should load configuration",
       "status": "pass",
-      "duration": 61,
-      "location": "/srv/repos0/mkolbol/tests/devex/acceptance/hostess.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.534Z",
+      "duration": 76,
+      "location": "/srv/repos0/mkolbol/tests/executor/executor.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:49.338Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/hostess.spec/should_have_required_metadata_fields.jsonl"
+        "caseFile": "reports/executor.spec/should_load_configuration.jsonl"
       }
     },
     {
-      "testName": "should declare capabilities",
+      "testName": "should throw if up() called without load()",
       "status": "pass",
-      "duration": 69,
-      "location": "/srv/repos0/mkolbol/tests/devex/acceptance/hostess.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.534Z",
+      "duration": 3,
+      "location": "/srv/repos0/mkolbol/tests/executor/executor.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:49.339Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/hostess.spec/should_declare_capabilities.jsonl"
+        "caseFile": "reports/executor.spec/should_throw_if_up___called_without_load__.jsonl"
       }
     },
     {
-      "testName": "should be discoverable by capabilities",
+      "testName": "should instantiate modules and register with hostess",
       "status": "pass",
-      "duration": 83,
-      "location": "/srv/repos0/mkolbol/tests/devex/acceptance/hostess.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.535Z",
+      "duration": 181,
+      "location": "/srv/repos0/mkolbol/tests/executor/executor.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:49.340Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/hostess.spec/should_be_discoverable_by_capabilities.jsonl"
+        "caseFile": "reports/executor.spec/should_instantiate_modules_and_register_with_hostess.jsonl"
       }
     },
     {
-      "testName": "should support multiple endpoint registrations",
+      "testName": "should wire connections via StateManager",
       "status": "pass",
-      "duration": 126,
-      "location": "/srv/repos0/mkolbol/tests/devex/acceptance/hostess.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.535Z",
+      "duration": 24,
+      "location": "/srv/repos0/mkolbol/tests/executor/executor.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:49.340Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/hostess.spec/should_support_multiple_endpoint_registrations.jsonl"
+        "caseFile": "reports/executor.spec/should_wire_connections_via_StateManager.jsonl"
       }
     },
     {
-      "testName": "should spawn a simple process",
+      "testName": "should support restartNode",
       "status": "pass",
-      "duration": 366,
-      "location": "/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.535Z",
+      "duration": 4,
+      "location": "/srv/repos0/mkolbol/tests/executor/executor.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:49.341Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/externalServerWrapper.spec/should_spawn_a_simple_process.jsonl"
+        "caseFile": "reports/executor.spec/should_support_restartNode.jsonl"
       }
     },
     {
-      "testName": "should pipe data bidirectionally",
+      "testName": "should throw on restartNode for non-existent node",
       "status": "pass",
-      "duration": 196,
-      "location": "/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.536Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/executor/executor.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:49.342Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/externalServerWrapper.spec/should_pipe_data_bidirectionally.jsonl"
+        "caseFile": "reports/executor.spec/should_throw_on_restartNode_for_non-existent_node.jsonl"
       }
     },
     {
-      "testName": "should handle environment variables",
+      "testName": "announces endpoints when topology starts and withdraws on shutdown",
       "status": "pass",
-      "duration": 293,
-      "location": "/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.564Z",
+      "duration": 183,
+      "location": "/srv/repos0/mkolbol/tests/integration/router-announcements.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:49.342Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/externalServerWrapper.spec/should_handle_environment_variables.jsonl"
+        "caseFile": "reports/router-announcements.spec/announces_endpoints_when_topology_starts_and_withdraws_on_shutdown.jsonl"
       }
     },
     {
-      "testName": "should register with Hostess on spawn",
+      "testName": "updates routing entry on restart",
       "status": "pass",
-      "duration": 170,
-      "location": "/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.565Z",
+      "duration": 24,
+      "location": "/srv/repos0/mkolbol/tests/integration/router-announcements.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:49.343Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/externalServerWrapper.spec/should_register_with_Hostess_on_spawn.jsonl"
+        "caseFile": "reports/router-announcements.spec/updates_routing_entry_on_restart.jsonl"
       }
     },
     {
-      "testName": "should gracefully shutdown with SIGTERM",
+      "testName": "sends periodic heartbeats to router when enabled",
       "status": "pass",
-      "duration": 80,
-      "location": "/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.588Z",
+      "duration": 258,
+      "location": "/srv/repos0/mkolbol/tests/integration/router-announcements.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:49.343Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/externalServerWrapper.spec/should_gracefully_shutdown_with_SIGTERM.jsonl"
+        "caseFile": "reports/router-announcements.spec/sends_periodic_heartbeats_to_router_when_enabled.jsonl"
       }
     },
     {
-      "testName": "initializes with zero metrics",
+      "testName": "should register endpoint with Hostess after spawn",
       "status": "pass",
-      "duration": 31,
-      "location": "/srv/repos0/mkolbol/tests/transforms/pipeMeter.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.814Z",
+      "duration": 262,
+      "location": "/srv/repos0/mkolbol/tests/devex/server-acceptance.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:49.344Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/pipeMeter.spec/initializes_with_zero_metrics.jsonl"
+        "caseFile": "reports/server-acceptance.spec/should_register_endpoint_with_Hostess_after_spawn.jsonl"
       }
     },
     {
-      "testName": "should handle large ANSI escape sequences",
+      "testName": "should create file and write data",
       "status": "pass",
-      "duration": 117,
-      "location": "/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.816Z",
+      "duration": 14,
+      "location": "/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:49.402Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ttyRenderer.spec/should_handle_large_ANSI_escape_sequences.jsonl"
+        "caseFile": "reports/filesystemSink.spec/should_create_file_and_write_data.jsonl"
       }
     },
     {
-      "testName": "should handle multiple large chunks without data loss",
+      "testName": "should append to existing file in append mode",
       "status": "pass",
-      "duration": 38,
-      "location": "/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.816Z",
+      "duration": 5,
+      "location": "/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:49.402Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ttyRenderer.spec/should_handle_multiple_large_chunks_without_data_loss.jsonl"
+        "caseFile": "reports/filesystemSink.spec/should_append_to_existing_file_in_append_mode.jsonl"
       }
     },
     {
-      "testName": "should preserve integrity of complex SGR sequences",
+      "testName": "should truncate existing file in truncate mode",
       "status": "pass",
-      "duration": 4,
-      "location": "/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.838Z",
+      "duration": 5,
+      "location": "/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:49.402Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ttyRenderer.spec/should_preserve_integrity_of_complex_SGR_sequences.jsonl"
+        "caseFile": "reports/filesystemSink.spec/should_truncate_existing_file_in_truncate_mode.jsonl"
       }
     },
     {
-      "testName": "should handle file write errors gracefully",
+      "testName": "uses default options",
       "status": "pass",
-      "duration": 5,
-      "location": "/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.839Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:49.521Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ttyRenderer.spec/should_handle_file_write_errors_gracefully.jsonl"
+        "caseFile": "reports/rateLimiter.spec/uses_default_options.jsonl"
       }
     },
     {
-      "testName": "should handle double start/stop calls",
+      "testName": "respects custom capacity",
       "status": "pass",
       "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.840Z",
+      "location": "/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:49.571Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ttyRenderer.spec/should_handle_double_start_stop_calls.jsonl"
+        "caseFile": "reports/rateLimiter.spec/respects_custom_capacity.jsonl"
       }
     },
     {
-      "testName": "should preserve exact byte-for-byte ANSI sequences",
+      "testName": "should track write statistics",
       "status": "pass",
-      "duration": 3,
-      "location": "/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.852Z",
+      "duration": 96,
+      "location": "/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:49.574Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ttyRenderer.spec/should_preserve_exact_byte-for-byte_ANSI_sequences.jsonl"
+        "caseFile": "reports/filesystemSink.spec/should_track_write_statistics.jsonl"
       }
     },
     {
-      "testName": "should handle mixed text and ANSI without corruption",
+      "testName": "prints structured help with sections and examples",
       "status": "pass",
-      "duration": 3,
-      "location": "/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:29.855Z",
+      "duration": 98,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkdxHelp.spec.ts:0",
+      "timestamp": "2025-10-16T19:10:49.575Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ttyRenderer.spec/should_handle_mixed_text_and_ANSI_without_corruption.jsonl"
+        "caseFile": "reports/mkdxHelp.spec/prints_structured_help_with_sections_and_examples.jsonl"
       }
     },
     {
       "testName": "should error when topology file is missing",
       "status": "pass",
-      "duration": 430,
+      "duration": 411,
       "location": "/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.969Z",
+      "timestamp": "2025-10-16T19:11:10.260Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/mkRunDry.spec/should_error_when_topology_file_is_missing.jsonl"
@@ -4372,9 +4801,9 @@
     {
       "testName": "should error when config file does not exist",
       "status": "pass",
-      "duration": 434,
+      "duration": 478,
       "location": "/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.969Z",
+      "timestamp": "2025-10-16T19:11:10.261Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/mkRunDry.spec/should_error_when_config_file_does_not_exist.jsonl"
@@ -4383,9 +4812,9 @@
     {
       "testName": "should accept --dry-run before topology file",
       "status": "pass",
-      "duration": 467,
+      "duration": 491,
       "location": "/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.970Z",
+      "timestamp": "2025-10-16T19:11:10.261Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/mkRunDry.spec/should_accept_--dry-run_before_topology_file.jsonl"
@@ -4394,9 +4823,9 @@
     {
       "testName": "should validate valid YAML config",
       "status": "pass",
-      "duration": 521,
+      "duration": 501,
       "location": "/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.970Z",
+      "timestamp": "2025-10-16T19:11:10.261Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/mkRunDry.spec/should_validate_valid_YAML_config.jsonl"
@@ -4405,9 +4834,9 @@
     {
       "testName": "should validate valid JSON config",
       "status": "pass",
-      "duration": 432,
+      "duration": 425,
       "location": "/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.970Z",
+      "timestamp": "2025-10-16T19:11:10.262Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/mkRunDry.spec/should_validate_valid_JSON_config.jsonl"
@@ -4416,9 +4845,9 @@
     {
       "testName": "should validate complex topology",
       "status": "pass",
-      "duration": 491,
+      "duration": 483,
       "location": "/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.971Z",
+      "timestamp": "2025-10-16T19:11:10.262Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/mkRunDry.spec/should_validate_complex_topology.jsonl"
@@ -4427,9 +4856,9 @@
     {
       "testName": "should fail on invalid YAML syntax",
       "status": "pass",
-      "duration": 436,
+      "duration": 461,
       "location": "/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.971Z",
+      "timestamp": "2025-10-16T19:11:10.263Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/mkRunDry.spec/should_fail_on_invalid_YAML_syntax.jsonl"
@@ -4438,9 +4867,9 @@
     {
       "testName": "should fail on missing nodes array",
       "status": "pass",
-      "duration": 418,
+      "duration": 451,
       "location": "/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.972Z",
+      "timestamp": "2025-10-16T19:11:10.263Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/mkRunDry.spec/should_fail_on_missing_nodes_array.jsonl"
@@ -4449,9 +4878,9 @@
     {
       "testName": "should fail on missing connections array",
       "status": "pass",
-      "duration": 448,
+      "duration": 401,
       "location": "/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.972Z",
+      "timestamp": "2025-10-16T19:11:10.263Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/mkRunDry.spec/should_fail_on_missing_connections_array.jsonl"
@@ -4460,9 +4889,9 @@
     {
       "testName": "should fail on duplicate node IDs",
       "status": "pass",
-      "duration": 405,
+      "duration": 450,
       "location": "/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.972Z",
+      "timestamp": "2025-10-16T19:11:10.264Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/mkRunDry.spec/should_fail_on_duplicate_node_IDs.jsonl"
@@ -4471,9 +4900,9 @@
     {
       "testName": "should fail on invalid connection references",
       "status": "pass",
-      "duration": 413,
+      "duration": 424,
       "location": "/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.973Z",
+      "timestamp": "2025-10-16T19:11:10.264Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/mkRunDry.spec/should_fail_on_invalid_connection_references.jsonl"
@@ -4482,9 +4911,9 @@
     {
       "testName": "should fail on missing node id",
       "status": "pass",
-      "duration": 410,
+      "duration": 434,
       "location": "/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.973Z",
+      "timestamp": "2025-10-16T19:11:10.264Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/mkRunDry.spec/should_fail_on_missing_node_id.jsonl"
@@ -4493,9 +4922,9 @@
     {
       "testName": "should fail on missing module",
       "status": "pass",
-      "duration": 405,
+      "duration": 445,
       "location": "/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.973Z",
+      "timestamp": "2025-10-16T19:11:10.265Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/mkRunDry.spec/should_fail_on_missing_module.jsonl"
@@ -4504,9 +4933,9 @@
     {
       "testName": "should fail on invalid address format",
       "status": "pass",
-      "duration": 411,
+      "duration": 410,
       "location": "/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.974Z",
+      "timestamp": "2025-10-16T19:11:10.265Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/mkRunDry.spec/should_fail_on_invalid_address_format.jsonl"
@@ -4515,9 +4944,9 @@
     {
       "testName": "should return exit code 65 for CONFIG_INVALID",
       "status": "pass",
-      "duration": 438,
+      "duration": 381,
       "location": "/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.974Z",
+      "timestamp": "2025-10-16T19:11:10.266Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/mkRunDry.spec/should_return_exit_code_65_for_CONFIG_INVALID.jsonl"
@@ -4526,9 +4955,9 @@
     {
       "testName": "should return exit code 66 for CONFIG_NOT_FOUND",
       "status": "pass",
-      "duration": 401,
+      "duration": 408,
       "location": "/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.975Z",
+      "timestamp": "2025-10-16T19:11:10.266Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/mkRunDry.spec/should_return_exit_code_66_for_CONFIG_NOT_FOUND.jsonl"
@@ -4537,31 +4966,20 @@
     {
       "testName": "should return exit code 65 for VALIDATION_ERROR",
       "status": "pass",
-      "duration": 374,
+      "duration": 397,
       "location": "/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.975Z",
+      "timestamp": "2025-10-16T19:11:10.267Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/mkRunDry.spec/should_return_exit_code_65_for_VALIDATION_ERROR.jsonl"
       }
     },
-    {
-      "testName": "supports watch mode with SIGTERM",
-      "status": "pass",
-      "duration": 2443,
-      "location": "/srv/repos0/mkolbol/tests/cli/mkctlEndpoints.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.975Z",
-      "artifacts": {
-        "summary": "reports/summary.jsonl",
-        "caseFile": "reports/mkctlEndpoints.spec/supports_watch_mode_with_SIGTERM.jsonl"
-      }
-    },
     {
       "testName": "filters no results message",
       "status": "pass",
-      "duration": 409,
+      "duration": 424,
       "location": "/srv/repos0/mkolbol/tests/cli/mkctlEndpoints.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.976Z",
+      "timestamp": "2025-10-16T19:11:10.267Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/mkctlEndpoints.spec/filters_no_results_message.jsonl"
@@ -4570,9 +4988,9 @@
     {
       "testName": "outputs JSON format when --json flag is used",
       "status": "pass",
-      "duration": 412,
+      "duration": 416,
       "location": "/srv/repos0/mkolbol/tests/cli/mkctlEndpoints.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.976Z",
+      "timestamp": "2025-10-16T19:11:10.267Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/mkctlEndpoints.spec/outputs_JSON_format_when_--json_flag_is_used.jsonl"
@@ -4581,9 +4999,9 @@
     {
       "testName": "filters by metadata fields",
       "status": "pass",
-      "duration": 397,
+      "duration": 408,
       "location": "/srv/repos0/mkolbol/tests/cli/mkctlEndpoints.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.976Z",
+      "timestamp": "2025-10-16T19:11:10.268Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/mkctlEndpoints.spec/filters_by_metadata_fields.jsonl"
@@ -4592,9 +5010,9 @@
     {
       "testName": "should respect --duration argument",
       "status": "pass",
-      "duration": 1457,
+      "duration": 1460,
       "location": "/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.977Z",
+      "timestamp": "2025-10-16T19:11:10.268Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/mkctlRun.spec/should_respect_--duration_argument.jsonl"
@@ -4603,9 +5021,9 @@
     {
       "testName": "should handle --duration before --file",
       "status": "pass",
-      "duration": 1469,
+      "duration": 1440,
       "location": "/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.977Z",
+      "timestamp": "2025-10-16T19:11:10.269Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/mkctlRun.spec/should_handle_--duration_before_--file.jsonl"
@@ -4614,9 +5032,9 @@
     {
       "testName": "should handle invalid YAML syntax",
       "status": "pass",
-      "duration": 439,
+      "duration": 435,
       "location": "/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.977Z",
+      "timestamp": "2025-10-16T19:11:10.269Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/mkctlRun.spec/should_handle_invalid_YAML_syntax.jsonl"
@@ -4625,9 +5043,9 @@
     {
       "testName": "should handle missing nodes array",
       "status": "pass",
-      "duration": 405,
+      "duration": 406,
       "location": "/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.978Z",
+      "timestamp": "2025-10-16T19:11:10.270Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/mkctlRun.spec/should_handle_missing_nodes_array.jsonl"
@@ -4636,9 +5054,9 @@
     {
       "testName": "should handle missing connections array",
       "status": "pass",
-      "duration": 410,
+      "duration": 397,
       "location": "/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.978Z",
+      "timestamp": "2025-10-16T19:11:10.271Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/mkctlRun.spec/should_handle_missing_connections_array.jsonl"
@@ -4647,9 +5065,9 @@
     {
       "testName": "should handle duplicate node IDs",
       "status": "pass",
-      "duration": 414,
+      "duration": 409,
       "location": "/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.978Z",
+      "timestamp": "2025-10-16T19:11:10.271Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/mkctlRun.spec/should_handle_duplicate_node_IDs.jsonl"
@@ -4658,9 +5076,9 @@
     {
       "testName": "should handle invalid connection references",
       "status": "pass",
-      "duration": 423,
+      "duration": 409,
       "location": "/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.979Z",
+      "timestamp": "2025-10-16T19:11:10.272Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/mkctlRun.spec/should_handle_invalid_connection_references.jsonl"
@@ -4669,9 +5087,9 @@
     {
       "testName": "should map runtime errors to runtime exit code",
       "status": "pass",
-      "duration": 421,
+      "duration": 410,
       "location": "/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.979Z",
+      "timestamp": "2025-10-16T19:11:10.272Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/mkctlRun.spec/should_map_runtime_errors_to_runtime_exit_code.jsonl"
@@ -4680,9 +5098,9 @@
     {
       "testName": "should exit with RUNTIME code when health check fails",
       "status": "pass",
-      "duration": 1431,
+      "duration": 1442,
       "location": "/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.980Z",
+      "timestamp": "2025-10-16T19:11:10.272Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/mkctlRun.spec/should_exit_with_RUNTIME_code_when_health_check_fails.jsonl"
@@ -4691,515 +5109,273 @@
     {
       "testName": "should successfully run basic.yml",
       "status": "pass",
-      "duration": 1458,
-      "location": "/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.980Z",
-      "artifacts": {
-        "summary": "reports/summary.jsonl",
-        "caseFile": "reports/mkctlRun.spec/should_successfully_run_basic_yml.jsonl"
-      }
-    },
-    {
-      "testName": "should successfully run multi.yml",
-      "status": "pass",
-      "duration": 1459,
-      "location": "/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.981Z",
-      "artifacts": {
-        "summary": "reports/summary.jsonl",
-        "caseFile": "reports/mkctlRun.spec/should_successfully_run_multi_yml.jsonl"
-      }
-    },
-    {
-      "testName": "should handle simple timer topology with short duration",
-      "status": "pass",
-      "duration": 1451,
-      "location": "/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.981Z",
-      "artifacts": {
-        "summary": "reports/summary.jsonl",
-        "caseFile": "reports/mkctlRun.spec/should_handle_simple_timer_topology_with_short_duration.jsonl"
-      }
-    },
-    {
-      "testName": "should handle config with no connections",
-      "status": "pass",
-      "duration": 1459,
-      "location": "/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.982Z",
-      "artifacts": {
-        "summary": "reports/summary.jsonl",
-        "caseFile": "reports/mkctlRun.spec/should_handle_config_with_no_connections.jsonl"
-      }
-    },
-    {
-      "testName": "should handle JSON config format",
-      "status": "pass",
-      "duration": 1442,
-      "location": "/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.982Z",
-      "artifacts": {
-        "summary": "reports/summary.jsonl",
-        "caseFile": "reports/mkctlRun.spec/should_handle_JSON_config_format.jsonl"
-      }
-    },
-    {
-      "testName": "should shut down gracefully on SIGINT",
-      "status": "pass",
-      "duration": 604,
-      "location": "/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.983Z",
-      "artifacts": {
-        "summary": "reports/summary.jsonl",
-        "caseFile": "reports/mkctlRun.spec/should_shut_down_gracefully_on_SIGINT.jsonl"
-      }
-    },
-    {
-      "testName": "should validate and exit with success for valid config",
-      "status": "pass",
-      "duration": 436,
-      "location": "/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.983Z",
-      "artifacts": {
-        "summary": "reports/summary.jsonl",
-        "caseFile": "reports/mkctlRun.spec/should_validate_and_exit_with_success_for_valid_config.jsonl"
-      }
-    },
-    {
-      "testName": "should exit with CONFIG_PARSE error for invalid config",
-      "status": "pass",
-      "duration": 403,
-      "location": "/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.983Z",
-      "artifacts": {
-        "summary": "reports/summary.jsonl",
-        "caseFile": "reports/mkctlRun.spec/should_exit_with_CONFIG_PARSE_error_for_invalid_config.jsonl"
-      }
-    },
-    {
-      "testName": "should exit with CONFIG_PARSE error for duplicate node IDs",
-      "status": "pass",
-      "duration": 415,
-      "location": "/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.984Z",
-      "artifacts": {
-        "summary": "reports/summary.jsonl",
-        "caseFile": "reports/mkctlRun.spec/should_exit_with_CONFIG_PARSE_error_for_duplicate_node_IDs.jsonl"
-      }
-    },
-    {
-      "testName": "should exit with CONFIG_PARSE error for missing nodes array",
-      "status": "pass",
-      "duration": 416,
-      "location": "/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.984Z",
-      "artifacts": {
-        "summary": "reports/summary.jsonl",
-        "caseFile": "reports/mkctlRun.spec/should_exit_with_CONFIG_PARSE_error_for_missing_nodes_array.jsonl"
-      }
-    },
-    {
-      "testName": "should exit with CONFIG_NOT_FOUND error when config file does not exist",
-      "status": "pass",
-      "duration": 408,
-      "location": "/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.984Z",
-      "artifacts": {
-        "summary": "reports/summary.jsonl",
-        "caseFile": "reports/mkctlRun.spec/should_exit_with_CONFIG_NOT_FOUND_error_when_config_file_does_not_exist.jsonl"
-      }
-    },
-    {
-      "testName": "should work with --dry-run flag in any position",
-      "status": "pass",
-      "duration": 417,
-      "location": "/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.985Z",
-      "artifacts": {
-        "summary": "reports/summary.jsonl",
-        "caseFile": "reports/mkctlRun.spec/should_work_with_--dry-run_flag_in_any_position.jsonl"
-      }
-    },
-    {
-      "testName": "should validate complex config with multiple nodes and connections",
-      "status": "pass",
-      "duration": 417,
-      "location": "/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.985Z",
-      "artifacts": {
-        "summary": "reports/summary.jsonl",
-        "caseFile": "reports/mkctlRun.spec/should_validate_complex_config_with_multiple_nodes_and_connections.jsonl"
-      }
-    },
-    {
-      "testName": "should register endpoint with Hostess after spawn",
-      "status": "pass",
-      "duration": 149,
-      "location": "/srv/repos0/mkolbol/tests/devex/server-acceptance.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.985Z",
-      "artifacts": {
-        "summary": "reports/summary.jsonl",
-        "caseFile": "reports/server-acceptance.spec/should_register_endpoint_with_Hostess_after_spawn.jsonl"
-      }
-    },
-    {
-      "testName": "should perform stdin â†’ stdout roundtrip",
-      "status": "pass",
-      "duration": 110,
-      "location": "/srv/repos0/mkolbol/tests/devex/server-acceptance.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.986Z",
-      "artifacts": {
-        "summary": "reports/summary.jsonl",
-        "caseFile": "reports/server-acceptance.spec/should_perform_stdin___stdout_roundtrip.jsonl"
-      }
-    },
-    {
-      "testName": "should handle multiple sequential messages",
-      "status": "pass",
-      "duration": 743,
-      "location": "/srv/repos0/mkolbol/tests/devex/server-acceptance.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.986Z",
-      "artifacts": {
-        "summary": "reports/summary.jsonl",
-        "caseFile": "reports/server-acceptance.spec/should_handle_multiple_sequential_messages.jsonl"
-      }
-    },
-    {
-      "testName": "should handle backpressure with drain events",
-      "status": "pass",
-      "duration": 139,
-      "location": "/srv/repos0/mkolbol/tests/devex/server-acceptance.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.987Z",
-      "artifacts": {
-        "summary": "reports/summary.jsonl",
-        "caseFile": "reports/server-acceptance.spec/should_handle_backpressure_with_drain_events.jsonl"
-      }
-    },
-    {
-      "testName": "should manage lifecycle (start/stop)",
-      "status": "pass",
-      "duration": 49,
-      "location": "/srv/repos0/mkolbol/tests/devex/server-acceptance.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.987Z",
-      "artifacts": {
-        "summary": "reports/summary.jsonl",
-        "caseFile": "reports/server-acceptance.spec/should_manage_lifecycle__start_stop_.jsonl"
-      }
-    },
-    {
-      "testName": "should load configuration",
-      "status": "pass",
-      "duration": 55,
-      "location": "/srv/repos0/mkolbol/tests/executor/executor.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.987Z",
-      "artifacts": {
-        "summary": "reports/summary.jsonl",
-        "caseFile": "reports/executor.spec/should_load_configuration.jsonl"
-      }
-    },
-    {
-      "testName": "should throw if up() called without load()",
-      "status": "pass",
-      "duration": 33,
-      "location": "/srv/repos0/mkolbol/tests/executor/executor.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.988Z",
-      "artifacts": {
-        "summary": "reports/summary.jsonl",
-        "caseFile": "reports/executor.spec/should_throw_if_up___called_without_load__.jsonl"
-      }
-    },
-    {
-      "testName": "should instantiate modules and register with hostess",
-      "status": "pass",
-      "duration": 19,
-      "location": "/srv/repos0/mkolbol/tests/executor/executor.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.988Z",
-      "artifacts": {
-        "summary": "reports/summary.jsonl",
-        "caseFile": "reports/executor.spec/should_instantiate_modules_and_register_with_hostess.jsonl"
-      }
-    },
-    {
-      "testName": "should wire connections via StateManager",
-      "status": "pass",
-      "duration": 46,
-      "location": "/srv/repos0/mkolbol/tests/executor/executor.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.988Z",
-      "artifacts": {
-        "summary": "reports/summary.jsonl",
-        "caseFile": "reports/executor.spec/should_wire_connections_via_StateManager.jsonl"
-      }
-    },
-    {
-      "testName": "should support restartNode",
-      "status": "pass",
-      "duration": 27,
-      "location": "/srv/repos0/mkolbol/tests/executor/executor.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.989Z",
+      "duration": 1450,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0",
+      "timestamp": "2025-10-16T19:11:10.273Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/executor.spec/should_support_restartNode.jsonl"
+        "caseFile": "reports/mkctlRun.spec/should_successfully_run_basic_yml.jsonl"
       }
     },
     {
-      "testName": "should throw on restartNode for non-existent node",
+      "testName": "should successfully run multi.yml",
       "status": "pass",
-      "duration": 75,
-      "location": "/srv/repos0/mkolbol/tests/executor/executor.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.989Z",
+      "duration": 1463,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0",
+      "timestamp": "2025-10-16T19:11:10.273Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/executor.spec/should_throw_on_restartNode_for_non-existent_node.jsonl"
+        "caseFile": "reports/mkctlRun.spec/should_successfully_run_multi_yml.jsonl"
       }
     },
     {
-      "testName": "should perform basic cutover of inproc node",
+      "testName": "should handle simple timer topology with short duration",
       "status": "pass",
-      "duration": 2250,
-      "location": "/srv/repos0/mkolbol/tests/integration/executorCutover.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.989Z",
+      "duration": 1459,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0",
+      "timestamp": "2025-10-16T19:11:10.274Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/executorCutover.spec/should_perform_basic_cutover_of_inproc_node.jsonl"
+        "caseFile": "reports/mkctlRun.spec/should_handle_simple_timer_topology_with_short_duration.jsonl"
       }
     },
     {
-      "testName": "should preserve node configuration during cutover",
+      "testName": "should handle config with no connections",
       "status": "pass",
-      "duration": 2012,
-      "location": "/srv/repos0/mkolbol/tests/integration/executorCutover.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.990Z",
+      "duration": 1445,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0",
+      "timestamp": "2025-10-16T19:11:10.274Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/executorCutover.spec/should_preserve_node_configuration_during_cutover.jsonl"
+        "caseFile": "reports/mkctlRun.spec/should_handle_config_with_no_connections.jsonl"
       }
     },
     {
-      "testName": "should handle cutover with multiple connections",
+      "testName": "should handle JSON config format",
       "status": "pass",
-      "duration": 2013,
-      "location": "/srv/repos0/mkolbol/tests/integration/executorCutover.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.990Z",
+      "duration": 1416,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0",
+      "timestamp": "2025-10-16T19:11:10.274Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/executorCutover.spec/should_handle_cutover_with_multiple_connections.jsonl"
+        "caseFile": "reports/mkctlRun.spec/should_handle_JSON_config_format.jsonl"
       }
     },
     {
-      "testName": "should throw error when old node does not exist",
+      "testName": "should shut down gracefully on SIGINT",
       "status": "pass",
-      "duration": 5,
-      "location": "/srv/repos0/mkolbol/tests/integration/executorCutover.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.991Z",
+      "duration": 599,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0",
+      "timestamp": "2025-10-16T19:11:10.275Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/executorCutover.spec/should_throw_error_when_old_node_does_not_exist.jsonl"
+        "caseFile": "reports/mkctlRun.spec/should_shut_down_gracefully_on_SIGINT.jsonl"
       }
     },
     {
-      "testName": "should handle cutover under data load without loss",
+      "testName": "should validate and exit with success for valid config",
       "status": "pass",
-      "duration": 2409,
-      "location": "/srv/repos0/mkolbol/tests/integration/executorCutover.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.991Z",
+      "duration": 424,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0",
+      "timestamp": "2025-10-16T19:11:10.275Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/executorCutover.spec/should_handle_cutover_under_data_load_without_loss.jsonl"
+        "caseFile": "reports/mkctlRun.spec/should_validate_and_exit_with_success_for_valid_config.jsonl"
       }
     },
     {
-      "testName": "should respect drain timeout configuration",
+      "testName": "should exit with CONFIG_PARSE error for invalid config",
       "status": "pass",
-      "duration": 535,
-      "location": "/srv/repos0/mkolbol/tests/integration/executorCutover.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:51.991Z",
+      "duration": 415,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0",
+      "timestamp": "2025-10-16T19:11:10.275Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/executorCutover.spec/should_respect_drain_timeout_configuration.jsonl"
+        "caseFile": "reports/mkctlRun.spec/should_exit_with_CONFIG_PARSE_error_for_invalid_config.jsonl"
       }
     },
     {
-      "testName": "announces endpoints when topology starts and withdraws on shutdown",
+      "testName": "should exit with CONFIG_PARSE error for duplicate node IDs",
       "status": "pass",
-      "duration": 230,
-      "location": "/srv/repos0/mkolbol/tests/integration/router-announcements.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.004Z",
+      "duration": 401,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0",
+      "timestamp": "2025-10-16T19:11:10.276Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/router-announcements.spec/announces_endpoints_when_topology_starts_and_withdraws_on_shutdown.jsonl"
+        "caseFile": "reports/mkctlRun.spec/should_exit_with_CONFIG_PARSE_error_for_duplicate_node_IDs.jsonl"
       }
     },
     {
-      "testName": "updates routing entry on restart",
+      "testName": "should exit with CONFIG_PARSE error for missing nodes array",
       "status": "pass",
-      "duration": 118,
-      "location": "/srv/repos0/mkolbol/tests/integration/router-announcements.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.005Z",
+      "duration": 402,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0",
+      "timestamp": "2025-10-16T19:11:10.276Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/router-announcements.spec/updates_routing_entry_on_restart.jsonl"
+        "caseFile": "reports/mkctlRun.spec/should_exit_with_CONFIG_PARSE_error_for_missing_nodes_array.jsonl"
       }
     },
     {
-      "testName": "sends periodic heartbeats to router when enabled",
+      "testName": "should exit with CONFIG_NOT_FOUND error when config file does not exist",
       "status": "pass",
-      "duration": 255,
-      "location": "/srv/repos0/mkolbol/tests/integration/router-announcements.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.005Z",
+      "duration": 399,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0",
+      "timestamp": "2025-10-16T19:11:10.276Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/router-announcements.spec/sends_periodic_heartbeats_to_router_when_enabled.jsonl"
+        "caseFile": "reports/mkctlRun.spec/should_exit_with_CONFIG_NOT_FOUND_error_when_config_file_does_not_exist.jsonl"
       }
     },
     {
-      "testName": "stops heartbeats on shutdown",
+      "testName": "should work with --dry-run flag in any position",
       "status": "pass",
-      "duration": 192,
-      "location": "/srv/repos0/mkolbol/tests/integration/router-announcements.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.005Z",
+      "duration": 428,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0",
+      "timestamp": "2025-10-16T19:11:10.277Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/router-announcements.spec/stops_heartbeats_on_shutdown.jsonl"
+        "caseFile": "reports/mkctlRun.spec/should_work_with_--dry-run_flag_in_any_position.jsonl"
       }
     },
     {
-      "testName": "does not send heartbeats when disabled",
+      "testName": "should validate complex config with multiple nodes and connections",
       "status": "pass",
-      "duration": 221,
-      "location": "/srv/repos0/mkolbol/tests/integration/router-announcements.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.006Z",
+      "duration": 408,
+      "location": "/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0",
+      "timestamp": "2025-10-16T19:11:10.277Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/router-announcements.spec/does_not_send_heartbeats_when_disabled.jsonl"
+        "caseFile": "reports/mkctlRun.spec/should_validate_complex_config_with_multiple_nodes_and_connections.jsonl"
       }
     },
     {
-      "testName": "merge: all source data reaches destination",
+      "testName": "should handle backpressure with drain events",
       "status": "pass",
-      "duration": 121,
-      "location": "/srv/repos0/mkolbol/tests/property/invariants.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.006Z",
+      "duration": 365,
+      "location": "/srv/repos0/mkolbol/tests/devex/server-acceptance.spec.ts:0",
+      "timestamp": "2025-10-16T19:11:10.278Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/invariants.spec/merge__all_source_data_reaches_destination.jsonl"
+        "caseFile": "reports/server-acceptance.spec/should_handle_backpressure_with_drain_events.jsonl"
       }
     },
     {
-      "testName": "merge: no data loss with concurrent writes",
+      "testName": "should manage lifecycle (start/stop)",
       "status": "pass",
-      "duration": 252,
-      "location": "/srv/repos0/mkolbol/tests/property/invariants.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.007Z",
+      "duration": 105,
+      "location": "/srv/repos0/mkolbol/tests/devex/server-acceptance.spec.ts:0",
+      "timestamp": "2025-10-16T19:11:10.278Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/invariants.spec/merge__no_data_loss_with_concurrent_writes.jsonl"
+        "caseFile": "reports/server-acceptance.spec/should_manage_lifecycle__start_stop_.jsonl"
       }
     },
     {
-      "testName": "split-then-merge: roundtrip preserves all data",
+      "testName": "should preserve node configuration during cutover",
       "status": "pass",
-      "duration": 1455,
-      "location": "/srv/repos0/mkolbol/tests/property/invariants.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.007Z",
+      "duration": 2010,
+      "location": "/srv/repos0/mkolbol/tests/integration/executorCutover.spec.ts:0",
+      "timestamp": "2025-10-16T19:11:10.279Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/invariants.spec/split-then-merge__roundtrip_preserves_all_data.jsonl"
+        "caseFile": "reports/executorCutover.spec/should_preserve_node_configuration_during_cutover.jsonl"
       }
     },
     {
-      "testName": "empty split: source with zero destinations completes",
+      "testName": "should handle cutover with multiple connections",
       "status": "pass",
-      "duration": 6,
-      "location": "/srv/repos0/mkolbol/tests/property/invariants.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.008Z",
+      "duration": 2013,
+      "location": "/srv/repos0/mkolbol/tests/integration/executorCutover.spec.ts:0",
+      "timestamp": "2025-10-16T19:11:10.279Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/invariants.spec/empty_split__source_with_zero_destinations_completes.jsonl"
+        "caseFile": "reports/executorCutover.spec/should_handle_cutover_with_multiple_connections.jsonl"
       }
     },
     {
-      "testName": "empty merge: destination with zero sources completes",
+      "testName": "should throw error when old node does not exist",
       "status": "pass",
-      "duration": 3,
-      "location": "/srv/repos0/mkolbol/tests/property/invariants.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.008Z",
+      "duration": 4,
+      "location": "/srv/repos0/mkolbol/tests/integration/executorCutover.spec.ts:0",
+      "timestamp": "2025-10-16T19:11:10.279Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/invariants.spec/empty_merge__destination_with_zero_sources_completes.jsonl"
+        "caseFile": "reports/executorCutover.spec/should_throw_error_when_old_node_does_not_exist.jsonl"
       }
     },
     {
-      "testName": "should create file and write data",
+      "testName": "should handle cutover under data load without loss",
       "status": "pass",
-      "duration": 393,
-      "location": "/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.008Z",
+      "duration": 2430,
+      "location": "/srv/repos0/mkolbol/tests/integration/executorCutover.spec.ts:0",
+      "timestamp": "2025-10-16T19:11:10.280Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/filesystemSink.spec/should_create_file_and_write_data.jsonl"
+        "caseFile": "reports/executorCutover.spec/should_handle_cutover_under_data_load_without_loss.jsonl"
       }
     },
     {
-      "testName": "should append to existing file in append mode",
+      "testName": "should respect drain timeout configuration",
       "status": "pass",
-      "duration": 6,
-      "location": "/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.009Z",
+      "duration": 511,
+      "location": "/srv/repos0/mkolbol/tests/integration/executorCutover.spec.ts:0",
+      "timestamp": "2025-10-16T19:11:10.280Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/filesystemSink.spec/should_append_to_existing_file_in_append_mode.jsonl"
+        "caseFile": "reports/executorCutover.spec/should_respect_drain_timeout_configuration.jsonl"
       }
     },
     {
-      "testName": "should truncate existing file in truncate mode",
+      "testName": "merge: no data loss with concurrent writes",
       "status": "pass",
-      "duration": 31,
-      "location": "/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.009Z",
+      "duration": 819,
+      "location": "/srv/repos0/mkolbol/tests/property/invariants.spec.ts:0",
+      "timestamp": "2025-10-16T19:11:10.281Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/filesystemSink.spec/should_truncate_existing_file_in_truncate_mode.jsonl"
+        "caseFile": "reports/invariants.spec/merge__no_data_loss_with_concurrent_writes.jsonl"
       }
     },
     {
-      "testName": "should create nested directories automatically",
+      "testName": "split-then-merge: roundtrip preserves all data",
       "status": "pass",
-      "duration": 6,
-      "location": "/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.010Z",
+      "duration": 1410,
+      "location": "/srv/repos0/mkolbol/tests/property/invariants.spec.ts:0",
+      "timestamp": "2025-10-16T19:11:10.281Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/filesystemSink.spec/should_create_nested_directories_automatically.jsonl"
+        "caseFile": "reports/invariants.spec/split-then-merge__roundtrip_preserves_all_data.jsonl"
       }
     },
     {
-      "testName": "should track write statistics",
+      "testName": "empty split: source with zero destinations completes",
       "status": "pass",
-      "duration": 33,
-      "location": "/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.010Z",
+      "duration": 5,
+      "location": "/srv/repos0/mkolbol/tests/property/invariants.spec.ts:0",
+      "timestamp": "2025-10-16T19:11:10.282Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/filesystemSink.spec/should_track_write_statistics.jsonl"
+        "caseFile": "reports/invariants.spec/empty_split__source_with_zero_destinations_completes.jsonl"
       }
     },
     {
-      "testName": "should handle binary data",
+      "testName": "empty merge: destination with zero sources completes",
       "status": "pass",
-      "duration": 39,
-      "location": "/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.011Z",
+      "duration": 3,
+      "location": "/srv/repos0/mkolbol/tests/property/invariants.spec.ts:0",
+      "timestamp": "2025-10-16T19:11:10.282Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/filesystemSink.spec/should_handle_binary_data.jsonl"
+        "caseFile": "reports/invariants.spec/empty_merge__destination_with_zero_sources_completes.jsonl"
       }
     },
     {
       "testName": "should handle large writes",
       "status": "pass",
-      "duration": 71,
+      "duration": 60,
       "location": "/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.011Z",
+      "timestamp": "2025-10-16T19:11:10.282Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/filesystemSink.spec/should_handle_large_writes.jsonl"
@@ -5208,9 +5384,9 @@
     {
       "testName": "should handle multiple sequential writes",
       "status": "pass",
-      "duration": 9,
+      "duration": 8,
       "location": "/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.011Z",
+      "timestamp": "2025-10-16T19:11:10.283Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/filesystemSink.spec/should_handle_multiple_sequential_writes.jsonl"
@@ -5219,9 +5395,9 @@
     {
       "testName": "should write data with fsync=always",
       "status": "pass",
-      "duration": 5,
+      "duration": 3,
       "location": "/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.012Z",
+      "timestamp": "2025-10-16T19:11:10.283Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/filesystemSink.spec/should_write_data_with_fsync_always.jsonl"
@@ -5230,9 +5406,9 @@
     {
       "testName": "should handle fsync=always with large writes",
       "status": "pass",
-      "duration": 7,
+      "duration": 4,
       "location": "/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.012Z",
+      "timestamp": "2025-10-16T19:11:10.284Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/filesystemSink.spec/should_handle_fsync_always_with_large_writes.jsonl"
@@ -5241,9 +5417,9 @@
     {
       "testName": "should maintain backpressure with fsync=always",
       "status": "pass",
-      "duration": 164,
+      "duration": 174,
       "location": "/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.012Z",
+      "timestamp": "2025-10-16T19:11:10.284Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/filesystemSink.spec/should_maintain_backpressure_with_fsync_always.jsonl"
@@ -5252,9 +5428,9 @@
     {
       "testName": "should write data in jsonl format",
       "status": "pass",
-      "duration": 85,
+      "duration": 9,
       "location": "/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.013Z",
+      "timestamp": "2025-10-16T19:11:10.284Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/filesystemSink.spec/should_write_data_in_jsonl_format.jsonl"
@@ -5263,9 +5439,9 @@
     {
       "testName": "should include timestamp in raw mode",
       "status": "pass",
-      "duration": 71,
+      "duration": 5,
       "location": "/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.013Z",
+      "timestamp": "2025-10-16T19:11:10.285Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/filesystemSink.spec/should_include_timestamp_in_raw_mode.jsonl"
@@ -5274,9 +5450,9 @@
     {
       "testName": "should handle multiple lines in single chunk with timestamp",
       "status": "pass",
-      "duration": 3,
+      "duration": 35,
       "location": "/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.014Z",
+      "timestamp": "2025-10-16T19:11:10.285Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/filesystemSink.spec/should_handle_multiple_lines_in_single_chunk_with_timestamp.jsonl"
@@ -5285,9 +5461,9 @@
     {
       "testName": "should write jsonl format with multiple chunks",
       "status": "pass",
-      "duration": 27,
+      "duration": 147,
       "location": "/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.014Z",
+      "timestamp": "2025-10-16T19:11:10.285Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/filesystemSink.spec/should_write_jsonl_format_with_multiple_chunks.jsonl"
@@ -5296,9 +5472,9 @@
     {
       "testName": "should handle partial lines with timestamp",
       "status": "pass",
-      "duration": 57,
+      "duration": 45,
       "location": "/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.015Z",
+      "timestamp": "2025-10-16T19:11:10.286Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/filesystemSink.spec/should_handle_partial_lines_with_timestamp.jsonl"
@@ -5307,9 +5483,9 @@
     {
       "testName": "should work without format or timestamp options (default behavior)",
       "status": "pass",
-      "duration": 5,
+      "duration": 3,
       "location": "/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.015Z",
+      "timestamp": "2025-10-16T19:11:10.286Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/filesystemSink.spec/should_work_without_format_or_timestamp_options__default_behavior_.jsonl"
@@ -5318,9 +5494,9 @@
     {
       "testName": "should ignore includeTimestamp when format is jsonl",
       "status": "pass",
-      "duration": 5,
+      "duration": 3,
       "location": "/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.016Z",
+      "timestamp": "2025-10-16T19:11:10.286Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/filesystemSink.spec/should_ignore_includeTimestamp_when_format_is_jsonl.jsonl"
@@ -5329,9 +5505,9 @@
     {
       "testName": "should handle 10K+ high-throughput writes",
       "status": "pass",
-      "duration": 453,
+      "duration": 473,
       "location": "/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.016Z",
+      "timestamp": "2025-10-16T19:11:10.287Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/filesystemSink.spec/should_handle_10K__high-throughput_writes.jsonl"
@@ -5340,9 +5516,9 @@
     {
       "testName": "should handle concurrent writes from multiple sinks",
       "status": "pass",
-      "duration": 162,
+      "duration": 174,
       "location": "/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.017Z",
+      "timestamp": "2025-10-16T19:11:10.287Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/filesystemSink.spec/should_handle_concurrent_writes_from_multiple_sinks.jsonl"
@@ -5351,9 +5527,9 @@
     {
       "testName": "should handle large file writes (10MB+)",
       "status": "pass",
-      "duration": 67,
+      "duration": 140,
       "location": "/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.017Z",
+      "timestamp": "2025-10-16T19:11:10.287Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/filesystemSink.spec/should_handle_large_file_writes__10MB__.jsonl"
@@ -5362,9 +5538,9 @@
     {
       "testName": "should maintain data integrity under stress with fsync=always",
       "status": "pass",
-      "duration": 97,
+      "duration": 176,
       "location": "/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.017Z",
+      "timestamp": "2025-10-16T19:11:10.288Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/filesystemSink.spec/should_maintain_data_integrity_under_stress_with_fsync_always.jsonl"
@@ -5373,9 +5549,9 @@
     {
       "testName": "should handle mixed size writes efficiently",
       "status": "pass",
-      "duration": 36,
+      "duration": 48,
       "location": "/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.018Z",
+      "timestamp": "2025-10-16T19:11:10.288Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/filesystemSink.spec/should_handle_mixed_size_writes_efficiently.jsonl"
@@ -5384,9 +5560,9 @@
     {
       "testName": "should handle rapid start/stop cycles",
       "status": "pass",
-      "duration": 91,
+      "duration": 48,
       "location": "/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.018Z",
+      "timestamp": "2025-10-16T19:11:10.289Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/filesystemSink.spec/should_handle_rapid_start_stop_cycles.jsonl"
@@ -5395,9 +5571,9 @@
     {
       "testName": "should preserve write order for any sequence of strings",
       "status": "pass",
-      "duration": 85,
+      "duration": 147,
       "location": "/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.019Z",
+      "timestamp": "2025-10-16T19:11:10.289Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/filesystemSink.spec/should_preserve_write_order_for_any_sequence_of_strings.jsonl"
@@ -5406,9 +5582,9 @@
     {
       "testName": "should correctly count bytes for any buffer sequence",
       "status": "pass",
-      "duration": 46,
+      "duration": 73,
       "location": "/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.019Z",
+      "timestamp": "2025-10-16T19:11:10.289Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/filesystemSink.spec/should_correctly_count_bytes_for_any_buffer_sequence.jsonl"
@@ -5417,9 +5593,9 @@
     {
       "testName": "should handle any valid file path structure",
       "status": "pass",
-      "duration": 50,
+      "duration": 42,
       "location": "/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.019Z",
+      "timestamp": "2025-10-16T19:11:10.290Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/filesystemSink.spec/should_handle_any_valid_file_path_structure.jsonl"
@@ -5428,9 +5604,9 @@
     {
       "testName": "should produce valid JSONL for any input strings",
       "status": "pass",
-      "duration": 77,
+      "duration": 53,
       "location": "/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.020Z",
+      "timestamp": "2025-10-16T19:11:10.290Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/filesystemSink.spec/should_produce_valid_JSONL_for_any_input_strings.jsonl"
@@ -5439,75 +5615,20 @@
     {
       "testName": "should maintain statistics invariants",
       "status": "pass",
-      "duration": 49,
+      "duration": 42,
       "location": "/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.020Z",
+      "timestamp": "2025-10-16T19:11:10.291Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/filesystemSink.spec/should_maintain_statistics_invariants.jsonl"
       }
     },
-    {
-      "testName": "should handle concurrent writes to file target",
-      "status": "pass",
-      "duration": 188,
-      "location": "/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.020Z",
-      "artifacts": {
-        "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ttyRenderer.spec/should_handle_concurrent_writes_to_file_target.jsonl"
-      }
-    },
-    {
-      "testName": "should handle file target vs stdout target independently",
-      "status": "pass",
-      "duration": 104,
-      "location": "/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.021Z",
-      "artifacts": {
-        "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ttyRenderer.spec/should_handle_file_target_vs_stdout_target_independently.jsonl"
-      }
-    },
-    {
-      "testName": "uses default options",
-      "status": "pass",
-      "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.021Z",
-      "artifacts": {
-        "summary": "reports/summary.jsonl",
-        "caseFile": "reports/rateLimiter.spec/uses_default_options.jsonl"
-      }
-    },
-    {
-      "testName": "respects custom capacity",
-      "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.022Z",
-      "artifacts": {
-        "summary": "reports/summary.jsonl",
-        "caseFile": "reports/rateLimiter.spec/respects_custom_capacity.jsonl"
-      }
-    },
-    {
-      "testName": "respects custom refill rate",
-      "status": "pass",
-      "duration": 188,
-      "location": "/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.022Z",
-      "artifacts": {
-        "summary": "reports/summary.jsonl",
-        "caseFile": "reports/rateLimiter.spec/respects_custom_refill_rate.jsonl"
-      }
-    },
     {
       "testName": "respects custom refill interval",
       "status": "pass",
-      "duration": 265,
+      "duration": 261,
       "location": "/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.022Z",
+      "timestamp": "2025-10-16T19:11:10.292Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/rateLimiter.spec/respects_custom_refill_interval.jsonl"
@@ -5516,9 +5637,9 @@
     {
       "testName": "stops refill timer when stop is called",
       "status": "pass",
-      "duration": 213,
+      "duration": 285,
       "location": "/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.023Z",
+      "timestamp": "2025-10-16T19:11:10.293Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/rateLimiter.spec/stops_refill_timer_when_stop_is_called.jsonl"
@@ -5527,31 +5648,20 @@
     {
       "testName": "passes through data without modification",
       "status": "pass",
-      "duration": 55,
+      "duration": 86,
       "location": "/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.023Z",
+      "timestamp": "2025-10-16T19:11:10.293Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/rateLimiter.spec/passes_through_data_without_modification.jsonl"
       }
     },
-    {
-      "testName": "maintains data order across all outputs",
-      "status": "pass",
-      "duration": 194,
-      "location": "/srv/repos0/mkolbol/tests/transforms/tee.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.024Z",
-      "artifacts": {
-        "summary": "reports/summary.jsonl",
-        "caseFile": "reports/tee.spec/maintains_data_order_across_all_outputs.jsonl"
-      }
-    },
     {
       "testName": "handles empty stream",
       "status": "pass",
-      "duration": 58,
+      "duration": 59,
       "location": "/srv/repos0/mkolbol/tests/transforms/tee.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.024Z",
+      "timestamp": "2025-10-16T19:11:10.294Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/tee.spec/handles_empty_stream.jsonl"
@@ -5560,9 +5670,9 @@
     {
       "testName": "handles large chunks",
       "status": "pass",
-      "duration": 54,
+      "duration": 53,
       "location": "/srv/repos0/mkolbol/tests/transforms/tee.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.024Z",
+      "timestamp": "2025-10-16T19:11:10.294Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/tee.spec/handles_large_chunks.jsonl"
@@ -5571,9 +5681,9 @@
     {
       "testName": "handles rapid writes",
       "status": "pass",
-      "duration": 345,
+      "duration": 333,
       "location": "/srv/repos0/mkolbol/tests/transforms/tee.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.025Z",
+      "timestamp": "2025-10-16T19:11:10.294Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/tee.spec/handles_rapid_writes.jsonl"
@@ -5582,9 +5692,9 @@
     {
       "testName": "resumes after backpressure is relieved",
       "status": "pass",
-      "duration": 503,
+      "duration": 524,
       "location": "/srv/repos0/mkolbol/tests/transforms/tee.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.025Z",
+      "timestamp": "2025-10-16T19:11:10.295Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/tee.spec/resumes_after_backpressure_is_relieved.jsonl"
@@ -5593,9 +5703,9 @@
     {
       "testName": "works with many outputs",
       "status": "pass",
-      "duration": 69,
+      "duration": 79,
       "location": "/srv/repos0/mkolbol/tests/transforms/tee.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.025Z",
+      "timestamp": "2025-10-16T19:11:10.295Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/tee.spec/works_with_many_outputs.jsonl"
@@ -5606,54 +5716,54 @@
       "status": "pass",
       "duration": 6,
       "location": "/srv/repos0/mkolbol/tests/transforms/tee.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.026Z",
+      "timestamp": "2025-10-16T19:11:10.296Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/tee.spec/handles_end_event.jsonl"
       }
     },
     {
-      "testName": "should not restart with \"never\" policy",
+      "testName": "should respect maxRestarts limit",
       "status": "pass",
-      "duration": 404,
+      "duration": 562,
       "location": "/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.027Z",
+      "timestamp": "2025-10-16T19:11:10.296Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/externalServerWrapper.spec/should_not_restart_with__never__policy.jsonl"
+        "caseFile": "reports/externalServerWrapper.spec/should_respect_maxRestarts_limit.jsonl"
       }
     },
     {
-      "testName": "should respect maxRestarts limit",
+      "testName": "should provide process info",
       "status": "pass",
-      "duration": 621,
+      "duration": 53,
       "location": "/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.027Z",
+      "timestamp": "2025-10-16T19:11:10.297Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/externalServerWrapper.spec/should_respect_maxRestarts_limit.jsonl"
+        "caseFile": "reports/externalServerWrapper.spec/should_provide_process_info.jsonl"
       }
     },
     {
-      "testName": "should provide process info",
+      "testName": "initialize",
       "status": "pass",
-      "duration": 76,
-      "location": "/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.028Z",
+      "duration": 6,
+      "location": "/srv/repos0/mkolbol/archived/mcp-kernel/tests/router.test.ts:0",
+      "timestamp": "2025-10-16T19:11:10.297Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/externalServerWrapper.spec/should_provide_process_info.jsonl"
+        "caseFile": "reports/router.test/initialize.jsonl"
       }
     },
     {
-      "testName": "should handle large single message",
+      "testName": "tools/resources list read",
       "status": "pass",
-      "duration": 277,
-      "location": "/srv/repos0/mkolbol/tests/devex/acceptance/streams.spec.ts:0",
-      "timestamp": "2025-10-16T17:35:52.028Z",
+      "duration": 37,
+      "location": "/srv/repos0/mkolbol/archived/mcp-kernel/tests/router.test.ts:0",
+      "timestamp": "2025-10-16T19:11:10.297Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/streams.spec/should_handle_large_single_message.jsonl"
+        "caseFile": "reports/router.test/tools_resources_list_read.jsonl"
       }
     }
   ],
diff --git a/reports/invariants.spec/empty_merge__destination_with_zero_sources_completes.jsonl b/reports/invariants.spec/empty_merge__destination_with_zero_sources_completes.jsonl
index 05cbf90..87fbf44 100644
--- a/reports/invariants.spec/empty_merge__destination_with_zero_sources_completes.jsonl
+++ b/reports/invariants.spec/empty_merge__destination_with_zero_sources_completes.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636152008,"lvl":"info","case":"empty merge: destination with zero sources completes","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636152009,"lvl":"info","case":"empty merge: destination with zero sources completes","phase":"execution","evt":"test.run"}
-{"ts":1760636152010,"lvl":"info","case":"empty merge: destination with zero sources completes","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
+{"ts":1760641870282,"lvl":"info","case":"empty merge: destination with zero sources completes","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641870283,"lvl":"info","case":"empty merge: destination with zero sources completes","phase":"execution","evt":"test.run"}
+{"ts":1760641870284,"lvl":"info","case":"empty merge: destination with zero sources completes","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
diff --git a/reports/invariants.spec/empty_split__source_with_zero_destinations_completes.jsonl b/reports/invariants.spec/empty_split__source_with_zero_destinations_completes.jsonl
index ba7e238..a719d6a 100644
--- a/reports/invariants.spec/empty_split__source_with_zero_destinations_completes.jsonl
+++ b/reports/invariants.spec/empty_split__source_with_zero_destinations_completes.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636152007,"lvl":"info","case":"empty split: source with zero destinations completes","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636152008,"lvl":"info","case":"empty split: source with zero destinations completes","phase":"execution","evt":"test.run"}
-{"ts":1760636152009,"lvl":"info","case":"empty split: source with zero destinations completes","phase":"teardown","evt":"case.end","payload":{"duration":6,"status":"passed"}}
+{"ts":1760641870281,"lvl":"info","case":"empty split: source with zero destinations completes","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641870282,"lvl":"info","case":"empty split: source with zero destinations completes","phase":"execution","evt":"test.run"}
+{"ts":1760641870283,"lvl":"info","case":"empty split: source with zero destinations completes","phase":"teardown","evt":"case.end","payload":{"duration":5,"status":"passed"}}
diff --git a/reports/invariants.spec/merge__all_source_data_reaches_destination.jsonl b/reports/invariants.spec/merge__all_source_data_reaches_destination.jsonl
index c323719..e485147 100644
--- a/reports/invariants.spec/merge__all_source_data_reaches_destination.jsonl
+++ b/reports/invariants.spec/merge__all_source_data_reaches_destination.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636152006,"lvl":"info","case":"merge: all source data reaches destination","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636152007,"lvl":"info","case":"merge: all source data reaches destination","phase":"execution","evt":"test.run"}
-{"ts":1760636152008,"lvl":"info","case":"merge: all source data reaches destination","phase":"teardown","evt":"case.end","payload":{"duration":121,"status":"passed"}}
+{"ts":1760641801808,"lvl":"info","case":"merge: all source data reaches destination","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641801809,"lvl":"info","case":"merge: all source data reaches destination","phase":"execution","evt":"test.run"}
+{"ts":1760641801810,"lvl":"info","case":"merge: all source data reaches destination","phase":"teardown","evt":"case.end","payload":{"duration":219,"status":"passed"}}
diff --git a/reports/invariants.spec/merge__no_data_loss_with_concurrent_writes.jsonl b/reports/invariants.spec/merge__no_data_loss_with_concurrent_writes.jsonl
index 235ca4e..d3ed3b5 100644
--- a/reports/invariants.spec/merge__no_data_loss_with_concurrent_writes.jsonl
+++ b/reports/invariants.spec/merge__no_data_loss_with_concurrent_writes.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636152007,"lvl":"info","case":"merge: no data loss with concurrent writes","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636152008,"lvl":"info","case":"merge: no data loss with concurrent writes","phase":"execution","evt":"test.run"}
-{"ts":1760636152009,"lvl":"info","case":"merge: no data loss with concurrent writes","phase":"teardown","evt":"case.end","payload":{"duration":252,"status":"passed"}}
+{"ts":1760641870281,"lvl":"info","case":"merge: no data loss with concurrent writes","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641870282,"lvl":"info","case":"merge: no data loss with concurrent writes","phase":"execution","evt":"test.run"}
+{"ts":1760641870283,"lvl":"info","case":"merge: no data loss with concurrent writes","phase":"teardown","evt":"case.end","payload":{"duration":819,"status":"passed"}}
diff --git a/reports/invariants.spec/split-then-merge__roundtrip_preserves_all_data.jsonl b/reports/invariants.spec/split-then-merge__roundtrip_preserves_all_data.jsonl
index e15184b..1626f2e 100644
--- a/reports/invariants.spec/split-then-merge__roundtrip_preserves_all_data.jsonl
+++ b/reports/invariants.spec/split-then-merge__roundtrip_preserves_all_data.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636152007,"lvl":"info","case":"split-then-merge: roundtrip preserves all data","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636152008,"lvl":"info","case":"split-then-merge: roundtrip preserves all data","phase":"execution","evt":"test.run"}
-{"ts":1760636152009,"lvl":"info","case":"split-then-merge: roundtrip preserves all data","phase":"teardown","evt":"case.end","payload":{"duration":1455,"status":"passed"}}
+{"ts":1760641870281,"lvl":"info","case":"split-then-merge: roundtrip preserves all data","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641870282,"lvl":"info","case":"split-then-merge: roundtrip preserves all data","phase":"execution","evt":"test.run"}
+{"ts":1760641870283,"lvl":"info","case":"split-then-merge: roundtrip preserves all data","phase":"teardown","evt":"case.end","payload":{"duration":1410,"status":"passed"}}
diff --git a/reports/kernel.spec/connect_moves_data_1_1.jsonl b/reports/kernel.spec/connect_moves_data_1_1.jsonl
index d9431a4..f92757e 100644
--- a/reports/kernel.spec/connect_moves_data_1_1.jsonl
+++ b/reports/kernel.spec/connect_moves_data_1_1.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636127846,"lvl":"info","case":"connect moves data 1:1","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636127847,"lvl":"info","case":"connect moves data 1:1","phase":"execution","evt":"test.run"}
-{"ts":1760636127848,"lvl":"info","case":"connect moves data 1:1","phase":"teardown","evt":"case.end","payload":{"duration":18,"status":"passed"}}
+{"ts":1760641846791,"lvl":"info","case":"connect moves data 1:1","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641846792,"lvl":"info","case":"connect moves data 1:1","phase":"execution","evt":"test.run"}
+{"ts":1760641846793,"lvl":"info","case":"connect moves data 1:1","phase":"teardown","evt":"case.end","payload":{"duration":31,"status":"passed"}}
diff --git a/reports/kernel.spec/merge_combines_multiple_sources_into_one_destination.jsonl b/reports/kernel.spec/merge_combines_multiple_sources_into_one_destination.jsonl
index 6dfcfd0..7d8c2bd 100644
--- a/reports/kernel.spec/merge_combines_multiple_sources_into_one_destination.jsonl
+++ b/reports/kernel.spec/merge_combines_multiple_sources_into_one_destination.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636127847,"lvl":"info","case":"merge combines multiple sources into one destination","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636127848,"lvl":"info","case":"merge combines multiple sources into one destination","phase":"execution","evt":"test.run"}
-{"ts":1760636127849,"lvl":"info","case":"merge combines multiple sources into one destination","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
+{"ts":1760641846793,"lvl":"info","case":"merge combines multiple sources into one destination","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641846794,"lvl":"info","case":"merge combines multiple sources into one destination","phase":"execution","evt":"test.run"}
+{"ts":1760641846795,"lvl":"info","case":"merge combines multiple sources into one destination","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/kernel.spec/register_lookup_filters_by_capabilities.jsonl b/reports/kernel.spec/register_lookup_filters_by_capabilities.jsonl
index db540ef..469e0bc 100644
--- a/reports/kernel.spec/register_lookup_filters_by_capabilities.jsonl
+++ b/reports/kernel.spec/register_lookup_filters_by_capabilities.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636127848,"lvl":"info","case":"register/lookup filters by capabilities","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636127849,"lvl":"info","case":"register/lookup filters by capabilities","phase":"execution","evt":"test.run"}
-{"ts":1760636127850,"lvl":"info","case":"register/lookup filters by capabilities","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
+{"ts":1760641846793,"lvl":"info","case":"register/lookup filters by capabilities","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641846794,"lvl":"info","case":"register/lookup filters by capabilities","phase":"execution","evt":"test.run"}
+{"ts":1760641846795,"lvl":"info","case":"register/lookup filters by capabilities","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/kernel.spec/split_fans_out_to_multiple_destinations.jsonl b/reports/kernel.spec/split_fans_out_to_multiple_destinations.jsonl
index b333015..56c7538 100644
--- a/reports/kernel.spec/split_fans_out_to_multiple_destinations.jsonl
+++ b/reports/kernel.spec/split_fans_out_to_multiple_destinations.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636127847,"lvl":"info","case":"split fans out to multiple destinations","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636127848,"lvl":"info","case":"split fans out to multiple destinations","phase":"execution","evt":"test.run"}
-{"ts":1760636127849,"lvl":"info","case":"split fans out to multiple destinations","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
+{"ts":1760641846792,"lvl":"info","case":"split fans out to multiple destinations","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641846793,"lvl":"info","case":"split fans out to multiple destinations","phase":"execution","evt":"test.run"}
+{"ts":1760641846794,"lvl":"info","case":"split fans out to multiple destinations","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/loggerRenderer.spec/should_append_to_existing_log_file.jsonl b/reports/loggerRenderer.spec/should_append_to_existing_log_file.jsonl
index 62cae4a..a9c5ed5 100644
--- a/reports/loggerRenderer.spec/should_append_to_existing_log_file.jsonl
+++ b/reports/loggerRenderer.spec/should_append_to_existing_log_file.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636128075,"lvl":"info","case":"should append to existing log file","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636128076,"lvl":"info","case":"should append to existing log file","phase":"execution","evt":"test.run"}
-{"ts":1760636128077,"lvl":"info","case":"should append to existing log file","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760641847860,"lvl":"info","case":"should append to existing log file","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641847861,"lvl":"info","case":"should append to existing log file","phase":"execution","evt":"test.run"}
+{"ts":1760641847862,"lvl":"info","case":"should append to existing log file","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/loggerRenderer.spec/should_write_all_data_to_log_file.jsonl b/reports/loggerRenderer.spec/should_write_all_data_to_log_file.jsonl
index 1b9a8ad..051fad8 100644
--- a/reports/loggerRenderer.spec/should_write_all_data_to_log_file.jsonl
+++ b/reports/loggerRenderer.spec/should_write_all_data_to_log_file.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636128075,"lvl":"info","case":"should write all data to log file","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636128076,"lvl":"info","case":"should write all data to log file","phase":"execution","evt":"test.run"}
-{"ts":1760636128077,"lvl":"info","case":"should write all data to log file","phase":"teardown","evt":"case.end","payload":{"duration":8,"status":"passed"}}
+{"ts":1760641847859,"lvl":"info","case":"should write all data to log file","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641847860,"lvl":"info","case":"should write all data to log file","phase":"execution","evt":"test.run"}
+{"ts":1760641847861,"lvl":"info","case":"should write all data to log file","phase":"teardown","evt":"case.end","payload":{"duration":30,"status":"passed"}}
diff --git a/reports/passthroughRenderer.spec/should_handle_ANSI_escape_sequences.jsonl b/reports/passthroughRenderer.spec/should_handle_ANSI_escape_sequences.jsonl
index 102bba3..541126e 100644
--- a/reports/passthroughRenderer.spec/should_handle_ANSI_escape_sequences.jsonl
+++ b/reports/passthroughRenderer.spec/should_handle_ANSI_escape_sequences.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636128074,"lvl":"info","case":"should handle ANSI escape sequences","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636128075,"lvl":"info","case":"should handle ANSI escape sequences","phase":"execution","evt":"test.run"}
-{"ts":1760636128076,"lvl":"info","case":"should handle ANSI escape sequences","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760641847422,"lvl":"info","case":"should handle ANSI escape sequences","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641847423,"lvl":"info","case":"should handle ANSI escape sequences","phase":"execution","evt":"test.run"}
+{"ts":1760641847424,"lvl":"info","case":"should handle ANSI escape sequences","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/passthroughRenderer.spec/should_render_raw_ANSI_to_stdout.jsonl b/reports/passthroughRenderer.spec/should_render_raw_ANSI_to_stdout.jsonl
index 94bbb57..c37ac18 100644
--- a/reports/passthroughRenderer.spec/should_render_raw_ANSI_to_stdout.jsonl
+++ b/reports/passthroughRenderer.spec/should_render_raw_ANSI_to_stdout.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636128074,"lvl":"info","case":"should render raw ANSI to stdout","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636128075,"lvl":"info","case":"should render raw ANSI to stdout","phase":"execution","evt":"test.run"}
-{"ts":1760636128076,"lvl":"info","case":"should render raw ANSI to stdout","phase":"teardown","evt":"case.end","payload":{"duration":11,"status":"passed"}}
+{"ts":1760641847422,"lvl":"info","case":"should render raw ANSI to stdout","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641847423,"lvl":"info","case":"should render raw ANSI to stdout","phase":"execution","evt":"test.run"}
+{"ts":1760641847424,"lvl":"info","case":"should render raw ANSI to stdout","phase":"teardown","evt":"case.end","payload":{"duration":93,"status":"passed"}}
diff --git a/reports/router.test/initialize.jsonl b/reports/router.test/initialize.jsonl
index be0bbcd..39e3aa0 100644
--- a/reports/router.test/initialize.jsonl
+++ b/reports/router.test/initialize.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636127320,"lvl":"info","case":"initialize","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636127321,"lvl":"info","case":"initialize","phase":"execution","evt":"test.run"}
-{"ts":1760636127322,"lvl":"info","case":"initialize","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760641870297,"lvl":"info","case":"initialize","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641870298,"lvl":"info","case":"initialize","phase":"execution","evt":"test.run"}
+{"ts":1760641870299,"lvl":"info","case":"initialize","phase":"teardown","evt":"case.end","payload":{"duration":6,"status":"passed"}}
diff --git a/reports/router.test/tools_resources_list_read.jsonl b/reports/router.test/tools_resources_list_read.jsonl
index 7bea291..4e40461 100644
--- a/reports/router.test/tools_resources_list_read.jsonl
+++ b/reports/router.test/tools_resources_list_read.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636127320,"lvl":"info","case":"tools/resources list read","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636127321,"lvl":"info","case":"tools/resources list read","phase":"execution","evt":"test.run"}
-{"ts":1760636127322,"lvl":"info","case":"tools/resources list read","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760641870297,"lvl":"info","case":"tools/resources list read","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641870298,"lvl":"info","case":"tools/resources list read","phase":"execution","evt":"test.run"}
+{"ts":1760641870299,"lvl":"info","case":"tools/resources list read","phase":"teardown","evt":"case.end","payload":{"duration":37,"status":"passed"}}
diff --git a/reports/rulepacks.spec/applies_higher_priority_rules_first.jsonl b/reports/rulepacks.spec/applies_higher_priority_rules_first.jsonl
index 034a9f2..5d90397 100644
--- a/reports/rulepacks.spec/applies_higher_priority_rules_first.jsonl
+++ b/reports/rulepacks.spec/applies_higher_priority_rules_first.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636127408,"lvl":"info","case":"applies higher priority rules first","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636127409,"lvl":"info","case":"applies higher priority rules first","phase":"execution","evt":"test.run"}
-{"ts":1760636127410,"lvl":"info","case":"applies higher priority rules first","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760641846438,"lvl":"info","case":"applies higher priority rules first","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641846439,"lvl":"info","case":"applies higher priority rules first","phase":"execution","evt":"test.run"}
+{"ts":1760641846440,"lvl":"info","case":"applies higher priority rules first","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
diff --git a/reports/rulepacks.spec/captures_assertion_failures.jsonl b/reports/rulepacks.spec/captures_assertion_failures.jsonl
index 5573fd7..7ebfc86 100644
--- a/reports/rulepacks.spec/captures_assertion_failures.jsonl
+++ b/reports/rulepacks.spec/captures_assertion_failures.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636127406,"lvl":"info","case":"captures assertion failures","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636127407,"lvl":"info","case":"captures assertion failures","phase":"execution","evt":"test.run"}
-{"ts":1760636127408,"lvl":"info","case":"captures assertion failures","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760641846420,"lvl":"info","case":"captures assertion failures","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641846421,"lvl":"info","case":"captures assertion failures","phase":"execution","evt":"test.run"}
+{"ts":1760641846422,"lvl":"info","case":"captures assertion failures","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
diff --git a/reports/rulepacks.spec/captures_console_output.jsonl b/reports/rulepacks.spec/captures_console_output.jsonl
index 2bf5821..2d8246f 100644
--- a/reports/rulepacks.spec/captures_console_output.jsonl
+++ b/reports/rulepacks.spec/captures_console_output.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636127407,"lvl":"info","case":"captures console output","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636127408,"lvl":"info","case":"captures console output","phase":"execution","evt":"test.run"}
-{"ts":1760636127409,"lvl":"info","case":"captures console output","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760641846421,"lvl":"info","case":"captures console output","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641846422,"lvl":"info","case":"captures console output","phase":"execution","evt":"test.run"}
+{"ts":1760641846423,"lvl":"info","case":"captures console output","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/rulepacks.spec/captures_error_events.jsonl b/reports/rulepacks.spec/captures_error_events.jsonl
index 780809b..24eb6aa 100644
--- a/reports/rulepacks.spec/captures_error_events.jsonl
+++ b/reports/rulepacks.spec/captures_error_events.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636127406,"lvl":"info","case":"captures error events","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636127407,"lvl":"info","case":"captures error events","phase":"execution","evt":"test.run"}
-{"ts":1760636127408,"lvl":"info","case":"captures error events","phase":"teardown","evt":"case.end","payload":{"duration":11,"status":"passed"}}
+{"ts":1760641798992,"lvl":"info","case":"captures error events","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641798993,"lvl":"info","case":"captures error events","phase":"execution","evt":"test.run"}
+{"ts":1760641798994,"lvl":"info","case":"captures error events","phase":"teardown","evt":"case.end","payload":{"duration":35,"status":"passed"}}
diff --git a/reports/rulepacks.spec/captures_race_conditions.jsonl b/reports/rulepacks.spec/captures_race_conditions.jsonl
index d26f876..e98556d 100644
--- a/reports/rulepacks.spec/captures_race_conditions.jsonl
+++ b/reports/rulepacks.spec/captures_race_conditions.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636127407,"lvl":"info","case":"captures race conditions","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636127408,"lvl":"info","case":"captures race conditions","phase":"execution","evt":"test.run"}
-{"ts":1760636127409,"lvl":"info","case":"captures race conditions","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760641846422,"lvl":"info","case":"captures race conditions","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641846423,"lvl":"info","case":"captures race conditions","phase":"execution","evt":"test.run"}
+{"ts":1760641846424,"lvl":"info","case":"captures race conditions","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/rulepacks.spec/captures_test_errors.jsonl b/reports/rulepacks.spec/captures_test_errors.jsonl
index 959b2bc..d2d0286 100644
--- a/reports/rulepacks.spec/captures_test_errors.jsonl
+++ b/reports/rulepacks.spec/captures_test_errors.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636127407,"lvl":"info","case":"captures test errors","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636127408,"lvl":"info","case":"captures test errors","phase":"execution","evt":"test.run"}
-{"ts":1760636127409,"lvl":"info","case":"captures test errors","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760641846421,"lvl":"info","case":"captures test errors","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641846422,"lvl":"info","case":"captures test errors","phase":"execution","evt":"test.run"}
+{"ts":1760641846423,"lvl":"info","case":"captures test errors","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/rulepacks.spec/captures_test_failures_and_panics.jsonl b/reports/rulepacks.spec/captures_test_failures_and_panics.jsonl
index 95807c9..915725c 100644
--- a/reports/rulepacks.spec/captures_test_failures_and_panics.jsonl
+++ b/reports/rulepacks.spec/captures_test_failures_and_panics.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636127407,"lvl":"info","case":"captures test failures and panics","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636127408,"lvl":"info","case":"captures test failures and panics","phase":"execution","evt":"test.run"}
-{"ts":1760636127409,"lvl":"info","case":"captures test failures and panics","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760641846422,"lvl":"info","case":"captures test failures and panics","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641846423,"lvl":"info","case":"captures test failures and panics","phase":"execution","evt":"test.run"}
+{"ts":1760641846424,"lvl":"info","case":"captures test failures and panics","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/rulepacks.spec/captures_test_timeouts.jsonl b/reports/rulepacks.spec/captures_test_timeouts.jsonl
index c72ebf8..df79703 100644
--- a/reports/rulepacks.spec/captures_test_timeouts.jsonl
+++ b/reports/rulepacks.spec/captures_test_timeouts.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636127408,"lvl":"info","case":"captures test timeouts","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636127409,"lvl":"info","case":"captures test timeouts","phase":"execution","evt":"test.run"}
-{"ts":1760636127410,"lvl":"info","case":"captures test timeouts","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760641799208,"lvl":"info","case":"captures test timeouts","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641799209,"lvl":"info","case":"captures test timeouts","phase":"execution","evt":"test.run"}
+{"ts":1760641799210,"lvl":"info","case":"captures test timeouts","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/rulepacks.spec/combines_rules_from_go-defaults_and_custom_rules.jsonl b/reports/rulepacks.spec/combines_rules_from_go-defaults_and_custom_rules.jsonl
index 7d6b8f4..9e146ba 100644
--- a/reports/rulepacks.spec/combines_rules_from_go-defaults_and_custom_rules.jsonl
+++ b/reports/rulepacks.spec/combines_rules_from_go-defaults_and_custom_rules.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636128016,"lvl":"info","case":"combines rules from go-defaults and custom rules","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636128017,"lvl":"info","case":"combines rules from go-defaults and custom rules","phase":"execution","evt":"test.run"}
-{"ts":1760636128018,"lvl":"info","case":"combines rules from go-defaults and custom rules","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760641846914,"lvl":"info","case":"combines rules from go-defaults and custom rules","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641846915,"lvl":"info","case":"combines rules from go-defaults and custom rules","phase":"execution","evt":"test.run"}
+{"ts":1760641846916,"lvl":"info","case":"combines rules from go-defaults and custom rules","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/rulepacks.spec/combines_rules_from_node-defaults_and_custom_rules.jsonl b/reports/rulepacks.spec/combines_rules_from_node-defaults_and_custom_rules.jsonl
index 8e0e83e..30ac2f0 100644
--- a/reports/rulepacks.spec/combines_rules_from_node-defaults_and_custom_rules.jsonl
+++ b/reports/rulepacks.spec/combines_rules_from_node-defaults_and_custom_rules.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636128015,"lvl":"info","case":"combines rules from node-defaults and custom rules","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636128016,"lvl":"info","case":"combines rules from node-defaults and custom rules","phase":"execution","evt":"test.run"}
-{"ts":1760636128017,"lvl":"info","case":"combines rules from node-defaults and custom rules","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760641846914,"lvl":"info","case":"combines rules from node-defaults and custom rules","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641846915,"lvl":"info","case":"combines rules from node-defaults and custom rules","phase":"execution","evt":"test.run"}
+{"ts":1760641846916,"lvl":"info","case":"combines rules from node-defaults and custom rules","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/rulepacks.spec/detects_and_redacts_all_secret_types_in_one_event.jsonl b/reports/rulepacks.spec/detects_and_redacts_all_secret_types_in_one_event.jsonl
index c7ae3ae..f64a813 100644
--- a/reports/rulepacks.spec/detects_and_redacts_all_secret_types_in_one_event.jsonl
+++ b/reports/rulepacks.spec/detects_and_redacts_all_secret_types_in_one_event.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636128014,"lvl":"info","case":"detects and redacts all secret types in one event","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636128015,"lvl":"info","case":"detects and redacts all secret types in one event","phase":"execution","evt":"test.run"}
-{"ts":1760636128016,"lvl":"info","case":"detects and redacts all secret types in one event","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760641846913,"lvl":"info","case":"detects and redacts all secret types in one event","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641846914,"lvl":"info","case":"detects and redacts all secret types in one event","phase":"execution","evt":"test.run"}
+{"ts":1760641846915,"lvl":"info","case":"detects and redacts all secret types in one event","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/rulepacks.spec/enforces_budget_after_redaction.jsonl b/reports/rulepacks.spec/enforces_budget_after_redaction.jsonl
index cb64dc2..73c44c3 100644
--- a/reports/rulepacks.spec/enforces_budget_after_redaction.jsonl
+++ b/reports/rulepacks.spec/enforces_budget_after_redaction.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636128016,"lvl":"info","case":"enforces budget after redaction","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636128017,"lvl":"info","case":"enforces budget after redaction","phase":"execution","evt":"test.run"}
-{"ts":1760636128018,"lvl":"info","case":"enforces budget after redaction","phase":"teardown","evt":"case.end","payload":{"duration":6,"status":"passed"}}
+{"ts":1760641846915,"lvl":"info","case":"enforces budget after redaction","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641846916,"lvl":"info","case":"enforces budget after redaction","phase":"execution","evt":"test.run"}
+{"ts":1760641846917,"lvl":"info","case":"enforces budget after redaction","phase":"teardown","evt":"case.end","payload":{"duration":54,"status":"passed"}}
diff --git a/reports/rulepacks.spec/handles_nested_secrets_in_complex_objects.jsonl b/reports/rulepacks.spec/handles_nested_secrets_in_complex_objects.jsonl
index ed763bd..549991e 100644
--- a/reports/rulepacks.spec/handles_nested_secrets_in_complex_objects.jsonl
+++ b/reports/rulepacks.spec/handles_nested_secrets_in_complex_objects.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636128015,"lvl":"info","case":"handles nested secrets in complex objects","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636128016,"lvl":"info","case":"handles nested secrets in complex objects","phase":"execution","evt":"test.run"}
-{"ts":1760636128017,"lvl":"info","case":"handles nested secrets in complex objects","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760641846913,"lvl":"info","case":"handles nested secrets in complex objects","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641846914,"lvl":"info","case":"handles nested secrets in complex objects","phase":"execution","evt":"test.run"}
+{"ts":1760641846915,"lvl":"info","case":"handles nested secrets in complex objects","phase":"teardown","evt":"case.end","payload":{"duration":6,"status":"passed"}}
diff --git a/reports/rulepacks.spec/merges_multiple_rules_from_different_sources.jsonl b/reports/rulepacks.spec/merges_multiple_rules_from_different_sources.jsonl
index 0fb58ce..5c9822e 100644
--- a/reports/rulepacks.spec/merges_multiple_rules_from_different_sources.jsonl
+++ b/reports/rulepacks.spec/merges_multiple_rules_from_different_sources.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636127408,"lvl":"info","case":"merges multiple rules from different sources","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636127409,"lvl":"info","case":"merges multiple rules from different sources","phase":"execution","evt":"test.run"}
-{"ts":1760636127410,"lvl":"info","case":"merges multiple rules from different sources","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760641846438,"lvl":"info","case":"merges multiple rules from different sources","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641846439,"lvl":"info","case":"merges multiple rules from different sources","phase":"execution","evt":"test.run"}
+{"ts":1760641846440,"lvl":"info","case":"merges multiple rules from different sources","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
diff --git a/reports/rulepacks.spec/overrides_pack_rules_with_local_high-priority_rules.jsonl b/reports/rulepacks.spec/overrides_pack_rules_with_local_high-priority_rules.jsonl
index 3ab82f2..afa93e7 100644
--- a/reports/rulepacks.spec/overrides_pack_rules_with_local_high-priority_rules.jsonl
+++ b/reports/rulepacks.spec/overrides_pack_rules_with_local_high-priority_rules.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636127408,"lvl":"info","case":"overrides pack rules with local high-priority rules","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636127409,"lvl":"info","case":"overrides pack rules with local high-priority rules","phase":"execution","evt":"test.run"}
-{"ts":1760636127410,"lvl":"info","case":"overrides pack rules with local high-priority rules","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760641846438,"lvl":"info","case":"overrides pack rules with local high-priority rules","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641846439,"lvl":"info","case":"overrides pack rules with local high-priority rules","phase":"execution","evt":"test.run"}
+{"ts":1760641846440,"lvl":"info","case":"overrides pack rules with local high-priority rules","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
diff --git a/reports/rulepacks.spec/redacts_API_keys_in_test_events.jsonl b/reports/rulepacks.spec/redacts_API_keys_in_test_events.jsonl
index 6152129..4a40b95 100644
--- a/reports/rulepacks.spec/redacts_API_keys_in_test_events.jsonl
+++ b/reports/rulepacks.spec/redacts_API_keys_in_test_events.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636128011,"lvl":"info","case":"redacts API keys in test events","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636128012,"lvl":"info","case":"redacts API keys in test events","phase":"execution","evt":"test.run"}
-{"ts":1760636128013,"lvl":"info","case":"redacts API keys in test events","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
+{"ts":1760641846468,"lvl":"info","case":"redacts API keys in test events","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641846469,"lvl":"info","case":"redacts API keys in test events","phase":"execution","evt":"test.run"}
+{"ts":1760641846470,"lvl":"info","case":"redacts API keys in test events","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
diff --git a/reports/rulepacks.spec/redacts_AWS_credentials_in_Go_test_logs.jsonl b/reports/rulepacks.spec/redacts_AWS_credentials_in_Go_test_logs.jsonl
index 69fd004..522f02f 100644
--- a/reports/rulepacks.spec/redacts_AWS_credentials_in_Go_test_logs.jsonl
+++ b/reports/rulepacks.spec/redacts_AWS_credentials_in_Go_test_logs.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636128013,"lvl":"info","case":"redacts AWS credentials in Go test logs","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636128014,"lvl":"info","case":"redacts AWS credentials in Go test logs","phase":"execution","evt":"test.run"}
-{"ts":1760636128015,"lvl":"info","case":"redacts AWS credentials in Go test logs","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760641846911,"lvl":"info","case":"redacts AWS credentials in Go test logs","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641846912,"lvl":"info","case":"redacts AWS credentials in Go test logs","phase":"execution","evt":"test.run"}
+{"ts":1760641846913,"lvl":"info","case":"redacts AWS credentials in Go test logs","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/rulepacks.spec/redacts_AWS_credentials_in_test_events.jsonl b/reports/rulepacks.spec/redacts_AWS_credentials_in_test_events.jsonl
index 56e0ab7..ecd060a 100644
--- a/reports/rulepacks.spec/redacts_AWS_credentials_in_test_events.jsonl
+++ b/reports/rulepacks.spec/redacts_AWS_credentials_in_test_events.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636128011,"lvl":"info","case":"redacts AWS credentials in test events","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636128012,"lvl":"info","case":"redacts AWS credentials in test events","phase":"execution","evt":"test.run"}
-{"ts":1760636128013,"lvl":"info","case":"redacts AWS credentials in test events","phase":"teardown","evt":"case.end","payload":{"duration":29,"status":"passed"}}
+{"ts":1760641799233,"lvl":"info","case":"redacts AWS credentials in test events","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641799234,"lvl":"info","case":"redacts AWS credentials in test events","phase":"execution","evt":"test.run"}
+{"ts":1760641799235,"lvl":"info","case":"redacts AWS credentials in test events","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/rulepacks.spec/redacts_JWT_tokens_in_Node_js_test_events.jsonl b/reports/rulepacks.spec/redacts_JWT_tokens_in_Node_js_test_events.jsonl
index 6999a6b..cb7d86d 100644
--- a/reports/rulepacks.spec/redacts_JWT_tokens_in_Node_js_test_events.jsonl
+++ b/reports/rulepacks.spec/redacts_JWT_tokens_in_Node_js_test_events.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760635972747,"lvl":"info","case":"redacts JWT tokens in Node.js test events","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760635972748,"lvl":"info","case":"redacts JWT tokens in Node.js test events","phase":"execution","evt":"test.run"}
-{"ts":1760635972749,"lvl":"info","case":"redacts JWT tokens in Node.js test events","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760641846439,"lvl":"info","case":"redacts JWT tokens in Node.js test events","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641846440,"lvl":"info","case":"redacts JWT tokens in Node.js test events","phase":"execution","evt":"test.run"}
+{"ts":1760641846441,"lvl":"info","case":"redacts JWT tokens in Node.js test events","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/rulepacks.spec/redacts_URL_credentials_in_test_events.jsonl b/reports/rulepacks.spec/redacts_URL_credentials_in_test_events.jsonl
index fe73b47..2cfab8e 100644
--- a/reports/rulepacks.spec/redacts_URL_credentials_in_test_events.jsonl
+++ b/reports/rulepacks.spec/redacts_URL_credentials_in_test_events.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636128012,"lvl":"info","case":"redacts URL credentials in test events","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636128013,"lvl":"info","case":"redacts URL credentials in test events","phase":"execution","evt":"test.run"}
-{"ts":1760636128014,"lvl":"info","case":"redacts URL credentials in test events","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760641799235,"lvl":"info","case":"redacts URL credentials in test events","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641799236,"lvl":"info","case":"redacts URL credentials in test events","phase":"execution","evt":"test.run"}
+{"ts":1760641799237,"lvl":"info","case":"redacts URL credentials in test events","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/rulepacks.spec/redacts_database_URLs_in_Go_test_failures.jsonl b/reports/rulepacks.spec/redacts_database_URLs_in_Go_test_failures.jsonl
index 000e5e9..a793d9a 100644
--- a/reports/rulepacks.spec/redacts_database_URLs_in_Go_test_failures.jsonl
+++ b/reports/rulepacks.spec/redacts_database_URLs_in_Go_test_failures.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636128013,"lvl":"info","case":"redacts database URLs in Go test failures","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636128014,"lvl":"info","case":"redacts database URLs in Go test failures","phase":"execution","evt":"test.run"}
-{"ts":1760636128015,"lvl":"info","case":"redacts database URLs in Go test failures","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760641846911,"lvl":"info","case":"redacts database URLs in Go test failures","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641846912,"lvl":"info","case":"redacts database URLs in Go test failures","phase":"execution","evt":"test.run"}
+{"ts":1760641846913,"lvl":"info","case":"redacts database URLs in Go test failures","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/rulepacks.spec/redacts_multiple_occurrences_of_the_same_secret_type.jsonl b/reports/rulepacks.spec/redacts_multiple_occurrences_of_the_same_secret_type.jsonl
index 5c7ced4..50da75c 100644
--- a/reports/rulepacks.spec/redacts_multiple_occurrences_of_the_same_secret_type.jsonl
+++ b/reports/rulepacks.spec/redacts_multiple_occurrences_of_the_same_secret_type.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636128015,"lvl":"info","case":"redacts multiple occurrences of the same secret type","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636128016,"lvl":"info","case":"redacts multiple occurrences of the same secret type","phase":"execution","evt":"test.run"}
-{"ts":1760636128017,"lvl":"info","case":"redacts multiple occurrences of the same secret type","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760641846913,"lvl":"info","case":"redacts multiple occurrences of the same secret type","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641846914,"lvl":"info","case":"redacts multiple occurrences of the same secret type","phase":"execution","evt":"test.run"}
+{"ts":1760641846915,"lvl":"info","case":"redacts multiple occurrences of the same secret type","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/rulepacks.spec/redacts_private_keys_in_test_events.jsonl b/reports/rulepacks.spec/redacts_private_keys_in_test_events.jsonl
index 310b591..93d0146 100644
--- a/reports/rulepacks.spec/redacts_private_keys_in_test_events.jsonl
+++ b/reports/rulepacks.spec/redacts_private_keys_in_test_events.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636128012,"lvl":"info","case":"redacts private keys in test events","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636128013,"lvl":"info","case":"redacts private keys in test events","phase":"execution","evt":"test.run"}
-{"ts":1760636128014,"lvl":"info","case":"redacts private keys in test events","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760641846891,"lvl":"info","case":"redacts private keys in test events","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641846892,"lvl":"info","case":"redacts private keys in test events","phase":"execution","evt":"test.run"}
+{"ts":1760641846893,"lvl":"info","case":"redacts private keys in test events","phase":"teardown","evt":"case.end","payload":{"duration":4,"status":"passed"}}
diff --git a/reports/rulepacks.spec/redacts_secrets_in_Go_test_output.jsonl b/reports/rulepacks.spec/redacts_secrets_in_Go_test_output.jsonl
index 1882764..78f8e88 100644
--- a/reports/rulepacks.spec/redacts_secrets_in_Go_test_output.jsonl
+++ b/reports/rulepacks.spec/redacts_secrets_in_Go_test_output.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636128012,"lvl":"info","case":"redacts secrets in Go test output","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636128013,"lvl":"info","case":"redacts secrets in Go test output","phase":"execution","evt":"test.run"}
-{"ts":1760636128014,"lvl":"info","case":"redacts secrets in Go test output","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760641846910,"lvl":"info","case":"redacts secrets in Go test output","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641846911,"lvl":"info","case":"redacts secrets in Go test output","phase":"execution","evt":"test.run"}
+{"ts":1760641846912,"lvl":"info","case":"redacts secrets in Go test output","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/rulepacks.spec/respects_enabled_false_flag.jsonl b/reports/rulepacks.spec/respects_enabled_false_flag.jsonl
index 63418b7..0e04979 100644
--- a/reports/rulepacks.spec/respects_enabled_false_flag.jsonl
+++ b/reports/rulepacks.spec/respects_enabled_false_flag.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636128014,"lvl":"info","case":"respects enabled=false flag","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636128015,"lvl":"info","case":"respects enabled=false flag","phase":"execution","evt":"test.run"}
-{"ts":1760636128016,"lvl":"info","case":"respects enabled=false flag","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
+{"ts":1760641846912,"lvl":"info","case":"respects enabled=false flag","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641846913,"lvl":"info","case":"respects enabled=false flag","phase":"execution","evt":"test.run"}
+{"ts":1760641846914,"lvl":"info","case":"respects enabled=false flag","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/rulepacks.spec/respects_global_optOut_flag.jsonl b/reports/rulepacks.spec/respects_global_optOut_flag.jsonl
index c21c6e0..d7c8573 100644
--- a/reports/rulepacks.spec/respects_global_optOut_flag.jsonl
+++ b/reports/rulepacks.spec/respects_global_optOut_flag.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636128013,"lvl":"info","case":"respects global optOut flag","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636128014,"lvl":"info","case":"respects global optOut flag","phase":"execution","evt":"test.run"}
-{"ts":1760636128015,"lvl":"info","case":"respects global optOut flag","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760641846912,"lvl":"info","case":"respects global optOut flag","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641846913,"lvl":"info","case":"respects global optOut flag","phase":"execution","evt":"test.run"}
+{"ts":1760641846914,"lvl":"info","case":"respects global optOut flag","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/rulepacks.spec/respects_secrets_false_flag.jsonl b/reports/rulepacks.spec/respects_secrets_false_flag.jsonl
index 4e5654f..5d136cf 100644
--- a/reports/rulepacks.spec/respects_secrets_false_flag.jsonl
+++ b/reports/rulepacks.spec/respects_secrets_false_flag.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636128014,"lvl":"info","case":"respects secrets=false flag","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636128015,"lvl":"info","case":"respects secrets=false flag","phase":"execution","evt":"test.run"}
-{"ts":1760636128016,"lvl":"info","case":"respects secrets=false flag","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760641846912,"lvl":"info","case":"respects secrets=false flag","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641846913,"lvl":"info","case":"respects secrets=false flag","phase":"execution","evt":"test.run"}
+{"ts":1760641846914,"lvl":"info","case":"respects secrets=false flag","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/sample.spec/should_create_and_compare_snapshots_with_masking.jsonl b/reports/sample.spec/should_create_and_compare_snapshots_with_masking.jsonl
index 149bec8..1697864 100644
--- a/reports/sample.spec/should_create_and_compare_snapshots_with_masking.jsonl
+++ b/reports/sample.spec/should_create_and_compare_snapshots_with_masking.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636127321,"lvl":"info","case":"should create and compare snapshots with masking","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636127322,"lvl":"info","case":"should create and compare snapshots with masking","phase":"execution","evt":"test.run"}
-{"ts":1760636127323,"lvl":"info","case":"should create and compare snapshots with masking","phase":"teardown","evt":"case.end","payload":{"duration":5,"status":"passed"}}
+{"ts":1760641845984,"lvl":"info","case":"should create and compare snapshots with masking","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641845985,"lvl":"info","case":"should create and compare snapshots with masking","phase":"execution","evt":"test.run"}
+{"ts":1760641845986,"lvl":"info","case":"should create and compare snapshots with masking","phase":"teardown","evt":"case.end","payload":{"duration":5,"status":"passed"}}
diff --git a/reports/sample.spec/should_detect_mismatches.jsonl b/reports/sample.spec/should_detect_mismatches.jsonl
index 15b6f34..a830d1a 100644
--- a/reports/sample.spec/should_detect_mismatches.jsonl
+++ b/reports/sample.spec/should_detect_mismatches.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636127321,"lvl":"info","case":"should detect mismatches","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636127322,"lvl":"info","case":"should detect mismatches","phase":"execution","evt":"test.run"}
-{"ts":1760636127323,"lvl":"info","case":"should detect mismatches","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760641845985,"lvl":"info","case":"should detect mismatches","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641845986,"lvl":"info","case":"should detect mismatches","phase":"execution","evt":"test.run"}
+{"ts":1760641845987,"lvl":"info","case":"should detect mismatches","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/sample.spec/should_support_custom_mask_rules.jsonl b/reports/sample.spec/should_support_custom_mask_rules.jsonl
index 8f1b2df..ceb5673 100644
--- a/reports/sample.spec/should_support_custom_mask_rules.jsonl
+++ b/reports/sample.spec/should_support_custom_mask_rules.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636127321,"lvl":"info","case":"should support custom mask rules","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636127322,"lvl":"info","case":"should support custom mask rules","phase":"execution","evt":"test.run"}
-{"ts":1760636127323,"lvl":"info","case":"should support custom mask rules","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760641845986,"lvl":"info","case":"should support custom mask rules","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641845987,"lvl":"info","case":"should support custom mask rules","phase":"execution","evt":"test.run"}
+{"ts":1760641845988,"lvl":"info","case":"should support custom mask rules","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/stateManager.spec/adds_nodes_and_emits_events.jsonl b/reports/stateManager.spec/adds_nodes_and_emits_events.jsonl
index 12322de..e08ae62 100644
--- a/reports/stateManager.spec/adds_nodes_and_emits_events.jsonl
+++ b/reports/stateManager.spec/adds_nodes_and_emits_events.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636128071,"lvl":"info","case":"adds nodes and emits events","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636128072,"lvl":"info","case":"adds nodes and emits events","phase":"execution","evt":"test.run"}
-{"ts":1760636128073,"lvl":"info","case":"adds nodes and emits events","phase":"teardown","evt":"case.end","payload":{"duration":9,"status":"passed"}}
+{"ts":1760641847860,"lvl":"info","case":"adds nodes and emits events","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641847861,"lvl":"info","case":"adds nodes and emits events","phase":"execution","evt":"test.run"}
+{"ts":1760641847862,"lvl":"info","case":"adds nodes and emits events","phase":"teardown","evt":"case.end","payload":{"duration":41,"status":"passed"}}
diff --git a/reports/stateManager.spec/connects_and_emits_connected.jsonl b/reports/stateManager.spec/connects_and_emits_connected.jsonl
index 12a15ae..0a0abba 100644
--- a/reports/stateManager.spec/connects_and_emits_connected.jsonl
+++ b/reports/stateManager.spec/connects_and_emits_connected.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636128072,"lvl":"info","case":"connects and emits connected","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636128073,"lvl":"info","case":"connects and emits connected","phase":"execution","evt":"test.run"}
-{"ts":1760636128074,"lvl":"info","case":"connects and emits connected","phase":"teardown","evt":"case.end","payload":{"duration":86,"status":"passed"}}
+{"ts":1760641847860,"lvl":"info","case":"connects and emits connected","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641847861,"lvl":"info","case":"connects and emits connected","phase":"execution","evt":"test.run"}
+{"ts":1760641847862,"lvl":"info","case":"connects and emits connected","phase":"teardown","evt":"case.end","payload":{"duration":25,"status":"passed"}}
diff --git a/reports/stateManager.spec/exporters_produce_strings.jsonl b/reports/stateManager.spec/exporters_produce_strings.jsonl
index f29d453..a0d2849 100644
--- a/reports/stateManager.spec/exporters_produce_strings.jsonl
+++ b/reports/stateManager.spec/exporters_produce_strings.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636128073,"lvl":"info","case":"exporters produce strings","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636128074,"lvl":"info","case":"exporters produce strings","phase":"execution","evt":"test.run"}
-{"ts":1760636128075,"lvl":"info","case":"exporters produce strings","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
+{"ts":1760641847861,"lvl":"info","case":"exporters produce strings","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641847862,"lvl":"info","case":"exporters produce strings","phase":"execution","evt":"test.run"}
+{"ts":1760641847863,"lvl":"info","case":"exporters produce strings","phase":"teardown","evt":"case.end","payload":{"duration":36,"status":"passed"}}
diff --git a/reports/stateManager.spec/split_and_merge_emit_events.jsonl b/reports/stateManager.spec/split_and_merge_emit_events.jsonl
index 9fcf3ad..03e0c37 100644
--- a/reports/stateManager.spec/split_and_merge_emit_events.jsonl
+++ b/reports/stateManager.spec/split_and_merge_emit_events.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636128073,"lvl":"info","case":"split and merge emit events","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636128074,"lvl":"info","case":"split and merge emit events","phase":"execution","evt":"test.run"}
-{"ts":1760636128075,"lvl":"info","case":"split and merge emit events","phase":"teardown","evt":"case.end","payload":{"duration":8,"status":"passed"}}
+{"ts":1760641847860,"lvl":"info","case":"split and merge emit events","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641847861,"lvl":"info","case":"split and merge emit events","phase":"execution","evt":"test.run"}
+{"ts":1760641847862,"lvl":"info","case":"split and merge emit events","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
diff --git a/reports/stateManager.spec/validator_enforces_directionality_when_set.jsonl b/reports/stateManager.spec/validator_enforces_directionality_when_set.jsonl
index e00026a..b0e7839 100644
--- a/reports/stateManager.spec/validator_enforces_directionality_when_set.jsonl
+++ b/reports/stateManager.spec/validator_enforces_directionality_when_set.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636128073,"lvl":"info","case":"validator enforces directionality when set","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636128074,"lvl":"info","case":"validator enforces directionality when set","phase":"execution","evt":"test.run"}
-{"ts":1760636128075,"lvl":"info","case":"validator enforces directionality when set","phase":"teardown","evt":"case.end","payload":{"duration":7,"status":"passed"}}
+{"ts":1760641847861,"lvl":"info","case":"validator enforces directionality when set","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641847862,"lvl":"info","case":"validator enforces directionality when set","phase":"execution","evt":"test.run"}
+{"ts":1760641847863,"lvl":"info","case":"validator enforces directionality when set","phase":"teardown","evt":"case.end","payload":{"duration":31,"status":"passed"}}
diff --git a/reports/summary.jsonl b/reports/summary.jsonl
index be31755..54b51ee 100644
--- a/reports/summary.jsonl
+++ b/reports/summary.jsonl
@@ -1,515 +1,525 @@
 {"type":"environment","nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}}
-{"status":"pass","duration":100,"location":"/srv/repos0/mkolbol/tests/cli/mkdxHelp.spec.ts:0","artifactURI":"reports/mkdxHelp.spec/prints_structured_help_with_sections_and_examples.jsonl","seed":42}
-{"status":"pass","duration":41,"location":"/srv/repos0/mkolbol/tests/renderers/xtermTTYRenderer.spec.ts:0","artifactURI":"reports/xtermTTYRenderer.spec/should_forward_raw_ANSI_to_writer.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/renderers/xtermTTYRenderer.spec.ts:0","artifactURI":"reports/xtermTTYRenderer.spec/should_emit_alt_buffer_enter_leave_when_enabled_and_start_stop_called.jsonl","seed":42}
-{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/transforms/ansiParser.resize.spec.ts:0","artifactURI":"reports/ansiParser.resize.spec/accepts_initial_dimensions_via_constructor_options.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/transforms/ansiParser.resize.spec.ts:0","artifactURI":"reports/ansiParser.resize.spec/clamps_cursor_state_when_resized_to_smaller_dimensions.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/transforms/ansiParser.resize.spec.ts:0","artifactURI":"reports/ansiParser.resize.spec/emits_resize_events_from_CSI_8_n_m_t_sequences.jsonl","seed":42}
-{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/transforms/ansiParser.decModes.spec.ts:0","artifactURI":"reports/ansiParser.decModes.spec/toggles_auto-wrap_mode_via_DECSET_DECRST__mode_7_.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/transforms/ansiParser.decModes.spec.ts:0","artifactURI":"reports/ansiParser.decModes.spec/wraps_to_the_next_line_when_auto-wrap_is_enabled.jsonl","seed":42}
-{"status":"pass","duration":22,"location":"/srv/repos0/mkolbol/tests/transforms/ansiParser.decModes.spec.ts:0","artifactURI":"reports/ansiParser.decModes.spec/does_not_wrap_when_auto-wrap_is_disabled.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/transforms/ansiParser.decModes.spec.ts:0","artifactURI":"reports/ansiParser.decModes.spec/tracks_screen_inverse_mode_via_DECSCNM__mode_5_.jsonl","seed":42}
-{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/transforms/ansiParser.colors.spec.ts:0","artifactURI":"reports/ansiParser.colors.spec/maps_256-color_foreground_indices_to_hex_values.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/transforms/ansiParser.colors.spec.ts:0","artifactURI":"reports/ansiParser.colors.spec/maps_256-color_background_indices_to_hex_values.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/transforms/ansiParser.colors.spec.ts:0","artifactURI":"reports/ansiParser.colors.spec/converts_truecolor_RGB_foreground_values_into_hex.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/transforms/ansiParser.colors.spec.ts:0","artifactURI":"reports/ansiParser.colors.spec/clamps_out-of-range_high_values_for_truecolor_and_palette_indices.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/archived/mcp-kernel/tests/router.test.ts:0","artifactURI":"reports/router.test/initialize.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/archived/mcp-kernel/tests/router.test.ts:0","artifactURI":"reports/router.test/tools_resources_list_read.jsonl","seed":42}
 {"status":"pass","duration":5,"location":"/srv/repos0/mkolbol/tests/golden/sample.spec.ts:0","artifactURI":"reports/sample.spec/should_create_and_compare_snapshots_with_masking.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/golden/sample.spec.ts:0","artifactURI":"reports/sample.spec/should_detect_mismatches.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/golden/sample.spec.ts:0","artifactURI":"reports/sample.spec/should_detect_mismatches.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/golden/sample.spec.ts:0","artifactURI":"reports/sample.spec/should_support_custom_mask_rules.jsonl","seed":42}
-{"status":"pass","duration":12,"location":"/srv/repos0/mkolbol/tests/modules/keyboardInput.spec.ts:0","artifactURI":"reports/keyboardInput.spec/should_emit_error_when_stdin_is_not_a_TTY.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/modules/keyboardInput.spec.ts:0","artifactURI":"reports/keyboardInput.spec/should_not_activate_when_stdin_is_not_a_TTY.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/modules/keyboardInput.spec.ts:0","artifactURI":"reports/keyboardInput.spec/should_activate_when_stdin_is_a_TTY.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/modules/keyboardInput.spec.ts:0","artifactURI":"reports/keyboardInput.spec/should_enable_raw_mode_when_starting.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/modules/keyboardInput.spec.ts:0","artifactURI":"reports/keyboardInput.spec/should_store_original_raw_mode_state.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/modules/keyboardInput.spec.ts:0","artifactURI":"reports/keyboardInput.spec/should_restore_original_raw_mode_when_stopping.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/modules/keyboardInput.spec.ts:0","artifactURI":"reports/keyboardInput.spec/should_not_call_setRawMode_when_stopping_if_not_started.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/modules/keyboardInput.spec.ts:0","artifactURI":"reports/keyboardInput.spec/should_handle_missing_setRawMode_gracefully.jsonl","seed":42}
+{"status":"pass","duration":7,"location":"/srv/repos0/mkolbol/tests/renderers/xtermTTYRenderer.spec.ts:0","artifactURI":"reports/xtermTTYRenderer.spec/should_forward_raw_ANSI_to_writer.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/renderers/xtermTTYRenderer.spec.ts:0","artifactURI":"reports/xtermTTYRenderer.spec/should_emit_alt_buffer_enter_leave_when_enabled_and_start_stop_called.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/transforms/ansiParser.colors.spec.ts:0","artifactURI":"reports/ansiParser.colors.spec/maps_256-color_foreground_indices_to_hex_values.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/transforms/ansiParser.colors.spec.ts:0","artifactURI":"reports/ansiParser.colors.spec/maps_256-color_background_indices_to_hex_values.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/transforms/ansiParser.colors.spec.ts:0","artifactURI":"reports/ansiParser.colors.spec/converts_truecolor_RGB_foreground_values_into_hex.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/transforms/ansiParser.colors.spec.ts:0","artifactURI":"reports/ansiParser.colors.spec/clamps_out-of-range_high_values_for_truecolor_and_palette_indices.jsonl","seed":42}
+{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/transforms/ansiParser.decModes.spec.ts:0","artifactURI":"reports/ansiParser.decModes.spec/toggles_auto-wrap_mode_via_DECSET_DECRST__mode_7_.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/transforms/ansiParser.decModes.spec.ts:0","artifactURI":"reports/ansiParser.decModes.spec/wraps_to_the_next_line_when_auto-wrap_is_enabled.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/transforms/ansiParser.decModes.spec.ts:0","artifactURI":"reports/ansiParser.decModes.spec/does_not_wrap_when_auto-wrap_is_disabled.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/transforms/ansiParser.decModes.spec.ts:0","artifactURI":"reports/ansiParser.decModes.spec/tracks_screen_inverse_mode_via_DECSCNM__mode_5_.jsonl","seed":42}
+{"status":"pass","duration":5,"location":"/srv/repos0/mkolbol/tests/transforms/ansiParser.resize.spec.ts:0","artifactURI":"reports/ansiParser.resize.spec/accepts_initial_dimensions_via_constructor_options.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/transforms/ansiParser.resize.spec.ts:0","artifactURI":"reports/ansiParser.resize.spec/clamps_cursor_state_when_resized_to_smaller_dimensions.jsonl","seed":42}
+{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/transforms/ansiParser.resize.spec.ts:0","artifactURI":"reports/ansiParser.resize.spec/emits_resize_events_from_CSI_8_n_m_t_sequences.jsonl","seed":42}
+{"status":"pass","duration":38,"location":"/srv/repos0/mkolbol/tests/modules/keyboardInput.spec.ts:0","artifactURI":"reports/keyboardInput.spec/should_emit_error_when_stdin_is_not_a_TTY.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/modules/keyboardInput.spec.ts:0","artifactURI":"reports/keyboardInput.spec/should_not_activate_when_stdin_is_not_a_TTY.jsonl","seed":42}
+{"status":"pass","duration":31,"location":"/srv/repos0/mkolbol/tests/modules/keyboardInput.spec.ts:0","artifactURI":"reports/keyboardInput.spec/should_activate_when_stdin_is_a_TTY.jsonl","seed":42}
+{"status":"pass","duration":19,"location":"/srv/repos0/mkolbol/tests/modules/keyboardInput.spec.ts:0","artifactURI":"reports/keyboardInput.spec/should_enable_raw_mode_when_starting.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/modules/keyboardInput.spec.ts:0","artifactURI":"reports/keyboardInput.spec/should_store_original_raw_mode_state.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/modules/keyboardInput.spec.ts:0","artifactURI":"reports/keyboardInput.spec/should_restore_original_raw_mode_when_stopping.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/modules/keyboardInput.spec.ts:0","artifactURI":"reports/keyboardInput.spec/should_not_call_setRawMode_when_stopping_if_not_started.jsonl","seed":42}
+{"status":"pass","duration":29,"location":"/srv/repos0/mkolbol/tests/modules/keyboardInput.spec.ts:0","artifactURI":"reports/keyboardInput.spec/should_handle_missing_setRawMode_gracefully.jsonl","seed":42}
 {"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/modules/keyboardInput.spec.ts:0","artifactURI":"reports/keyboardInput.spec/should_emit_keypress_event_for_regular_keys.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/modules/keyboardInput.spec.ts:0","artifactURI":"reports/keyboardInput.spec/should_handle_ctrl_modifier.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/modules/keyboardInput.spec.ts:0","artifactURI":"reports/keyboardInput.spec/should_handle_meta_and_shift_modifiers.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/modules/keyboardInput.spec.ts:0","artifactURI":"reports/keyboardInput.spec/should_emit_ctrl-c_event_and_stop_on_Ctrl_C.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/modules/keyboardInput.spec.ts:0","artifactURI":"reports/keyboardInput.spec/should_handle_ctrl_modifier.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/modules/keyboardInput.spec.ts:0","artifactURI":"reports/keyboardInput.spec/should_handle_meta_and_shift_modifiers.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/modules/keyboardInput.spec.ts:0","artifactURI":"reports/keyboardInput.spec/should_emit_ctrl-c_event_and_stop_on_Ctrl_C.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/modules/keyboardInput.spec.ts:0","artifactURI":"reports/keyboardInput.spec/should_not_emit_events_after_stop.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/modules/keyboardInput.spec.ts:0","artifactURI":"reports/keyboardInput.spec/should_handle_multiple_start_calls_gracefully.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/modules/keyboardInput.spec.ts:0","artifactURI":"reports/keyboardInput.spec/should_handle_multiple_start_calls_gracefully.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/modules/keyboardInput.spec.ts:0","artifactURI":"reports/keyboardInput.spec/should_handle_special_keys.jsonl","seed":42}
-{"status":"pass","duration":6,"location":"/srv/repos0/mkolbol/tests/transforms/ansiParser.performance.spec.ts:0","artifactURI":"reports/ansiParser.performance.spec/processes_extended_palette_sequences_within_budget.jsonl","seed":42}
-{"status":"pass","duration":23,"location":"/srv/repos0/mkolbol/tests/transforms/ansiParser.performance.spec.ts:0","artifactURI":"reports/ansiParser.performance.spec/processes_truecolor_sequences_within_budget.jsonl","seed":42}
-{"status":"pass","duration":8,"location":"/srv/repos0/mkolbol/tests/transforms/ansiParser.performance.spec.ts:0","artifactURI":"reports/ansiParser.performance.spec/limits_large_OSC_payload_to_prevent_DOS.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/transforms/ansiParser.performance.spec.ts:0","artifactURI":"reports/ansiParser.performance.spec/handles_incomplete_OSC_sequences_gracefully.jsonl","seed":42}
+{"status":"pass","duration":72,"location":"/srv/repos0/mkolbol/tests/worker/workerPipe.spec.ts:0","artifactURI":"reports/workerPipe.spec/should_handle_backpressure_correctly.jsonl","seed":42}
+{"status":"pass","duration":36,"location":"/srv/repos0/mkolbol/tests/worker/workerPipe.spec.ts:0","artifactURI":"reports/workerPipe.spec/should_send_resume_signal_on__read.jsonl","seed":42}
+{"status":"pass","duration":6,"location":"/srv/repos0/mkolbol/tests/cli/mkDev.spec.ts:0","artifactURI":"reports/mkDev.spec/should_create_a_DevWatcher_instance.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/cli/mkDev.spec.ts:0","artifactURI":"reports/mkDev.spec/should_accept_verbose_option.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/cli/mkDev.spec.ts:0","artifactURI":"reports/mkDev.spec/should_accept_onReload_callback.jsonl","seed":42}
+{"status":"pass","duration":27,"location":"/srv/repos0/mkolbol/tests/cli/mkDev.spec.ts:0","artifactURI":"reports/mkDev.spec/should_start_watching_without_errors_for_empty_topology.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/cli/mkDev.spec.ts:0","artifactURI":"reports/mkDev.spec/should_stop_watchers_cleanly.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/cli/mkDev.spec.ts:0","artifactURI":"reports/mkDev.spec/should_handle_multiple_start_stop_cycles.jsonl","seed":42}
+{"status":"pass","duration":29,"location":"/srv/repos0/mkolbol/tests/cli/mkDev.spec.ts:0","artifactURI":"reports/mkDev.spec/should_skip_non-inproc_modules.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/cli/mkDev.spec.ts:0","artifactURI":"reports/mkDev.spec/should_only_watch_inproc_modules.jsonl","seed":42}
+{"status":"pass","duration":19,"location":"/srv/repos0/mkolbol/tests/cli/mkDev.spec.ts:0","artifactURI":"reports/mkDev.spec/should_handle_unknown_modules_gracefully.jsonl","seed":42}
+{"status":"pass","duration":89,"location":"/srv/repos0/mkolbol/tests/worker/workerAdapters.spec.ts:0","artifactURI":"reports/workerAdapters.spec/round-trip_a_control_frame.jsonl","seed":42}
+{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/worker/workerAdapters.spec.ts:0","artifactURI":"reports/workerAdapters.spec/round-trip_a_Buffer.jsonl","seed":42}
+{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/worker/workerAdapters.spec.ts:0","artifactURI":"reports/workerAdapters.spec/assert_handshake_event_structure.jsonl","seed":42}
+{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0","artifactURI":"reports/mkdxErrors.spec/creates_error_with_code__message__and_remediation.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0","artifactURI":"reports/mkdxErrors.spec/creates_error_with_context.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0","artifactURI":"reports/mkdxErrors.spec/converts_to_JSON.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0","artifactURI":"reports/mkdxErrors.spec/formats_basic_error_in_text.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0","artifactURI":"reports/mkdxErrors.spec/formats_error_with_file_location.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0","artifactURI":"reports/mkdxErrors.spec/formats_error_with_expected_values.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0","artifactURI":"reports/mkdxErrors.spec/formats_standard_Error_in_text.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0","artifactURI":"reports/mkdxErrors.spec/formats_error_in_JSON.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0","artifactURI":"reports/mkdxErrors.spec/formats_standard_Error_in_JSON.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0","artifactURI":"reports/mkdxErrors.spec/contains_all_expected_error_codes.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0","artifactURI":"reports/mkdxErrors.spec/all_errors_have_non-empty_messages_and_remediations.jsonl","seed":42}
+{"status":"pass","duration":90,"location":"/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0","artifactURI":"reports/mkdxErrors.spec/outputs_UNKNOWN_COMMAND_error_in_text_format.jsonl","seed":42}
+{"status":"pass","duration":114,"location":"/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0","artifactURI":"reports/mkdxErrors.spec/outputs_UNKNOWN_COMMAND_error_in_JSON_format.jsonl","seed":42}
+{"status":"pass","duration":10,"location":"/srv/repos0/mkolbol/tests/transforms/ansiParser.performance.spec.ts:0","artifactURI":"reports/ansiParser.performance.spec/processes_extended_palette_sequences_within_budget.jsonl","seed":42}
+{"status":"pass","duration":26,"location":"/srv/repos0/mkolbol/tests/transforms/ansiParser.performance.spec.ts:0","artifactURI":"reports/ansiParser.performance.spec/processes_truecolor_sequences_within_budget.jsonl","seed":42}
+{"status":"pass","duration":5,"location":"/srv/repos0/mkolbol/tests/transforms/ansiParser.performance.spec.ts:0","artifactURI":"reports/ansiParser.performance.spec/limits_large_OSC_payload_to_prevent_DOS.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/transforms/ansiParser.performance.spec.ts:0","artifactURI":"reports/ansiParser.performance.spec/handles_incomplete_OSC_sequences_gracefully.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/transforms/ansiParser.performance.spec.ts:0","artifactURI":"reports/ansiParser.performance.spec/handles_nested_escape_sequences.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/transforms/ansiParser.performance.spec.ts:0","artifactURI":"reports/ansiParser.performance.spec/handles_malformed_OSC_input.jsonl","seed":42}
-{"status":"pass","duration":6,"location":"/srv/repos0/mkolbol/tests/transforms/ansiParser.performance.spec.ts:0","artifactURI":"reports/ansiParser.performance.spec/handles_very_long_OSC_sequences_with_proper_termination.jsonl","seed":42}
-{"status":"pass","duration":18,"location":"/srv/repos0/mkolbol/tests/transforms/ansiParser.performance.spec.ts:0","artifactURI":"reports/ansiParser.performance.spec/prevents_timeout_on_pathological_input.jsonl","seed":42}
+{"status":"pass","duration":28,"location":"/srv/repos0/mkolbol/tests/transforms/ansiParser.performance.spec.ts:0","artifactURI":"reports/ansiParser.performance.spec/handles_malformed_OSC_input.jsonl","seed":42}
+{"status":"pass","duration":60,"location":"/srv/repos0/mkolbol/tests/transforms/ansiParser.performance.spec.ts:0","artifactURI":"reports/ansiParser.performance.spec/handles_very_long_OSC_sequences_with_proper_termination.jsonl","seed":42}
+{"status":"pass","duration":82,"location":"/srv/repos0/mkolbol/tests/transforms/ansiParser.performance.spec.ts:0","artifactURI":"reports/ansiParser.performance.spec/prevents_timeout_on_pathological_input.jsonl","seed":42}
 {"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/transforms/ansiParser.performance.spec.ts:0","artifactURI":"reports/ansiParser.performance.spec/handles_multiple_OSC_sequences_efficiently.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/transforms/ansiParser.performance.spec.ts:0","artifactURI":"reports/ansiParser.performance.spec/respects_maxParseIterations_guard.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/transforms/ansiParser.performance.spec.ts:0","artifactURI":"reports/ansiParser.performance.spec/handles_OSC_with_ST_terminator.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/transforms/ansiParser.performance.spec.ts:0","artifactURI":"reports/ansiParser.performance.spec/handles_OSC_with_ST_terminator.jsonl","seed":42}
 {"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/transforms/ansiParser.performance.spec.ts:0","artifactURI":"reports/ansiParser.performance.spec/handles_mixed_OSC_terminators.jsonl","seed":42}
-{"status":"pass","duration":8,"location":"/srv/repos0/mkolbol/tests/worker/workerAdapters.spec.ts:0","artifactURI":"reports/workerAdapters.spec/round-trip_a_control_frame.jsonl","seed":42}
-{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/worker/workerAdapters.spec.ts:0","artifactURI":"reports/workerAdapters.spec/round-trip_a_Buffer.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/worker/workerAdapters.spec.ts:0","artifactURI":"reports/workerAdapters.spec/assert_handshake_event_structure.jsonl","seed":42}
-{"status":"pass","duration":11,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/captures_error_events.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/captures_assertion_failures.jsonl","seed":42}
+{"status":"pass","duration":39,"location":"/srv/repos0/mkolbol/tests/worker/workerPipe.spec.ts:0","artifactURI":"reports/workerPipe.spec/should_handle_simultaneous_bidirectional_writes.jsonl","seed":42}
+{"status":"pass","duration":5,"location":"/srv/repos0/mkolbol/tests/cli/mkDev.spec.ts:0","artifactURI":"reports/mkDev.spec/should_handle_restartNode_errors_gracefully.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/cli/mkDev.spec.ts:0","artifactURI":"reports/mkDev.spec/should_handle_watch_errors_gracefully.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/cli/mkDev.spec.ts:0","artifactURI":"reports/mkDev.spec/should_create_and_start_a_watcher.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/cli/mkDev.spec.ts:0","artifactURI":"reports/mkDev.spec/should_accept_options.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/cli/mkDev.spec.ts:0","artifactURI":"reports/mkDev.spec/should_log_when_verbose_is_enabled.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/cli/mkDev.spec.ts:0","artifactURI":"reports/mkDev.spec/should_not_log_when_verbose_is_disabled.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/cli/mkDev.spec.ts:0","artifactURI":"reports/mkDev.spec/should_call_onReload_callback_after_successful_reload.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/cli/mkDev.spec.ts:0","artifactURI":"reports/mkDev.spec/should_handle_modules_with_known_paths.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/cli/mkDev.spec.ts:0","artifactURI":"reports/mkDev.spec/should_handle_modules_without_known_paths.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/captures_assertion_failures.jsonl","seed":42}
 {"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/captures_console_output.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/captures_test_errors.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/captures_test_failures_and_panics.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/captures_race_conditions.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/captures_test_timeouts.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/merges_multiple_rules_from_different_sources.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/applies_higher_priority_rules_first.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/overrides_pack_rules_with_local_high-priority_rules.jsonl","seed":42}
-{"status":"pass","duration":5,"location":"/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0","artifactURI":"reports/rateLimiter.spec/creates_input_and_output_pipes.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0","artifactURI":"reports/rateLimiter.spec/initializes_with_full_token_capacity.jsonl","seed":42}
-{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/transforms/tee.spec.ts:0","artifactURI":"reports/tee.spec/creates_input_pipe_and_output_pipes.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/transforms/tee.spec.ts:0","artifactURI":"reports/tee.spec/defaults_to_2_output_pipes.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/transforms/tee.spec.ts:0","artifactURI":"reports/tee.spec/creates_configurable_number_of_output_pipes.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/transforms/tee.spec.ts:0","artifactURI":"reports/tee.spec/throws_error_if_outputCount_is_less_than_1.jsonl","seed":42}
-{"status":"pass","duration":5,"location":"/srv/repos0/mkolbol/tests/transforms/pipeMeter.spec.ts:0","artifactURI":"reports/pipeMeter.spec/creates_input_and_output_pipes.jsonl","seed":42}
-{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_ASCII_printable_characters.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_special_characters.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_digits_and_punctuation.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/captures_test_failures_and_panics.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/captures_race_conditions.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/merges_multiple_rules_from_different_sources.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/applies_higher_priority_rules_first.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/overrides_pack_rules_with_local_high-priority_rules.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/redacts_JWT_tokens_in_Node_js_test_events.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/redacts_API_keys_in_test_events.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_ASCII_printable_characters.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_special_characters.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_digits_and_punctuation.jsonl","seed":42}
 {"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_line_feed__LF_.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_carriage_return__CR_.jsonl","seed":42}
 {"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_CRLF_sequence.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_tab__TAB_.jsonl","seed":42}
 {"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_multiple_tabs.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_backspace__BS_.jsonl","seed":42}
-{"status":"pass","duration":31,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_backspace_at_column_0.jsonl","seed":42}
-{"status":"pass","duration":6,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_foreground_color_codes__30-37_.jsonl","seed":42}
-{"status":"pass","duration":31,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_all_basic_foreground_colors.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_backspace_at_column_0.jsonl","seed":42}
+{"status":"pass","duration":22,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_foreground_color_codes__30-37_.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_all_basic_foreground_colors.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_background_color_codes__40-47_.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_bright_foreground_colors__90-97_.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_bright_background_colors__100-107_.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_SGR_reset__m_with_no_params_.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_bright_foreground_colors__90-97_.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_bright_background_colors__100-107_.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_SGR_reset__m_with_no_params_.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_SGR_reset_with_explicit_0.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_multiple_SGR_parameters.jsonl","seed":42}
 {"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_CUP__Cursor_Position__H_command.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_CUP_f_command.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_CUP_with_default_parameters.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_CUU__Cursor_Up_.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_CUU_with_count_parameter.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_CUU_boundary__no_move_above_row_0_.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_CUP_with_default_parameters.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_CUU__Cursor_Up_.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_CUU_with_count_parameter.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_CUU_boundary__no_move_above_row_0_.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_CUD__Cursor_Down_.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_CUD_with_count_parameter.jsonl","seed":42}
 {"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_CUD_boundary__no_move_below_last_row_.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_CUF__Cursor_Forward_.jsonl","seed":42}
+{"status":"pass","duration":28,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_CUF__Cursor_Forward_.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_CUF_with_count_parameter.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_CUF_boundary__no_move_beyond_last_column_.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_CUB__Cursor_Back_.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_CUB_with_count_parameter.jsonl","seed":42}
-{"status":"pass","duration":31,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_CUB_boundary__no_move_before_column_0_.jsonl","seed":42}
+{"status":"pass","duration":20,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_CUF_boundary__no_move_beyond_last_column_.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_CUB__Cursor_Back_.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_CUB_with_count_parameter.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_CUB_boundary__no_move_before_column_0_.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_CHA__Cursor_Horizontal_Absolute__G_command.jsonl","seed":42}
-{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_ED_0__erase_from_cursor_to_end_of_display_.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_ED_1__erase_from_start_to_cursor_.jsonl","seed":42}
-{"status":"pass","duration":89,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_ED_2__erase_entire_display_.jsonl","seed":42}
+{"status":"pass","duration":27,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_ED_0__erase_from_cursor_to_end_of_display_.jsonl","seed":42}
+{"status":"pass","duration":7,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_ED_1__erase_from_start_to_cursor_.jsonl","seed":42}
+{"status":"pass","duration":173,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_ED_2__erase_entire_display_.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_EL_0__erase_from_cursor_to_end_of_line_.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_EL_1__erase_from_start_of_line_to_cursor_.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_EL_2__erase_entire_line_.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_EL_1__erase_from_start_of_line_to_cursor_.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_EL_2__erase_entire_line_.jsonl","seed":42}
 {"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_EL_with_default_parameter__same_as_EL_0_.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_update_cursor_position_on_character_write.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_preserve_color_state_across_multiple_writes.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_update_both_foreground_and_background_independently.jsonl","seed":42}
+{"status":"pass","duration":28,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_update_cursor_position_on_character_write.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_preserve_color_state_across_multiple_writes.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_update_both_foreground_and_background_independently.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_track_cell_attributes_correctly.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_invalid_escape_sequence_gracefully.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_partial_escape_sequence_at_buffer_end.jsonl","seed":42}
+{"status":"pass","duration":5,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_invalid_escape_sequence_gracefully.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_partial_escape_sequence_at_buffer_end.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_escape_sequence_with_missing_parameters.jsonl","seed":42}
 {"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_empty_SGR_sequence.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_line_wrapping.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_line_wrapping.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_scrolling_when_reaching_bottom.jsonl","seed":42}
 {"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_overwrite_with_colors.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_consecutive_control_characters.jsonl","seed":42}
 {"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_tab_at_end_of_line.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_escape_sequence_with_semicolon_but_no_params.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_escape_sequence_with_semicolon_but_no_params.jsonl","seed":42}
 {"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_OSC_sequences__ignored_.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_reset_to_initial_state.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_reset_to_initial_state.jsonl","seed":42}
 {"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_maintain_state_dimensions_after_reset.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_2-byte_UTF-8_characters__Latin_Extended_.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_2-byte_UTF-8_characters__Cyrillic_.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_3-byte_UTF-8_characters__CJK_.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_3-byte_UTF-8_characters__Hangul_.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_4-byte_UTF-8_characters__emoji_.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_mixed_ASCII_and_UTF-8.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_UTF-8_with_ANSI_colors.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_Chinese_characters__CJK_.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_Japanese_Hiragana_and_Katakana.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_emoji_sequences.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_2-byte_UTF-8_characters__Latin_Extended_.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_2-byte_UTF-8_characters__Cyrillic_.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_3-byte_UTF-8_characters__CJK_.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_3-byte_UTF-8_characters__Hangul_.jsonl","seed":42}
+{"status":"pass","duration":22,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_4-byte_UTF-8_characters__emoji_.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_mixed_ASCII_and_UTF-8.jsonl","seed":42}
+{"status":"pass","duration":31,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_UTF-8_with_ANSI_colors.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_Chinese_characters__CJK_.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_Japanese_Hiragana_and_Katakana.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_emoji_sequences.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_fullwidth_alphanumeric.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_wide_chars_with_line_wrapping.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_wide_chars_with_line_wrapping.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_mixed_narrow_and_wide_characters.jsonl","seed":42}
 {"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_OSC_title_sequence_with_BEL_terminator.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_OSC_title_sequence_with_ST_terminator.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_OSC_0__icon_and_window_title_.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_OSC_1__icon_title_only_.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_OSC_title_sequence_with_ST_terminator.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_OSC_0__icon_and_window_title_.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_OSC_1__icon_title_only_.jsonl","seed":42}
 {"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_OSC_2__window_title_only_.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_OSC_with_semicolons_in_payload.jsonl","seed":42}
 {"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_multiple_OSC_sequences.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_OSC_with_ANSI_sequences.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_RIS_sequence__ESC_c_.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_OSC_with_ANSI_sequences.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_RIS_sequence__ESC_c_.jsonl","seed":42}
 {"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_clear_all_formatting_on_RIS.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_clear_scrollback_on_reset.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_reset_cursor_position_on_RIS.jsonl","seed":42}
 {"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_preserve_dimensions_on_reset.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_push_lines_to_scrollback_on_scroll.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_preserve_scrollback_content.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_preserve_scrollback_content.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_preserve_colors_in_scrollback.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_multiple_scrolls.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_maintain_scrollback_order__FIFO_.jsonl","seed":42}
 {"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_keep_scrollback_independent_of_visible_buffer.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_scrollback_with_wide_characters.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_capture_full_terminal_state.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_preserve_exact_cell_content.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_capture_cursor_position_accurately.jsonl","seed":42}
+{"status":"pass","duration":20,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_preserve_exact_cell_content.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_capture_cursor_position_accurately.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_capture_current_SGR_state.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_export_complete_scrollback_history.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_snapshot_of_empty_buffer.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_maintain_state_consistency_across_parses.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_export_with_metadata_preserved.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_UTF-8_with_scrollback.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_snapshot_of_empty_buffer.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_maintain_state_consistency_across_parses.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_export_with_metadata_preserved.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_UTF-8_with_scrollback.jsonl","seed":42}
 {"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_colors_with_wide_characters.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_OSC_followed_by_CSI.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_OSC_followed_by_CSI.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_emoji_in_colored_text.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_maintain_deterministic_state_across_resets.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_maintain_deterministic_state_across_resets.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_256-color_foreground__38_5_n__without_crashing.jsonl","seed":42}
 {"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_256-color_background__48_5_n__without_crashing.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_256-color_with_standard_colors__0-15__without_crashing.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_256-color_with_216_color_cube__16-231__without_crashing.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_256-color_with_standard_colors__0-15__without_crashing.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_256-color_with_216_color_cube__16-231__without_crashing.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_256-color_with_grayscale__232-255__without_crashing.jsonl","seed":42}
 {"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_both_256-color_foreground_and_background_without_crashing.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_256-color_with_SGR_reset.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_256-color_with_SGR_reset.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_truecolor_foreground__38_2_r_g_b__without_crashing.jsonl","seed":42}
 {"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_truecolor_background__48_2_r_g_b__without_crashing.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_pure_colors_without_crashing.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_pure_colors_without_crashing.jsonl","seed":42}
 {"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_both_truecolor_foreground_and_background_without_crashing.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_truecolor_with_SGR_reset.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_truecolor_with_wide_characters.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_mix_of_basic_colors_and_truecolor_without_crashing.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_resize_from_constructor.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_preserve_content_after_resize__larger_.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_truecolor_with_wide_characters.jsonl","seed":42}
+{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_mix_of_basic_colors_and_truecolor_without_crashing.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_resize_from_constructor.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_preserve_content_after_resize__larger_.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_resize_to_smaller_dimensions.jsonl","seed":42}
 {"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_reset_cursor_on_dimension_change.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_maintain_determinism_after_resize.jsonl","seed":42}
-{"status":"pass","duration":22,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_extreme_dimensions.jsonl","seed":42}
-{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_minimum_dimensions.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_DECSET_mode_7__auto-wrap_mode_.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_DECRST_mode_7__disable_auto-wrap_.jsonl","seed":42}
+{"status":"pass","duration":37,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_extreme_dimensions.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_minimum_dimensions.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_DECSET_mode_7__auto-wrap_mode_.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_DECRST_mode_7__disable_auto-wrap_.jsonl","seed":42}
 {"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_DECSET_mode_1__application_cursor_keys_.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_DECRST_mode_1__normal_cursor_keys_.jsonl","seed":42}
-{"status":"pass","duration":23,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_DECSET_mode_1049__alternate_screen_buffer_.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_DECRST_mode_1049__restore_primary_screen_.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_DECSET_mode_25__show_cursor_.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_DECRST_mode_25__hide_cursor_.jsonl","seed":42}
-{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_multiple_DEC_mode_switches.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_DECRST_mode_1__normal_cursor_keys_.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_DECSET_mode_1049__alternate_screen_buffer_.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_DECRST_mode_1049__restore_primary_screen_.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_DECSET_mode_25__show_cursor_.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_DECRST_mode_25__hide_cursor_.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_multiple_DEC_mode_switches.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_maintain_content_across_mode_changes.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_large_256-color_sequences_efficiently.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_large_truecolor_sequences_efficiently.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_mixed_color_modes_without_crashing.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_invalid_256-color_parameters_gracefully.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_large_256-color_sequences_efficiently.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_large_truecolor_sequences_efficiently.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_mixed_color_modes_without_crashing.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_invalid_256-color_parameters_gracefully.jsonl","seed":42}
 {"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_invalid_truecolor_parameters_gracefully.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_partial_color_sequences_at_buffer_boundary.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_maintain_determinism_with_complex_sequences.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_partial_color_sequences_at_buffer_boundary.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_maintain_determinism_with_complex_sequences.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_color_reset_sequences_deterministically.jsonl","seed":42}
-{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/returns_false_when_module_is_not_enabled.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/returns_consistent_value_for_same_module.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/returns_false_when_config_is_disabled.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/checks_module_against_config_modules_when_enabled.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/does_not_emit_when_on___returns_false.jsonl","seed":42}
-{"status":"fail","duration":65,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/emit_returns_immediately_when_module_is_disabled.jsonl","seed":42,"error":"expected 20.39718700000003 to be less than 10"}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/shouldEmit_returns_false_when_module_is_disabled.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/emits_to_console_when_module_is_enabled.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/respects_debug_level_filtering.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/emits_formatted_output_to_console.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/handles_emit_without_payload.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/shouldEmit_respects_level_hierarchy.jsonl","seed":42}
-{"status":"pass","duration":55,"location":"/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0","artifactURI":"reports/hostessEndpoints.spec/should_register_an_endpoint_with_id_and_coordinates.jsonl","seed":42}
-{"status":"pass","duration":9,"location":"/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0","artifactURI":"reports/hostessEndpoints.spec/should_register_multiple_endpoints_with_different_ids.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0","artifactURI":"reports/hostessEndpoints.spec/should_overwrite_endpoint_if_registered_with_same_id.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0","artifactURI":"reports/hostessEndpoints.spec/should_handle_endpoint_without_metadata.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0","artifactURI":"reports/hostessEndpoints.spec/should_return_empty_map_when_no_endpoints_registered.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0","artifactURI":"reports/hostessEndpoints.spec/should_return_a_copy_of_the_endpoints_map.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0","artifactURI":"reports/hostessEndpoints.spec/should_contain_all_registered_endpoints.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0","artifactURI":"reports/hostessEndpoints.spec/should_support_inproc_endpoint_type.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0","artifactURI":"reports/hostessEndpoints.spec/should_support_worker_endpoint_type.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0","artifactURI":"reports/hostessEndpoints.spec/should_support_external_endpoint_type.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0","artifactURI":"reports/hostessEndpoints.spec/should_support_pty_endpoint_type.jsonl","seed":42}
-{"status":"pass","duration":5,"location":"/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0","artifactURI":"reports/hostessEndpoints.spec/should_allow_endpoints_to_be_registered_alongside_servers.jsonl","seed":42}
-{"status":"pass","duration":18,"location":"/srv/repos0/mkolbol/tests/kernel/kernel.spec.ts:0","artifactURI":"reports/kernel.spec/connect_moves_data_1_1.jsonl","seed":42}
-{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/kernel/kernel.spec.ts:0","artifactURI":"reports/kernel.spec/split_fans_out_to_multiple_destinations.jsonl","seed":42}
-{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/kernel/kernel.spec.ts:0","artifactURI":"reports/kernel.spec/merge_combines_multiple_sources_into_one_destination.jsonl","seed":42}
-{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/kernel/kernel.spec.ts:0","artifactURI":"reports/kernel.spec/register_lookup_filters_by_capabilities.jsonl","seed":42}
-{"status":"pass","duration":8,"location":"/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0","artifactURI":"reports/router-inproc.spec/stores_announcements_and_returns_copies_via_list__.jsonl","seed":42}
-{"status":"pass","duration":6,"location":"/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0","artifactURI":"reports/router-inproc.spec/is_idempotent_and_updates_timestamps_and_metadata.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0","artifactURI":"reports/router-inproc.spec/withdraw_removes_endpoints.jsonl","seed":42}
-{"status":"pass","duration":21,"location":"/srv/repos0/mkolbol/tests/integration/local-node-gate.spec.ts:0","artifactURI":"reports/local-node-gate.spec/allows_config_without_network_features_when_MK_LOCAL_NODE_1.jsonl","seed":42}
-{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/integration/local-node-gate.spec.ts:0","artifactURI":"reports/local-node-gate.spec/rejects_config_with_type_network_when_MK_LOCAL_NODE_1.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/integration/local-node-gate.spec.ts:0","artifactURI":"reports/local-node-gate.spec/rejects_config_with_address_parameter_when_MK_LOCAL_NODE_1.jsonl","seed":42}
-{"status":"pass","duration":22,"location":"/srv/repos0/mkolbol/tests/integration/local-node-gate.spec.ts:0","artifactURI":"reports/local-node-gate.spec/allows_config_with_network_features_when_MK_LOCAL_NODE_is_not_set.jsonl","seed":42}
-{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/integration/local-node-gate.spec.ts:0","artifactURI":"reports/local-node-gate.spec/allows_config_with_network_features_when_MK_LOCAL_NODE_0.jsonl","seed":42}
-{"status":"pass","duration":29,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/redacts_AWS_credentials_in_test_events.jsonl","seed":42}
-{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/redacts_API_keys_in_test_events.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/redacts_URL_credentials_in_test_events.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/redacts_private_keys_in_test_events.jsonl","seed":42}
+{"status":"pass","duration":31,"location":"/srv/repos0/mkolbol/tests/kernel/kernel.spec.ts:0","artifactURI":"reports/kernel.spec/connect_moves_data_1_1.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/kernel/kernel.spec.ts:0","artifactURI":"reports/kernel.spec/split_fans_out_to_multiple_destinations.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/kernel/kernel.spec.ts:0","artifactURI":"reports/kernel.spec/merge_combines_multiple_sources_into_one_destination.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/kernel/kernel.spec.ts:0","artifactURI":"reports/kernel.spec/register_lookup_filters_by_capabilities.jsonl","seed":42}
+{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/redacts_private_keys_in_test_events.jsonl","seed":42}
 {"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/redacts_secrets_in_Go_test_output.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/redacts_AWS_credentials_in_Go_test_logs.jsonl","seed":42}
 {"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/redacts_database_URLs_in_Go_test_failures.jsonl","seed":42}
 {"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/respects_global_optOut_flag.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/respects_secrets_false_flag.jsonl","seed":42}
-{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/respects_enabled_false_flag.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/respects_secrets_false_flag.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/respects_enabled_false_flag.jsonl","seed":42}
 {"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/detects_and_redacts_all_secret_types_in_one_event.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/redacts_multiple_occurrences_of_the_same_secret_type.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/handles_nested_secrets_in_complex_objects.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/redacts_multiple_occurrences_of_the_same_secret_type.jsonl","seed":42}
+{"status":"pass","duration":6,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/handles_nested_secrets_in_complex_objects.jsonl","seed":42}
 {"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/combines_rules_from_node-defaults_and_custom_rules.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/combines_rules_from_go-defaults_and_custom_rules.jsonl","seed":42}
-{"status":"pass","duration":6,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/enforces_budget_after_redaction.jsonl","seed":42}
-{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0","artifactURI":"reports/mkdxErrors.spec/creates_error_with_code__message__and_remediation.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0","artifactURI":"reports/mkdxErrors.spec/creates_error_with_context.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0","artifactURI":"reports/mkdxErrors.spec/converts_to_JSON.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0","artifactURI":"reports/mkdxErrors.spec/formats_basic_error_in_text.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0","artifactURI":"reports/mkdxErrors.spec/formats_error_with_file_location.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0","artifactURI":"reports/mkdxErrors.spec/formats_error_with_expected_values.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0","artifactURI":"reports/mkdxErrors.spec/formats_standard_Error_in_text.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0","artifactURI":"reports/mkdxErrors.spec/formats_error_in_JSON.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0","artifactURI":"reports/mkdxErrors.spec/formats_standard_Error_in_JSON.jsonl","seed":42}
-{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0","artifactURI":"reports/mkdxErrors.spec/contains_all_expected_error_codes.jsonl","seed":42}
-{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0","artifactURI":"reports/mkdxErrors.spec/all_errors_have_non-empty_messages_and_remediations.jsonl","seed":42}
-{"status":"pass","duration":99,"location":"/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0","artifactURI":"reports/mkdxErrors.spec/outputs_UNKNOWN_COMMAND_error_in_text_format.jsonl","seed":42}
-{"status":"pass","duration":97,"location":"/srv/repos0/mkolbol/tests/cli/mkdxErrors.spec.ts:0","artifactURI":"reports/mkdxErrors.spec/outputs_UNKNOWN_COMMAND_error_in_JSON_format.jsonl","seed":42}
-{"status":"pass","duration":60,"location":"/srv/repos0/mkolbol/tests/worker/workerPipe.spec.ts:0","artifactURI":"reports/workerPipe.spec/should_handle_Buffer_data_in_non-object_mode.jsonl","seed":42}
-{"status":"pass","duration":178,"location":"/srv/repos0/mkolbol/tests/worker/workerPipe.spec.ts:0","artifactURI":"reports/workerPipe.spec/should_propagate_messageerror_to_stream.jsonl","seed":42}
-{"status":"pass","duration":43,"location":"/srv/repos0/mkolbol/tests/worker/workerPipe.spec.ts:0","artifactURI":"reports/workerPipe.spec/should_handle_port_close_event.jsonl","seed":42}
-{"status":"pass","duration":91,"location":"/srv/repos0/mkolbol/tests/worker/workerPipe.spec.ts:0","artifactURI":"reports/workerPipe.spec/should_handle_errors_in__write_callback.jsonl","seed":42}
-{"status":"pass","duration":65,"location":"/srv/repos0/mkolbol/tests/worker/workerPipe.spec.ts:0","artifactURI":"reports/workerPipe.spec/should_send_end_signal_on_finish_event.jsonl","seed":42}
-{"status":"pass","duration":104,"location":"/srv/repos0/mkolbol/tests/worker/workerPipe.spec.ts:0","artifactURI":"reports/workerPipe.spec/should_handle_end_signal_from_remote_port.jsonl","seed":42}
-{"status":"pass","duration":199,"location":"/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0","artifactURI":"reports/rateLimiter.spec/releases_messages_when_tokens_become_available.jsonl","seed":42}
-{"status":"pass","duration":211,"location":"/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0","artifactURI":"reports/rateLimiter.spec/refills_tokens_at_specified_rate.jsonl","seed":42}
-{"status":"pass","duration":76,"location":"/srv/repos0/mkolbol/tests/transforms/tee.spec.ts:0","artifactURI":"reports/tee.spec/handles_object_mode_data.jsonl","seed":42}
-{"status":"pass","duration":68,"location":"/srv/repos0/mkolbol/tests/transforms/tee.spec.ts:0","artifactURI":"reports/tee.spec/handles_buffer_mode_data.jsonl","seed":42}
-{"status":"pass","duration":61,"location":"/srv/repos0/mkolbol/tests/transforms/pipeMeter.spec.ts:0","artifactURI":"reports/pipeMeter.spec/tracks_total_bytes_for_string_chunks.jsonl","seed":42}
-{"status":"pass","duration":85,"location":"/srv/repos0/mkolbol/tests/transforms/pipeMeter.spec.ts:0","artifactURI":"reports/pipeMeter.spec/tracks_total_bytes_for_buffer_chunks.jsonl","seed":42}
-{"status":"pass","duration":53,"location":"/srv/repos0/mkolbol/tests/transforms/pipeMeter.spec.ts:0","artifactURI":"reports/pipeMeter.spec/tracks_total_bytes_for_object_chunks.jsonl","seed":42}
-{"status":"pass","duration":130,"location":"/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0","artifactURI":"reports/router-inproc.spec/sweep_keeps_fresh_endpoints.jsonl","seed":42}
-{"status":"pass","duration":279,"location":"/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0","artifactURI":"reports/router-inproc.spec/startSweeper_automatically_removes_stale_endpoints.jsonl","seed":42}
-{"status":"pass","duration":15,"location":"/srv/repos0/mkolbol/tests/config/loader.spec.ts:0","artifactURI":"reports/loader.spec/should_parse_valid_YAML.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/config/loader.spec.ts:0","artifactURI":"reports/loader.spec/should_parse_valid_JSON.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/config/loader.spec.ts:0","artifactURI":"reports/loader.spec/should_reject_missing_nodes.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/config/loader.spec.ts:0","artifactURI":"reports/loader.spec/should_reject_missing_connections.jsonl","seed":42}
-{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/config/loader.spec.ts:0","artifactURI":"reports/loader.spec/should_reject_duplicate_node_ids.jsonl","seed":42}
+{"status":"pass","duration":54,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/enforces_budget_after_redaction.jsonl","seed":42}
+{"status":"pass","duration":169,"location":"/srv/repos0/mkolbol/tests/cli/mkGraph.spec.ts:0","artifactURI":"reports/mkGraph.spec/prints_ASCII_graph_by_default.jsonl","seed":42}
+{"status":"pass","duration":143,"location":"/srv/repos0/mkolbol/tests/cli/mkGraph.spec.ts:0","artifactURI":"reports/mkGraph.spec/prints_JSON_graph_with_--json_flag.jsonl","seed":42}
+{"status":"pass","duration":128,"location":"/srv/repos0/mkolbol/tests/cli/mkGraph.spec.ts:0","artifactURI":"reports/mkGraph.spec/displays_ASCII_graph_with_connection_types.jsonl","seed":42}
+{"status":"pass","duration":74,"location":"/srv/repos0/mkolbol/tests/cli/mkGraph.spec.ts:0","artifactURI":"reports/mkGraph.spec/shows_error_when_no_config_file_provided.jsonl","seed":42}
+{"status":"pass","duration":114,"location":"/srv/repos0/mkolbol/tests/cli/mkGraph.spec.ts:0","artifactURI":"reports/mkGraph.spec/shows_error_for_non-existent_config_file.jsonl","seed":42}
+{"status":"pass","duration":76,"location":"/srv/repos0/mkolbol/tests/cli/mkGraph.spec.ts:0","artifactURI":"reports/mkGraph.spec/shows_help_when_--help_flag_is_used.jsonl","seed":42}
+{"status":"pass","duration":134,"location":"/srv/repos0/mkolbol/tests/cli/mkGraph.spec.ts:0","artifactURI":"reports/mkGraph.spec/displays_node_params_in_ASCII_output.jsonl","seed":42}
+{"status":"pass","duration":172,"location":"/srv/repos0/mkolbol/tests/cli/mkGraph.spec.ts:0","artifactURI":"reports/mkGraph.spec/includes_runMode_indicators_in_ASCII_output.jsonl","seed":42}
+{"status":"pass","duration":114,"location":"/srv/repos0/mkolbol/tests/config/loader.spec.ts:0","artifactURI":"reports/loader.spec/should_parse_valid_YAML.jsonl","seed":42}
+{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/config/loader.spec.ts:0","artifactURI":"reports/loader.spec/should_parse_valid_JSON.jsonl","seed":42}
+{"status":"pass","duration":12,"location":"/srv/repos0/mkolbol/tests/config/loader.spec.ts:0","artifactURI":"reports/loader.spec/should_reject_missing_nodes.jsonl","seed":42}
+{"status":"pass","duration":6,"location":"/srv/repos0/mkolbol/tests/config/loader.spec.ts:0","artifactURI":"reports/loader.spec/should_reject_missing_connections.jsonl","seed":42}
+{"status":"pass","duration":28,"location":"/srv/repos0/mkolbol/tests/config/loader.spec.ts:0","artifactURI":"reports/loader.spec/should_reject_duplicate_node_ids.jsonl","seed":42}
 {"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/config/loader.spec.ts:0","artifactURI":"reports/loader.spec/should_reject_invalid_from_address_without_dot.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/config/loader.spec.ts:0","artifactURI":"reports/loader.spec/should_reject_invalid_to_address_without_dot.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/config/loader.spec.ts:0","artifactURI":"reports/loader.spec/should_reject_address_with_multiple_dots.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/config/loader.spec.ts:0","artifactURI":"reports/loader.spec/should_reject_address_with_empty_node_name.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/config/loader.spec.ts:0","artifactURI":"reports/loader.spec/should_reject_invalid_to_address_without_dot.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/config/loader.spec.ts:0","artifactURI":"reports/loader.spec/should_reject_address_with_multiple_dots.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/config/loader.spec.ts:0","artifactURI":"reports/loader.spec/should_reject_address_with_empty_node_name.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/config/loader.spec.ts:0","artifactURI":"reports/loader.spec/should_reject_address_with_empty_terminal_name.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/config/loader.spec.ts:0","artifactURI":"reports/loader.spec/should_reject_connection_referencing_non-existent_from_node.jsonl","seed":42}
-{"status":"pass","duration":5,"location":"/srv/repos0/mkolbol/tests/config/loader.spec.ts:0","artifactURI":"reports/loader.spec/should_reject_connection_referencing_non-existent_to_node.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/config/loader.spec.ts:0","artifactURI":"reports/loader.spec/should_reject_non-object_config.jsonl","seed":42}
-{"status":"pass","duration":19,"location":"/srv/repos0/mkolbol/tests/config/loader.spec.ts:0","artifactURI":"reports/loader.spec/should_reject_non-array_nodes.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/config/loader.spec.ts:0","artifactURI":"reports/loader.spec/should_reject_non-array_connections.jsonl","seed":42}
-{"status":"pass","duration":34,"location":"/srv/repos0/mkolbol/tests/config/loader.spec.ts:0","artifactURI":"reports/loader.spec/should_reject_node_without_id.jsonl","seed":42}
-{"status":"pass","duration":19,"location":"/srv/repos0/mkolbol/tests/config/loader.spec.ts:0","artifactURI":"reports/loader.spec/should_reject_node_with_non-string_id.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/config/loader.spec.ts:0","artifactURI":"reports/loader.spec/should_reject_node_without_module.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/config/loader.spec.ts:0","artifactURI":"reports/loader.spec/should_reject_connection_referencing_non-existent_to_node.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/config/loader.spec.ts:0","artifactURI":"reports/loader.spec/should_reject_non-object_config.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/config/loader.spec.ts:0","artifactURI":"reports/loader.spec/should_reject_non-array_nodes.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/config/loader.spec.ts:0","artifactURI":"reports/loader.spec/should_reject_non-array_connections.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/config/loader.spec.ts:0","artifactURI":"reports/loader.spec/should_reject_node_without_id.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/config/loader.spec.ts:0","artifactURI":"reports/loader.spec/should_reject_node_with_non-string_id.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/config/loader.spec.ts:0","artifactURI":"reports/loader.spec/should_reject_node_without_module.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/config/loader.spec.ts:0","artifactURI":"reports/loader.spec/should_reject_node_with_non-string_module.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/config/loader.spec.ts:0","artifactURI":"reports/loader.spec/should_reject_connection_without_from.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/config/loader.spec.ts:0","artifactURI":"reports/loader.spec/should_reject_connection_without_to.jsonl","seed":42}
-{"status":"pass","duration":25,"location":"/srv/repos0/mkolbol/tests/config/loader.spec.ts:0","artifactURI":"reports/loader.spec/should_reject_connection_with_non-string_from.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/config/loader.spec.ts:0","artifactURI":"reports/loader.spec/should_reject_connection_with_non-string_from.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/config/loader.spec.ts:0","artifactURI":"reports/loader.spec/should_reject_connection_with_non-string_to.jsonl","seed":42}
-{"status":"pass","duration":15,"location":"/srv/repos0/mkolbol/tests/config/loader.spec.ts:0","artifactURI":"reports/loader.spec/should_accept_valid_topology.jsonl","seed":42}
-{"status":"pass","duration":9,"location":"/srv/repos0/mkolbol/test/state/stateManager.spec.ts:0","artifactURI":"reports/stateManager.spec/adds_nodes_and_emits_events.jsonl","seed":42}
-{"status":"pass","duration":86,"location":"/srv/repos0/mkolbol/test/state/stateManager.spec.ts:0","artifactURI":"reports/stateManager.spec/connects_and_emits_connected.jsonl","seed":42}
-{"status":"pass","duration":8,"location":"/srv/repos0/mkolbol/test/state/stateManager.spec.ts:0","artifactURI":"reports/stateManager.spec/split_and_merge_emit_events.jsonl","seed":42}
-{"status":"pass","duration":7,"location":"/srv/repos0/mkolbol/test/state/stateManager.spec.ts:0","artifactURI":"reports/stateManager.spec/validator_enforces_directionality_when_set.jsonl","seed":42}
-{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/test/state/stateManager.spec.ts:0","artifactURI":"reports/stateManager.spec/exporters_produce_strings.jsonl","seed":42}
-{"status":"pass","duration":11,"location":"/srv/repos0/mkolbol/tests/renderers/passthroughRenderer.spec.ts:0","artifactURI":"reports/passthroughRenderer.spec/should_render_raw_ANSI_to_stdout.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/config/loader.spec.ts:0","artifactURI":"reports/loader.spec/should_accept_valid_topology.jsonl","seed":42}
+{"status":"pass","duration":37,"location":"/srv/repos0/mkolbol/tests/transforms/tee.spec.ts:0","artifactURI":"reports/tee.spec/creates_input_pipe_and_output_pipes.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/transforms/tee.spec.ts:0","artifactURI":"reports/tee.spec/defaults_to_2_output_pipes.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/transforms/tee.spec.ts:0","artifactURI":"reports/tee.spec/creates_configurable_number_of_output_pipes.jsonl","seed":42}
+{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/transforms/tee.spec.ts:0","artifactURI":"reports/tee.spec/throws_error_if_outputCount_is_less_than_1.jsonl","seed":42}
+{"status":"pass","duration":31,"location":"/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0","artifactURI":"reports/router-inproc.spec/stores_announcements_and_returns_copies_via_list__.jsonl","seed":42}
+{"status":"pass","duration":6,"location":"/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0","artifactURI":"reports/router-inproc.spec/is_idempotent_and_updates_timestamps_and_metadata.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0","artifactURI":"reports/router-inproc.spec/withdraw_removes_endpoints.jsonl","seed":42}
+{"status":"pass","duration":9,"location":"/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0","artifactURI":"reports/rateLimiter.spec/creates_input_and_output_pipes.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0","artifactURI":"reports/rateLimiter.spec/initializes_with_full_token_capacity.jsonl","seed":42}
+{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/returns_false_when_module_is_not_enabled.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/returns_consistent_value_for_same_module.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/returns_false_when_config_is_disabled.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/checks_module_against_config_modules_when_enabled.jsonl","seed":42}
+{"status":"pass","duration":5,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/does_not_emit_when_on___returns_false.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/emit_returns_immediately_when_module_is_disabled.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/shouldEmit_returns_false_when_module_is_disabled.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/emits_to_console_when_module_is_enabled.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/respects_debug_level_filtering.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/emits_formatted_output_to_console.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/handles_emit_without_payload.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/shouldEmit_respects_level_hierarchy.jsonl","seed":42}
+{"status":"pass","duration":6,"location":"/srv/repos0/mkolbol/tests/transforms/pipeMeter.spec.ts:0","artifactURI":"reports/pipeMeter.spec/creates_input_and_output_pipes.jsonl","seed":42}
+{"status":"pass","duration":7,"location":"/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0","artifactURI":"reports/hostessEndpoints.spec/should_register_an_endpoint_with_id_and_coordinates.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0","artifactURI":"reports/hostessEndpoints.spec/should_register_multiple_endpoints_with_different_ids.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0","artifactURI":"reports/hostessEndpoints.spec/should_overwrite_endpoint_if_registered_with_same_id.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0","artifactURI":"reports/hostessEndpoints.spec/should_handle_endpoint_without_metadata.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0","artifactURI":"reports/hostessEndpoints.spec/should_return_empty_map_when_no_endpoints_registered.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0","artifactURI":"reports/hostessEndpoints.spec/should_return_a_copy_of_the_endpoints_map.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0","artifactURI":"reports/hostessEndpoints.spec/should_contain_all_registered_endpoints.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0","artifactURI":"reports/hostessEndpoints.spec/should_support_inproc_endpoint_type.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0","artifactURI":"reports/hostessEndpoints.spec/should_support_worker_endpoint_type.jsonl","seed":42}
+{"status":"pass","duration":24,"location":"/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0","artifactURI":"reports/hostessEndpoints.spec/should_support_external_endpoint_type.jsonl","seed":42}
+{"status":"pass","duration":28,"location":"/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0","artifactURI":"reports/hostessEndpoints.spec/should_support_pty_endpoint_type.jsonl","seed":42}
+{"status":"pass","duration":25,"location":"/srv/repos0/mkolbol/tests/hostess/hostessEndpoints.spec.ts:0","artifactURI":"reports/hostessEndpoints.spec/should_allow_endpoints_to_be_registered_alongside_servers.jsonl","seed":42}
+{"status":"pass","duration":111,"location":"/srv/repos0/mkolbol/tests/cli/mkLogs.spec.ts:0","artifactURI":"reports/mkLogs.spec/shows_help_when_--help_flag_is_used.jsonl","seed":42}
+{"status":"pass","duration":129,"location":"/srv/repos0/mkolbol/tests/cli/mkLogs.spec.ts:0","artifactURI":"reports/mkLogs.spec/tails_logs_in_human-readable_format_by_default.jsonl","seed":42}
+{"status":"pass","duration":98,"location":"/srv/repos0/mkolbol/tests/cli/mkLogs.spec.ts:0","artifactURI":"reports/mkLogs.spec/filters_logs_by_module_name.jsonl","seed":42}
+{"status":"pass","duration":100,"location":"/srv/repos0/mkolbol/tests/cli/mkLogs.spec.ts:0","artifactURI":"reports/mkLogs.spec/filters_logs_by_level__error_.jsonl","seed":42}
+{"status":"pass","duration":111,"location":"/srv/repos0/mkolbol/tests/cli/mkLogs.spec.ts:0","artifactURI":"reports/mkLogs.spec/filters_logs_by_level__warn__includes_error_and_warn.jsonl","seed":42}
+{"status":"pass","duration":103,"location":"/srv/repos0/mkolbol/tests/cli/mkLogs.spec.ts:0","artifactURI":"reports/mkLogs.spec/filters_logs_by_level__info__includes_error__warn__and_info.jsonl","seed":42}
+{"status":"pass","duration":112,"location":"/srv/repos0/mkolbol/tests/cli/mkLogs.spec.ts:0","artifactURI":"reports/mkLogs.spec/outputs_logs_in_JSON_format_with_--json_flag.jsonl","seed":42}
+{"status":"pass","duration":143,"location":"/srv/repos0/mkolbol/tests/cli/mkLogs.spec.ts:0","artifactURI":"reports/mkLogs.spec/combines_multiple_filters__module_and_level_.jsonl","seed":42}
+{"status":"pass","duration":159,"location":"/srv/repos0/mkolbol/tests/cli/mkLogs.spec.ts:0","artifactURI":"reports/mkLogs.spec/limits_output_lines_with_--lines_flag.jsonl","seed":42}
+{"status":"pass","duration":111,"location":"/srv/repos0/mkolbol/tests/cli/mkLogs.spec.ts:0","artifactURI":"reports/mkLogs.spec/shows_error_for_invalid_level.jsonl","seed":42}
+{"status":"pass","duration":69,"location":"/srv/repos0/mkolbol/tests/cli/mkLogs.spec.ts:0","artifactURI":"reports/mkLogs.spec/shows_error_for_invalid_--lines_value.jsonl","seed":42}
+{"status":"pass","duration":25,"location":"/srv/repos0/mkolbol/tests/worker/workerPipe.spec.ts:0","artifactURI":"reports/workerPipe.spec/should_close_port_on_destroy.jsonl","seed":42}
+{"status":"pass","duration":68,"location":"/srv/repos0/mkolbol/tests/worker/workerPipe.spec.ts:0","artifactURI":"reports/workerPipe.spec/should_propagate_error_in_destroy.jsonl","seed":42}
+{"status":"pass","duration":6,"location":"/srv/repos0/mkolbol/tests/worker/workerPipe.spec.ts:0","artifactURI":"reports/workerPipe.spec/should_handle_complete_lifecycle_end-to-end.jsonl","seed":42}
+{"status":"pass","duration":78,"location":"/srv/repos0/mkolbol/tests/integration/local-node-gate.spec.ts:0","artifactURI":"reports/local-node-gate.spec/allows_config_without_network_features_when_MK_LOCAL_NODE_1.jsonl","seed":42}
+{"status":"pass","duration":5,"location":"/srv/repos0/mkolbol/tests/integration/local-node-gate.spec.ts:0","artifactURI":"reports/local-node-gate.spec/rejects_config_with_type_network_when_MK_LOCAL_NODE_1.jsonl","seed":42}
+{"status":"pass","duration":52,"location":"/srv/repos0/mkolbol/tests/integration/local-node-gate.spec.ts:0","artifactURI":"reports/local-node-gate.spec/rejects_config_with_address_parameter_when_MK_LOCAL_NODE_1.jsonl","seed":42}
+{"status":"pass","duration":27,"location":"/srv/repos0/mkolbol/tests/integration/local-node-gate.spec.ts:0","artifactURI":"reports/local-node-gate.spec/allows_config_with_network_features_when_MK_LOCAL_NODE_is_not_set.jsonl","seed":42}
+{"status":"pass","duration":6,"location":"/srv/repos0/mkolbol/tests/integration/local-node-gate.spec.ts:0","artifactURI":"reports/local-node-gate.spec/allows_config_with_network_features_when_MK_LOCAL_NODE_0.jsonl","seed":42}
+{"status":"pass","duration":85,"location":"/srv/repos0/mkolbol/tests/transforms/tee.spec.ts:0","artifactURI":"reports/tee.spec/handles_single_output_pipe.jsonl","seed":42}
+{"status":"pass","duration":93,"location":"/srv/repos0/mkolbol/tests/transforms/tee.spec.ts:0","artifactURI":"reports/tee.spec/handles_object_mode_data.jsonl","seed":42}
+{"status":"pass","duration":97,"location":"/srv/repos0/mkolbol/tests/transforms/tee.spec.ts:0","artifactURI":"reports/tee.spec/handles_buffer_mode_data.jsonl","seed":42}
+{"status":"pass","duration":175,"location":"/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0","artifactURI":"reports/router-inproc.spec/sweep_keeps_fresh_endpoints.jsonl","seed":42}
+{"status":"pass","duration":244,"location":"/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0","artifactURI":"reports/router-inproc.spec/startSweeper_automatically_removes_stale_endpoints.jsonl","seed":42}
+{"status":"pass","duration":117,"location":"/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0","artifactURI":"reports/rateLimiter.spec/holds_messages_when_bucket_is_empty.jsonl","seed":42}
+{"status":"fail","duration":272,"location":"/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0","artifactURI":"reports/rateLimiter.spec/releases_messages_when_tokens_become_available.jsonl","seed":42,"error":"expected [ 'msg1', 'msg2', 'msg3', 'msg4' ] to deeply equal [ 'msg1', 'msg2' ]"}
+{"status":"pass","duration":227,"location":"/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0","artifactURI":"reports/rateLimiter.spec/refills_tokens_at_specified_rate.jsonl","seed":42}
+{"status":"pass","duration":116,"location":"/srv/repos0/mkolbol/tests/transforms/pipeMeter.spec.ts:0","artifactURI":"reports/pipeMeter.spec/tracks_total_messages.jsonl","seed":42}
+{"status":"pass","duration":57,"location":"/srv/repos0/mkolbol/tests/transforms/pipeMeter.spec.ts:0","artifactURI":"reports/pipeMeter.spec/tracks_total_bytes_for_string_chunks.jsonl","seed":42}
+{"status":"pass","duration":105,"location":"/srv/repos0/mkolbol/tests/transforms/pipeMeter.spec.ts:0","artifactURI":"reports/pipeMeter.spec/tracks_total_bytes_for_buffer_chunks.jsonl","seed":42}
+{"status":"pass","duration":90,"location":"/srv/repos0/mkolbol/tests/transforms/pipeMeter.spec.ts:0","artifactURI":"reports/pipeMeter.spec/tracks_total_bytes_for_object_chunks.jsonl","seed":42}
+{"status":"pass","duration":93,"location":"/srv/repos0/mkolbol/tests/renderers/passthroughRenderer.spec.ts:0","artifactURI":"reports/passthroughRenderer.spec/should_render_raw_ANSI_to_stdout.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/renderers/passthroughRenderer.spec.ts:0","artifactURI":"reports/passthroughRenderer.spec/should_handle_ANSI_escape_sequences.jsonl","seed":42}
-{"status":"pass","duration":8,"location":"/srv/repos0/mkolbol/tests/renderers/loggerRenderer.spec.ts:0","artifactURI":"reports/loggerRenderer.spec/should_write_all_data_to_log_file.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/renderers/loggerRenderer.spec.ts:0","artifactURI":"reports/loggerRenderer.spec/should_append_to_existing_log_file.jsonl","seed":42}
-{"status":"pass","duration":15,"location":"/srv/repos0/mkolbol/test/hostess.spec.ts:0","artifactURI":"reports/hostess.spec/registers_and_queries_by_capabilities.jsonl","seed":42}
-{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/test/hostess.spec.ts:0","artifactURI":"reports/hostess.spec/marks_in-use_and_back_to_available.jsonl","seed":42}
-{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/test/hostess.spec.ts:0","artifactURI":"reports/hostess.spec/evicts_after_missed_heartbeats.jsonl","seed":42}
+{"status":"pass","duration":142,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_render_raw_ANSI_to_stdout_by_default.jsonl","seed":42}
+{"status":"pass","duration":162,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_handle_ANSI_escape_sequences.jsonl","seed":42}
+{"status":"pass","duration":107,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_strip_ANSI_codes_when_stripAnsi_is_enabled.jsonl","seed":42}
+{"status":"pass","duration":13,"location":"/srv/repos0/mkolbol/test/hostess.spec.ts:0","artifactURI":"reports/hostess.spec/registers_and_queries_by_capabilities.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/test/hostess.spec.ts:0","artifactURI":"reports/hostess.spec/marks_in-use_and_back_to_available.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/test/hostess.spec.ts:0","artifactURI":"reports/hostess.spec/evicts_after_missed_heartbeats.jsonl","seed":42}
 {"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/test/hostess.spec.ts:0","artifactURI":"reports/hostess.spec/heartbeat_maintains_liveness.jsonl","seed":42}
-{"status":"pass","duration":129,"location":"/srv/repos0/mkolbol/tests/cli/mkGraph.spec.ts:0","artifactURI":"reports/mkGraph.spec/prints_ASCII_graph_by_default.jsonl","seed":42}
-{"status":"pass","duration":129,"location":"/srv/repos0/mkolbol/tests/cli/mkGraph.spec.ts:0","artifactURI":"reports/mkGraph.spec/prints_JSON_graph_with_--json_flag.jsonl","seed":42}
-{"status":"pass","duration":146,"location":"/srv/repos0/mkolbol/tests/cli/mkGraph.spec.ts:0","artifactURI":"reports/mkGraph.spec/displays_ASCII_graph_with_connection_types.jsonl","seed":42}
-{"status":"pass","duration":101,"location":"/srv/repos0/mkolbol/tests/cli/mkGraph.spec.ts:0","artifactURI":"reports/mkGraph.spec/shows_error_when_no_config_file_provided.jsonl","seed":42}
-{"status":"pass","duration":155,"location":"/srv/repos0/mkolbol/tests/cli/mkGraph.spec.ts:0","artifactURI":"reports/mkGraph.spec/shows_error_for_non-existent_config_file.jsonl","seed":42}
-{"status":"pass","duration":178,"location":"/srv/repos0/mkolbol/tests/cli/mkGraph.spec.ts:0","artifactURI":"reports/mkGraph.spec/shows_help_when_--help_flag_is_used.jsonl","seed":42}
-{"status":"pass","duration":233,"location":"/srv/repos0/mkolbol/tests/cli/mkGraph.spec.ts:0","artifactURI":"reports/mkGraph.spec/displays_node_params_in_ASCII_output.jsonl","seed":42}
-{"status":"pass","duration":110,"location":"/srv/repos0/mkolbol/tests/cli/mkGraph.spec.ts:0","artifactURI":"reports/mkGraph.spec/includes_runMode_indicators_in_ASCII_output.jsonl","seed":42}
-{"status":"pass","duration":12,"location":"/srv/repos0/mkolbol/tests/worker/workerPipe.spec.ts:0","artifactURI":"reports/workerPipe.spec/should_handle_complete_lifecycle_end-to-end.jsonl","seed":42}
-{"status":"pass","duration":306,"location":"/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0","artifactURI":"reports/rateLimiter.spec/processes_burst_after_refill_period.jsonl","seed":42}
-{"status":"pass","duration":82,"location":"/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0","artifactURI":"reports/rateLimiter.spec/maintains_pending_queue_under_backpressure.jsonl","seed":42}
-{"status":"pass","duration":383,"location":"/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0","artifactURI":"reports/rateLimiter.spec/processes_pending_messages_in_FIFO_order.jsonl","seed":42}
-{"status":"pass","duration":507,"location":"/srv/repos0/mkolbol/tests/transforms/pipeMeter.spec.ts:0","artifactURI":"reports/pipeMeter.spec/calculates_messages_per_second.jsonl","seed":42}
-{"status":"pass","duration":60,"location":"/srv/repos0/mkolbol/tests/transforms/pipeMeter.spec.ts:0","artifactURI":"reports/pipeMeter.spec/returns_metrics_with_correct_structure.jsonl","seed":42}
-{"status":"pass","duration":255,"location":"/srv/repos0/mkolbol/tests/transforms/pipeMeter.spec.ts:0","artifactURI":"reports/pipeMeter.spec/respects_custom_emit_interval.jsonl","seed":42}
-{"status":"pass","duration":80,"location":"/srv/repos0/mkolbol/tests/transforms/pipeMeter.spec.ts:0","artifactURI":"reports/pipeMeter.spec/updates_lastUpdateTime_on_getMetrics_call.jsonl","seed":42}
-{"status":"pass","duration":274,"location":"/srv/repos0/mkolbol/tests/transforms/pipeMeter.spec.ts:0","artifactURI":"reports/pipeMeter.spec/stops_metrics_emitter_when_stop_is_called.jsonl","seed":42}
-{"status":"pass","duration":51,"location":"/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0","artifactURI":"reports/router-inproc.spec/allows_multiple_startSweeper_calls_without_error.jsonl","seed":42}
-{"status":"pass","duration":258,"location":"/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0","artifactURI":"reports/router-inproc.spec/heartbeat_keeps_endpoint_alive.jsonl","seed":42}
-{"status":"pass","duration":36,"location":"/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0","artifactURI":"reports/router-inproc.spec/initializes_metrics_to_zero.jsonl","seed":42}
-{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0","artifactURI":"reports/router-inproc.spec/tracks_totalSweeps_after_each_sweep.jsonl","seed":42}
-{"status":"pass","duration":211,"location":"/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0","artifactURI":"reports/router-inproc.spec/tracks_totalRemoved_across_multiple_sweeps.jsonl","seed":42}
-{"status":"pass","duration":55,"location":"/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0","artifactURI":"reports/router-inproc.spec/updates_lastSweepTime_on_each_sweep.jsonl","seed":42}
-{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0","artifactURI":"reports/router-inproc.spec/does_not_mutate_returned_metrics_object.jsonl","seed":42}
-{"status":"pass","duration":202,"location":"/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0","artifactURI":"reports/router-inproc.spec/tracks_metrics_with_automatic_sweeper.jsonl","seed":42}
-{"status":"pass","duration":24,"location":"/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0","artifactURI":"reports/router-inproc.spec/continues_tracking_after_removing_no_endpoints.jsonl","seed":42}
-{"status":"pass","duration":88,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_handle_ANSI_escape_sequences.jsonl","seed":42}
-{"status":"pass","duration":139,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_strip_ANSI_codes_when_stripAnsi_is_enabled.jsonl","seed":42}
-{"status":"pass","duration":104,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_handle_multiple_writes.jsonl","seed":42}
-{"status":"pass","duration":81,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_handle_string_inputs.jsonl","seed":42}
-{"status":"pass","duration":59,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_handle_object_inputs_by_stringifying.jsonl","seed":42}
-{"status":"pass","duration":13,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_write_to_file_when_target_is_a_file_path.jsonl","seed":42}
-{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_write_ANSI_codes_to_file_in_raw_mode.jsonl","seed":42}
-{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_strip_ANSI_codes_from_file_when_stripAnsi_is_enabled.jsonl","seed":42}
-{"status":"pass","duration":26,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_create_nested_directories_automatically.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0","artifactURI":"reports/router-inproc.spec/allows_multiple_startSweeper_calls_without_error.jsonl","seed":42}
+{"status":"pass","duration":107,"location":"/srv/repos0/mkolbol/tests/cli/mkLogs.spec.ts:0","artifactURI":"reports/mkLogs.spec/shows_human-readable_timestamps_in_output.jsonl","seed":42}
+{"status":"pass","duration":100,"location":"/srv/repos0/mkolbol/tests/cli/mkLogs.spec.ts:0","artifactURI":"reports/mkLogs.spec/includes_payload_in_human-readable_output.jsonl","seed":42}
+{"status":"pass","duration":95,"location":"/srv/repos0/mkolbol/tests/cli/mkLogs.spec.ts:0","artifactURI":"reports/mkLogs.spec/handles_empty_reports_directory_gracefully.jsonl","seed":42}
+{"status":"pass","duration":122,"location":"/srv/repos0/mkolbol/tests/cli/mkLogs.spec.ts:0","artifactURI":"reports/mkLogs.spec/displays_module_names_padded_in_human_format.jsonl","seed":42}
+{"status":"pass","duration":178,"location":"/srv/repos0/mkolbol/tests/cli/mkLogs.spec.ts:0","artifactURI":"reports/mkLogs.spec/shows_event_names_after_module.jsonl","seed":42}
+{"status":"pass","duration":18,"location":"/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0","artifactURI":"reports/router-inproc.spec/initializes_metrics_to_zero.jsonl","seed":42}
+{"status":"pass","duration":46,"location":"/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0","artifactURI":"reports/router-inproc.spec/tracks_totalSweeps_after_each_sweep.jsonl","seed":42}
+{"status":"pass","duration":86,"location":"/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0","artifactURI":"reports/rateLimiter.spec/queues_messages_exceeding_burst_capacity.jsonl","seed":42}
+{"status":"pass","duration":60,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_handle_object_inputs_by_stringifying.jsonl","seed":42}
+{"status":"pass","duration":202,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_write_to_file_when_target_is_a_file_path.jsonl","seed":42}
+{"status":"pass","duration":34,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_write_ANSI_codes_to_file_in_raw_mode.jsonl","seed":42}
+{"status":"pass","duration":6,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_strip_ANSI_codes_from_file_when_stripAnsi_is_enabled.jsonl","seed":42}
+{"status":"pass","duration":30,"location":"/srv/repos0/mkolbol/tests/renderers/loggerRenderer.spec.ts:0","artifactURI":"reports/loggerRenderer.spec/should_write_all_data_to_log_file.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/renderers/loggerRenderer.spec.ts:0","artifactURI":"reports/loggerRenderer.spec/should_append_to_existing_log_file.jsonl","seed":42}
+{"status":"pass","duration":41,"location":"/srv/repos0/mkolbol/test/state/stateManager.spec.ts:0","artifactURI":"reports/stateManager.spec/adds_nodes_and_emits_events.jsonl","seed":42}
+{"status":"pass","duration":25,"location":"/srv/repos0/mkolbol/test/state/stateManager.spec.ts:0","artifactURI":"reports/stateManager.spec/connects_and_emits_connected.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/test/state/stateManager.spec.ts:0","artifactURI":"reports/stateManager.spec/split_and_merge_emit_events.jsonl","seed":42}
+{"status":"pass","duration":31,"location":"/srv/repos0/mkolbol/test/state/stateManager.spec.ts:0","artifactURI":"reports/stateManager.spec/validator_enforces_directionality_when_set.jsonl","seed":42}
+{"status":"pass","duration":36,"location":"/srv/repos0/mkolbol/test/state/stateManager.spec.ts:0","artifactURI":"reports/stateManager.spec/exporters_produce_strings.jsonl","seed":42}
+{"status":"pass","duration":88,"location":"/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0","artifactURI":"reports/router-inproc.spec/updates_lastSweepTime_on_each_sweep.jsonl","seed":42}
+{"status":"pass","duration":21,"location":"/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0","artifactURI":"reports/router-inproc.spec/does_not_mutate_returned_metrics_object.jsonl","seed":42}
+{"status":"pass","duration":74,"location":"/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0","artifactURI":"reports/rateLimiter.spec/maintains_pending_queue_under_backpressure.jsonl","seed":42}
+{"status":"pass","duration":87,"location":"/srv/repos0/mkolbol/tests/transforms/pipeMeter.spec.ts:0","artifactURI":"reports/pipeMeter.spec/returns_metrics_with_correct_structure.jsonl","seed":42}
+{"status":"pass","duration":253,"location":"/srv/repos0/mkolbol/tests/transforms/pipeMeter.spec.ts:0","artifactURI":"reports/pipeMeter.spec/respects_custom_emit_interval.jsonl","seed":42}
 {"status":"pass","duration":6,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_append_to_existing_file.jsonl","seed":42}
-{"status":"pass","duration":25,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_handle_binary_data.jsonl","seed":42}
-{"status":"pass","duration":60,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_work_in_non-TTY_environment.jsonl","seed":42}
-{"status":"pass","duration":91,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_handle_rawMode_gracefully_when_not_a_TTY.jsonl","seed":42}
-{"status":"pass","duration":68,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_handle_empty_writes.jsonl","seed":42}
-{"status":"pass","duration":33,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_handle_rapid_sequential_writes.jsonl","seed":42}
-{"status":"pass","duration":105,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_handle_large_buffers.jsonl","seed":42}
-{"status":"pass","duration":65,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_handle_complex_ANSI_sequences.jsonl","seed":42}
-{"status":"pass","duration":105,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_strip_complex_ANSI_sequences_correctly.jsonl","seed":42}
-{"status":"pass","duration":37,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_write_ANSI_content_to_file_target_and_verify_exact_content.jsonl","seed":42}
-{"status":"pass","duration":20,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_preserve_exact_ANSI_byte_sequences_when_writing_to_file.jsonl","seed":42}
-{"status":"pass","duration":605,"location":"/srv/repos0/mkolbol/tests/integration/stdioPath.spec.ts:0","artifactURI":"reports/stdioPath.spec/should_perform_stdin___stdout_roundtrip.jsonl","seed":42}
-{"status":"pass","duration":407,"location":"/srv/repos0/mkolbol/tests/integration/stdioPath.spec.ts:0","artifactURI":"reports/stdioPath.spec/should_handle_drain_events_under_backpressure.jsonl","seed":42}
-{"status":"pass","duration":105,"location":"/srv/repos0/mkolbol/tests/integration/stdioPath.spec.ts:0","artifactURI":"reports/stdioPath.spec/should_manage_lifecycle__start_stop_.jsonl","seed":42}
-{"status":"pass","duration":104,"location":"/srv/repos0/mkolbol/tests/integration/stdioPath.spec.ts:0","artifactURI":"reports/stdioPath.spec/should_register_with_Hostess_correctly.jsonl","seed":42}
-{"status":"pass","duration":105,"location":"/srv/repos0/mkolbol/tests/devex/acceptance/streams.spec.ts:0","artifactURI":"reports/streams.spec/should_handle_multiple_sequential_messages.jsonl","seed":42}
-{"status":"pass","duration":373,"location":"/srv/repos0/mkolbol/tests/devex/acceptance/streams.spec.ts:0","artifactURI":"reports/streams.spec/should_handle_backpressure_with_drain_events.jsonl","seed":42}
-{"status":"pass","duration":225,"location":"/srv/repos0/mkolbol/tests/devex/acceptance/hostess.spec.ts:0","artifactURI":"reports/hostess.spec/should_register_endpoint_after_spawn.jsonl","seed":42}
-{"status":"pass","duration":61,"location":"/srv/repos0/mkolbol/tests/devex/acceptance/hostess.spec.ts:0","artifactURI":"reports/hostess.spec/should_have_required_metadata_fields.jsonl","seed":42}
-{"status":"pass","duration":69,"location":"/srv/repos0/mkolbol/tests/devex/acceptance/hostess.spec.ts:0","artifactURI":"reports/hostess.spec/should_declare_capabilities.jsonl","seed":42}
-{"status":"pass","duration":83,"location":"/srv/repos0/mkolbol/tests/devex/acceptance/hostess.spec.ts:0","artifactURI":"reports/hostess.spec/should_be_discoverable_by_capabilities.jsonl","seed":42}
-{"status":"pass","duration":126,"location":"/srv/repos0/mkolbol/tests/devex/acceptance/hostess.spec.ts:0","artifactURI":"reports/hostess.spec/should_support_multiple_endpoint_registrations.jsonl","seed":42}
-{"status":"pass","duration":366,"location":"/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0","artifactURI":"reports/externalServerWrapper.spec/should_spawn_a_simple_process.jsonl","seed":42}
-{"status":"pass","duration":196,"location":"/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0","artifactURI":"reports/externalServerWrapper.spec/should_pipe_data_bidirectionally.jsonl","seed":42}
-{"status":"pass","duration":293,"location":"/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0","artifactURI":"reports/externalServerWrapper.spec/should_handle_environment_variables.jsonl","seed":42}
-{"status":"pass","duration":170,"location":"/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0","artifactURI":"reports/externalServerWrapper.spec/should_register_with_Hostess_on_spawn.jsonl","seed":42}
-{"status":"pass","duration":80,"location":"/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0","artifactURI":"reports/externalServerWrapper.spec/should_gracefully_shutdown_with_SIGTERM.jsonl","seed":42}
-{"status":"pass","duration":31,"location":"/srv/repos0/mkolbol/tests/transforms/pipeMeter.spec.ts:0","artifactURI":"reports/pipeMeter.spec/initializes_with_zero_metrics.jsonl","seed":42}
-{"status":"pass","duration":117,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_handle_large_ANSI_escape_sequences.jsonl","seed":42}
-{"status":"pass","duration":38,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_handle_multiple_large_chunks_without_data_loss.jsonl","seed":42}
-{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_preserve_integrity_of_complex_SGR_sequences.jsonl","seed":42}
-{"status":"pass","duration":5,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_handle_file_write_errors_gracefully.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_handle_double_start_stop_calls.jsonl","seed":42}
-{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_preserve_exact_byte-for-byte_ANSI_sequences.jsonl","seed":42}
-{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_handle_mixed_text_and_ANSI_without_corruption.jsonl","seed":42}
-{"status":"pass","duration":430,"location":"/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0","artifactURI":"reports/mkRunDry.spec/should_error_when_topology_file_is_missing.jsonl","seed":42}
-{"status":"pass","duration":434,"location":"/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0","artifactURI":"reports/mkRunDry.spec/should_error_when_config_file_does_not_exist.jsonl","seed":42}
-{"status":"pass","duration":467,"location":"/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0","artifactURI":"reports/mkRunDry.spec/should_accept_--dry-run_before_topology_file.jsonl","seed":42}
-{"status":"pass","duration":521,"location":"/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0","artifactURI":"reports/mkRunDry.spec/should_validate_valid_YAML_config.jsonl","seed":42}
-{"status":"pass","duration":432,"location":"/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0","artifactURI":"reports/mkRunDry.spec/should_validate_valid_JSON_config.jsonl","seed":42}
-{"status":"pass","duration":491,"location":"/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0","artifactURI":"reports/mkRunDry.spec/should_validate_complex_topology.jsonl","seed":42}
-{"status":"pass","duration":436,"location":"/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0","artifactURI":"reports/mkRunDry.spec/should_fail_on_invalid_YAML_syntax.jsonl","seed":42}
-{"status":"pass","duration":418,"location":"/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0","artifactURI":"reports/mkRunDry.spec/should_fail_on_missing_nodes_array.jsonl","seed":42}
-{"status":"pass","duration":448,"location":"/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0","artifactURI":"reports/mkRunDry.spec/should_fail_on_missing_connections_array.jsonl","seed":42}
-{"status":"pass","duration":405,"location":"/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0","artifactURI":"reports/mkRunDry.spec/should_fail_on_duplicate_node_IDs.jsonl","seed":42}
-{"status":"pass","duration":413,"location":"/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0","artifactURI":"reports/mkRunDry.spec/should_fail_on_invalid_connection_references.jsonl","seed":42}
-{"status":"pass","duration":410,"location":"/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0","artifactURI":"reports/mkRunDry.spec/should_fail_on_missing_node_id.jsonl","seed":42}
-{"status":"pass","duration":405,"location":"/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0","artifactURI":"reports/mkRunDry.spec/should_fail_on_missing_module.jsonl","seed":42}
-{"status":"pass","duration":411,"location":"/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0","artifactURI":"reports/mkRunDry.spec/should_fail_on_invalid_address_format.jsonl","seed":42}
-{"status":"pass","duration":438,"location":"/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0","artifactURI":"reports/mkRunDry.spec/should_return_exit_code_65_for_CONFIG_INVALID.jsonl","seed":42}
-{"status":"pass","duration":401,"location":"/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0","artifactURI":"reports/mkRunDry.spec/should_return_exit_code_66_for_CONFIG_NOT_FOUND.jsonl","seed":42}
-{"status":"pass","duration":374,"location":"/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0","artifactURI":"reports/mkRunDry.spec/should_return_exit_code_65_for_VALIDATION_ERROR.jsonl","seed":42}
-{"status":"pass","duration":2443,"location":"/srv/repos0/mkolbol/tests/cli/mkctlEndpoints.spec.ts:0","artifactURI":"reports/mkctlEndpoints.spec/supports_watch_mode_with_SIGTERM.jsonl","seed":42}
-{"status":"pass","duration":409,"location":"/srv/repos0/mkolbol/tests/cli/mkctlEndpoints.spec.ts:0","artifactURI":"reports/mkctlEndpoints.spec/filters_no_results_message.jsonl","seed":42}
-{"status":"pass","duration":412,"location":"/srv/repos0/mkolbol/tests/cli/mkctlEndpoints.spec.ts:0","artifactURI":"reports/mkctlEndpoints.spec/outputs_JSON_format_when_--json_flag_is_used.jsonl","seed":42}
-{"status":"pass","duration":397,"location":"/srv/repos0/mkolbol/tests/cli/mkctlEndpoints.spec.ts:0","artifactURI":"reports/mkctlEndpoints.spec/filters_by_metadata_fields.jsonl","seed":42}
-{"status":"pass","duration":1457,"location":"/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0","artifactURI":"reports/mkctlRun.spec/should_respect_--duration_argument.jsonl","seed":42}
-{"status":"pass","duration":1469,"location":"/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0","artifactURI":"reports/mkctlRun.spec/should_handle_--duration_before_--file.jsonl","seed":42}
-{"status":"pass","duration":439,"location":"/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0","artifactURI":"reports/mkctlRun.spec/should_handle_invalid_YAML_syntax.jsonl","seed":42}
-{"status":"pass","duration":405,"location":"/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0","artifactURI":"reports/mkctlRun.spec/should_handle_missing_nodes_array.jsonl","seed":42}
-{"status":"pass","duration":410,"location":"/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0","artifactURI":"reports/mkctlRun.spec/should_handle_missing_connections_array.jsonl","seed":42}
-{"status":"pass","duration":414,"location":"/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0","artifactURI":"reports/mkctlRun.spec/should_handle_duplicate_node_IDs.jsonl","seed":42}
-{"status":"pass","duration":423,"location":"/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0","artifactURI":"reports/mkctlRun.spec/should_handle_invalid_connection_references.jsonl","seed":42}
-{"status":"pass","duration":421,"location":"/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0","artifactURI":"reports/mkctlRun.spec/should_map_runtime_errors_to_runtime_exit_code.jsonl","seed":42}
-{"status":"pass","duration":1431,"location":"/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0","artifactURI":"reports/mkctlRun.spec/should_exit_with_RUNTIME_code_when_health_check_fails.jsonl","seed":42}
-{"status":"pass","duration":1458,"location":"/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0","artifactURI":"reports/mkctlRun.spec/should_successfully_run_basic_yml.jsonl","seed":42}
-{"status":"pass","duration":1459,"location":"/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0","artifactURI":"reports/mkctlRun.spec/should_successfully_run_multi_yml.jsonl","seed":42}
-{"status":"pass","duration":1451,"location":"/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0","artifactURI":"reports/mkctlRun.spec/should_handle_simple_timer_topology_with_short_duration.jsonl","seed":42}
-{"status":"pass","duration":1459,"location":"/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0","artifactURI":"reports/mkctlRun.spec/should_handle_config_with_no_connections.jsonl","seed":42}
-{"status":"pass","duration":1442,"location":"/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0","artifactURI":"reports/mkctlRun.spec/should_handle_JSON_config_format.jsonl","seed":42}
-{"status":"pass","duration":604,"location":"/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0","artifactURI":"reports/mkctlRun.spec/should_shut_down_gracefully_on_SIGINT.jsonl","seed":42}
-{"status":"pass","duration":436,"location":"/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0","artifactURI":"reports/mkctlRun.spec/should_validate_and_exit_with_success_for_valid_config.jsonl","seed":42}
-{"status":"pass","duration":403,"location":"/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0","artifactURI":"reports/mkctlRun.spec/should_exit_with_CONFIG_PARSE_error_for_invalid_config.jsonl","seed":42}
-{"status":"pass","duration":415,"location":"/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0","artifactURI":"reports/mkctlRun.spec/should_exit_with_CONFIG_PARSE_error_for_duplicate_node_IDs.jsonl","seed":42}
-{"status":"pass","duration":416,"location":"/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0","artifactURI":"reports/mkctlRun.spec/should_exit_with_CONFIG_PARSE_error_for_missing_nodes_array.jsonl","seed":42}
-{"status":"pass","duration":408,"location":"/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0","artifactURI":"reports/mkctlRun.spec/should_exit_with_CONFIG_NOT_FOUND_error_when_config_file_does_not_exist.jsonl","seed":42}
-{"status":"pass","duration":417,"location":"/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0","artifactURI":"reports/mkctlRun.spec/should_work_with_--dry-run_flag_in_any_position.jsonl","seed":42}
-{"status":"pass","duration":417,"location":"/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0","artifactURI":"reports/mkctlRun.spec/should_validate_complex_config_with_multiple_nodes_and_connections.jsonl","seed":42}
-{"status":"pass","duration":149,"location":"/srv/repos0/mkolbol/tests/devex/server-acceptance.spec.ts:0","artifactURI":"reports/server-acceptance.spec/should_register_endpoint_with_Hostess_after_spawn.jsonl","seed":42}
-{"status":"pass","duration":110,"location":"/srv/repos0/mkolbol/tests/devex/server-acceptance.spec.ts:0","artifactURI":"reports/server-acceptance.spec/should_perform_stdin___stdout_roundtrip.jsonl","seed":42}
-{"status":"pass","duration":743,"location":"/srv/repos0/mkolbol/tests/devex/server-acceptance.spec.ts:0","artifactURI":"reports/server-acceptance.spec/should_handle_multiple_sequential_messages.jsonl","seed":42}
-{"status":"pass","duration":139,"location":"/srv/repos0/mkolbol/tests/devex/server-acceptance.spec.ts:0","artifactURI":"reports/server-acceptance.spec/should_handle_backpressure_with_drain_events.jsonl","seed":42}
-{"status":"pass","duration":49,"location":"/srv/repos0/mkolbol/tests/devex/server-acceptance.spec.ts:0","artifactURI":"reports/server-acceptance.spec/should_manage_lifecycle__start_stop_.jsonl","seed":42}
-{"status":"pass","duration":55,"location":"/srv/repos0/mkolbol/tests/executor/executor.spec.ts:0","artifactURI":"reports/executor.spec/should_load_configuration.jsonl","seed":42}
-{"status":"pass","duration":33,"location":"/srv/repos0/mkolbol/tests/executor/executor.spec.ts:0","artifactURI":"reports/executor.spec/should_throw_if_up___called_without_load__.jsonl","seed":42}
-{"status":"pass","duration":19,"location":"/srv/repos0/mkolbol/tests/executor/executor.spec.ts:0","artifactURI":"reports/executor.spec/should_instantiate_modules_and_register_with_hostess.jsonl","seed":42}
-{"status":"pass","duration":46,"location":"/srv/repos0/mkolbol/tests/executor/executor.spec.ts:0","artifactURI":"reports/executor.spec/should_wire_connections_via_StateManager.jsonl","seed":42}
-{"status":"pass","duration":27,"location":"/srv/repos0/mkolbol/tests/executor/executor.spec.ts:0","artifactURI":"reports/executor.spec/should_support_restartNode.jsonl","seed":42}
-{"status":"pass","duration":75,"location":"/srv/repos0/mkolbol/tests/executor/executor.spec.ts:0","artifactURI":"reports/executor.spec/should_throw_on_restartNode_for_non-existent_node.jsonl","seed":42}
-{"status":"pass","duration":2250,"location":"/srv/repos0/mkolbol/tests/integration/executorCutover.spec.ts:0","artifactURI":"reports/executorCutover.spec/should_perform_basic_cutover_of_inproc_node.jsonl","seed":42}
-{"status":"pass","duration":2012,"location":"/srv/repos0/mkolbol/tests/integration/executorCutover.spec.ts:0","artifactURI":"reports/executorCutover.spec/should_preserve_node_configuration_during_cutover.jsonl","seed":42}
+{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_handle_binary_data.jsonl","seed":42}
+{"status":"pass","duration":86,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_work_in_non-TTY_environment.jsonl","seed":42}
+{"status":"pass","duration":88,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_handle_rawMode_gracefully_when_not_a_TTY.jsonl","seed":42}
+{"status":"pass","duration":61,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_handle_empty_writes.jsonl","seed":42}
+{"status":"pass","duration":30,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_handle_rapid_sequential_writes.jsonl","seed":42}
+{"status":"pass","duration":101,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_handle_large_buffers.jsonl","seed":42}
+{"status":"pass","duration":76,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_handle_complex_ANSI_sequences.jsonl","seed":42}
+{"status":"pass","duration":379,"location":"/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0","artifactURI":"reports/externalServerWrapper.spec/should_spawn_a_simple_process.jsonl","seed":42}
+{"status":"pass","duration":243,"location":"/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0","artifactURI":"reports/externalServerWrapper.spec/should_pipe_data_bidirectionally.jsonl","seed":42}
+{"status":"pass","duration":89,"location":"/srv/repos0/mkolbol/tests/devex/acceptance/streams.spec.ts:0","artifactURI":"reports/streams.spec/should_handle_multiple_sequential_messages.jsonl","seed":42}
+{"status":"pass","duration":380,"location":"/srv/repos0/mkolbol/tests/devex/acceptance/hostess.spec.ts:0","artifactURI":"reports/hostess.spec/should_register_endpoint_after_spawn.jsonl","seed":42}
+{"status":"pass","duration":92,"location":"/srv/repos0/mkolbol/tests/devex/acceptance/hostess.spec.ts:0","artifactURI":"reports/hostess.spec/should_have_required_metadata_fields.jsonl","seed":42}
+{"status":"pass","duration":75,"location":"/srv/repos0/mkolbol/tests/devex/acceptance/hostess.spec.ts:0","artifactURI":"reports/hostess.spec/should_declare_capabilities.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/devex/acceptance/hostess.spec.ts:0","artifactURI":"reports/hostess.spec/should_be_discoverable_by_capabilities.jsonl","seed":42}
+{"status":"pass","duration":27,"location":"/srv/repos0/mkolbol/tests/integration/router-inproc.spec.ts:0","artifactURI":"reports/router-inproc.spec/continues_tracking_after_removing_no_endpoints.jsonl","seed":42}
+{"status":"pass","duration":67,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_preserve_exact_ANSI_byte_sequences_when_writing_to_file.jsonl","seed":42}
+{"status":"pass","duration":61,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_work_when_stdout_is_redirected__non-TTY_.jsonl","seed":42}
+{"status":"pass","duration":143,"location":"/srv/repos0/mkolbol/tests/devex/acceptance/hostess.spec.ts:0","artifactURI":"reports/hostess.spec/should_support_multiple_endpoint_registrations.jsonl","seed":42}
+{"status":"pass","duration":7,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_handle_large_ANSI_escape_sequences.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_handle_multiple_large_chunks_without_data_loss.jsonl","seed":42}
+{"status":"pass","duration":104,"location":"/srv/repos0/mkolbol/tests/transforms/pipeMeter.spec.ts:0","artifactURI":"reports/pipeMeter.spec/handles_high_throughput.jsonl","seed":42}
+{"status":"pass","duration":127,"location":"/srv/repos0/mkolbol/tests/transforms/pipeMeter.spec.ts:0","artifactURI":"reports/pipeMeter.spec/handles_mixed_chunk_types.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/transforms/pipeMeter.spec.ts:0","artifactURI":"reports/pipeMeter.spec/initializes_with_zero_metrics.jsonl","seed":42}
+{"status":"pass","duration":80,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_preserve_integrity_of_complex_SGR_sequences.jsonl","seed":42}
+{"status":"pass","duration":24,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_handle_file_write_errors_gracefully.jsonl","seed":42}
+{"status":"pass","duration":41,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_handle_double_start_stop_calls.jsonl","seed":42}
+{"status":"pass","duration":54,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_preserve_exact_byte-for-byte_ANSI_sequences.jsonl","seed":42}
+{"status":"pass","duration":81,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_handle_mixed_text_and_ANSI_without_corruption.jsonl","seed":42}
+{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_handle_ANSI_C1_control_codes.jsonl","seed":42}
+{"status":"pass","duration":71,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_write_to_stdout_target_correctly.jsonl","seed":42}
+{"status":"pass","duration":6,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_handle_concurrent_writes_to_file_target.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_handle_file_target_vs_stdout_target_independently.jsonl","seed":42}
+{"status":"pass","duration":115,"location":"/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0","artifactURI":"reports/externalServerWrapper.spec/should_register_with_Hostess_on_spawn.jsonl","seed":42}
+{"status":"pass","duration":123,"location":"/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0","artifactURI":"reports/externalServerWrapper.spec/should_gracefully_shutdown_with_SIGTERM.jsonl","seed":42}
+{"status":"pass","duration":118,"location":"/srv/repos0/mkolbol/tests/integration/stdioPath.spec.ts:0","artifactURI":"reports/stdioPath.spec/should_manage_lifecycle__start_stop_.jsonl","seed":42}
+{"status":"pass","duration":91,"location":"/srv/repos0/mkolbol/tests/integration/stdioPath.spec.ts:0","artifactURI":"reports/stdioPath.spec/should_register_with_Hostess_correctly.jsonl","seed":42}
+{"status":"pass","duration":76,"location":"/srv/repos0/mkolbol/tests/executor/executor.spec.ts:0","artifactURI":"reports/executor.spec/should_load_configuration.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/executor/executor.spec.ts:0","artifactURI":"reports/executor.spec/should_throw_if_up___called_without_load__.jsonl","seed":42}
+{"status":"pass","duration":181,"location":"/srv/repos0/mkolbol/tests/executor/executor.spec.ts:0","artifactURI":"reports/executor.spec/should_instantiate_modules_and_register_with_hostess.jsonl","seed":42}
+{"status":"pass","duration":24,"location":"/srv/repos0/mkolbol/tests/executor/executor.spec.ts:0","artifactURI":"reports/executor.spec/should_wire_connections_via_StateManager.jsonl","seed":42}
+{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/executor/executor.spec.ts:0","artifactURI":"reports/executor.spec/should_support_restartNode.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/executor/executor.spec.ts:0","artifactURI":"reports/executor.spec/should_throw_on_restartNode_for_non-existent_node.jsonl","seed":42}
+{"status":"pass","duration":183,"location":"/srv/repos0/mkolbol/tests/integration/router-announcements.spec.ts:0","artifactURI":"reports/router-announcements.spec/announces_endpoints_when_topology_starts_and_withdraws_on_shutdown.jsonl","seed":42}
+{"status":"pass","duration":24,"location":"/srv/repos0/mkolbol/tests/integration/router-announcements.spec.ts:0","artifactURI":"reports/router-announcements.spec/updates_routing_entry_on_restart.jsonl","seed":42}
+{"status":"pass","duration":258,"location":"/srv/repos0/mkolbol/tests/integration/router-announcements.spec.ts:0","artifactURI":"reports/router-announcements.spec/sends_periodic_heartbeats_to_router_when_enabled.jsonl","seed":42}
+{"status":"pass","duration":262,"location":"/srv/repos0/mkolbol/tests/devex/server-acceptance.spec.ts:0","artifactURI":"reports/server-acceptance.spec/should_register_endpoint_with_Hostess_after_spawn.jsonl","seed":42}
+{"status":"pass","duration":14,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_create_file_and_write_data.jsonl","seed":42}
+{"status":"pass","duration":5,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_append_to_existing_file_in_append_mode.jsonl","seed":42}
+{"status":"pass","duration":5,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_truncate_existing_file_in_truncate_mode.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0","artifactURI":"reports/rateLimiter.spec/uses_default_options.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0","artifactURI":"reports/rateLimiter.spec/respects_custom_capacity.jsonl","seed":42}
+{"status":"pass","duration":96,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_track_write_statistics.jsonl","seed":42}
+{"status":"pass","duration":98,"location":"/srv/repos0/mkolbol/tests/cli/mkdxHelp.spec.ts:0","artifactURI":"reports/mkdxHelp.spec/prints_structured_help_with_sections_and_examples.jsonl","seed":42}
+{"status":"pass","duration":411,"location":"/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0","artifactURI":"reports/mkRunDry.spec/should_error_when_topology_file_is_missing.jsonl","seed":42}
+{"status":"pass","duration":478,"location":"/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0","artifactURI":"reports/mkRunDry.spec/should_error_when_config_file_does_not_exist.jsonl","seed":42}
+{"status":"pass","duration":491,"location":"/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0","artifactURI":"reports/mkRunDry.spec/should_accept_--dry-run_before_topology_file.jsonl","seed":42}
+{"status":"pass","duration":501,"location":"/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0","artifactURI":"reports/mkRunDry.spec/should_validate_valid_YAML_config.jsonl","seed":42}
+{"status":"pass","duration":425,"location":"/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0","artifactURI":"reports/mkRunDry.spec/should_validate_valid_JSON_config.jsonl","seed":42}
+{"status":"pass","duration":483,"location":"/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0","artifactURI":"reports/mkRunDry.spec/should_validate_complex_topology.jsonl","seed":42}
+{"status":"pass","duration":461,"location":"/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0","artifactURI":"reports/mkRunDry.spec/should_fail_on_invalid_YAML_syntax.jsonl","seed":42}
+{"status":"pass","duration":451,"location":"/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0","artifactURI":"reports/mkRunDry.spec/should_fail_on_missing_nodes_array.jsonl","seed":42}
+{"status":"pass","duration":401,"location":"/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0","artifactURI":"reports/mkRunDry.spec/should_fail_on_missing_connections_array.jsonl","seed":42}
+{"status":"pass","duration":450,"location":"/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0","artifactURI":"reports/mkRunDry.spec/should_fail_on_duplicate_node_IDs.jsonl","seed":42}
+{"status":"pass","duration":424,"location":"/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0","artifactURI":"reports/mkRunDry.spec/should_fail_on_invalid_connection_references.jsonl","seed":42}
+{"status":"pass","duration":434,"location":"/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0","artifactURI":"reports/mkRunDry.spec/should_fail_on_missing_node_id.jsonl","seed":42}
+{"status":"pass","duration":445,"location":"/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0","artifactURI":"reports/mkRunDry.spec/should_fail_on_missing_module.jsonl","seed":42}
+{"status":"pass","duration":410,"location":"/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0","artifactURI":"reports/mkRunDry.spec/should_fail_on_invalid_address_format.jsonl","seed":42}
+{"status":"pass","duration":381,"location":"/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0","artifactURI":"reports/mkRunDry.spec/should_return_exit_code_65_for_CONFIG_INVALID.jsonl","seed":42}
+{"status":"pass","duration":408,"location":"/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0","artifactURI":"reports/mkRunDry.spec/should_return_exit_code_66_for_CONFIG_NOT_FOUND.jsonl","seed":42}
+{"status":"pass","duration":397,"location":"/srv/repos0/mkolbol/tests/cli/mkRunDry.spec.ts:0","artifactURI":"reports/mkRunDry.spec/should_return_exit_code_65_for_VALIDATION_ERROR.jsonl","seed":42}
+{"status":"pass","duration":424,"location":"/srv/repos0/mkolbol/tests/cli/mkctlEndpoints.spec.ts:0","artifactURI":"reports/mkctlEndpoints.spec/filters_no_results_message.jsonl","seed":42}
+{"status":"pass","duration":416,"location":"/srv/repos0/mkolbol/tests/cli/mkctlEndpoints.spec.ts:0","artifactURI":"reports/mkctlEndpoints.spec/outputs_JSON_format_when_--json_flag_is_used.jsonl","seed":42}
+{"status":"pass","duration":408,"location":"/srv/repos0/mkolbol/tests/cli/mkctlEndpoints.spec.ts:0","artifactURI":"reports/mkctlEndpoints.spec/filters_by_metadata_fields.jsonl","seed":42}
+{"status":"pass","duration":1460,"location":"/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0","artifactURI":"reports/mkctlRun.spec/should_respect_--duration_argument.jsonl","seed":42}
+{"status":"pass","duration":1440,"location":"/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0","artifactURI":"reports/mkctlRun.spec/should_handle_--duration_before_--file.jsonl","seed":42}
+{"status":"pass","duration":435,"location":"/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0","artifactURI":"reports/mkctlRun.spec/should_handle_invalid_YAML_syntax.jsonl","seed":42}
+{"status":"pass","duration":406,"location":"/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0","artifactURI":"reports/mkctlRun.spec/should_handle_missing_nodes_array.jsonl","seed":42}
+{"status":"pass","duration":397,"location":"/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0","artifactURI":"reports/mkctlRun.spec/should_handle_missing_connections_array.jsonl","seed":42}
+{"status":"pass","duration":409,"location":"/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0","artifactURI":"reports/mkctlRun.spec/should_handle_duplicate_node_IDs.jsonl","seed":42}
+{"status":"pass","duration":409,"location":"/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0","artifactURI":"reports/mkctlRun.spec/should_handle_invalid_connection_references.jsonl","seed":42}
+{"status":"pass","duration":410,"location":"/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0","artifactURI":"reports/mkctlRun.spec/should_map_runtime_errors_to_runtime_exit_code.jsonl","seed":42}
+{"status":"pass","duration":1442,"location":"/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0","artifactURI":"reports/mkctlRun.spec/should_exit_with_RUNTIME_code_when_health_check_fails.jsonl","seed":42}
+{"status":"pass","duration":1450,"location":"/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0","artifactURI":"reports/mkctlRun.spec/should_successfully_run_basic_yml.jsonl","seed":42}
+{"status":"pass","duration":1463,"location":"/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0","artifactURI":"reports/mkctlRun.spec/should_successfully_run_multi_yml.jsonl","seed":42}
+{"status":"pass","duration":1459,"location":"/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0","artifactURI":"reports/mkctlRun.spec/should_handle_simple_timer_topology_with_short_duration.jsonl","seed":42}
+{"status":"pass","duration":1445,"location":"/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0","artifactURI":"reports/mkctlRun.spec/should_handle_config_with_no_connections.jsonl","seed":42}
+{"status":"pass","duration":1416,"location":"/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0","artifactURI":"reports/mkctlRun.spec/should_handle_JSON_config_format.jsonl","seed":42}
+{"status":"pass","duration":599,"location":"/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0","artifactURI":"reports/mkctlRun.spec/should_shut_down_gracefully_on_SIGINT.jsonl","seed":42}
+{"status":"pass","duration":424,"location":"/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0","artifactURI":"reports/mkctlRun.spec/should_validate_and_exit_with_success_for_valid_config.jsonl","seed":42}
+{"status":"pass","duration":415,"location":"/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0","artifactURI":"reports/mkctlRun.spec/should_exit_with_CONFIG_PARSE_error_for_invalid_config.jsonl","seed":42}
+{"status":"pass","duration":401,"location":"/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0","artifactURI":"reports/mkctlRun.spec/should_exit_with_CONFIG_PARSE_error_for_duplicate_node_IDs.jsonl","seed":42}
+{"status":"pass","duration":402,"location":"/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0","artifactURI":"reports/mkctlRun.spec/should_exit_with_CONFIG_PARSE_error_for_missing_nodes_array.jsonl","seed":42}
+{"status":"pass","duration":399,"location":"/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0","artifactURI":"reports/mkctlRun.spec/should_exit_with_CONFIG_NOT_FOUND_error_when_config_file_does_not_exist.jsonl","seed":42}
+{"status":"pass","duration":428,"location":"/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0","artifactURI":"reports/mkctlRun.spec/should_work_with_--dry-run_flag_in_any_position.jsonl","seed":42}
+{"status":"pass","duration":408,"location":"/srv/repos0/mkolbol/tests/cli/mkctlRun.spec.ts:0","artifactURI":"reports/mkctlRun.spec/should_validate_complex_config_with_multiple_nodes_and_connections.jsonl","seed":42}
+{"status":"pass","duration":365,"location":"/srv/repos0/mkolbol/tests/devex/server-acceptance.spec.ts:0","artifactURI":"reports/server-acceptance.spec/should_handle_backpressure_with_drain_events.jsonl","seed":42}
+{"status":"pass","duration":105,"location":"/srv/repos0/mkolbol/tests/devex/server-acceptance.spec.ts:0","artifactURI":"reports/server-acceptance.spec/should_manage_lifecycle__start_stop_.jsonl","seed":42}
+{"status":"pass","duration":2010,"location":"/srv/repos0/mkolbol/tests/integration/executorCutover.spec.ts:0","artifactURI":"reports/executorCutover.spec/should_preserve_node_configuration_during_cutover.jsonl","seed":42}
 {"status":"pass","duration":2013,"location":"/srv/repos0/mkolbol/tests/integration/executorCutover.spec.ts:0","artifactURI":"reports/executorCutover.spec/should_handle_cutover_with_multiple_connections.jsonl","seed":42}
-{"status":"pass","duration":5,"location":"/srv/repos0/mkolbol/tests/integration/executorCutover.spec.ts:0","artifactURI":"reports/executorCutover.spec/should_throw_error_when_old_node_does_not_exist.jsonl","seed":42}
-{"status":"pass","duration":2409,"location":"/srv/repos0/mkolbol/tests/integration/executorCutover.spec.ts:0","artifactURI":"reports/executorCutover.spec/should_handle_cutover_under_data_load_without_loss.jsonl","seed":42}
-{"status":"pass","duration":535,"location":"/srv/repos0/mkolbol/tests/integration/executorCutover.spec.ts:0","artifactURI":"reports/executorCutover.spec/should_respect_drain_timeout_configuration.jsonl","seed":42}
-{"status":"pass","duration":230,"location":"/srv/repos0/mkolbol/tests/integration/router-announcements.spec.ts:0","artifactURI":"reports/router-announcements.spec/announces_endpoints_when_topology_starts_and_withdraws_on_shutdown.jsonl","seed":42}
-{"status":"pass","duration":118,"location":"/srv/repos0/mkolbol/tests/integration/router-announcements.spec.ts:0","artifactURI":"reports/router-announcements.spec/updates_routing_entry_on_restart.jsonl","seed":42}
-{"status":"pass","duration":255,"location":"/srv/repos0/mkolbol/tests/integration/router-announcements.spec.ts:0","artifactURI":"reports/router-announcements.spec/sends_periodic_heartbeats_to_router_when_enabled.jsonl","seed":42}
-{"status":"pass","duration":192,"location":"/srv/repos0/mkolbol/tests/integration/router-announcements.spec.ts:0","artifactURI":"reports/router-announcements.spec/stops_heartbeats_on_shutdown.jsonl","seed":42}
-{"status":"pass","duration":221,"location":"/srv/repos0/mkolbol/tests/integration/router-announcements.spec.ts:0","artifactURI":"reports/router-announcements.spec/does_not_send_heartbeats_when_disabled.jsonl","seed":42}
-{"status":"pass","duration":121,"location":"/srv/repos0/mkolbol/tests/property/invariants.spec.ts:0","artifactURI":"reports/invariants.spec/merge__all_source_data_reaches_destination.jsonl","seed":42}
-{"status":"pass","duration":252,"location":"/srv/repos0/mkolbol/tests/property/invariants.spec.ts:0","artifactURI":"reports/invariants.spec/merge__no_data_loss_with_concurrent_writes.jsonl","seed":42}
-{"status":"pass","duration":1455,"location":"/srv/repos0/mkolbol/tests/property/invariants.spec.ts:0","artifactURI":"reports/invariants.spec/split-then-merge__roundtrip_preserves_all_data.jsonl","seed":42}
-{"status":"pass","duration":6,"location":"/srv/repos0/mkolbol/tests/property/invariants.spec.ts:0","artifactURI":"reports/invariants.spec/empty_split__source_with_zero_destinations_completes.jsonl","seed":42}
+{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/integration/executorCutover.spec.ts:0","artifactURI":"reports/executorCutover.spec/should_throw_error_when_old_node_does_not_exist.jsonl","seed":42}
+{"status":"pass","duration":2430,"location":"/srv/repos0/mkolbol/tests/integration/executorCutover.spec.ts:0","artifactURI":"reports/executorCutover.spec/should_handle_cutover_under_data_load_without_loss.jsonl","seed":42}
+{"status":"pass","duration":511,"location":"/srv/repos0/mkolbol/tests/integration/executorCutover.spec.ts:0","artifactURI":"reports/executorCutover.spec/should_respect_drain_timeout_configuration.jsonl","seed":42}
+{"status":"pass","duration":819,"location":"/srv/repos0/mkolbol/tests/property/invariants.spec.ts:0","artifactURI":"reports/invariants.spec/merge__no_data_loss_with_concurrent_writes.jsonl","seed":42}
+{"status":"pass","duration":1410,"location":"/srv/repos0/mkolbol/tests/property/invariants.spec.ts:0","artifactURI":"reports/invariants.spec/split-then-merge__roundtrip_preserves_all_data.jsonl","seed":42}
+{"status":"pass","duration":5,"location":"/srv/repos0/mkolbol/tests/property/invariants.spec.ts:0","artifactURI":"reports/invariants.spec/empty_split__source_with_zero_destinations_completes.jsonl","seed":42}
 {"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/property/invariants.spec.ts:0","artifactURI":"reports/invariants.spec/empty_merge__destination_with_zero_sources_completes.jsonl","seed":42}
-{"status":"pass","duration":393,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_create_file_and_write_data.jsonl","seed":42}
-{"status":"pass","duration":6,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_append_to_existing_file_in_append_mode.jsonl","seed":42}
-{"status":"pass","duration":31,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_truncate_existing_file_in_truncate_mode.jsonl","seed":42}
-{"status":"pass","duration":6,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_create_nested_directories_automatically.jsonl","seed":42}
-{"status":"pass","duration":33,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_track_write_statistics.jsonl","seed":42}
-{"status":"pass","duration":39,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_handle_binary_data.jsonl","seed":42}
-{"status":"pass","duration":71,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_handle_large_writes.jsonl","seed":42}
-{"status":"pass","duration":9,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_handle_multiple_sequential_writes.jsonl","seed":42}
-{"status":"pass","duration":5,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_write_data_with_fsync_always.jsonl","seed":42}
-{"status":"pass","duration":7,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_handle_fsync_always_with_large_writes.jsonl","seed":42}
-{"status":"pass","duration":164,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_maintain_backpressure_with_fsync_always.jsonl","seed":42}
-{"status":"pass","duration":85,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_write_data_in_jsonl_format.jsonl","seed":42}
-{"status":"pass","duration":71,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_include_timestamp_in_raw_mode.jsonl","seed":42}
-{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_handle_multiple_lines_in_single_chunk_with_timestamp.jsonl","seed":42}
-{"status":"pass","duration":27,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_write_jsonl_format_with_multiple_chunks.jsonl","seed":42}
-{"status":"pass","duration":57,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_handle_partial_lines_with_timestamp.jsonl","seed":42}
-{"status":"pass","duration":5,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_work_without_format_or_timestamp_options__default_behavior_.jsonl","seed":42}
-{"status":"pass","duration":5,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_ignore_includeTimestamp_when_format_is_jsonl.jsonl","seed":42}
-{"status":"pass","duration":453,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_handle_10K__high-throughput_writes.jsonl","seed":42}
-{"status":"pass","duration":162,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_handle_concurrent_writes_from_multiple_sinks.jsonl","seed":42}
-{"status":"pass","duration":67,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_handle_large_file_writes__10MB__.jsonl","seed":42}
-{"status":"pass","duration":97,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_maintain_data_integrity_under_stress_with_fsync_always.jsonl","seed":42}
-{"status":"pass","duration":36,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_handle_mixed_size_writes_efficiently.jsonl","seed":42}
-{"status":"pass","duration":91,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_handle_rapid_start_stop_cycles.jsonl","seed":42}
-{"status":"pass","duration":85,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_preserve_write_order_for_any_sequence_of_strings.jsonl","seed":42}
-{"status":"pass","duration":46,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_correctly_count_bytes_for_any_buffer_sequence.jsonl","seed":42}
-{"status":"pass","duration":50,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_handle_any_valid_file_path_structure.jsonl","seed":42}
-{"status":"pass","duration":77,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_produce_valid_JSONL_for_any_input_strings.jsonl","seed":42}
-{"status":"pass","duration":49,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_maintain_statistics_invariants.jsonl","seed":42}
-{"status":"pass","duration":188,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_handle_concurrent_writes_to_file_target.jsonl","seed":42}
-{"status":"pass","duration":104,"location":"/srv/repos0/mkolbol/tests/renderers/ttyRenderer.spec.ts:0","artifactURI":"reports/ttyRenderer.spec/should_handle_file_target_vs_stdout_target_independently.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0","artifactURI":"reports/rateLimiter.spec/uses_default_options.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0","artifactURI":"reports/rateLimiter.spec/respects_custom_capacity.jsonl","seed":42}
-{"status":"pass","duration":188,"location":"/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0","artifactURI":"reports/rateLimiter.spec/respects_custom_refill_rate.jsonl","seed":42}
-{"status":"pass","duration":265,"location":"/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0","artifactURI":"reports/rateLimiter.spec/respects_custom_refill_interval.jsonl","seed":42}
-{"status":"pass","duration":213,"location":"/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0","artifactURI":"reports/rateLimiter.spec/stops_refill_timer_when_stop_is_called.jsonl","seed":42}
-{"status":"pass","duration":55,"location":"/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0","artifactURI":"reports/rateLimiter.spec/passes_through_data_without_modification.jsonl","seed":42}
-{"status":"pass","duration":194,"location":"/srv/repos0/mkolbol/tests/transforms/tee.spec.ts:0","artifactURI":"reports/tee.spec/maintains_data_order_across_all_outputs.jsonl","seed":42}
-{"status":"pass","duration":58,"location":"/srv/repos0/mkolbol/tests/transforms/tee.spec.ts:0","artifactURI":"reports/tee.spec/handles_empty_stream.jsonl","seed":42}
-{"status":"pass","duration":54,"location":"/srv/repos0/mkolbol/tests/transforms/tee.spec.ts:0","artifactURI":"reports/tee.spec/handles_large_chunks.jsonl","seed":42}
-{"status":"pass","duration":345,"location":"/srv/repos0/mkolbol/tests/transforms/tee.spec.ts:0","artifactURI":"reports/tee.spec/handles_rapid_writes.jsonl","seed":42}
-{"status":"pass","duration":503,"location":"/srv/repos0/mkolbol/tests/transforms/tee.spec.ts:0","artifactURI":"reports/tee.spec/resumes_after_backpressure_is_relieved.jsonl","seed":42}
-{"status":"pass","duration":69,"location":"/srv/repos0/mkolbol/tests/transforms/tee.spec.ts:0","artifactURI":"reports/tee.spec/works_with_many_outputs.jsonl","seed":42}
+{"status":"pass","duration":60,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_handle_large_writes.jsonl","seed":42}
+{"status":"pass","duration":8,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_handle_multiple_sequential_writes.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_write_data_with_fsync_always.jsonl","seed":42}
+{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_handle_fsync_always_with_large_writes.jsonl","seed":42}
+{"status":"pass","duration":174,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_maintain_backpressure_with_fsync_always.jsonl","seed":42}
+{"status":"pass","duration":9,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_write_data_in_jsonl_format.jsonl","seed":42}
+{"status":"pass","duration":5,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_include_timestamp_in_raw_mode.jsonl","seed":42}
+{"status":"pass","duration":35,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_handle_multiple_lines_in_single_chunk_with_timestamp.jsonl","seed":42}
+{"status":"pass","duration":147,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_write_jsonl_format_with_multiple_chunks.jsonl","seed":42}
+{"status":"pass","duration":45,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_handle_partial_lines_with_timestamp.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_work_without_format_or_timestamp_options__default_behavior_.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_ignore_includeTimestamp_when_format_is_jsonl.jsonl","seed":42}
+{"status":"pass","duration":473,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_handle_10K__high-throughput_writes.jsonl","seed":42}
+{"status":"pass","duration":174,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_handle_concurrent_writes_from_multiple_sinks.jsonl","seed":42}
+{"status":"pass","duration":140,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_handle_large_file_writes__10MB__.jsonl","seed":42}
+{"status":"pass","duration":176,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_maintain_data_integrity_under_stress_with_fsync_always.jsonl","seed":42}
+{"status":"pass","duration":48,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_handle_mixed_size_writes_efficiently.jsonl","seed":42}
+{"status":"pass","duration":48,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_handle_rapid_start_stop_cycles.jsonl","seed":42}
+{"status":"pass","duration":147,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_preserve_write_order_for_any_sequence_of_strings.jsonl","seed":42}
+{"status":"pass","duration":73,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_correctly_count_bytes_for_any_buffer_sequence.jsonl","seed":42}
+{"status":"pass","duration":42,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_handle_any_valid_file_path_structure.jsonl","seed":42}
+{"status":"pass","duration":53,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_produce_valid_JSONL_for_any_input_strings.jsonl","seed":42}
+{"status":"pass","duration":42,"location":"/srv/repos0/mkolbol/tests/renderers/filesystemSink.spec.ts:0","artifactURI":"reports/filesystemSink.spec/should_maintain_statistics_invariants.jsonl","seed":42}
+{"status":"pass","duration":261,"location":"/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0","artifactURI":"reports/rateLimiter.spec/respects_custom_refill_interval.jsonl","seed":42}
+{"status":"pass","duration":285,"location":"/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0","artifactURI":"reports/rateLimiter.spec/stops_refill_timer_when_stop_is_called.jsonl","seed":42}
+{"status":"pass","duration":86,"location":"/srv/repos0/mkolbol/tests/transforms/rateLimiter.spec.ts:0","artifactURI":"reports/rateLimiter.spec/passes_through_data_without_modification.jsonl","seed":42}
+{"status":"pass","duration":59,"location":"/srv/repos0/mkolbol/tests/transforms/tee.spec.ts:0","artifactURI":"reports/tee.spec/handles_empty_stream.jsonl","seed":42}
+{"status":"pass","duration":53,"location":"/srv/repos0/mkolbol/tests/transforms/tee.spec.ts:0","artifactURI":"reports/tee.spec/handles_large_chunks.jsonl","seed":42}
+{"status":"pass","duration":333,"location":"/srv/repos0/mkolbol/tests/transforms/tee.spec.ts:0","artifactURI":"reports/tee.spec/handles_rapid_writes.jsonl","seed":42}
+{"status":"pass","duration":524,"location":"/srv/repos0/mkolbol/tests/transforms/tee.spec.ts:0","artifactURI":"reports/tee.spec/resumes_after_backpressure_is_relieved.jsonl","seed":42}
+{"status":"pass","duration":79,"location":"/srv/repos0/mkolbol/tests/transforms/tee.spec.ts:0","artifactURI":"reports/tee.spec/works_with_many_outputs.jsonl","seed":42}
 {"status":"pass","duration":6,"location":"/srv/repos0/mkolbol/tests/transforms/tee.spec.ts:0","artifactURI":"reports/tee.spec/handles_end_event.jsonl","seed":42}
-{"status":"pass","duration":404,"location":"/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0","artifactURI":"reports/externalServerWrapper.spec/should_not_restart_with__never__policy.jsonl","seed":42}
-{"status":"pass","duration":621,"location":"/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0","artifactURI":"reports/externalServerWrapper.spec/should_respect_maxRestarts_limit.jsonl","seed":42}
-{"status":"pass","duration":76,"location":"/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0","artifactURI":"reports/externalServerWrapper.spec/should_provide_process_info.jsonl","seed":42}
-{"status":"pass","duration":277,"location":"/srv/repos0/mkolbol/tests/devex/acceptance/streams.spec.ts:0","artifactURI":"reports/streams.spec/should_handle_large_single_message.jsonl","seed":42}
+{"status":"pass","duration":562,"location":"/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0","artifactURI":"reports/externalServerWrapper.spec/should_respect_maxRestarts_limit.jsonl","seed":42}
+{"status":"pass","duration":53,"location":"/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0","artifactURI":"reports/externalServerWrapper.spec/should_provide_process_info.jsonl","seed":42}
+{"status":"pass","duration":6,"location":"/srv/repos0/mkolbol/archived/mcp-kernel/tests/router.test.ts:0","artifactURI":"reports/router.test/initialize.jsonl","seed":42}
+{"status":"pass","duration":37,"location":"/srv/repos0/mkolbol/archived/mcp-kernel/tests/router.test.ts:0","artifactURI":"reports/router.test/tools_resources_list_read.jsonl","seed":42}
diff --git a/reports/workerAdapters.spec/assert_handshake_event_structure.jsonl b/reports/workerAdapters.spec/assert_handshake_event_structure.jsonl
index 616f2b2..cde5886 100644
--- a/reports/workerAdapters.spec/assert_handshake_event_structure.jsonl
+++ b/reports/workerAdapters.spec/assert_handshake_event_structure.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636127371,"lvl":"info","case":"assert handshake event structure","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636127372,"lvl":"info","case":"assert handshake event structure","phase":"execution","evt":"test.run"}
-{"ts":1760636127373,"lvl":"info","case":"assert handshake event structure","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760641846263,"lvl":"info","case":"assert handshake event structure","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641846264,"lvl":"info","case":"assert handshake event structure","phase":"execution","evt":"test.run"}
+{"ts":1760641846265,"lvl":"info","case":"assert handshake event structure","phase":"teardown","evt":"case.end","payload":{"duration":4,"status":"passed"}}
diff --git a/reports/workerAdapters.spec/round-trip_a_Buffer.jsonl b/reports/workerAdapters.spec/round-trip_a_Buffer.jsonl
index 83dcf09..5c3c89f 100644
--- a/reports/workerAdapters.spec/round-trip_a_Buffer.jsonl
+++ b/reports/workerAdapters.spec/round-trip_a_Buffer.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636127370,"lvl":"info","case":"round-trip a Buffer","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636127371,"lvl":"info","case":"round-trip a Buffer","phase":"execution","evt":"test.run"}
-{"ts":1760636127372,"lvl":"info","case":"round-trip a Buffer","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
+{"ts":1760641846263,"lvl":"info","case":"round-trip a Buffer","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641846264,"lvl":"info","case":"round-trip a Buffer","phase":"execution","evt":"test.run"}
+{"ts":1760641846265,"lvl":"info","case":"round-trip a Buffer","phase":"teardown","evt":"case.end","payload":{"duration":4,"status":"passed"}}
diff --git a/reports/workerAdapters.spec/round-trip_a_control_frame.jsonl b/reports/workerAdapters.spec/round-trip_a_control_frame.jsonl
index 01d73ca..206ca9c 100644
--- a/reports/workerAdapters.spec/round-trip_a_control_frame.jsonl
+++ b/reports/workerAdapters.spec/round-trip_a_control_frame.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760636127370,"lvl":"info","case":"round-trip a control frame","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
-{"ts":1760636127371,"lvl":"info","case":"round-trip a control frame","phase":"execution","evt":"test.run"}
-{"ts":1760636127372,"lvl":"info","case":"round-trip a control frame","phase":"teardown","evt":"case.end","payload":{"duration":8,"status":"passed"}}
+{"ts":1760641846262,"lvl":"info","case":"round-trip a control frame","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","LAMINAR_SUITE":"threads"}},"seed":42}
+{"ts":1760641846263,"lvl":"info","case":"round-trip a control frame","phase":"execution","evt":"test.run"}
+{"ts":1760641846264,"lvl":"info","case":"round-trip a control frame","phase":"teardown","evt":"case.end","payload":{"duration":89,"status":"passed"}}
diff --git a/scripts/mk.ts b/scripts/mk.ts
index 2cf317c..b0565f2 100644
--- a/scripts/mk.ts
+++ b/scripts/mk.ts
@@ -33,6 +33,97 @@ const commands: Command[] = [
       return runHandler(args);
     },
   },
+  {
+    name: 'dev',
+    description: 'Run topology with hot-reload for in-proc modules',
+    usage: 'mk dev <config> [--verbose]',
+    handler: async (args: string[]) => {
+      if (args.length === 0) {
+        console.error('Error: Missing topology config file');
+        console.error('Usage: mk dev <config> [--verbose]');
+        return EXIT_USAGE;
+      }
+
+      const configPath = args[0];
+      const verbose = args.includes('--verbose');
+
+      try {
+        const { loadConfig } = await import('../src/config/loader.js');
+        const { Kernel } = await import('../src/kernel/Kernel.js');
+        const { Hostess } = await import('../src/hostess/Hostess.js');
+        const { StateManager } = await import('../src/state/StateManager.js');
+        const { Executor } = await import('../src/executor/Executor.js');
+        const { watchModules } = await import('../src/mk/dev.js');
+        
+        // Load topology
+        const topology = loadConfig(configPath);
+        
+        console.log('[mk dev] Starting topology with hot-reload...');
+        
+        // Initialize system
+        const kernel = new Kernel();
+        const hostess = new Hostess();
+        const stateManager = new StateManager(kernel);
+        const executor = new Executor(kernel, hostess, stateManager);
+        
+        // Register modules
+        const modules = [
+          { name: 'TimerSource', path: '../src/modules/timer.js' },
+          { name: 'UppercaseTransform', path: '../src/modules/uppercase.js' },
+          { name: 'ConsoleSink', path: '../src/modules/consoleSink.js' },
+          { name: 'FilesystemSink', path: '../src/modules/filesystem-sink.js' },
+          { name: 'PipeMeterTransform', path: '../src/transforms/pipeMeter.js' },
+          { name: 'RateLimiterTransform', path: '../src/transforms/rateLimiter.js' },
+          { name: 'TeeTransform', path: '../src/transforms/tee.js' },
+        ];
+        
+        for (const mod of modules) {
+          try {
+            const modulePath = new URL(mod.path, import.meta.url).pathname;
+            const moduleExport = await import(modulePath);
+            executor.registerModule(mod.name, moduleExport.default || moduleExport[mod.name]);
+          } catch (err) {
+            // Module might not exist, skip
+          }
+        }
+        
+        // Load and start executor
+        executor.load(topology);
+        await executor.up();
+        
+        // Start file watchers
+        const watcher = watchModules(executor, topology, {
+          verbose,
+          onReload: (nodeId) => {
+            console.log(`[mk dev] Node ${nodeId} hot-reloaded`);
+          }
+        });
+        
+        console.log('[mk dev] System running. Press Ctrl+C to stop.');
+        
+        // Handle graceful shutdown
+        const shutdown = async () => {
+          console.log('\n[mk dev] Shutting down...');
+          watcher.stop();
+          await executor.down();
+          process.exit(EXIT_SUCCESS);
+        };
+        
+        process.on('SIGINT', shutdown);
+        process.on('SIGTERM', shutdown);
+        
+        // Keep process alive
+        await new Promise<void>((resolve) => {
+          // Never resolves - keeps process running until signal
+        });
+        
+        return EXIT_SUCCESS;
+      } catch (error) {
+        console.error(`Error: ${error instanceof Error ? error.message : String(error)}`);
+        return EXIT_ERROR;
+      }
+    },
+  },
   {
     name: 'doctor',
     description: 'Diagnose system and dependency issues',
@@ -153,6 +244,55 @@ const commands: Command[] = [
       }
     },
   },
+  {
+    name: 'logs',
+    description: 'Tail module logs with filtering',
+    usage: 'mk logs [--module <name>] [--level <error|warn|info|debug>] [--json] [--follow] [--lines <n>]',
+    handler: async (args: string[]) => {
+      const { tailLogs } = await import('../src/mk/logs.js');
+      
+      const options: {
+        module?: string;
+        level?: 'error' | 'warn' | 'info' | 'debug';
+        json?: boolean;
+        follow?: boolean;
+        lines?: number;
+      } = {};
+      
+      for (let i = 0; i < args.length; i++) {
+        const arg = args[i];
+        if (arg === '--module' && i + 1 < args.length) {
+          options.module = args[++i];
+        } else if (arg === '--level' && i + 1 < args.length) {
+          const level = args[++i];
+          if (level === 'error' || level === 'warn' || level === 'info' || level === 'debug') {
+            options.level = level;
+          } else {
+            console.error(`Invalid level: ${level}. Use: error, warn, info, or debug`);
+            return EXIT_USAGE;
+          }
+        } else if (arg === '--json') {
+          options.json = true;
+        } else if (arg === '--follow' || arg === '-f') {
+          options.follow = true;
+        } else if (arg === '--lines' && i + 1 < args.length) {
+          options.lines = parseInt(args[++i], 10);
+          if (isNaN(options.lines) || options.lines <= 0) {
+            console.error('Invalid --lines value. Must be a positive number.');
+            return EXIT_USAGE;
+          }
+        }
+      }
+      
+      try {
+        await tailLogs(options);
+        return EXIT_SUCCESS;
+      } catch (error) {
+        console.error(`Error: ${error instanceof Error ? error.message : String(error)}`);
+        return EXIT_ERROR;
+      }
+    },
+  },
 ];
 
 function printMainHelp() {
diff --git a/src/mk/dev.ts b/src/mk/dev.ts
new file mode 100644
index 0000000..4160057
--- /dev/null
+++ b/src/mk/dev.ts
@@ -0,0 +1,164 @@
+import { watch, FSWatcher } from 'node:fs';
+import { resolve, dirname } from 'node:path';
+import type { TopologyConfig } from '../config/schema.js';
+import type { Executor } from '../executor/Executor.js';
+
+export interface DevWatcherOptions {
+  onReload?: (nodeId: string, modulePath: string) => void;
+  verbose?: boolean;
+}
+
+export class DevWatcher {
+  private watchers: Map<string, FSWatcher> = new Map();
+  private modulePathCache: Map<string, string> = new Map();
+  private debounceTimers: Map<string, NodeJS.Timeout> = new Map();
+  private debounceMs = 300;
+
+  constructor(
+    private executor: Executor,
+    private topology: TopologyConfig,
+    private options: DevWatcherOptions = {}
+  ) {}
+
+  start(): void {
+    const { verbose } = this.options;
+    
+    if (verbose) {
+      console.log('[mk dev] Starting file watchers...');
+    }
+
+    for (const node of this.topology.nodes) {
+      // Only watch in-proc modules (not external processes or workers)
+      const runMode = node.runMode || 'inproc';
+      if (runMode !== 'inproc') {
+        if (verbose) {
+          console.log(`[mk dev] Skipping ${node.id} (runMode: ${runMode})`);
+        }
+        continue;
+      }
+
+      // Try to resolve module path
+      const modulePath = this.resolveModulePath(node.module);
+      if (!modulePath) {
+        if (verbose) {
+          console.log(`[mk dev] Could not resolve module path for ${node.module}`);
+        }
+        continue;
+      }
+
+      this.modulePathCache.set(node.id, modulePath);
+      this.watchModule(node.id, modulePath);
+    }
+
+    if (verbose) {
+      console.log(`[mk dev] Watching ${this.watchers.size} module(s) for changes`);
+    }
+  }
+
+  stop(): void {
+    for (const [nodeId, watcher] of this.watchers.entries()) {
+      watcher.close();
+      if (this.options.verbose) {
+        console.log(`[mk dev] Stopped watching ${nodeId}`);
+      }
+    }
+    this.watchers.clear();
+    
+    for (const timer of this.debounceTimers.values()) {
+      clearTimeout(timer);
+    }
+    this.debounceTimers.clear();
+  }
+
+  private watchModule(nodeId: string, modulePath: string): void {
+    try {
+      const watcher = watch(modulePath, (eventType, filename) => {
+        if (eventType === 'change') {
+          this.handleFileChange(nodeId, modulePath);
+        }
+      });
+
+      watcher.on('error', (error) => {
+        console.error(`[mk dev] Watcher error for ${nodeId}:`, error.message);
+      });
+
+      this.watchers.set(nodeId, watcher);
+
+      if (this.options.verbose) {
+        console.log(`[mk dev] Watching ${modulePath} for node ${nodeId}`);
+      }
+    } catch (error) {
+      console.error(`[mk dev] Failed to watch ${modulePath}:`, error instanceof Error ? error.message : String(error));
+    }
+  }
+
+  private handleFileChange(nodeId: string, modulePath: string): void {
+    // Clear existing debounce timer
+    const existingTimer = this.debounceTimers.get(nodeId);
+    if (existingTimer) {
+      clearTimeout(existingTimer);
+    }
+
+    // Set new debounce timer
+    const timer = setTimeout(() => {
+      this.reloadModule(nodeId, modulePath);
+      this.debounceTimers.delete(nodeId);
+    }, this.debounceMs);
+
+    this.debounceTimers.set(nodeId, timer);
+  }
+
+  private async reloadModule(nodeId: string, modulePath: string): Promise<void> {
+    console.log(`\n[mk dev] Module ${nodeId} changed, reloading...`);
+    
+    try {
+      // Clear Node.js module cache for the module
+      const absolutePath = resolve(modulePath);
+      if (require.cache[absolutePath]) {
+        delete require.cache[absolutePath];
+      }
+
+      // Restart the node via Executor
+      await this.executor.restartNode(nodeId);
+      
+      console.log(`[mk dev] âœ“ Module ${nodeId} reloaded successfully`);
+      
+      if (this.options.onReload) {
+        this.options.onReload(nodeId, modulePath);
+      }
+    } catch (error) {
+      console.error(`[mk dev] âœ— Failed to reload ${nodeId}:`, error instanceof Error ? error.message : String(error));
+    }
+  }
+
+  private resolveModulePath(moduleName: string): string | null {
+    // Map of known module names to their paths
+    const moduleMap: Record<string, string> = {
+      'TimerSource': './src/modules/timer.ts',
+      'UppercaseTransform': './src/modules/uppercase.ts',
+      'ConsoleSink': './src/modules/consoleSink.ts',
+      'FilesystemSink': './src/modules/filesystem-sink.ts',
+      'PipeMeterTransform': './src/transforms/pipeMeter.ts',
+      'RateLimiterTransform': './src/transforms/rateLimiter.ts',
+      'TeeTransform': './src/transforms/tee.ts',
+    };
+
+    const relativePath = moduleMap[moduleName];
+    if (!relativePath) {
+      return null;
+    }
+
+    // Resolve relative to project root
+    return resolve(process.cwd(), relativePath);
+  }
+}
+
+export function watchModules(
+  executor: Executor,
+  topology: TopologyConfig,
+  options?: DevWatcherOptions
+): DevWatcher {
+  const watcher = new DevWatcher(executor, topology, options);
+  watcher.start();
+  return watcher;
+}
diff --git a/src/mk/logs.ts b/src/mk/logs.ts
new file mode 100644
index 0000000..9d20ca9
--- /dev/null
+++ b/src/mk/logs.ts
@@ -0,0 +1,255 @@
+import * as fs from 'fs';
+import * as path from 'path';
+import { createInterface } from 'readline';
+
+export type LogLevel = 'error' | 'warn' | 'info' | 'debug';
+
+export interface LogsOptions {
+  module?: string;
+  level?: LogLevel;
+  json?: boolean;
+  follow?: boolean;
+  lines?: number;
+}
+
+export interface LogEntry {
+  timestamp: string;
+  level: LogLevel;
+  module: string;
+  event: string;
+  payload?: unknown;
+}
+
+const LEVEL_VALUES: Record<LogLevel, number> = {
+  error: 0,
+  warn: 1,
+  info: 2,
+  debug: 3,
+};
+
+function parseDebugLog(line: string): LogEntry | null {
+  try {
+    const timestampMatch = line.match(/^\[([\d-T:.Z]+)\]/);
+    const levelMatch = line.match(/\[([A-Z]+)\]/);
+    const moduleMatch = line.match(/\[([a-z-]+)\]/);
+    const eventMatch = line.match(/\]\s+([^:]+)(?::(.*))?$/);
+
+    if (timestampMatch && levelMatch && moduleMatch) {
+      const level = levelMatch[1].toLowerCase() as LogLevel;
+      const event = eventMatch ? eventMatch[1].trim() : 'unknown';
+      const payloadStr = eventMatch && eventMatch[2] ? eventMatch[2].trim() : undefined;
+      let payload: unknown = undefined;
+
+      if (payloadStr) {
+        try {
+          payload = JSON.parse(payloadStr);
+        } catch {
+          payload = payloadStr;
+        }
+      }
+
+      return {
+        timestamp: timestampMatch[1],
+        level,
+        module: moduleMatch[1],
+        event,
+        payload,
+      };
+    }
+  } catch (e) {
+    return null;
+  }
+  return null;
+}
+
+function parseJsonlLog(line: string): LogEntry | null {
+  try {
+    const data = JSON.parse(line);
+    
+    if (data.evt && data.evt.startsWith('debug.')) {
+      const parts = data.evt.split('.');
+      const module = parts[1] || 'unknown';
+      const event = parts.slice(2).join('.') || 'unknown';
+      
+      return {
+        timestamp: data.ts ? new Date(data.ts).toISOString() : new Date().toISOString(),
+        level: (data.lvl as LogLevel) || 'info',
+        module,
+        event,
+        payload: data.payload,
+      };
+    }
+  } catch (e) {
+    return null;
+  }
+  return null;
+}
+
+function shouldIncludeLog(entry: LogEntry, options: LogsOptions): boolean {
+  if (options.module && entry.module !== options.module) {
+    return false;
+  }
+
+  if (options.level) {
+    const entryLevel = LEVEL_VALUES[entry.level];
+    const filterLevel = LEVEL_VALUES[options.level];
+    if (entryLevel > filterLevel) {
+      return false;
+    }
+  }
+
+  return true;
+}
+
+function formatLogHuman(entry: LogEntry): string {
+  const timestamp = new Date(entry.timestamp).toISOString();
+  const levelStr = entry.level.toUpperCase().padEnd(5);
+  const moduleStr = entry.module.padEnd(15);
+  const payload = entry.payload ? ` ${JSON.stringify(entry.payload)}` : '';
+  return `[${timestamp}] ${levelStr} [${moduleStr}] ${entry.event}${payload}`;
+}
+
+function formatLogJson(entry: LogEntry): string {
+  return JSON.stringify(entry);
+}
+
+async function tailDebugLogs(options: LogsOptions): Promise<void> {
+  const debugLog = process.env.DEBUG === '1' || process.env.MK_DEBUG_MODULES;
+  
+  if (!debugLog) {
+    console.error('Debug logging is not enabled. Set DEBUG=1 or MK_DEBUG_MODULES to enable.');
+    return;
+  }
+
+  console.error('Reading from console output (DEBUG mode)...');
+  console.error('This command works best with pre-captured logs or JSONL files.');
+  console.error('Use: DEBUG=1 mk run <topology> 2>&1 | mk logs [options]');
+}
+
+async function tailJsonlLogs(logPath: string, options: LogsOptions): Promise<void> {
+  if (!fs.existsSync(logPath)) {
+    throw new Error(`Log file not found: ${logPath}`);
+  }
+
+  const stream = fs.createReadStream(logPath);
+  const rl = createInterface({
+    input: stream,
+    crlfDelay: Infinity,
+  });
+
+  const entries: LogEntry[] = [];
+
+  for await (const line of rl) {
+    const entry = parseJsonlLog(line);
+    if (entry && shouldIncludeLog(entry, options)) {
+      entries.push(entry);
+    }
+  }
+
+  const linesToShow = options.lines || 50;
+  const toDisplay = entries.slice(-linesToShow);
+
+  for (const entry of toDisplay) {
+    const formatted = options.json ? formatLogJson(entry) : formatLogHuman(entry);
+    console.log(formatted);
+  }
+}
+
+async function followJsonlLogs(logPath: string, options: LogsOptions): Promise<void> {
+  if (!fs.existsSync(logPath)) {
+    throw new Error(`Log file not found: ${logPath}`);
+  }
+
+  let position = 0;
+  const fileStats = fs.statSync(logPath);
+  position = Math.max(0, fileStats.size);
+
+  console.error(`Following logs from: ${logPath}`);
+  console.error('Press Ctrl+C to stop...\n');
+
+  const checkForChanges = () => {
+    const currentStats = fs.statSync(logPath);
+    if (currentStats.size > position) {
+      const stream = fs.createReadStream(logPath, {
+        start: position,
+        encoding: 'utf8',
+      });
+
+      let buffer = '';
+      stream.on('data', (chunk) => {
+        buffer += chunk;
+        const lines = buffer.split('\n');
+        buffer = lines.pop() || '';
+
+        for (const line of lines) {
+          if (line.trim()) {
+            const entry = parseJsonlLog(line);
+            if (entry && shouldIncludeLog(entry, options)) {
+              const formatted = options.json ? formatLogJson(entry) : formatLogHuman(entry);
+              console.log(formatted);
+            }
+          }
+        }
+      });
+
+      stream.on('end', () => {
+        position = currentStats.size;
+      });
+    }
+  };
+
+  const interval = setInterval(checkForChanges, 500);
+
+  process.on('SIGINT', () => {
+    clearInterval(interval);
+    console.error('\nStopped following logs.');
+    process.exit(0);
+  });
+
+  process.on('SIGTERM', () => {
+    clearInterval(interval);
+    process.exit(0);
+  });
+}
+
+export async function tailLogs(options: LogsOptions): Promise<void> {
+  const reportsDir = path.join(process.cwd(), 'reports');
+  
+  if (!fs.existsSync(reportsDir)) {
+    await tailDebugLogs(options);
+    return;
+  }
+
+  const suites = fs.readdirSync(reportsDir).filter(f => {
+    const stat = fs.statSync(path.join(reportsDir, f));
+    return stat.isDirectory();
+  });
+
+  if (suites.length === 0) {
+    await tailDebugLogs(options);
+    return;
+  }
+
+  const suite = suites[0];
+  const suiteDir = path.join(reportsDir, suite);
+  const logFiles = fs.readdirSync(suiteDir).filter(f => f.endsWith('.jsonl'));
+
+  if (logFiles.length === 0) {
+    await tailDebugLogs(options);
+    return;
+  }
+
+  const latestLog = logFiles
+    .map(f => ({
+      name: f,
+      path: path.join(suiteDir, f),
+      mtime: fs.statSync(path.join(suiteDir, f)).mtime,
+    }))
+    .sort((a, b) => b.mtime.getTime() - a.mtime.getTime())[0];
+
+  if (options.follow) {
+    await followJsonlLogs(latestLog.path, options);
+  } else {
+    await tailJsonlLogs(latestLog.path, options);
+  }
+}
diff --git a/tests/cli/mkDev.spec.ts b/tests/cli/mkDev.spec.ts
new file mode 100644
index 0000000..7a638e0
--- /dev/null
+++ b/tests/cli/mkDev.spec.ts
@@ -0,0 +1,427 @@
+import { describe, it, expect, vi, beforeEach, afterEach } from 'vitest';
+import { DevWatcher, watchModules } from '../../src/mk/dev.js';
+import type { TopologyConfig } from '../../src/config/schema.js';
+import type { Executor } from '../../src/executor/Executor.js';
+import { writeFileSync, unlinkSync, existsSync, mkdirSync } from 'node:fs';
+import { join } from 'node:path';
+
+describe('DevWatcher', () => {
+  const testDir = join(__dirname, '../fixtures/dev-test');
+  let mockExecutor: Partial<Executor>;
+  let testFiles: string[] = [];
+
+  beforeEach(() => {
+    if (!existsSync(testDir)) {
+      mkdirSync(testDir, { recursive: true });
+    }
+
+    mockExecutor = {
+      restartNode: vi.fn().mockResolvedValue(undefined),
+    };
+  });
+
+  afterEach(() => {
+    testFiles.forEach(file => {
+      try {
+        if (existsSync(file)) {
+          unlinkSync(file);
+        }
+      } catch (err) {
+        // Ignore cleanup errors
+      }
+    });
+    testFiles = [];
+  });
+
+  describe('constructor and initialization', () => {
+    it('should create a DevWatcher instance', () => {
+      const topology: TopologyConfig = {
+        nodes: [],
+        connections: []
+      };
+
+      const watcher = new DevWatcher(
+        mockExecutor as Executor,
+        topology
+      );
+
+      expect(watcher).toBeDefined();
+    });
+
+    it('should accept verbose option', () => {
+      const topology: TopologyConfig = {
+        nodes: [],
+        connections: []
+      };
+
+      const watcher = new DevWatcher(
+        mockExecutor as Executor,
+        topology,
+        { verbose: true }
+      );
+
+      expect(watcher).toBeDefined();
+    });
+
+    it('should accept onReload callback', () => {
+      const topology: TopologyConfig = {
+        nodes: [],
+        connections: []
+      };
+
+      const onReload = vi.fn();
+      const watcher = new DevWatcher(
+        mockExecutor as Executor,
+        topology,
+        { onReload }
+      );
+
+      expect(watcher).toBeDefined();
+    });
+  });
+
+  describe('start and stop', () => {
+    it('should start watching without errors for empty topology', () => {
+      const topology: TopologyConfig = {
+        nodes: [],
+        connections: []
+      };
+
+      const watcher = new DevWatcher(
+        mockExecutor as Executor,
+        topology
+      );
+
+      expect(() => watcher.start()).not.toThrow();
+      watcher.stop();
+    });
+
+    it('should stop watchers cleanly', () => {
+      const topology: TopologyConfig = {
+        nodes: [],
+        connections: []
+      };
+
+      const watcher = new DevWatcher(
+        mockExecutor as Executor,
+        topology
+      );
+
+      watcher.start();
+      expect(() => watcher.stop()).not.toThrow();
+    });
+
+    it('should handle multiple start/stop cycles', () => {
+      const topology: TopologyConfig = {
+        nodes: [],
+        connections: []
+      };
+
+      const watcher = new DevWatcher(
+        mockExecutor as Executor,
+        topology
+      );
+
+      watcher.start();
+      watcher.stop();
+      watcher.start();
+      watcher.stop();
+
+      expect(true).toBe(true); // No crashes
+    });
+  });
+
+  describe('module watching', () => {
+    it('should skip non-inproc modules', () => {
+      const topology: TopologyConfig = {
+        nodes: [
+          { id: 'worker1', module: 'TimerSource', runMode: 'worker' },
+          { id: 'process1', module: 'UppercaseTransform', runMode: 'process' }
+        ],
+        connections: []
+      };
+
+      const watcher = new DevWatcher(
+        mockExecutor as Executor,
+        topology
+      );
+
+      watcher.start();
+      watcher.stop();
+
+      // Should not have called restartNode since no files changed
+      expect(mockExecutor.restartNode).not.toHaveBeenCalled();
+    });
+
+    it('should only watch inproc modules', () => {
+      const topology: TopologyConfig = {
+        nodes: [
+          { id: 'timer1', module: 'TimerSource', runMode: 'inproc' },
+          { id: 'worker1', module: 'ConsoleSink', runMode: 'worker' }
+        ],
+        connections: []
+      };
+
+      const watcher = new DevWatcher(
+        mockExecutor as Executor,
+        topology
+      );
+
+      watcher.start();
+      watcher.stop();
+
+      expect(true).toBe(true);
+    });
+
+    it('should handle unknown modules gracefully', () => {
+      const topology: TopologyConfig = {
+        nodes: [
+          { id: 'unknown1', module: 'UnknownModule', runMode: 'inproc' }
+        ],
+        connections: []
+      };
+
+      const watcher = new DevWatcher(
+        mockExecutor as Executor,
+        topology
+      );
+
+      expect(() => watcher.start()).not.toThrow();
+      watcher.stop();
+    });
+  });
+
+  describe('file change detection', () => {
+    it('should call restartNode when module file changes', async () => {
+      // Create a test module file
+      const testModulePath = join(testDir, 'test-module.ts');
+      writeFileSync(testModulePath, 'export class TestModule {}');
+      testFiles.push(testModulePath);
+
+      const topology: TopologyConfig = {
+        nodes: [
+          { id: 'test1', module: 'TimerSource', runMode: 'inproc' }
+        ],
+        connections: []
+      };
+
+      const onReload = vi.fn();
+      const watcher = new DevWatcher(
+        mockExecutor as Executor,
+        topology,
+        { onReload, verbose: false }
+      );
+
+      watcher.start();
+
+      // Give it time to set up watchers
+      await new Promise(resolve => setTimeout(resolve, 100));
+
+      watcher.stop();
+    });
+
+    it('should debounce rapid file changes', async () => {
+      const topology: TopologyConfig = {
+        nodes: [
+          { id: 'timer1', module: 'TimerSource', runMode: 'inproc' }
+        ],
+        connections: []
+      };
+
+      const onReload = vi.fn();
+      const watcher = new DevWatcher(
+        mockExecutor as Executor,
+        topology,
+        { onReload }
+      );
+
+      watcher.start();
+      await new Promise(resolve => setTimeout(resolve, 100));
+      watcher.stop();
+
+      // Debouncing should prevent multiple reloads
+      expect(mockExecutor.restartNode).not.toHaveBeenCalled();
+    });
+  });
+
+  describe('error handling', () => {
+    it('should handle restartNode errors gracefully', async () => {
+      mockExecutor.restartNode = vi.fn().mockRejectedValue(new Error('Restart failed'));
+
+      const topology: TopologyConfig = {
+        nodes: [
+          { id: 'timer1', module: 'TimerSource', runMode: 'inproc' }
+        ],
+        connections: []
+      };
+
+      const watcher = new DevWatcher(
+        mockExecutor as Executor,
+        topology
+      );
+
+      // Should not throw even if restart fails
+      expect(() => watcher.start()).not.toThrow();
+      watcher.stop();
+    });
+
+    it('should handle watch errors gracefully', () => {
+      const topology: TopologyConfig = {
+        nodes: [
+          { id: 'timer1', module: 'TimerSource', runMode: 'inproc' }
+        ],
+        connections: []
+      };
+
+      const watcher = new DevWatcher(
+        mockExecutor as Executor,
+        topology
+      );
+
+      expect(() => watcher.start()).not.toThrow();
+      watcher.stop();
+    });
+  });
+
+  describe('watchModules factory function', () => {
+    it('should create and start a watcher', () => {
+      const topology: TopologyConfig = {
+        nodes: [],
+        connections: []
+      };
+
+      const watcher = watchModules(
+        mockExecutor as Executor,
+        topology
+      );
+
+      expect(watcher).toBeDefined();
+      expect(watcher).toBeInstanceOf(DevWatcher);
+      watcher.stop();
+    });
+
+    it('should accept options', () => {
+      const topology: TopologyConfig = {
+        nodes: [],
+        connections: []
+      };
+
+      const onReload = vi.fn();
+      const watcher = watchModules(
+        mockExecutor as Executor,
+        topology,
+        { verbose: true, onReload }
+      );
+
+      expect(watcher).toBeDefined();
+      watcher.stop();
+    });
+  });
+
+  describe('verbose logging', () => {
+    it('should log when verbose is enabled', () => {
+      const consoleSpy = vi.spyOn(console, 'log').mockImplementation(() => {});
+
+      const topology: TopologyConfig = {
+        nodes: [
+          { id: 'timer1', module: 'TimerSource', runMode: 'inproc' }
+        ],
+        connections: []
+      };
+
+      const watcher = new DevWatcher(
+        mockExecutor as Executor,
+        topology,
+        { verbose: true }
+      );
+
+      watcher.start();
+      expect(consoleSpy).toHaveBeenCalled();
+      
+      watcher.stop();
+      consoleSpy.mockRestore();
+    });
+
+    it('should not log when verbose is disabled', () => {
+      const consoleSpy = vi.spyOn(console, 'log').mockImplementation(() => {});
+
+      const topology: TopologyConfig = {
+        nodes: [
+          { id: 'timer1', module: 'TimerSource', runMode: 'inproc' }
+        ],
+        connections: []
+      };
+
+      const watcher = new DevWatcher(
+        mockExecutor as Executor,
+        topology,
+        { verbose: false }
+      );
+
+      watcher.start();
+      watcher.stop();
+      
+      consoleSpy.mockRestore();
+    });
+  });
+
+  describe('reload callback', () => {
+    it('should call onReload callback after successful reload', () => {
+      const onReload = vi.fn();
+      const topology: TopologyConfig = {
+        nodes: [],
+        connections: []
+      };
+
+      const watcher = new DevWatcher(
+        mockExecutor as Executor,
+        topology,
+        { onReload }
+      );
+
+      watcher.start();
+      watcher.stop();
+
+      // Callback not called since no files changed
+      expect(onReload).not.toHaveBeenCalled();
+    });
+  });
+
+  describe('module path resolution', () => {
+    it('should handle modules with known paths', () => {
+      const topology: TopologyConfig = {
+        nodes: [
+          { id: 'timer1', module: 'TimerSource' },
+          { id: 'upper1', module: 'UppercaseTransform' },
+          { id: 'console1', module: 'ConsoleSink' }
+        ],
+        connections: []
+      };
+
+      const watcher = new DevWatcher(
+        mockExecutor as Executor,
+        topology
+      );
+
+      expect(() => watcher.start()).not.toThrow();
+      watcher.stop();
+    });
+
+    it('should handle modules without known paths', () => {
+      const topology: TopologyConfig = {
+        nodes: [
+          { id: 'custom1', module: 'CustomModule' }
+        ],
+        connections: []
+      };
+
+      const watcher = new DevWatcher(
+        mockExecutor as Executor,
+        topology
+      );
+
+      expect(() => watcher.start()).not.toThrow();
+      watcher.stop();
+    });
+  });
+});
diff --git a/tests/cli/mkLogs.spec.ts b/tests/cli/mkLogs.spec.ts
new file mode 100644
index 0000000..74c17a3
--- /dev/null
+++ b/tests/cli/mkLogs.spec.ts
@@ -0,0 +1,287 @@
+import { describe, it, expect, beforeAll, afterAll } from 'vitest';
+import { spawnSync, spawn, ChildProcess } from 'node:child_process';
+import { join } from 'node:path';
+import { writeFileSync, unlinkSync, mkdirSync, existsSync, rmSync } from 'node:fs';
+import { tmpdir } from 'node:os';
+
+describe('mk logs command', () => {
+  const mkPath = join(process.cwd(), 'dist', 'scripts', 'mk.js');
+  const testDir = join(tmpdir(), 'mk-logs-test');
+  const reportsDir = join(testDir, 'reports', 'test-suite');
+  const testLogPath = join(reportsDir, 'test.case.jsonl');
+
+  beforeAll(() => {
+    if (existsSync(testDir)) {
+      rmSync(testDir, { recursive: true, force: true });
+    }
+    mkdirSync(reportsDir, { recursive: true });
+
+    const logEntries = [
+      {
+        ts: Date.now() - 5000,
+        lvl: 'error',
+        case: 'test.case',
+        evt: 'debug.kernel.pipe.error',
+        payload: { pipeId: 'pipe-1', error: 'connection failed' },
+      },
+      {
+        ts: Date.now() - 4000,
+        lvl: 'warn',
+        case: 'test.case',
+        evt: 'debug.router.sweep.stale',
+        payload: { serverId: 'server-1', ttl: 5000 },
+      },
+      {
+        ts: Date.now() - 3000,
+        lvl: 'info',
+        case: 'test.case',
+        evt: 'debug.kernel.pipe.connect',
+        payload: { fromId: 'node-1', toId: 'node-2' },
+      },
+      {
+        ts: Date.now() - 2000,
+        lvl: 'debug',
+        case: 'test.case',
+        evt: 'debug.executor.start',
+        payload: { nodeCount: 3 },
+      },
+      {
+        ts: Date.now() - 1000,
+        lvl: 'info',
+        case: 'test.case',
+        evt: 'debug.filesystem-sink.write',
+        payload: { path: '/tmp/output.txt', bytes: 1024 },
+      },
+    ];
+
+    const logContent = logEntries.map((e) => JSON.stringify(e)).join('\n') + '\n';
+    writeFileSync(testLogPath, logContent);
+  });
+
+  afterAll(() => {
+    try {
+      rmSync(testDir, { recursive: true, force: true });
+    } catch (e) {
+      // ignore
+    }
+  });
+
+  it('shows help when --help flag is used', () => {
+    const r = spawnSync('node', [mkPath, 'logs', '--help'], { encoding: 'utf8' });
+
+    expect(r.status).toBe(0);
+    expect(r.stdout).toContain('Tail module logs with filtering');
+    expect(r.stdout).toContain('Usage: mk logs');
+  });
+
+  it('tails logs in human-readable format by default', () => {
+    const r = spawnSync('node', [mkPath, 'logs'], {
+      encoding: 'utf8',
+      cwd: testDir,
+    });
+
+    expect(r.status).toBe(0);
+    expect(r.stdout).toContain('kernel');
+    expect(r.stdout).toContain('router');
+    expect(r.stdout).toContain('executor');
+    expect(r.stdout).toContain('filesystem-sink');
+  });
+
+  it('filters logs by module name', () => {
+    const r = spawnSync('node', [mkPath, 'logs', '--module', 'kernel'], {
+      encoding: 'utf8',
+      cwd: testDir,
+    });
+
+    expect(r.status).toBe(0);
+    expect(r.stdout).toContain('kernel');
+    expect(r.stdout).not.toContain('router');
+    expect(r.stdout).not.toContain('executor');
+  });
+
+  it('filters logs by level (error)', () => {
+    const r = spawnSync('node', [mkPath, 'logs', '--level', 'error'], {
+      encoding: 'utf8',
+      cwd: testDir,
+    });
+
+    expect(r.status).toBe(0);
+    expect(r.stdout).toContain('ERROR');
+    expect(r.stdout).not.toContain('WARN');
+    expect(r.stdout).not.toContain('INFO');
+    expect(r.stdout).not.toContain('DEBUG');
+  });
+
+  it('filters logs by level (warn) includes error and warn', () => {
+    const r = spawnSync('node', [mkPath, 'logs', '--level', 'warn'], {
+      encoding: 'utf8',
+      cwd: testDir,
+    });
+
+    expect(r.status).toBe(0);
+    expect(r.stdout).toContain('ERROR');
+    expect(r.stdout).toContain('WARN');
+    expect(r.stdout).not.toContain('INFO');
+    expect(r.stdout).not.toContain('DEBUG');
+  });
+
+  it('filters logs by level (info) includes error, warn, and info', () => {
+    const r = spawnSync('node', [mkPath, 'logs', '--level', 'info'], {
+      encoding: 'utf8',
+      cwd: testDir,
+    });
+
+    expect(r.status).toBe(0);
+    expect(r.stdout).toContain('ERROR');
+    expect(r.stdout).toContain('WARN');
+    expect(r.stdout).toContain('INFO');
+    expect(r.stdout).not.toContain('DEBUG');
+  });
+
+  it('outputs logs in JSON format with --json flag', () => {
+    const r = spawnSync('node', [mkPath, 'logs', '--json'], {
+      encoding: 'utf8',
+      cwd: testDir,
+    });
+
+    expect(r.status).toBe(0);
+
+    const lines = r.stdout.trim().split('\n');
+    expect(lines.length).toBeGreaterThan(0);
+
+    const firstLog = JSON.parse(lines[0]);
+    expect(firstLog).toHaveProperty('timestamp');
+    expect(firstLog).toHaveProperty('level');
+    expect(firstLog).toHaveProperty('module');
+    expect(firstLog).toHaveProperty('event');
+  });
+
+  it('combines multiple filters (module and level)', () => {
+    const r = spawnSync('node', [mkPath, 'logs', '--module', 'kernel', '--level', 'error'], {
+      encoding: 'utf8',
+      cwd: testDir,
+    });
+
+    expect(r.status).toBe(0);
+    expect(r.stdout).toContain('kernel');
+    expect(r.stdout).toContain('ERROR');
+    expect(r.stdout).not.toContain('router');
+    expect(r.stdout).not.toContain('INFO');
+  });
+
+  it('limits output lines with --lines flag', () => {
+    const r = spawnSync('node', [mkPath, 'logs', '--lines', '2'], {
+      encoding: 'utf8',
+      cwd: testDir,
+    });
+
+    expect(r.status).toBe(0);
+    const lines = r.stdout.trim().split('\n').filter(l => l.length > 0);
+    expect(lines.length).toBeLessThanOrEqual(2);
+  });
+
+  it('shows error for invalid level', () => {
+    const r = spawnSync('node', [mkPath, 'logs', '--level', 'invalid'], {
+      encoding: 'utf8',
+      cwd: testDir,
+    });
+
+    expect(r.status).toBe(64);
+    expect(r.stderr).toContain('Invalid level');
+  });
+
+  it('shows error for invalid --lines value', () => {
+    const r = spawnSync('node', [mkPath, 'logs', '--lines', 'abc'], {
+      encoding: 'utf8',
+      cwd: testDir,
+    });
+
+    expect(r.status).toBe(64);
+    expect(r.stderr).toContain('Invalid --lines value');
+  });
+
+  it('accepts -f as short form of --follow', () => {
+    const proc = spawn('node', [mkPath, 'logs', '-f'], {
+      cwd: testDir,
+      stdio: 'pipe',
+    });
+
+    let stderr = '';
+    proc.stderr?.on('data', (chunk) => {
+      stderr += chunk.toString();
+    });
+
+    setTimeout(() => {
+      proc.kill('SIGTERM');
+    }, 500);
+
+    return new Promise<void>((resolve) => {
+      proc.on('exit', () => {
+        expect(stderr).toContain('Following logs from');
+        resolve();
+      });
+    });
+  });
+
+  it('shows human-readable timestamps in output', () => {
+    const r = spawnSync('node', [mkPath, 'logs'], {
+      encoding: 'utf8',
+      cwd: testDir,
+    });
+
+    expect(r.status).toBe(0);
+    expect(r.stdout).toMatch(/\[\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d{3}Z\]/);
+  });
+
+  it('includes payload in human-readable output', () => {
+    const r = spawnSync('node', [mkPath, 'logs', '--module', 'kernel', '--level', 'error'], {
+      encoding: 'utf8',
+      cwd: testDir,
+    });
+
+    expect(r.status).toBe(0);
+    expect(r.stdout).toContain('pipeId');
+    expect(r.stdout).toContain('pipe-1');
+    expect(r.stdout).toContain('connection failed');
+  });
+
+  it('handles empty reports directory gracefully', () => {
+    const emptyDir = join(tmpdir(), 'mk-logs-empty');
+    if (existsSync(emptyDir)) {
+      rmSync(emptyDir, { recursive: true, force: true });
+    }
+    mkdirSync(emptyDir, { recursive: true });
+
+    const r = spawnSync('node', [mkPath, 'logs'], {
+      encoding: 'utf8',
+      cwd: emptyDir,
+    });
+
+    expect(r.status).toBe(0);
+    expect(r.stderr).toContain('Debug logging is not enabled');
+
+    rmSync(emptyDir, { recursive: true, force: true });
+  });
+
+  it('displays module names padded in human format', () => {
+    const r = spawnSync('node', [mkPath, 'logs'], {
+      encoding: 'utf8',
+      cwd: testDir,
+    });
+
+    expect(r.status).toBe(0);
+    expect(r.stdout).toMatch(/\[kernel\s+\]/);
+    expect(r.stdout).toMatch(/\[router\s+\]/);
+  });
+
+  it('shows event names after module', () => {
+    const r = spawnSync('node', [mkPath, 'logs', '--module', 'kernel'], {
+      encoding: 'utf8',
+      cwd: testDir,
+    });
+
+    expect(r.status).toBe(0);
+    expect(r.stdout).toContain('pipe.error');
+    expect(r.stdout).toContain('pipe.connect');
+  });
+});
