diff --git a/src/transport/unix/UnixControlAdapter.ts b/src/transport/unix/UnixControlAdapter.ts
index f45aab9..ef666f7 100644
--- a/src/transport/unix/UnixControlAdapter.ts
+++ b/src/transport/unix/UnixControlAdapter.ts
@@ -73,8 +73,16 @@ export class UnixControlAdapter implements ProcessControlAdapter {
       }
     });
 
-    socket.on('error', () => {
-      // Suppress errors during shutdown
+    socket.on('error', (err) => {
+      if (!this.closed) {
+        this.handleIncoming('control.error', { error: err.message });
+      }
+    });
+
+    socket.on('close', () => {
+      if (!this.closed) {
+        this.handleIncoming('control.close', {});
+      }
     });
   }
 
@@ -95,7 +103,10 @@ export class UnixControlAdapter implements ProcessControlAdapter {
     const payload = JSON.stringify(msg) + '\n';
 
     try {
-      this.socket.write(payload);
+      const canContinue = this.socket.write(payload);
+      if (!canContinue) {
+        this.socket.once('drain', () => {});
+      }
     } catch {
       // Ignore write errors
     }
diff --git a/src/transport/unix/UnixPipeAdapter.ts b/src/transport/unix/UnixPipeAdapter.ts
index 86cf5dc..ec715f6 100644
--- a/src/transport/unix/UnixPipeAdapter.ts
+++ b/src/transport/unix/UnixPipeAdapter.ts
@@ -52,18 +52,12 @@ class UnixPipeAdapterDuplex extends Duplex {
     encoding: BufferEncoding,
     callback: (error?: Error | null) => void
   ): void {
-    const canContinue = this.socket.write(chunk, encoding, (err) => {
-      if (err) {
-        callback(err);
-      }
-    });
+    const canContinue = this.socket.write(chunk, encoding);
 
     if (canContinue) {
       callback();
     } else {
-      this.socket.once('drain', () => {
-        callback();
-      });
+      this.socket.once('drain', callback);
     }
   }
 
