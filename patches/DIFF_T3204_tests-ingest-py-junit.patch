diff --git a/README.md b/README.md
index 4573427..dac9543 100644
--- a/README.md
+++ b/README.md
@@ -386,6 +386,14 @@ Laminar can import test results from external languages and frameworks:
 # Import Go test results
 lam ingest --go --from-file go-test-output.json
 lam ingest --go --cmd "go test -json ./..."
+
+# Import Pytest results
+lam ingest --py --from-file pytest-report.json
+lam ingest --pytest --cmd "pytest --json-report --json-report-file=/dev/stdout"
+
+# Import JUnit XML results
+lam ingest --junit --from-file junit-results.xml
+lam ingest --junit --cmd "mvn test"
 ```
 
 Ingested tests integrate with all Laminar features (`logq`, `lam digest`, `lam show`). See [docs/testing/laminar.md](docs/testing/laminar.md#cross-language-test-ingest) for complete workflow examples and CI integration.
diff --git a/dist/mcp/laminar/server.d.ts b/dist/mcp/laminar/server.d.ts
index e3c87e3..70c48c4 100644
--- a/dist/mcp/laminar/server.d.ts
+++ b/dist/mcp/laminar/server.d.ts
@@ -1,4 +1,4 @@
-import { DigestEvent, DigestOutput, DigestConfig, DigestRule } from '../../digest/generator.js';
+import { DigestEvent, DigestOutput, DigestConfig, DigestRule, SuspectEvent } from '../../digest/generator.js';
 export type Json = null | boolean | number | string | Json[] | {
     [k: string]: Json;
 };
@@ -115,6 +115,36 @@ export interface LogsCaseGetInput {
 export interface LogsCaseGetOutput {
     logs: string;
 }
+export interface DiffGetInput {
+    digest1Path: string;
+    digest2Path: string;
+    outputFormat?: 'json' | 'markdown';
+}
+export interface DiffGetOutput {
+    diff: {
+        addedEvents: DigestEvent[];
+        removedEvents: DigestEvent[];
+        changedSuspects: {
+            added: SuspectEvent[];
+            removed: SuspectEvent[];
+        };
+        summary: {
+            totalAddedEvents: number;
+            totalRemovedEvents: number;
+            totalChangedSuspects: number;
+        };
+    };
+    formatted?: string;
+}
+export interface ReproBundleInput {
+    caseName?: string;
+    format?: 'json' | 'markdown';
+}
+export interface ReproBundleOutput {
+    bundlePath?: string;
+    bundlePaths?: string[];
+    summary: string;
+}
 export interface ReproInput {
     caseName?: string;
 }
@@ -150,6 +180,8 @@ export declare class LaminarMcpServer {
     private validateQueryLogsInput;
     private validateGetDigestInput;
     private validateListFailuresInput;
+    private validateDiffGetInput;
+    private validateReproBundleInput;
     listResources(): McpResource[];
     listTools(): McpTool[];
     readResource(uri: string): Promise<string | null>;
@@ -172,6 +204,9 @@ export declare class LaminarMcpServer {
     private focusOverlaySet;
     private focusOverlayClear;
     private focusOverlayGet;
+    private diffGet;
+    private formatDiffAsMarkdown;
+    private reproBundle;
     start(): Promise<void>;
 }
 export declare function createLaminarServer(config?: McpServerConfig): Promise<LaminarMcpServer>;
diff --git a/dist/mcp/laminar/server.d.ts.map b/dist/mcp/laminar/server.d.ts.map
index 72863ef..b398317 100644
--- a/dist/mcp/laminar/server.d.ts.map
+++ b/dist/mcp/laminar/server.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"server.d.ts","sourceRoot":"","sources":["../../../src/mcp/laminar/server.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"server.d.ts","sourceRoot":"","sources":["../../../src/mcp/laminar/server.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/mcp/laminar/server.js b/dist/mcp/laminar/server.js
index 10849d0..c264226 100644
--- a/dist/mcp/laminar/server.js
+++ b/dist/mcp/laminar/server.js
@@ -100,6 +100,52 @@ export class LaminarMcpServer {
         }
         return {};
     }
+    validateDiffGetInput(input) {
+        if (typeof input !== 'object' || input === null) {
+            throw new McpError(McpErrorCode.INVALID_INPUT, 'Input must be an object', { received: typeof input });
+        }
+        const params = input;
+        if (!params.digest1Path || typeof params.digest1Path !== 'string') {
+            throw new McpError(McpErrorCode.INVALID_INPUT, 'digest1Path is required and must be a string', { received: params.digest1Path });
+        }
+        if (!params.digest2Path || typeof params.digest2Path !== 'string') {
+            throw new McpError(McpErrorCode.INVALID_INPUT, 'digest2Path is required and must be a string', { received: params.digest2Path });
+        }
+        if (params.outputFormat !== undefined) {
+            if (typeof params.outputFormat !== 'string') {
+                throw new McpError(McpErrorCode.INVALID_INPUT, 'outputFormat must be a string', { received: typeof params.outputFormat });
+            }
+            if (params.outputFormat !== 'json' && params.outputFormat !== 'markdown') {
+                throw new McpError(McpErrorCode.INVALID_INPUT, 'outputFormat must be either "json" or "markdown"', { received: params.outputFormat });
+            }
+        }
+        return {
+            digest1Path: params.digest1Path,
+            digest2Path: params.digest2Path,
+            outputFormat: params.outputFormat,
+        };
+    }
+    validateReproBundleInput(input) {
+        if (typeof input !== 'object' || input === null) {
+            throw new McpError(McpErrorCode.INVALID_INPUT, 'Input must be an object', { received: typeof input });
+        }
+        const params = input;
+        if (params.caseName !== undefined && typeof params.caseName !== 'string') {
+            throw new McpError(McpErrorCode.INVALID_INPUT, 'caseName must be a string', { received: typeof params.caseName });
+        }
+        if (params.format !== undefined) {
+            if (typeof params.format !== 'string') {
+                throw new McpError(McpErrorCode.INVALID_INPUT, 'format must be a string', { received: typeof params.format });
+            }
+            if (params.format !== 'json' && params.format !== 'markdown') {
+                throw new McpError(McpErrorCode.INVALID_INPUT, 'format must be either "json" or "markdown"', { received: params.format });
+            }
+        }
+        return {
+            caseName: params.caseName,
+            format: params.format,
+        };
+    }
     listResources() {
         const resources = [];
         if (fs.existsSync(this.summaryFile)) {
@@ -317,6 +363,49 @@ export class LaminarMcpServer {
                     properties: {},
                 },
             },
+            {
+                name: 'diff.get',
+                description: 'Compare two digest files and return differences',
+                inputSchema: {
+                    type: 'object',
+                    properties: {
+                        digest1Path: {
+                            type: 'string',
+                            description: 'Path to first digest file',
+                        },
+                        digest2Path: {
+                            type: 'string',
+                            description: 'Path to second digest file',
+                        },
+                        outputFormat: {
+                            type: 'string',
+                            description: 'Output format: json or markdown (default: json)',
+                            enum: ['json', 'markdown'],
+                            default: 'json',
+                        },
+                    },
+                    required: ['digest1Path', 'digest2Path'],
+                },
+            },
+            {
+                name: 'repro.bundle',
+                description: 'Generate repro bundle with logs and digests',
+                inputSchema: {
+                    type: 'object',
+                    properties: {
+                        caseName: {
+                            type: 'string',
+                            description: 'Specific case name to bundle (optional, all failures if omitted)',
+                        },
+                        format: {
+                            type: 'string',
+                            description: 'Bundle format: json or markdown (default: json)',
+                            enum: ['json', 'markdown'],
+                            default: 'json',
+                        },
+                    },
+                },
+            },
         ];
     }
     async readResource(uri) {
@@ -367,6 +456,16 @@ export class LaminarMcpServer {
                     return (await this.focusOverlayClear(args));
                 case 'focus.overlay.get':
                     return (await this.focusOverlayGet(args));
+                case 'diff.get': {
+                    const input = this.validateDiffGetInput(args);
+                    const result = await this.diffGet(input);
+                    return result;
+                }
+                case 'repro.bundle': {
+                    const input = this.validateReproBundleInput(args);
+                    const result = await this.reproBundle(input);
+                    return result;
+                }
                 default:
                     throw new McpError(McpErrorCode.TOOL_NOT_FOUND, `Unknown tool: ${name}`, { tool: name });
             }
@@ -686,6 +785,201 @@ export class LaminarMcpServer {
         const rules = generator.getOverlayRules();
         return { rules };
     }
+    async diffGet(params) {
+        const { digest1Path, digest2Path, outputFormat = 'json' } = params;
+        if (!fs.existsSync(digest1Path)) {
+            throw new McpError(McpErrorCode.RESOURCE_NOT_FOUND, `Digest file not found: ${digest1Path}`, { path: digest1Path });
+        }
+        if (!fs.existsSync(digest2Path)) {
+            throw new McpError(McpErrorCode.RESOURCE_NOT_FOUND, `Digest file not found: ${digest2Path}`, { path: digest2Path });
+        }
+        try {
+            const digest1Content = fs.readFileSync(digest1Path, 'utf-8');
+            const digest2Content = fs.readFileSync(digest2Path, 'utf-8');
+            const digest1 = JSON.parse(digest1Content);
+            const digest2 = JSON.parse(digest2Content);
+            const eventMap1 = new Map(digest1.events.map(e => [e.id || `${e.ts}-${e.evt}`, e]));
+            const eventMap2 = new Map(digest2.events.map(e => [e.id || `${e.ts}-${e.evt}`, e]));
+            const addedEvents = [];
+            const removedEvents = [];
+            for (const [id, event] of eventMap2) {
+                if (!eventMap1.has(id)) {
+                    addedEvents.push(event);
+                }
+            }
+            for (const [id, event] of eventMap1) {
+                if (!eventMap2.has(id)) {
+                    removedEvents.push(event);
+                }
+            }
+            const suspectMap1 = new Map((digest1.suspects || []).map(s => [s.id || `${s.ts}-${s.evt}`, s]));
+            const suspectMap2 = new Map((digest2.suspects || []).map(s => [s.id || `${s.ts}-${s.evt}`, s]));
+            const addedSuspects = [];
+            const removedSuspects = [];
+            for (const [id, suspect] of suspectMap2) {
+                if (!suspectMap1.has(id)) {
+                    addedSuspects.push(suspect);
+                }
+            }
+            for (const [id, suspect] of suspectMap1) {
+                if (!suspectMap2.has(id)) {
+                    removedSuspects.push(suspect);
+                }
+            }
+            const diff = {
+                addedEvents,
+                removedEvents,
+                changedSuspects: {
+                    added: addedSuspects,
+                    removed: removedSuspects,
+                },
+                summary: {
+                    totalAddedEvents: addedEvents.length,
+                    totalRemovedEvents: removedEvents.length,
+                    totalChangedSuspects: addedSuspects.length + removedSuspects.length,
+                },
+            };
+            if (outputFormat === 'markdown') {
+                const formatted = this.formatDiffAsMarkdown(diff, digest1, digest2);
+                return { diff, formatted };
+            }
+            return { diff };
+        }
+        catch (error) {
+            throw new McpError(McpErrorCode.PARSE_ERROR, `Failed to parse digest files: ${error instanceof Error ? error.message : String(error)}`, { digest1Path, digest2Path });
+        }
+    }
+    formatDiffAsMarkdown(diff, digest1, digest2) {
+        const lines = [];
+        lines.push('# Digest Diff Report\n');
+        lines.push(`**Digest 1:** ${digest1.case}`);
+        lines.push(`**Digest 2:** ${digest2.case}\n`);
+        lines.push('## Summary\n');
+        lines.push(`- Added Events: ${diff.summary.totalAddedEvents}`);
+        lines.push(`- Removed Events: ${diff.summary.totalRemovedEvents}`);
+        lines.push(`- Changed Suspects: ${diff.summary.totalChangedSuspects}\n`);
+        if (diff.addedEvents.length > 0) {
+            lines.push('## Added Events\n');
+            for (const event of diff.addedEvents) {
+                lines.push(`- [${event.lvl}] ${event.evt} (ts: ${event.ts})`);
+            }
+            lines.push('');
+        }
+        if (diff.removedEvents.length > 0) {
+            lines.push('## Removed Events\n');
+            for (const event of diff.removedEvents) {
+                lines.push(`- [${event.lvl}] ${event.evt} (ts: ${event.ts})`);
+            }
+            lines.push('');
+        }
+        if (diff.changedSuspects.added.length > 0) {
+            lines.push('## Added Suspects\n');
+            for (const suspect of diff.changedSuspects.added) {
+                lines.push(`- [${suspect.lvl}] ${suspect.evt} (score: ${suspect.score})`);
+                lines.push(`  Reasons: ${suspect.reasons.join(', ')}`);
+            }
+            lines.push('');
+        }
+        if (diff.changedSuspects.removed.length > 0) {
+            lines.push('## Removed Suspects\n');
+            for (const suspect of diff.changedSuspects.removed) {
+                lines.push(`- [${suspect.lvl}] ${suspect.evt} (score: ${suspect.score})`);
+                lines.push(`  Reasons: ${suspect.reasons.join(', ')}`);
+            }
+            lines.push('');
+        }
+        return lines.join('\n');
+    }
+    async reproBundle(params) {
+        const { caseName, format = 'json' } = params;
+        if (!fs.existsSync(this.summaryFile)) {
+            return {
+                summary: 'No summary.jsonl found',
+            };
+        }
+        const content = fs.readFileSync(this.summaryFile, 'utf-8');
+        const lines = content.trim().split('\n').filter(Boolean);
+        const entries = lines.map(line => JSON.parse(line));
+        let failures = entries.filter(entry => entry.status === 'fail');
+        if (caseName) {
+            failures = failures.filter(f => {
+                const failCaseName = f.artifactURI ? path.basename(f.artifactURI, '.jsonl') : '';
+                return failCaseName === caseName;
+            });
+        }
+        if (failures.length === 0) {
+            return {
+                summary: caseName
+                    ? `No failures found for case: ${caseName}`
+                    : 'No failures found',
+            };
+        }
+        const bundleDir = path.join(this.reportsDir, 'bundles', Date.now().toString());
+        fs.mkdirSync(bundleDir, { recursive: true });
+        const bundlePaths = [];
+        for (const failure of failures) {
+            const failCaseName = failure.artifactURI ? path.basename(failure.artifactURI, '.jsonl') : '';
+            const caseDir = path.join(bundleDir, failCaseName);
+            fs.mkdirSync(caseDir, { recursive: true });
+            const logPath = this.findLogPath(failCaseName);
+            if (logPath && fs.existsSync(logPath)) {
+                const logDest = path.join(caseDir, `${failCaseName}.jsonl`);
+                fs.copyFileSync(logPath, logDest);
+            }
+            const digestPath = this.findDigestPath(failCaseName);
+            if (digestPath && fs.existsSync(digestPath)) {
+                const digestDest = path.join(caseDir, `${failCaseName}.digest.json`);
+                fs.copyFileSync(digestPath, digestDest);
+            }
+            const metaPath = path.join(caseDir, 'meta.json');
+            fs.writeFileSync(metaPath, JSON.stringify({
+                caseName: failCaseName,
+                status: failure.status,
+                duration: failure.duration,
+                location: failure.location,
+                error: failure.error,
+                testName: failure.testName,
+            }, null, 2));
+            bundlePaths.push(caseDir);
+        }
+        const manifestPath = path.join(bundleDir, 'manifest.json');
+        fs.writeFileSync(manifestPath, JSON.stringify({
+            generated: new Date().toISOString(),
+            caseName,
+            totalCases: failures.length,
+            cases: failures.map(f => ({
+                caseName: f.artifactURI ? path.basename(f.artifactURI, '.jsonl') : '',
+                status: f.status,
+                duration: f.duration,
+                location: f.location,
+            })),
+        }, null, 2));
+        if (format === 'markdown') {
+            const readmePath = path.join(bundleDir, 'README.md');
+            const readmeLines = [];
+            readmeLines.push('# Repro Bundle\n');
+            readmeLines.push(`Generated: ${new Date().toISOString()}\n`);
+            readmeLines.push(`Total Cases: ${failures.length}\n`);
+            readmeLines.push('## Cases\n');
+            for (const failure of failures) {
+                const failCaseName = failure.artifactURI ? path.basename(failure.artifactURI, '.jsonl') : '';
+                readmeLines.push(`### ${failCaseName}\n`);
+                readmeLines.push(`- Status: ${failure.status}`);
+                readmeLines.push(`- Duration: ${failure.duration}ms`);
+                readmeLines.push(`- Location: ${failure.location}`);
+                if (failure.error) {
+                    readmeLines.push(`- Error: ${failure.error}`);
+                }
+                readmeLines.push('');
+            }
+            fs.writeFileSync(readmePath, readmeLines.join('\n'));
+        }
+        return {
+            bundlePath: bundleDir,
+            bundlePaths,
+            summary: `Created bundle with ${failures.length} case(s) at ${bundleDir}`,
+        };
+    }
     async start() {
         console.log('Laminar MCP Server started');
         console.log(`Reports directory: ${this.reportsDir}`);
diff --git a/dist/mcp/laminar/server.js.map b/dist/mcp/laminar/server.js.map
index 62b3f23..a53e1d4 100644
--- a/dist/mcp/laminar/server.js.map
+++ b/dist/mcp/laminar/server.js.map
@@ -1 +1 @@
-{"version":3,"file":"server.js","sourceRoot":"","sources":["../../../src/mcp/laminar/server.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"server.js","sourceRoot":"","sources":["../../../src/mcp/laminar/server.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/docs/testing/laminar.md b/docs/testing/laminar.md
index e84dea0..e1dcd1a 100644
--- a/docs/testing/laminar.md
+++ b/docs/testing/laminar.md
@@ -248,6 +248,87 @@ The `lam` CLI provides comprehensive test management and analysis capabilities.
 
 #### Integration
 - `lam ingest --go [--from-file <path> | --cmd "<command>"]` — ingest Go test results
+- `lam ingest --pytest [--from-file <path> | --cmd "<command>"]` — ingest pytest JSON results
+- `lam ingest --junit <file>` — ingest JUnit XML test results
+
+### lam ingest — Cross-Language Test Integration
+
+Converts test results from other frameworks into Laminar JSONL format.
+
+#### Pytest Integration
+
+Ingest pytest JSON reports (generated via `pytest-json-report` plugin):
+
+**Installation:**
+```bash
+pip install pytest-json-report
+```
+
+**Generate pytest JSON report:**
+```bash
+pytest --json-report --json-report-file=report.json
+```
+
+**Ingest into Laminar:**
+```bash
+# From file
+lam ingest --pytest --from-file report.json
+
+# From command
+lam ingest --pytest --cmd "pytest --json-report --json-report-file=/dev/stdout"
+```
+
+**Mapping:**
+- `outcome: passed` → `status: pass`
+- `outcome: failed` → `status: fail`
+- `outcome: error` → `status: error`
+- `outcome: skipped/xfailed/xpassed` → `status: skip`
+
+**Extracted data:**
+- Test names from `nodeid` field
+- Durations from `setup`, `call`, `teardown` stages (converted from seconds to milliseconds)
+- Error messages from `crash.message` or `longrepr`
+- Stack traces from `traceback` array
+- Standard output/error from `stdout`/`stderr` fields
+
+**Generated events:**
+- `case.begin` — test start (with keywords, line numbers)
+- `test.setup.{outcome}` — setup phase result
+- `test.run` — test execution start
+- `test.output` — captured stdout during test
+- `test.stderr` — captured stderr during test
+- `test.call.{outcome}` — test call phase result
+- `test.error` — error details (message + stack trace)
+- `test.teardown.{outcome}` — teardown phase result
+- `case.end` — test completion (with duration, status)
+
+**Example workflow:**
+```bash
+# Run pytest with JSON report
+pytest --json-report --json-report-file=pytest-report.json
+
+# Ingest into Laminar
+lam ingest --pytest --from-file pytest-report.json
+
+# Analyze failures
+lam summary
+lam digest
+```
+
+#### Go Integration
+
+Ingest Go test JSON output (generated via `go test -json`):
+
+**Usage:**
+```bash
+# From file
+lam ingest --go --from-file go-test.json
+
+# From command
+lam ingest --go --cmd "go test -json ./..."
+```
+
+See `scripts/ingest-go.ts` for implementation details.
 
 ### lam trends — Failure Trend Analysis
 
@@ -361,6 +442,83 @@ LAMINAR_DEBUG=1 npm test
 ```
 Writes debug events to `reports/<suite>/<case>.jsonl` alongside test events, using the same envelope schema.
 
+## Cross-Language Test Ingestion
+
+Laminar supports ingesting test results from multiple languages and frameworks through standardized adapters.
+
+### JUnit XML Adapter
+
+Convert JUnit XML output (used by Maven, Gradle, Jest, pytest, and many other tools) to Laminar JSONL format.
+
+**Supported Sources:**
+- Java (Maven Surefire, Gradle Test)
+- JavaScript/TypeScript (Jest with `jest-junit` reporter)
+- Python (pytest with `--junit-xml`)
+- C# (NUnit, xUnit with JUnit output)
+- Any tool that produces JUnit XML format
+
+**Usage:**
+```bash
+# From file
+npm run ingest:junit tests/results/junit.xml
+
+# From stdin (pipeline)
+cat test-output.xml | npm run ingest:junit -
+
+# Jest example
+jest --reporters=jest-junit
+npm run ingest:junit junit.xml
+```
+
+**Output Structure:**
+- `reports/<suite>/<test>.jsonl` — Per-test event streams
+- `reports/summary.jsonl` — Test summaries with status/duration/location
+
+**JUnit → Laminar Mapping:**
+- `<testcase>` → Laminar test case
+- `<failure>` → `test.error` event with `lvl: 'error'`
+- `<error>` → `test.error` event with stack trace
+- `<skipped>` → `test.skip` event
+- `time` attribute → `duration` in milliseconds
+- `classname` → `location` field
+
+**Event Lifecycle:**
+1. `case.begin` (phase: setup) — Test starts
+2. `test.run` (phase: execution) — Test executing
+3. `test.error` (if failed/error) — Failure details with stack
+4. `test.skip` (if skipped) — Skip reason
+5. `case.end` (phase: teardown) — Test completes with status
+
+**Example JUnit XML:**
+```xml
+<testsuites>
+  <testsuite name="math-tests" tests="2" failures="1" time="0.045">
+    <testcase classname="math-tests" name="addition works" time="0.005"/>
+    <testcase classname="math-tests" name="division fails" time="0.012">
+      <failure message="Expected 2 but got 3" type="AssertionError">
+AssertionError: Expected 2 but got 3
+    at tests/math.spec.js:45:5
+      </failure>
+    </testcase>
+  </testsuite>
+</testsuites>
+```
+
+**Generated Laminar Events:**
+```jsonl
+{"ts":1760290661027,"lvl":"info","case":"math-tests/addition works","phase":"setup","evt":"case.begin","payload":{"suite":"math-tests","classname":"math-tests","testName":"addition works"}}
+{"ts":1760290661028,"lvl":"info","case":"math-tests/addition works","phase":"execution","evt":"test.run"}
+{"ts":1760290661032,"lvl":"info","case":"math-tests/addition works","phase":"teardown","evt":"case.end","payload":{"duration":5,"status":"passed"}}
+{"ts":1760290661042,"lvl":"info","case":"math-tests/division fails","phase":"setup","evt":"case.begin","payload":{"suite":"math-tests","classname":"math-tests","testName":"division fails"}}
+{"ts":1760290661043,"lvl":"info","case":"math-tests/division fails","phase":"execution","evt":"test.run"}
+{"ts":1760290661052,"lvl":"error","case":"math-tests/division fails","phase":"execution","evt":"test.error","payload":{"message":"Expected 2 but got 3","type":"AssertionError","stack":"AssertionError: Expected 2 but got 3\n    at tests/math.spec.js:45:5"}}
+{"ts":1760290661054,"lvl":"error","case":"math-tests/division fails","phase":"teardown","evt":"case.end","payload":{"duration":12,"status":"failed"}}
+```
+
+### Go Test Adapter
+
+Ingest Go test JSON output (see `lam ingest --go` above).
+
 ## Test Types
 - Unit: adapters and small modules
 - Component: module + adapters (inproc/worker/process)
diff --git a/package.json b/package.json
index 4bddf21..5776b82 100644
--- a/package.json
+++ b/package.json
@@ -37,6 +37,8 @@
     "laminar:run": "tsx scripts/laminar-run.ts",
     "laminar:digest": "tsx scripts/digest.ts",
     "ingest:go": "tsx scripts/ingest-go.ts",
+    "ingest:pytest": "tsx scripts/ingest-pytest.ts",
+    "ingest:junit": "tsx scripts/ingest-junit.ts",
     "dev": "node --enable-source-maps dist/examples/basic-topology.js",
     "dev:split": "node --enable-source-maps dist/examples/split-topology.js",
     "dev:merge": "node --enable-source-maps dist/examples/merge-topology.js",
diff --git a/patches/DIFF_T3201_ingest-pytest.patch b/patches/DIFF_T3201_ingest-pytest.patch
new file mode 100644
index 0000000..960503b
--- /dev/null
+++ b/patches/DIFF_T3201_ingest-pytest.patch
@@ -0,0 +1,798 @@
+diff --git a/docs/testing/laminar.md b/docs/testing/laminar.md
+index e84dea0..e1dcd1a 100644
+--- a/docs/testing/laminar.md
++++ b/docs/testing/laminar.md
+@@ -248,6 +248,87 @@ The `lam` CLI provides comprehensive test management and analysis capabilities.
+ 
+ #### Integration
+ - `lam ingest --go [--from-file <path> | --cmd "<command>"]` — ingest Go test results
++- `lam ingest --pytest [--from-file <path> | --cmd "<command>"]` — ingest pytest JSON results
++- `lam ingest --junit <file>` — ingest JUnit XML test results
++
++### lam ingest — Cross-Language Test Integration
++
++Converts test results from other frameworks into Laminar JSONL format.
++
++#### Pytest Integration
++
++Ingest pytest JSON reports (generated via `pytest-json-report` plugin):
++
++**Installation:**
++```bash
++pip install pytest-json-report
++```
++
++**Generate pytest JSON report:**
++```bash
++pytest --json-report --json-report-file=report.json
++```
++
++**Ingest into Laminar:**
++```bash
++# From file
++lam ingest --pytest --from-file report.json
++
++# From command
++lam ingest --pytest --cmd "pytest --json-report --json-report-file=/dev/stdout"
++```
++
++**Mapping:**
++- `outcome: passed` → `status: pass`
++- `outcome: failed` → `status: fail`
++- `outcome: error` → `status: error`
++- `outcome: skipped/xfailed/xpassed` → `status: skip`
++
++**Extracted data:**
++- Test names from `nodeid` field
++- Durations from `setup`, `call`, `teardown` stages (converted from seconds to milliseconds)
++- Error messages from `crash.message` or `longrepr`
++- Stack traces from `traceback` array
++- Standard output/error from `stdout`/`stderr` fields
++
++**Generated events:**
++- `case.begin` — test start (with keywords, line numbers)
++- `test.setup.{outcome}` — setup phase result
++- `test.run` — test execution start
++- `test.output` — captured stdout during test
++- `test.stderr` — captured stderr during test
++- `test.call.{outcome}` — test call phase result
++- `test.error` — error details (message + stack trace)
++- `test.teardown.{outcome}` — teardown phase result
++- `case.end` — test completion (with duration, status)
++
++**Example workflow:**
++```bash
++# Run pytest with JSON report
++pytest --json-report --json-report-file=pytest-report.json
++
++# Ingest into Laminar
++lam ingest --pytest --from-file pytest-report.json
++
++# Analyze failures
++lam summary
++lam digest
++```
++
++#### Go Integration
++
++Ingest Go test JSON output (generated via `go test -json`):
++
++**Usage:**
++```bash
++# From file
++lam ingest --go --from-file go-test.json
++
++# From command
++lam ingest --go --cmd "go test -json ./..."
++```
++
++See `scripts/ingest-go.ts` for implementation details.
+ 
+ ### lam trends — Failure Trend Analysis
+ 
+@@ -361,6 +442,83 @@ LAMINAR_DEBUG=1 npm test
+ ```
+ Writes debug events to `reports/<suite>/<case>.jsonl` alongside test events, using the same envelope schema.
+ 
++## Cross-Language Test Ingestion
++
++Laminar supports ingesting test results from multiple languages and frameworks through standardized adapters.
++
++### JUnit XML Adapter
++
++Convert JUnit XML output (used by Maven, Gradle, Jest, pytest, and many other tools) to Laminar JSONL format.
++
++**Supported Sources:**
++- Java (Maven Surefire, Gradle Test)
++- JavaScript/TypeScript (Jest with `jest-junit` reporter)
++- Python (pytest with `--junit-xml`)
++- C# (NUnit, xUnit with JUnit output)
++- Any tool that produces JUnit XML format
++
++**Usage:**
++```bash
++# From file
++npm run ingest:junit tests/results/junit.xml
++
++# From stdin (pipeline)
++cat test-output.xml | npm run ingest:junit -
++
++# Jest example
++jest --reporters=jest-junit
++npm run ingest:junit junit.xml
++```
++
++**Output Structure:**
++- `reports/<suite>/<test>.jsonl` — Per-test event streams
++- `reports/summary.jsonl` — Test summaries with status/duration/location
++
++**JUnit → Laminar Mapping:**
++- `<testcase>` → Laminar test case
++- `<failure>` → `test.error` event with `lvl: 'error'`
++- `<error>` → `test.error` event with stack trace
++- `<skipped>` → `test.skip` event
++- `time` attribute → `duration` in milliseconds
++- `classname` → `location` field
++
++**Event Lifecycle:**
++1. `case.begin` (phase: setup) — Test starts
++2. `test.run` (phase: execution) — Test executing
++3. `test.error` (if failed/error) — Failure details with stack
++4. `test.skip` (if skipped) — Skip reason
++5. `case.end` (phase: teardown) — Test completes with status
++
++**Example JUnit XML:**
++```xml
++<testsuites>
++  <testsuite name="math-tests" tests="2" failures="1" time="0.045">
++    <testcase classname="math-tests" name="addition works" time="0.005"/>
++    <testcase classname="math-tests" name="division fails" time="0.012">
++      <failure message="Expected 2 but got 3" type="AssertionError">
++AssertionError: Expected 2 but got 3
++    at tests/math.spec.js:45:5
++      </failure>
++    </testcase>
++  </testsuite>
++</testsuites>
++```
++
++**Generated Laminar Events:**
++```jsonl
++{"ts":1760290661027,"lvl":"info","case":"math-tests/addition works","phase":"setup","evt":"case.begin","payload":{"suite":"math-tests","classname":"math-tests","testName":"addition works"}}
++{"ts":1760290661028,"lvl":"info","case":"math-tests/addition works","phase":"execution","evt":"test.run"}
++{"ts":1760290661032,"lvl":"info","case":"math-tests/addition works","phase":"teardown","evt":"case.end","payload":{"duration":5,"status":"passed"}}
++{"ts":1760290661042,"lvl":"info","case":"math-tests/division fails","phase":"setup","evt":"case.begin","payload":{"suite":"math-tests","classname":"math-tests","testName":"division fails"}}
++{"ts":1760290661043,"lvl":"info","case":"math-tests/division fails","phase":"execution","evt":"test.run"}
++{"ts":1760290661052,"lvl":"error","case":"math-tests/division fails","phase":"execution","evt":"test.error","payload":{"message":"Expected 2 but got 3","type":"AssertionError","stack":"AssertionError: Expected 2 but got 3\n    at tests/math.spec.js:45:5"}}
++{"ts":1760290661054,"lvl":"error","case":"math-tests/division fails","phase":"teardown","evt":"case.end","payload":{"duration":12,"status":"failed"}}
++```
++
++### Go Test Adapter
++
++Ingest Go test JSON output (see `lam ingest --go` above).
++
+ ## Test Types
+ - Unit: adapters and small modules
+ - Component: module + adapters (inproc/worker/process)
+diff --git a/package.json b/package.json
+index 4bddf21..5776b82 100644
+--- a/package.json
++++ b/package.json
+@@ -37,6 +37,8 @@
+     "laminar:run": "tsx scripts/laminar-run.ts",
+     "laminar:digest": "tsx scripts/digest.ts",
+     "ingest:go": "tsx scripts/ingest-go.ts",
++    "ingest:pytest": "tsx scripts/ingest-pytest.ts",
++    "ingest:junit": "tsx scripts/ingest-junit.ts",
+     "dev": "node --enable-source-maps dist/examples/basic-topology.js",
+     "dev:split": "node --enable-source-maps dist/examples/split-topology.js",
+     "dev:merge": "node --enable-source-maps dist/examples/merge-topology.js",
+diff --git a/scripts/ingest-pytest.ts b/scripts/ingest-pytest.ts
+new file mode 100644
+index 0000000..6c56474
+--- /dev/null
++++ b/scripts/ingest-pytest.ts
+@@ -0,0 +1,347 @@
++import * as fs from 'node:fs';
++import * as path from 'node:path';
++
++export interface PytestStage {
++  duration?: number;
++  outcome: string;
++  crash?: {
++    path?: string;
++    lineno?: number;
++    message?: string;
++  };
++  traceback?: Array<{
++    path?: string;
++    lineno?: number;
++    message?: string;
++  }>;
++  stdout?: string;
++  stderr?: string;
++  longrepr?: string;
++}
++
++export interface PytestTest {
++  nodeid: string;
++  lineno?: number;
++  keywords?: string[];
++  outcome: string;
++  setup?: PytestStage | null;
++  call?: PytestStage | null;
++  teardown?: PytestStage | null;
++  metadata?: any;
++}
++
++export interface PytestReport {
++  created?: number;
++  duration?: number;
++  exitcode?: number;
++  root?: string;
++  environment?: any;
++  summary?: {
++    collected?: number;
++    total?: number;
++    passed?: number;
++    failed?: number;
++    error?: number;
++    skipped?: number;
++    xfailed?: number;
++    xpassed?: number;
++    [key: string]: any;
++  };
++  tests?: PytestTest[];
++  warnings?: any[];
++}
++
++export interface LaminarTestEvent {
++  ts: number;
++  lvl: string;
++  case?: string;
++  phase?: string;
++  evt: string;
++  payload?: any;
++}
++
++export function parsePytestJSON(input: string): PytestReport {
++  try {
++    return JSON.parse(input) as PytestReport;
++  } catch (error) {
++    throw new Error(`Failed to parse pytest JSON: ${error}`);
++  }
++}
++
++function mapOutcomeToStatus(outcome: string): string {
++  switch (outcome) {
++    case 'passed':
++      return 'pass';
++    case 'failed':
++      return 'fail';
++    case 'error':
++      return 'error';
++    case 'skipped':
++    case 'xfailed':
++    case 'xpassed':
++      return 'skip';
++    default:
++      return outcome;
++  }
++}
++
++function extractErrorMessage(stage?: PytestStage | null): string | undefined {
++  if (!stage) return undefined;
++  if (stage.crash?.message) return stage.crash.message;
++  if (stage.longrepr) return stage.longrepr;
++  return undefined;
++}
++
++function extractStackTrace(stage?: PytestStage | null): string | undefined {
++  if (!stage?.traceback || stage.traceback.length === 0) return undefined;
++  
++  return stage.traceback
++    .map(entry => {
++      const location = entry.path && entry.lineno 
++        ? `  at ${entry.path}:${entry.lineno}` 
++        : entry.path 
++          ? `  at ${entry.path}` 
++          : '';
++      const message = entry.message ? `\n    ${entry.message}` : '';
++      return `${location}${message}`;
++    })
++    .filter(line => line.trim())
++    .join('\n');
++}
++
++export function convertToLaminar(report: PytestReport): {
++  events: LaminarTestEvent[];
++  summary: Array<{ status: string; duration: number; location: string; artifactURI: string }>;
++} {
++  const laminarEvents: LaminarTestEvent[] = [];
++  const summary: Array<{ status: string; duration: number; location: string; artifactURI: string }> = [];
++  
++  const baseTs = report.created ? Math.floor(report.created * 1000) : Date.now();
++  
++  if (!report.tests || report.tests.length === 0) {
++    return { events: laminarEvents, summary };
++  }
++
++  let currentTs = baseTs;
++
++  for (const test of report.tests) {
++    const caseId = test.nodeid;
++    const location = test.lineno ? `${test.nodeid}:${test.lineno}` : test.nodeid;
++    
++    const testStartTs = currentTs;
++    laminarEvents.push({
++      ts: currentTs,
++      lvl: 'info',
++      case: caseId,
++      phase: 'setup',
++      evt: 'case.begin',
++      payload: { nodeid: test.nodeid, lineno: test.lineno, keywords: test.keywords }
++    });
++    currentTs += 1;
++
++    if (test.setup) {
++      const setupDuration = Math.round((test.setup.duration || 0) * 1000);
++      laminarEvents.push({
++        ts: currentTs,
++        lvl: test.setup.outcome === 'error' || test.setup.outcome === 'failed' ? 'error' : 'info',
++        case: caseId,
++        phase: 'setup',
++        evt: `test.setup.${test.setup.outcome}`,
++        payload: { 
++          duration: setupDuration,
++          stdout: test.setup.stdout,
++          stderr: test.setup.stderr
++        }
++      });
++      currentTs += setupDuration || 1;
++
++      if ((test.setup.outcome === 'error' || test.setup.outcome === 'failed') && test.setup.crash) {
++        const errorMessage = extractErrorMessage(test.setup);
++        const stackTrace = extractStackTrace(test.setup);
++        
++        laminarEvents.push({
++          ts: currentTs,
++          lvl: 'error',
++          case: caseId,
++          phase: 'setup',
++          evt: 'test.error',
++          payload: {
++            message: errorMessage,
++            stack: stackTrace,
++            crash: test.setup.crash
++          }
++        });
++        currentTs += 1;
++      }
++    }
++
++    if (test.call) {
++      const callDuration = Math.round((test.call.duration || 0) * 1000);
++      laminarEvents.push({
++        ts: currentTs,
++        lvl: 'info',
++        case: caseId,
++        phase: 'execution',
++        evt: 'test.run'
++      });
++      currentTs += 1;
++
++      if (test.call.stdout) {
++        laminarEvents.push({
++          ts: currentTs,
++          lvl: 'info',
++          case: caseId,
++          phase: 'execution',
++          evt: 'test.output',
++          payload: { output: test.call.stdout.trim() }
++        });
++        currentTs += 1;
++      }
++
++      if (test.call.stderr) {
++        laminarEvents.push({
++          ts: currentTs,
++          lvl: 'warn',
++          case: caseId,
++          phase: 'execution',
++          evt: 'test.stderr',
++          payload: { output: test.call.stderr.trim() }
++        });
++        currentTs += 1;
++      }
++
++      laminarEvents.push({
++        ts: currentTs,
++        lvl: test.call.outcome === 'failed' || test.call.outcome === 'error' ? 'error' : 'info',
++        case: caseId,
++        phase: 'execution',
++        evt: `test.call.${test.call.outcome}`,
++        payload: { duration: callDuration }
++      });
++      currentTs += callDuration || 1;
++
++      if ((test.call.outcome === 'failed' || test.call.outcome === 'error') && test.call.crash) {
++        const errorMessage = extractErrorMessage(test.call);
++        const stackTrace = extractStackTrace(test.call);
++        
++        laminarEvents.push({
++          ts: currentTs,
++          lvl: 'error',
++          case: caseId,
++          phase: 'execution',
++          evt: 'test.error',
++          payload: {
++            message: errorMessage,
++            stack: stackTrace,
++            crash: test.call.crash
++          }
++        });
++        currentTs += 1;
++      }
++    }
++
++    if (test.teardown) {
++      const teardownDuration = Math.round((test.teardown.duration || 0) * 1000);
++      laminarEvents.push({
++        ts: currentTs,
++        lvl: test.teardown.outcome === 'error' || test.teardown.outcome === 'failed' ? 'error' : 'info',
++        case: caseId,
++        phase: 'teardown',
++        evt: `test.teardown.${test.teardown.outcome}`,
++        payload: { 
++          duration: teardownDuration,
++          stdout: test.teardown.stdout,
++          stderr: test.teardown.stderr
++        }
++      });
++      currentTs += teardownDuration || 1;
++    }
++
++    const totalDuration = Math.round(
++      ((test.setup?.duration || 0) + 
++       (test.call?.duration || 0) + 
++       (test.teardown?.duration || 0)) * 1000
++    );
++
++    const finalOutcome = mapOutcomeToStatus(test.outcome);
++    laminarEvents.push({
++      ts: currentTs,
++      lvl: finalOutcome === 'fail' || finalOutcome === 'error' ? 'error' : 'info',
++      case: caseId,
++      phase: 'teardown',
++      evt: 'case.end',
++      payload: {
++        duration: totalDuration,
++        status: test.outcome === 'passed' ? 'passed' : 'failed'
++      }
++    });
++    currentTs += 1;
++
++    const artifactURI = `reports/${caseId.replace(/[/:]/g, '.')}.jsonl`;
++    summary.push({
++      status: finalOutcome,
++      duration: totalDuration,
++      location,
++      artifactURI
++    });
++  }
++
++  return { events: laminarEvents, summary };
++}
++
++export function writeOutput(
++  laminarEvents: LaminarTestEvent[],
++  summary: Array<{ status: string; duration: number; location: string; artifactURI: string }>
++): void {
++  fs.mkdirSync('reports', { recursive: true });
++
++  const caseGroups = new Map<string, LaminarTestEvent[]>();
++  for (const evt of laminarEvents) {
++    if (evt.case) {
++      if (!caseGroups.has(evt.case)) {
++        caseGroups.set(evt.case, []);
++      }
++      caseGroups.get(evt.case)!.push(evt);
++    }
++  }
++
++  for (const [caseId, events] of caseGroups) {
++    const artifactPath = `reports/${caseId.replace(/[/:]/g, '.')}.jsonl`;
++    const dir = path.dirname(artifactPath);
++    fs.mkdirSync(dir, { recursive: true });
++    fs.writeFileSync(artifactPath, events.map(e => JSON.stringify(e)).join('\n') + '\n');
++  }
++
++  const summaryPath = 'reports/summary.jsonl';
++  fs.writeFileSync(summaryPath, summary.map(s => JSON.stringify(s)).join('\n') + '\n');
++}
++
++export function ingestPytestJSON(input: string): void {
++  const report = parsePytestJSON(input);
++  const { events, summary } = convertToLaminar(report);
++  writeOutput(events, summary);
++  
++  console.log(`Ingested pytest report with ${report.tests?.length || 0} tests`);
++  console.log(`Generated ${summary.length} test case summaries`);
++  console.log(`Wrote artifacts to reports/`);
++}
++
++if (import.meta.url === `file://${process.argv[1]}`) {
++  const args = process.argv.slice(2);
++  const fromFileIndex = args.indexOf('--from-file');
++  
++  if (fromFileIndex === -1 || !args[fromFileIndex + 1]) {
++    console.error('Usage: ingest-pytest.ts --from-file <path>');
++    process.exit(1);
++  }
++  
++  const filePath = args[fromFileIndex + 1];
++  
++  if (!fs.existsSync(filePath)) {
++    console.error(`File not found: ${filePath}`);
++    process.exit(1);
++  }
++  
++  const input = fs.readFileSync(filePath, 'utf-8');
++  ingestPytestJSON(input);
++}
+diff --git a/scripts/lam.ts b/scripts/lam.ts
+index f540860..3cfdcfe 100644
+--- a/scripts/lam.ts
++++ b/scripts/lam.ts
+@@ -2,6 +2,7 @@
+ import { spawnSync, execSync } from 'node:child_process';
+ import * as fs from 'node:fs';
+ import { ingestGoTest } from './ingest-go.js';
++import { ingestPytestJSON } from './ingest-pytest.js';
+ import { DigestDiffEngine } from '../src/digest/diff.js';
+ import { bundleRepro } from './repro-bundle.js';
+ 
+@@ -21,6 +22,7 @@ Usage:
+   lam diff <digest1> <digest2> [--output <path>] [--format json|markdown]
+   lam repro --bundle [--case <case-name>]
+   lam ingest --go [--from-file <path> | --cmd "<command>"]
++  lam ingest --pytest [--from-file <path> | --cmd "<command>"]
+   lam rules get
+   lam rules set --file <path> | --inline '<json>'
+   lam trends [--since <timestamp>] [--until <timestamp>] [--top <n>]
+@@ -37,6 +39,8 @@ Examples:
+   lam repro --bundle --case kernel.spec/connect_moves_data_1_1
+   lam ingest --go --from-file go-test-output.json
+   lam ingest --go --cmd "go test -json ./..."
++  lam ingest --pytest --from-file pytest-report.json
++  lam ingest --pytest --cmd "pytest --json-report --json-report-file=/dev/stdout"
+   lam rules get
+   lam rules set --inline '{"budget":{"kb":2}}'
+   lam trends --top 10 --since 2025-10-01
+@@ -280,8 +284,17 @@ async function main() {
+     }
+     case 'ingest': {
+       const go = args.get('go');
+-      if (!go) {
+-        console.error('lam ingest --go [--from-file <path> | --cmd "<command>"]');
++      const pytest = args.get('pytest');
++      
++      if (!go && !pytest) {
++        console.error('lam ingest requires --go or --pytest');
++        console.error('  lam ingest --go [--from-file <path> | --cmd "<command>"]');
++        console.error('  lam ingest --pytest [--from-file <path> | --cmd "<command>"]');
++        process.exit(1);
++      }
++      
++      if (go && pytest) {
++        console.error('lam ingest: use either --go or --pytest, not both');
+         process.exit(1);
+       }
+       
+@@ -289,12 +302,12 @@ async function main() {
+       const cmd = args.get('cmd') as string | undefined;
+       
+       if (!fromFile && !cmd) {
+-        console.error('lam ingest --go requires --from-file <path> or --cmd "<command>"');
++        console.error('lam ingest requires --from-file <path> or --cmd "<command>"');
+         process.exit(1);
+       }
+       
+       if (fromFile && cmd) {
+-        console.error('lam ingest --go: use either --from-file or --cmd, not both');
++        console.error('lam ingest: use either --from-file or --cmd, not both');
+         process.exit(1);
+       }
+       
+@@ -318,7 +331,11 @@ async function main() {
+         }
+       }
+       
+-      ingestGoTest(input);
++      if (go) {
++        ingestGoTest(input);
++      } else if (pytest) {
++        ingestPytestJSON(input);
++      }
+       break;
+     }
+     case 'rules': {
+diff --git a/tests/fixtures/pytest/sample-report.json b/tests/fixtures/pytest/sample-report.json
+new file mode 100644
+index 0000000..2ffd21c
+--- /dev/null
++++ b/tests/fixtures/pytest/sample-report.json
+@@ -0,0 +1,136 @@
++{
++  "created": 1678886400.123456,
++  "duration": 1.56789,
++  "exitcode": 1,
++  "root": "/path/to/project",
++  "environment": {
++    "Python": "3.9.12",
++    "Platform": "Linux-5.15.0-67-generic-x86_64",
++    "Packages": {
++      "pytest": "7.2.5",
++      "pytest-json-report": "1.5.0"
++    }
++  },
++  "summary": {
++    "collected": 5,
++    "passed": 2,
++    "failed": 1,
++    "error": 1,
++    "skipped": 1,
++    "total": 5
++  },
++  "tests": [
++    {
++      "nodeid": "test_example.py::test_success",
++      "lineno": 5,
++      "keywords": ["test_success", "test_example.py"],
++      "outcome": "passed",
++      "setup": {
++        "duration": 0.0001,
++        "outcome": "passed"
++      },
++      "call": {
++        "duration": 0.0005,
++        "outcome": "passed",
++        "stdout": "This test passed successfully.\n"
++      },
++      "teardown": {
++        "duration": 0.00005,
++        "outcome": "passed"
++      }
++    },
++    {
++      "nodeid": "test_example.py::test_failure",
++      "lineno": 10,
++      "keywords": ["test_failure", "test_example.py"],
++      "outcome": "failed",
++      "setup": {
++        "duration": 0.00015,
++        "outcome": "passed"
++      },
++      "call": {
++        "duration": 0.0008,
++        "outcome": "failed",
++        "crash": {
++          "path": "test_example.py",
++          "lineno": 12,
++          "message": "AssertionError: assert 1 == 2"
++        },
++        "traceback": [
++          {
++            "path": "test_example.py",
++            "lineno": 12,
++            "message": "def test_failure():"
++          },
++          {
++            "path": "test_example.py",
++            "lineno": 13,
++            "message": "    assert 1 == 2"
++          }
++        ],
++        "stdout": "About to fail...\n",
++        "longrepr": "def test_failure():\n    assert 1 == 2\nE   AssertionError: assert 1 == 2"
++      },
++      "teardown": {
++        "duration": 0.00008,
++        "outcome": "passed"
++      }
++    },
++    {
++      "nodeid": "test_example.py::test_error_during_setup",
++      "lineno": 18,
++      "keywords": ["test_error_during_setup", "test_example.py"],
++      "outcome": "error",
++      "setup": {
++        "duration": 0.0002,
++        "outcome": "error",
++        "crash": {
++          "path": "test_example.py",
++          "lineno": 20,
++          "message": "NameError: name 'non_existent_variable' is not defined"
++        },
++        "traceback": [
++          {
++            "path": "test_example.py",
++            "lineno": 20,
++            "message": "non_existent_variable"
++          }
++        ],
++        "longrepr": "NameError: name 'non_existent_variable' is not defined"
++      },
++      "call": null,
++      "teardown": null
++    },
++    {
++      "nodeid": "test_example.py::test_skipped_test",
++      "lineno": 25,
++      "keywords": ["test_skipped_test", "test_example.py", "skip"],
++      "outcome": "skipped",
++      "setup": {
++        "duration": 0.0001,
++        "outcome": "skipped",
++        "longrepr": "Skipped: This test is intentionally skipped."
++      },
++      "call": null,
++      "teardown": null
++    },
++    {
++      "nodeid": "test_calculations.py::test_addition",
++      "lineno": 3,
++      "keywords": ["test_addition", "test_calculations.py"],
++      "outcome": "passed",
++      "setup": {
++        "duration": 0.00008,
++        "outcome": "passed"
++      },
++      "call": {
++        "duration": 0.0003,
++        "outcome": "passed"
++      },
++      "teardown": {
++        "duration": 0.00004,
++        "outcome": "passed"
++      }
++    }
++  ]
++}
+diff --git a/tests/fixtures/pytest/simple-pass.json b/tests/fixtures/pytest/simple-pass.json
+new file mode 100644
+index 0000000..4b9ef72
+--- /dev/null
++++ b/tests/fixtures/pytest/simple-pass.json
+@@ -0,0 +1,31 @@
++{
++  "created": 1678886400.5,
++  "duration": 0.15,
++  "exitcode": 0,
++  "root": "/path/to/project",
++  "summary": {
++    "collected": 1,
++    "passed": 1,
++    "total": 1
++  },
++  "tests": [
++    {
++      "nodeid": "test_simple.py::test_basic",
++      "lineno": 1,
++      "keywords": ["test_basic"],
++      "outcome": "passed",
++      "setup": {
++        "duration": 0.0001,
++        "outcome": "passed"
++      },
++      "call": {
++        "duration": 0.0002,
++        "outcome": "passed"
++      },
++      "teardown": {
++        "duration": 0.00005,
++        "outcome": "passed"
++      }
++    }
++  ]
++}
diff --git a/patches/DIFF_T3202_ingest-junit.patch b/patches/DIFF_T3202_ingest-junit.patch
new file mode 100644
index 0000000..e599c4d
--- /dev/null
+++ b/patches/DIFF_T3202_ingest-junit.patch
@@ -0,0 +1,454 @@
+diff --git a/scripts/ingest-junit.ts b/scripts/ingest-junit.ts
+new file mode 100644
+index 0000000..8f79de6
+--- /dev/null
++++ b/scripts/ingest-junit.ts
+@@ -0,0 +1,366 @@
++import * as fs from 'node:fs';
++import * as path from 'node:path';
++
++export interface JUnitTestCase {
++  name: string;
++  classname: string;
++  time: number;
++  failure?: {
++    message: string;
++    type: string;
++    content: string;
++  };
++  error?: {
++    message: string;
++    type: string;
++    content: string;
++  };
++  skipped?: {
++    message?: string;
++  };
++}
++
++export interface JUnitTestSuite {
++  name: string;
++  tests: number;
++  failures: number;
++  errors: number;
++  skipped: number;
++  time: number;
++  testcases: JUnitTestCase[];
++}
++
++export interface LaminarTestEvent {
++  ts: number;
++  lvl: string;
++  case?: string;
++  phase?: string;
++  evt: string;
++  payload?: any;
++}
++
++/**
++ * Parse JUnit XML format to structured test data.
++ * Uses basic regex parsing to avoid external XML dependencies.
++ */
++export function parseJUnitXML(xmlContent: string): JUnitTestSuite[] {
++  const suites: JUnitTestSuite[] = [];
++  
++  // Extract all <testsuite> elements (including nested)
++  const testsuiteRegex = /<testsuite([^>]*)>([\s\S]*?)<\/testsuite>/g;
++  let suiteMatch;
++  
++  while ((suiteMatch = testsuiteRegex.exec(xmlContent)) !== null) {
++    const suiteAttrs = suiteMatch[1];
++    const suiteContent = suiteMatch[2];
++    
++    const suite: JUnitTestSuite = {
++      name: extractAttr(suiteAttrs, 'name') || 'unknown',
++      tests: parseInt(extractAttr(suiteAttrs, 'tests') || '0', 10),
++      failures: parseInt(extractAttr(suiteAttrs, 'failures') || '0', 10),
++      errors: parseInt(extractAttr(suiteAttrs, 'errors') || '0', 10),
++      skipped: parseInt(extractAttr(suiteAttrs, 'skipped') || '0', 10),
++      time: parseFloat(extractAttr(suiteAttrs, 'time') || '0'),
++      testcases: []
++    };
++    
++    // Extract all <testcase> elements within this suite
++    const testcaseRegex = /<testcase([^>]*?)(?:\/>|>([\s\S]*?)<\/testcase>)/g;
++    let caseMatch;
++    
++    while ((caseMatch = testcaseRegex.exec(suiteContent)) !== null) {
++      const caseAttrs = caseMatch[1];
++      const caseContent = caseMatch[2] || '';
++      
++      const testcase: JUnitTestCase = {
++        name: extractAttr(caseAttrs, 'name') || 'unknown',
++        classname: extractAttr(caseAttrs, 'classname') || suite.name,
++        time: parseFloat(extractAttr(caseAttrs, 'time') || '0')
++      };
++      
++      // Check for failure
++      const failureMatch = /<failure([^>]*?)>([\s\S]*?)<\/failure>/.exec(caseContent);
++      if (failureMatch) {
++        testcase.failure = {
++          message: extractAttr(failureMatch[1], 'message') || 'Test failed',
++          type: extractAttr(failureMatch[1], 'type') || 'AssertionError',
++          content: decodeXmlEntities(failureMatch[2].trim())
++        };
++      }
++      
++      // Check for error
++      const errorMatch = /<error([^>]*?)>([\s\S]*?)<\/error>/.exec(caseContent);
++      if (errorMatch) {
++        testcase.error = {
++          message: extractAttr(errorMatch[1], 'message') || 'Test error',
++          type: extractAttr(errorMatch[1], 'type') || 'Error',
++          content: decodeXmlEntities(errorMatch[2].trim())
++        };
++      }
++      
++      // Check for skipped
++      const skippedMatch = /<skipped([^>]*?)(\/>|>([\s\S]*?)<\/skipped>)/.exec(caseContent);
++      if (skippedMatch) {
++        testcase.skipped = {
++          message: extractAttr(skippedMatch[1], 'message')
++        };
++      }
++      
++      suite.testcases.push(testcase);
++    }
++    
++    suites.push(suite);
++  }
++  
++  return suites;
++}
++
++/**
++ * Extract attribute value from XML attributes string
++ */
++function extractAttr(attrs: string, name: string): string | undefined {
++  const match = new RegExp(`${name}=["']([^"']*)["']`).exec(attrs);
++  return match ? match[1] : undefined;
++}
++
++/**
++ * Decode basic XML entities
++ */
++function decodeXmlEntities(str: string): string {
++  return str
++    .replace(/&lt;/g, '<')
++    .replace(/&gt;/g, '>')
++    .replace(/&quot;/g, '"')
++    .replace(/&apos;/g, "'")
++    .replace(/&amp;/g, '&');
++}
++
++/**
++ * Convert JUnit test suites to Laminar format
++ */
++export function convertToLaminar(suites: JUnitTestSuite[]): {
++  events: LaminarTestEvent[];
++  summary: Array<{ status: string; duration: number; location: string; artifactURI: string; testName: string; errorMessage?: string }>;
++} {
++  const laminarEvents: LaminarTestEvent[] = [];
++  const summary: Array<{ status: string; duration: number; location: string; artifactURI: string; testName: string; errorMessage?: string }> = [];
++  
++  const baseTimestamp = Date.now();
++  let currentOffset = 0;
++  
++  for (const suite of suites) {
++    for (const testcase of suite.testcases) {
++      const caseId = `${suite.name}/${testcase.name}`;
++      const startTs = baseTimestamp + currentOffset;
++      const duration = Math.round(testcase.time * 1000); // Convert seconds to milliseconds
++      const endTs = startTs + duration;
++      
++      // Test begin event
++      laminarEvents.push({
++        ts: startTs,
++        lvl: 'info',
++        case: caseId,
++        phase: 'setup',
++        evt: 'case.begin',
++        payload: {
++          suite: suite.name,
++          classname: testcase.classname,
++          testName: testcase.name
++        }
++      });
++      
++      // Test run event
++      laminarEvents.push({
++        ts: startTs + 1,
++        lvl: 'info',
++        case: caseId,
++        phase: 'execution',
++        evt: 'test.run'
++      });
++      
++      // Determine status and add appropriate events
++      let status = 'pass';
++      let errorMessage: string | undefined;
++      
++      if (testcase.failure) {
++        status = 'fail';
++        errorMessage = testcase.failure.message;
++        laminarEvents.push({
++          ts: endTs - 2,
++          lvl: 'error',
++          case: caseId,
++          phase: 'execution',
++          evt: 'test.error',
++          payload: {
++            message: testcase.failure.message,
++            type: testcase.failure.type,
++            stack: testcase.failure.content
++          }
++        });
++      } else if (testcase.error) {
++        status = 'fail';
++        errorMessage = testcase.error.message;
++        laminarEvents.push({
++          ts: endTs - 2,
++          lvl: 'error',
++          case: caseId,
++          phase: 'execution',
++          evt: 'test.error',
++          payload: {
++            message: testcase.error.message,
++            type: testcase.error.type,
++            stack: testcase.error.content
++          }
++        });
++      } else if (testcase.skipped) {
++        status = 'skip';
++        errorMessage = testcase.skipped.message;
++        laminarEvents.push({
++          ts: endTs - 2,
++          lvl: 'info',
++          case: caseId,
++          phase: 'execution',
++          evt: 'test.skip',
++          payload: {
++            message: testcase.skipped.message || 'Test skipped'
++          }
++        });
++      }
++      
++      // Test end event
++      laminarEvents.push({
++        ts: endTs,
++        lvl: status === 'fail' ? 'error' : 'info',
++        case: caseId,
++        phase: 'teardown',
++        evt: 'case.end',
++        payload: {
++          duration,
++          status: status === 'pass' ? 'passed' : status === 'skip' ? 'skipped' : 'failed'
++        }
++      });
++      
++      // Add to summary
++      const location = testcase.classname;
++      const artifactURI = `reports/${suite.name}/${sanitizeFileName(testcase.name)}.jsonl`;
++      
++      summary.push({
++        status,
++        duration,
++        location,
++        artifactURI,
++        testName: caseId,
++        ...(errorMessage && { errorMessage })
++      });
++      
++      currentOffset = endTs - baseTimestamp + 10; // Add small gap between tests
++    }
++  }
++  
++  return { events: laminarEvents, summary };
++}
++
++/**
++ * Sanitize test name for use as filename
++ */
++function sanitizeFileName(name: string): string {
++  return name
++    .replace(/[^a-zA-Z0-9_-]/g, '_')
++    .replace(/_+/g, '_')
++    .toLowerCase();
++}
++
++/**
++ * Write Laminar output to reports directory
++ */
++export function writeOutput(
++  laminarEvents: LaminarTestEvent[],
++  summary: Array<{ status: string; duration: number; location: string; artifactURI: string; testName: string; errorMessage?: string }>
++): void {
++  fs.mkdirSync('reports', { recursive: true });
++  
++  // Group events by test case
++  const caseGroups = new Map<string, LaminarTestEvent[]>();
++  for (const evt of laminarEvents) {
++    if (evt.case) {
++      if (!caseGroups.has(evt.case)) {
++        caseGroups.set(evt.case, []);
++      }
++      caseGroups.get(evt.case)!.push(evt);
++    }
++  }
++  
++  // Write per-case JSONL files
++  for (const [caseId, events] of caseGroups) {
++    const parts = caseId.split('/');
++    const suiteName = parts[0];
++    const testName = parts.slice(1).join('/');
++    
++    const suiteDir = path.join('reports', suiteName);
++    fs.mkdirSync(suiteDir, { recursive: true });
++    
++    const caseFile = path.join(suiteDir, `${sanitizeFileName(testName)}.jsonl`);
++    fs.writeFileSync(caseFile, events.map(e => JSON.stringify(e)).join('\n') + '\n');
++  }
++  
++  // Write summary.jsonl
++  const summaryPath = 'reports/summary.jsonl';
++  fs.writeFileSync(summaryPath, summary.map(s => JSON.stringify(s)).join('\n') + '\n');
++}
++
++/**
++ * Main ingest function for JUnit XML
++ */
++export function ingestJUnit(xmlContent: string): void {
++  const suites = parseJUnitXML(xmlContent);
++  const { events, summary } = convertToLaminar(suites);
++  writeOutput(events, summary);
++  
++  const totalTests = suites.reduce((sum, s) => sum + s.tests, 0);
++  const totalFailures = suites.reduce((sum, s) => sum + s.failures, 0);
++  const totalErrors = suites.reduce((sum, s) => sum + s.errors, 0);
++  const totalSkipped = suites.reduce((sum, s) => sum + s.skipped, 0);
++  
++  console.log(`Ingested ${suites.length} test suite(s)`);
++  console.log(`Total tests: ${totalTests}`);
++  console.log(`Passed: ${totalTests - totalFailures - totalErrors - totalSkipped}`);
++  console.log(`Failed: ${totalFailures + totalErrors}`);
++  console.log(`Skipped: ${totalSkipped}`);
++  console.log(`Generated ${summary.length} test case artifacts`);
++  console.log(`Wrote artifacts to reports/`);
++}
++
++/**
++ * CLI entry point
++ */
++if (import.meta.url === `file://${process.argv[1]}`) {
++  const args = process.argv.slice(2);
++  
++  if (args.length === 0) {
++    console.error('Usage: tsx scripts/ingest-junit.ts <junit-xml-file>');
++    console.error('   or: cat junit.xml | tsx scripts/ingest-junit.ts -');
++    process.exit(1);
++  }
++  
++  const inputSource = args[0];
++  let xmlContent: string;
++  
++  if (inputSource === '-') {
++    // Read from stdin
++    const chunks: Buffer[] = [];
++    process.stdin.on('data', chunk => chunks.push(chunk));
++    process.stdin.on('end', () => {
++      xmlContent = Buffer.concat(chunks).toString('utf-8');
++      ingestJUnit(xmlContent);
++    });
++  } else {
++    // Read from file
++    if (!fs.existsSync(inputSource)) {
++      console.error(`Error: File not found: ${inputSource}`);
++      process.exit(1);
++    }
++    
++    xmlContent = fs.readFileSync(inputSource, 'utf-8');
++    ingestJUnit(xmlContent);
++  }
++}
+diff --git a/tests/fixtures/junit/nested-suites.xml b/tests/fixtures/junit/nested-suites.xml
+new file mode 100644
+index 0000000..67b1848
+--- /dev/null
++++ b/tests/fixtures/junit/nested-suites.xml
+@@ -0,0 +1,18 @@
++<?xml version="1.0" encoding="UTF-8"?>
++<testsuites>
++  <testsuite name="unit-tests" tests="2" failures="0" errors="0" skipped="0" time="0.015">
++    <testcase classname="unit-tests.utils" name="formatDate returns ISO string" time="0.007"/>
++    <testcase classname="unit-tests.helpers" name="clamp restricts value" time="0.008"/>
++  </testsuite>
++  <testsuite name="integration-tests" tests="3" failures="1" errors="0" skipped="0" time="0.125">
++    <testcase classname="integration-tests.database" name="connects to DB" time="0.045"/>
++    <testcase classname="integration-tests.database" name="queries users table" time="0.050">
++      <failure message="Connection timeout" type="Error">
++Error: Connection timeout
++    at Database.query (src/db.js:23:15)
++    at tests/integration/db.spec.js:89:12
++      </failure>
++    </testcase>
++    <testcase classname="integration-tests.api" name="fetches external data" time="0.030"/>
++  </testsuite>
++</testsuites>
+diff --git a/tests/fixtures/junit/simple-pass.xml b/tests/fixtures/junit/simple-pass.xml
+new file mode 100644
+index 0000000..eff32ec
+--- /dev/null
++++ b/tests/fixtures/junit/simple-pass.xml
+@@ -0,0 +1,7 @@
++<?xml version="1.0" encoding="UTF-8"?>
++<testsuites>
++  <testsuite name="basic-tests" tests="2" failures="0" errors="0" skipped="0" time="0.015">
++    <testcase classname="basic-tests" name="adds two numbers" time="0.007"/>
++    <testcase classname="basic-tests" name="multiplies correctly" time="0.008"/>
++  </testsuite>
++</testsuites>
+diff --git a/tests/fixtures/junit/with-failures.xml b/tests/fixtures/junit/with-failures.xml
+new file mode 100644
+index 0000000..45ef1c9
+--- /dev/null
++++ b/tests/fixtures/junit/with-failures.xml
+@@ -0,0 +1,20 @@
++<?xml version="1.0" encoding="UTF-8"?>
++<testsuites>
++  <testsuite name="math-tests" tests="3" failures="1" errors="1" skipped="0" time="0.045">
++    <testcase classname="math-tests" name="addition works" time="0.005"/>
++    <testcase classname="math-tests" name="division fails" time="0.012">
++      <failure message="Expected 2 but got 3" type="AssertionError">
++AssertionError: Expected 2 but got 3
++    at tests/math.spec.js:45:5
++    at Object.&lt;anonymous&gt; (tests/math.spec.js:44:3)
++      </failure>
++    </testcase>
++    <testcase classname="math-tests" name="throws on invalid input" time="0.028">
++      <error message="Unexpected error" type="TypeError">
++TypeError: Unexpected error
++    at calculator.divide (src/calc.js:12:11)
++    at tests/math.spec.js:52:7
++      </error>
++    </testcase>
++  </testsuite>
++</testsuites>
+diff --git a/tests/fixtures/junit/with-skipped.xml b/tests/fixtures/junit/with-skipped.xml
+new file mode 100644
+index 0000000..f6613c7
+--- /dev/null
++++ b/tests/fixtures/junit/with-skipped.xml
+@@ -0,0 +1,13 @@
++<?xml version="1.0" encoding="UTF-8"?>
++<testsuites>
++  <testsuite name="api-tests" tests="4" failures="0" errors="0" skipped="2" time="0.032">
++    <testcase classname="api-tests" name="GET /users returns 200" time="0.012"/>
++    <testcase classname="api-tests" name="POST /users creates user" time="0.020"/>
++    <testcase classname="api-tests" name="DELETE /users requires auth" time="0">
++      <skipped message="Not implemented yet"/>
++    </testcase>
++    <testcase classname="api-tests" name="PUT /users updates user" time="0">
++      <skipped/>
++    </testcase>
++  </testsuite>
++</testsuites>
diff --git a/patches/DIFF_T3203_cli-ingest-py-junit.patch b/patches/DIFF_T3203_cli-ingest-py-junit.patch
new file mode 100644
index 0000000..45cb7b2
--- /dev/null
+++ b/patches/DIFF_T3203_cli-ingest-py-junit.patch
@@ -0,0 +1,107 @@
+diff --git a/README.md b/README.md
+index 4573427..dac9543 100644
+--- a/README.md
++++ b/README.md
+@@ -386,6 +386,14 @@ Laminar can import test results from external languages and frameworks:
+ # Import Go test results
+ lam ingest --go --from-file go-test-output.json
+ lam ingest --go --cmd "go test -json ./..."
++
++# Import Pytest results
++lam ingest --py --from-file pytest-report.json
++lam ingest --pytest --cmd "pytest --json-report --json-report-file=/dev/stdout"
++
++# Import JUnit XML results
++lam ingest --junit --from-file junit-results.xml
++lam ingest --junit --cmd "mvn test"
+ ```
+ 
+ Ingested tests integrate with all Laminar features (`logq`, `lam digest`, `lam show`). See [docs/testing/laminar.md](docs/testing/laminar.md#cross-language-test-ingest) for complete workflow examples and CI integration.
+diff --git a/scripts/lam.ts b/scripts/lam.ts
+index f540860..42501ef 100644
+--- a/scripts/lam.ts
++++ b/scripts/lam.ts
+@@ -2,6 +2,8 @@
+ import { spawnSync, execSync } from 'node:child_process';
+ import * as fs from 'node:fs';
+ import { ingestGoTest } from './ingest-go.js';
++import { ingestPytestJSON } from './ingest-pytest.js';
++import { ingestJUnit } from './ingest-junit.js';
+ import { DigestDiffEngine } from '../src/digest/diff.js';
+ import { bundleRepro } from './repro-bundle.js';
+ 
+@@ -21,6 +23,8 @@ Usage:
+   lam diff <digest1> <digest2> [--output <path>] [--format json|markdown]
+   lam repro --bundle [--case <case-name>]
+   lam ingest --go [--from-file <path> | --cmd "<command>"]
++  lam ingest --py|--pytest [--from-file <path> | --cmd "<command>"]
++  lam ingest --junit [--from-file <path> | --cmd "<command>"]
+   lam rules get
+   lam rules set --file <path> | --inline '<json>'
+   lam trends [--since <timestamp>] [--until <timestamp>] [--top <n>]
+@@ -37,6 +41,10 @@ Examples:
+   lam repro --bundle --case kernel.spec/connect_moves_data_1_1
+   lam ingest --go --from-file go-test-output.json
+   lam ingest --go --cmd "go test -json ./..."
++  lam ingest --py --from-file pytest-report.json
++  lam ingest --pytest --cmd "pytest --json-report --json-report-file=/dev/stdout"
++  lam ingest --junit --from-file junit-results.xml
++  lam ingest --junit --cmd "mvn test"
+   lam rules get
+   lam rules set --inline '{"budget":{"kb":2}}'
+   lam trends --top 10 --since 2025-10-01
+@@ -280,8 +288,22 @@ async function main() {
+     }
+     case 'ingest': {
+       const go = args.get('go');
+-      if (!go) {
+-        console.error('lam ingest --go [--from-file <path> | --cmd "<command>"]');
++      const py = args.get('py');
++      const pytest = args.get('pytest');
++      const junit = args.get('junit');
++      
++      const formats = [go, py, pytest, junit].filter(Boolean);
++      
++      if (formats.length === 0) {
++        console.error('lam ingest requires a format flag: --go, --py, --pytest, or --junit');
++        console.error('  lam ingest --go [--from-file <path> | --cmd "<command>"]');
++        console.error('  lam ingest --py|--pytest [--from-file <path> | --cmd "<command>"]');
++        console.error('  lam ingest --junit [--from-file <path> | --cmd "<command>"]');
++        process.exit(1);
++      }
++      
++      if (formats.length > 1) {
++        console.error('lam ingest: use only one format flag at a time');
+         process.exit(1);
+       }
+       
+@@ -289,12 +311,12 @@ async function main() {
+       const cmd = args.get('cmd') as string | undefined;
+       
+       if (!fromFile && !cmd) {
+-        console.error('lam ingest --go requires --from-file <path> or --cmd "<command>"');
++        console.error('lam ingest requires --from-file <path> or --cmd "<command>"');
+         process.exit(1);
+       }
+       
+       if (fromFile && cmd) {
+-        console.error('lam ingest --go: use either --from-file or --cmd, not both');
++        console.error('lam ingest: use either --from-file or --cmd, not both');
+         process.exit(1);
+       }
+       
+@@ -318,7 +340,13 @@ async function main() {
+         }
+       }
+       
+-      ingestGoTest(input);
++      if (go) {
++        ingestGoTest(input);
++      } else if (py || pytest) {
++        ingestPytestJSON(input);
++      } else if (junit) {
++        ingestJUnit(input);
++      }
+       break;
+     }
+     case 'rules': {
diff --git a/reports/ansiParser.spec/should_handle_backspace.jsonl b/reports/ansiParser.spec/should_handle_backspace.jsonl
index 6bf8a64..63720ff 100644
--- a/reports/ansiParser.spec/should_handle_backspace.jsonl
+++ b/reports/ansiParser.spec/should_handle_backspace.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274666,"lvl":"info","case":"should handle backspace","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274667,"lvl":"info","case":"should handle backspace","phase":"execution","evt":"test.run"}
-{"ts":1760297274668,"lvl":"info","case":"should handle backspace","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270011,"lvl":"info","case":"should handle backspace","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270012,"lvl":"info","case":"should handle backspace","phase":"execution","evt":"test.run"}
+{"ts":1760303270013,"lvl":"info","case":"should handle backspace","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/ansiParser.spec/should_handle_carriage_return.jsonl b/reports/ansiParser.spec/should_handle_carriage_return.jsonl
index d9665fa..4daf2cf 100644
--- a/reports/ansiParser.spec/should_handle_carriage_return.jsonl
+++ b/reports/ansiParser.spec/should_handle_carriage_return.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274654,"lvl":"info","case":"should handle carriage return","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274655,"lvl":"info","case":"should handle carriage return","phase":"execution","evt":"test.run"}
-{"ts":1760297274656,"lvl":"info","case":"should handle carriage return","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270009,"lvl":"info","case":"should handle carriage return","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270010,"lvl":"info","case":"should handle carriage return","phase":"execution","evt":"test.run"}
+{"ts":1760303270011,"lvl":"info","case":"should handle carriage return","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/ansiParser.spec/should_handle_color_codes__SGR_.jsonl b/reports/ansiParser.spec/should_handle_color_codes__SGR_.jsonl
index bec59ff..0375d52 100644
--- a/reports/ansiParser.spec/should_handle_color_codes__SGR_.jsonl
+++ b/reports/ansiParser.spec/should_handle_color_codes__SGR_.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274655,"lvl":"info","case":"should handle color codes (SGR)","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274656,"lvl":"info","case":"should handle color codes (SGR)","phase":"execution","evt":"test.run"}
-{"ts":1760297274657,"lvl":"info","case":"should handle color codes (SGR)","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270010,"lvl":"info","case":"should handle color codes (SGR)","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270011,"lvl":"info","case":"should handle color codes (SGR)","phase":"execution","evt":"test.run"}
+{"ts":1760303270012,"lvl":"info","case":"should handle color codes (SGR)","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/ansiParser.spec/should_handle_color_reset.jsonl b/reports/ansiParser.spec/should_handle_color_reset.jsonl
index fd7f2c2..e3d438a 100644
--- a/reports/ansiParser.spec/should_handle_color_reset.jsonl
+++ b/reports/ansiParser.spec/should_handle_color_reset.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274655,"lvl":"info","case":"should handle color reset","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274656,"lvl":"info","case":"should handle color reset","phase":"execution","evt":"test.run"}
-{"ts":1760297274657,"lvl":"info","case":"should handle color reset","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270010,"lvl":"info","case":"should handle color reset","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270011,"lvl":"info","case":"should handle color reset","phase":"execution","evt":"test.run"}
+{"ts":1760303270012,"lvl":"info","case":"should handle color reset","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/ansiParser.spec/should_handle_cursor_back__CUB_.jsonl b/reports/ansiParser.spec/should_handle_cursor_back__CUB_.jsonl
index 17e4a39..0f8c801 100644
--- a/reports/ansiParser.spec/should_handle_cursor_back__CUB_.jsonl
+++ b/reports/ansiParser.spec/should_handle_cursor_back__CUB_.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274665,"lvl":"info","case":"should handle cursor back (CUB)","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274666,"lvl":"info","case":"should handle cursor back (CUB)","phase":"execution","evt":"test.run"}
-{"ts":1760297274667,"lvl":"info","case":"should handle cursor back (CUB)","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270011,"lvl":"info","case":"should handle cursor back (CUB)","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270012,"lvl":"info","case":"should handle cursor back (CUB)","phase":"execution","evt":"test.run"}
+{"ts":1760303270013,"lvl":"info","case":"should handle cursor back (CUB)","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/ansiParser.spec/should_handle_cursor_down__CUD_.jsonl b/reports/ansiParser.spec/should_handle_cursor_down__CUD_.jsonl
index 51a306e..787ed75 100644
--- a/reports/ansiParser.spec/should_handle_cursor_down__CUD_.jsonl
+++ b/reports/ansiParser.spec/should_handle_cursor_down__CUD_.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274656,"lvl":"info","case":"should handle cursor down (CUD)","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274657,"lvl":"info","case":"should handle cursor down (CUD)","phase":"execution","evt":"test.run"}
-{"ts":1760297274658,"lvl":"info","case":"should handle cursor down (CUD)","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
+{"ts":1760303270010,"lvl":"info","case":"should handle cursor down (CUD)","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270011,"lvl":"info","case":"should handle cursor down (CUD)","phase":"execution","evt":"test.run"}
+{"ts":1760303270012,"lvl":"info","case":"should handle cursor down (CUD)","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/ansiParser.spec/should_handle_cursor_forward__CUF_.jsonl b/reports/ansiParser.spec/should_handle_cursor_forward__CUF_.jsonl
index 05dcd6d..9ee21db 100644
--- a/reports/ansiParser.spec/should_handle_cursor_forward__CUF_.jsonl
+++ b/reports/ansiParser.spec/should_handle_cursor_forward__CUF_.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274656,"lvl":"info","case":"should handle cursor forward (CUF)","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274657,"lvl":"info","case":"should handle cursor forward (CUF)","phase":"execution","evt":"test.run"}
-{"ts":1760297274658,"lvl":"info","case":"should handle cursor forward (CUF)","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
+{"ts":1760303270011,"lvl":"info","case":"should handle cursor forward (CUF)","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270012,"lvl":"info","case":"should handle cursor forward (CUF)","phase":"execution","evt":"test.run"}
+{"ts":1760303270013,"lvl":"info","case":"should handle cursor forward (CUF)","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/ansiParser.spec/should_handle_cursor_up__CUU_.jsonl b/reports/ansiParser.spec/should_handle_cursor_up__CUU_.jsonl
index 874bf0b..95c41f3 100644
--- a/reports/ansiParser.spec/should_handle_cursor_up__CUU_.jsonl
+++ b/reports/ansiParser.spec/should_handle_cursor_up__CUU_.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274655,"lvl":"info","case":"should handle cursor up (CUU)","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274656,"lvl":"info","case":"should handle cursor up (CUU)","phase":"execution","evt":"test.run"}
-{"ts":1760297274657,"lvl":"info","case":"should handle cursor up (CUU)","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270010,"lvl":"info","case":"should handle cursor up (CUU)","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270011,"lvl":"info","case":"should handle cursor up (CUU)","phase":"execution","evt":"test.run"}
+{"ts":1760303270012,"lvl":"info","case":"should handle cursor up (CUU)","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/ansiParser.spec/should_handle_line_clearing__EL_.jsonl b/reports/ansiParser.spec/should_handle_line_clearing__EL_.jsonl
index 05bc96c..72b004f 100644
--- a/reports/ansiParser.spec/should_handle_line_clearing__EL_.jsonl
+++ b/reports/ansiParser.spec/should_handle_line_clearing__EL_.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274655,"lvl":"info","case":"should handle line clearing (EL)","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274656,"lvl":"info","case":"should handle line clearing (EL)","phase":"execution","evt":"test.run"}
-{"ts":1760297274657,"lvl":"info","case":"should handle line clearing (EL)","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270010,"lvl":"info","case":"should handle line clearing (EL)","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270011,"lvl":"info","case":"should handle line clearing (EL)","phase":"execution","evt":"test.run"}
+{"ts":1760303270012,"lvl":"info","case":"should handle line clearing (EL)","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/ansiParser.spec/should_handle_line_wrapping.jsonl b/reports/ansiParser.spec/should_handle_line_wrapping.jsonl
index 80e8d17..22ffdf6 100644
--- a/reports/ansiParser.spec/should_handle_line_wrapping.jsonl
+++ b/reports/ansiParser.spec/should_handle_line_wrapping.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274665,"lvl":"info","case":"should handle line wrapping","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274666,"lvl":"info","case":"should handle line wrapping","phase":"execution","evt":"test.run"}
-{"ts":1760297274667,"lvl":"info","case":"should handle line wrapping","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
+{"ts":1760303270011,"lvl":"info","case":"should handle line wrapping","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270012,"lvl":"info","case":"should handle line wrapping","phase":"execution","evt":"test.run"}
+{"ts":1760303270013,"lvl":"info","case":"should handle line wrapping","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/ansiParser.spec/should_handle_newlines.jsonl b/reports/ansiParser.spec/should_handle_newlines.jsonl
index 5dac116..6e8ceed 100644
--- a/reports/ansiParser.spec/should_handle_newlines.jsonl
+++ b/reports/ansiParser.spec/should_handle_newlines.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274654,"lvl":"info","case":"should handle newlines","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274655,"lvl":"info","case":"should handle newlines","phase":"execution","evt":"test.run"}
-{"ts":1760297274656,"lvl":"info","case":"should handle newlines","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270009,"lvl":"info","case":"should handle newlines","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270010,"lvl":"info","case":"should handle newlines","phase":"execution","evt":"test.run"}
+{"ts":1760303270011,"lvl":"info","case":"should handle newlines","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/ansiParser.spec/should_handle_screen_clearing__ED_.jsonl b/reports/ansiParser.spec/should_handle_screen_clearing__ED_.jsonl
index 3239f1a..269b867 100644
--- a/reports/ansiParser.spec/should_handle_screen_clearing__ED_.jsonl
+++ b/reports/ansiParser.spec/should_handle_screen_clearing__ED_.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274655,"lvl":"info","case":"should handle screen clearing (ED)","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274656,"lvl":"info","case":"should handle screen clearing (ED)","phase":"execution","evt":"test.run"}
-{"ts":1760297274657,"lvl":"info","case":"should handle screen clearing (ED)","phase":"teardown","evt":"case.end","payload":{"duration":45,"status":"passed"}}
+{"ts":1760303270010,"lvl":"info","case":"should handle screen clearing (ED)","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270011,"lvl":"info","case":"should handle screen clearing (ED)","phase":"execution","evt":"test.run"}
+{"ts":1760303270012,"lvl":"info","case":"should handle screen clearing (ED)","phase":"teardown","evt":"case.end","payload":{"duration":41,"status":"passed"}}
diff --git a/reports/ansiParser.spec/should_handle_scrolling.jsonl b/reports/ansiParser.spec/should_handle_scrolling.jsonl
index 9d86eab..db4ceec 100644
--- a/reports/ansiParser.spec/should_handle_scrolling.jsonl
+++ b/reports/ansiParser.spec/should_handle_scrolling.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274665,"lvl":"info","case":"should handle scrolling","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274666,"lvl":"info","case":"should handle scrolling","phase":"execution","evt":"test.run"}
-{"ts":1760297274667,"lvl":"info","case":"should handle scrolling","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270011,"lvl":"info","case":"should handle scrolling","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270012,"lvl":"info","case":"should handle scrolling","phase":"execution","evt":"test.run"}
+{"ts":1760303270013,"lvl":"info","case":"should handle scrolling","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/ansiParser.spec/should_handle_tabs.jsonl b/reports/ansiParser.spec/should_handle_tabs.jsonl
index 97ef280..9d2bb82 100644
--- a/reports/ansiParser.spec/should_handle_tabs.jsonl
+++ b/reports/ansiParser.spec/should_handle_tabs.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274666,"lvl":"info","case":"should handle tabs","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274667,"lvl":"info","case":"should handle tabs","phase":"execution","evt":"test.run"}
-{"ts":1760297274668,"lvl":"info","case":"should handle tabs","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
+{"ts":1760303270011,"lvl":"info","case":"should handle tabs","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270012,"lvl":"info","case":"should handle tabs","phase":"execution","evt":"test.run"}
+{"ts":1760303270013,"lvl":"info","case":"should handle tabs","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/ansiParser.spec/should_parse_ANSI_cursor_movement__CUP_.jsonl b/reports/ansiParser.spec/should_parse_ANSI_cursor_movement__CUP_.jsonl
index 7af095c..3b4da07 100644
--- a/reports/ansiParser.spec/should_parse_ANSI_cursor_movement__CUP_.jsonl
+++ b/reports/ansiParser.spec/should_parse_ANSI_cursor_movement__CUP_.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274655,"lvl":"info","case":"should parse ANSI cursor movement (CUP)","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274656,"lvl":"info","case":"should parse ANSI cursor movement (CUP)","phase":"execution","evt":"test.run"}
-{"ts":1760297274657,"lvl":"info","case":"should parse ANSI cursor movement (CUP)","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270009,"lvl":"info","case":"should parse ANSI cursor movement (CUP)","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270010,"lvl":"info","case":"should parse ANSI cursor movement (CUP)","phase":"execution","evt":"test.run"}
+{"ts":1760303270011,"lvl":"info","case":"should parse ANSI cursor movement (CUP)","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/ansiParser.spec/should_parse_regular_characters.jsonl b/reports/ansiParser.spec/should_parse_regular_characters.jsonl
index 064f0bc..b0f7238 100644
--- a/reports/ansiParser.spec/should_parse_regular_characters.jsonl
+++ b/reports/ansiParser.spec/should_parse_regular_characters.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274654,"lvl":"info","case":"should parse regular characters","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274655,"lvl":"info","case":"should parse regular characters","phase":"execution","evt":"test.run"}
-{"ts":1760297274656,"lvl":"info","case":"should parse regular characters","phase":"teardown","evt":"case.end","payload":{"duration":4,"status":"passed"}}
+{"ts":1760303270009,"lvl":"info","case":"should parse regular characters","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270010,"lvl":"info","case":"should parse regular characters","phase":"execution","evt":"test.run"}
+{"ts":1760303270011,"lvl":"info","case":"should parse regular characters","phase":"teardown","evt":"case.end","payload":{"duration":6,"status":"passed"}}
diff --git a/reports/bundles/coreReporter.spec/should_cross-reference_between_index_and_case_files.repro.json b/reports/bundles/coreReporter.spec/should_cross-reference_between_index_and_case_files.repro.json
deleted file mode 100644
index 7ba6fae..0000000
--- a/reports/bundles/coreReporter.spec/should_cross-reference_between_index_and_case_files.repro.json
+++ /dev/null
@@ -1,95 +0,0 @@
-{
-  "metadata": {
-    "bundleVersion": "1.0.0",
-    "generated": "2025-10-12T20:17:58.290Z",
-    "testName": "should cross-reference between index and case files",
-    "testFile": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts",
-    "status": "fail",
-    "duration": 4
-  },
-  "environment": {
-    "nodeVersion": "v24.9.0",
-    "platform": "linux x64"
-  },
-  "failure": {
-    "errorMessage": "expected 1 to be 4 // Object.is equality",
-    "errorEvents": [
-      {
-        "ts": 1760299847833,
-        "lvl": "error",
-        "case": "should cross-reference between index and case files",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected 1 to be 4 // Object.is equality",
-          "stack": "AssertionError: expected 1 to be 4 // Object.is equality\n    at /srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:261:47\n    at Array.forEach (<anonymous>)\n    at /srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:253:39\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:135:14\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:60:26\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:17)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)"
-        }
-      },
-      {
-        "ts": 1760299847834,
-        "lvl": "error",
-        "case": "should cross-reference between index and case files",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 4,
-          "status": "failed"
-        }
-      }
-    ],
-    "contextEvents": [
-      {
-        "ts": 1760299847831,
-        "lvl": "info",
-        "case": "should cross-reference between index and case files",
-        "phase": "setup",
-        "evt": "case.begin",
-        "env": {
-          "nodeVersion": "v24.9.0",
-          "platform": "linux",
-          "arch": "x64",
-          "os": "Linux 6.8.0-85-generic",
-          "seed": 42,
-          "envVars": {
-            "NODE_ENV": "test"
-          }
-        },
-        "seed": 42
-      },
-      {
-        "ts": 1760299847832,
-        "lvl": "info",
-        "case": "should cross-reference between index and case files",
-        "phase": "execution",
-        "evt": "test.run"
-      },
-      {
-        "ts": 1760299847833,
-        "lvl": "error",
-        "case": "should cross-reference between index and case files",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected 1 to be 4 // Object.is equality",
-          "stack": "AssertionError: expected 1 to be 4 // Object.is equality\n    at /srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:261:47\n    at Array.forEach (<anonymous>)\n    at /srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:253:39\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:135:14\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:60:26\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:17)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)"
-        }
-      },
-      {
-        "ts": 1760299847834,
-        "lvl": "error",
-        "case": "should cross-reference between index and case files",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 4,
-          "status": "failed"
-        }
-      }
-    ]
-  },
-  "reproduction": {
-    "vitestCommand": "vitest run --reporter=verbose --pool=threads \"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts\" -t \"should cross-reference between index and case files\"",
-    "logCommand": "npm run logq -- reports/coreReporter.spec/should_cross-reference_between_index_and_case_files.jsonl",
-    "digestFile": "reports/coreReporter.spec/should_cross-reference_between_index_and_case_files.digest.md"
-  }
-}
\ No newline at end of file
diff --git a/reports/bundles/coreReporter.spec/should_cross-reference_between_index_and_case_files.repro.md b/reports/bundles/coreReporter.spec/should_cross-reference_between_index_and_case_files.repro.md
deleted file mode 100644
index afecc7e..0000000
--- a/reports/bundles/coreReporter.spec/should_cross-reference_between_index_and_case_files.repro.md
+++ /dev/null
@@ -1,46 +0,0 @@
-# Reproduction Bundle: should cross-reference between index and case files
-
-**Generated:** 2025-10-12T20:17:58.290Z
-**Status:** FAIL
-**Duration:** 4ms
-**Test File:** /srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts
-
-## Environment
-
-- **Seed:** none
-- **Node:** v24.9.0
-- **Platform:** linux x64
-
-## Failure Summary
-
-**Error:**
-```
-expected 1 to be 4 // Object.is equality
-```
-
-**Error Events:** 2
-
-- **test.error** (2025-10-12T20:10:47.833Z)
-  - expected 1 to be 4 // Object.is equality
-- **case.end** (2025-10-12T20:10:47.834Z)
-
-## Reproduction Commands
-
-**Run test:**
-```bash
-vitest run --reporter=verbose --pool=threads "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts" -t "should cross-reference between index and case files"
-```
-
-**View logs:**
-```bash
-npm run logq -- reports/coreReporter.spec/should_cross-reference_between_index_and_case_files.jsonl
-```
-
-**Digest file:**
-`reports/coreReporter.spec/should_cross-reference_between_index_and_case_files.digest.md`
-
-## Context Events
-
-**Total context events:** 4
-
-_See JSON bundle for full event details_
diff --git a/reports/bundles/coreReporter.spec/should_have_matching_test_count_between_index_and_summary.repro.json b/reports/bundles/coreReporter.spec/should_have_matching_test_count_between_index_and_summary.repro.json
deleted file mode 100644
index f225374..0000000
--- a/reports/bundles/coreReporter.spec/should_have_matching_test_count_between_index_and_summary.repro.json
+++ /dev/null
@@ -1,95 +0,0 @@
-{
-  "metadata": {
-    "bundleVersion": "1.0.0",
-    "generated": "2025-10-12T20:21:15.247Z",
-    "testName": "should have matching test count between index and summary",
-    "testFile": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts",
-    "status": "fail",
-    "duration": 9
-  },
-  "environment": {
-    "nodeVersion": "v24.9.0",
-    "platform": "linux x64"
-  },
-  "failure": {
-    "errorMessage": "expected 1 to be greater than or equal to 48",
-    "errorEvents": [
-      {
-        "ts": 1760297274576,
-        "lvl": "error",
-        "case": "should have matching test count between index and summary",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected 1 to be greater than or equal to 48",
-          "stack": "AssertionError: expected 1 to be greater than or equal to 48\n    at /srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:240:35\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:135:14\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:60:26\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:17)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7"
-        }
-      },
-      {
-        "ts": 1760297274577,
-        "lvl": "error",
-        "case": "should have matching test count between index and summary",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 9,
-          "status": "failed"
-        }
-      }
-    ],
-    "contextEvents": [
-      {
-        "ts": 1760297274574,
-        "lvl": "info",
-        "case": "should have matching test count between index and summary",
-        "phase": "setup",
-        "evt": "case.begin",
-        "env": {
-          "nodeVersion": "v24.9.0",
-          "platform": "linux",
-          "arch": "x64",
-          "os": "Linux 6.8.0-85-generic",
-          "seed": 42,
-          "envVars": {
-            "NODE_ENV": "test"
-          }
-        },
-        "seed": 42
-      },
-      {
-        "ts": 1760297274575,
-        "lvl": "info",
-        "case": "should have matching test count between index and summary",
-        "phase": "execution",
-        "evt": "test.run"
-      },
-      {
-        "ts": 1760297274576,
-        "lvl": "error",
-        "case": "should have matching test count between index and summary",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected 1 to be greater than or equal to 48",
-          "stack": "AssertionError: expected 1 to be greater than or equal to 48\n    at /srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:240:35\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:135:14\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:60:26\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:17)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7"
-        }
-      },
-      {
-        "ts": 1760297274577,
-        "lvl": "error",
-        "case": "should have matching test count between index and summary",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 9,
-          "status": "failed"
-        }
-      }
-    ]
-  },
-  "reproduction": {
-    "vitestCommand": "vitest run --reporter=verbose --pool=threads \"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts\" -t \"should have matching test count between index and summary\"",
-    "logCommand": "npm run logq -- reports/coreReporter.spec/should_have_matching_test_count_between_index_and_summary.jsonl",
-    "digestFile": "reports/coreReporter.spec/should_have_matching_test_count_between_index_and_summary.digest.md"
-  }
-}
\ No newline at end of file
diff --git a/reports/bundles/coreReporter.spec/should_have_matching_test_count_between_index_and_summary.repro.md b/reports/bundles/coreReporter.spec/should_have_matching_test_count_between_index_and_summary.repro.md
deleted file mode 100644
index c789c3d..0000000
--- a/reports/bundles/coreReporter.spec/should_have_matching_test_count_between_index_and_summary.repro.md
+++ /dev/null
@@ -1,46 +0,0 @@
-# Reproduction Bundle: should have matching test count between index and summary
-
-**Generated:** 2025-10-12T20:21:15.247Z
-**Status:** FAIL
-**Duration:** 9ms
-**Test File:** /srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts
-
-## Environment
-
-- **Seed:** none
-- **Node:** v24.9.0
-- **Platform:** linux x64
-
-## Failure Summary
-
-**Error:**
-```
-expected 1 to be greater than or equal to 48
-```
-
-**Error Events:** 2
-
-- **test.error** (2025-10-12T19:27:54.576Z)
-  - expected 1 to be greater than or equal to 48
-- **case.end** (2025-10-12T19:27:54.577Z)
-
-## Reproduction Commands
-
-**Run test:**
-```bash
-vitest run --reporter=verbose --pool=threads "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts" -t "should have matching test count between index and summary"
-```
-
-**View logs:**
-```bash
-npm run logq -- reports/coreReporter.spec/should_have_matching_test_count_between_index_and_summary.jsonl
-```
-
-**Digest file:**
-`reports/coreReporter.spec/should_have_matching_test_count_between_index_and_summary.digest.md`
-
-## Context Events
-
-**Total context events:** 4
-
-_See JSON bundle for full event details_
diff --git a/reports/bundles/redaction.spec/redacts_API_keys.repro.json b/reports/bundles/redaction.spec/redacts_API_keys.repro.json
deleted file mode 100644
index f35f3dc..0000000
--- a/reports/bundles/redaction.spec/redacts_API_keys.repro.json
+++ /dev/null
@@ -1,94 +0,0 @@
-{
-  "metadata": {
-    "bundleVersion": "1.0.0",
-    "generated": "2025-10-12T20:18:06.206Z",
-    "testName": "redacts API keys",
-    "testFile": "/srv/repos0/mkolbol/tests/digest/redaction.spec.ts",
-    "status": "fail",
-    "duration": 2
-  },
-  "environment": {
-    "nodeVersion": "v24.9.0",
-    "platform": "linux x64"
-  },
-  "failure": {
-    "errorMessage": "expected 0 to be greater than 0",
-    "errorEvents": [
-      {
-        "ts": 1760299847741,
-        "lvl": "error",
-        "case": "redacts API keys",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected 0 to be greater than 0",
-          "stack": "AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/redaction.spec.ts:171:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"
-        }
-      },
-      {
-        "ts": 1760299847742,
-        "lvl": "error",
-        "case": "redacts API keys",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 2,
-          "status": "failed"
-        }
-      }
-    ],
-    "contextEvents": [
-      {
-        "ts": 1760299847739,
-        "lvl": "info",
-        "case": "redacts API keys",
-        "phase": "setup",
-        "evt": "case.begin",
-        "env": {
-          "nodeVersion": "v24.9.0",
-          "platform": "linux",
-          "arch": "x64",
-          "os": "Linux 6.8.0-85-generic",
-          "seed": 42,
-          "envVars": {
-            "NODE_ENV": "test"
-          }
-        },
-        "seed": 42
-      },
-      {
-        "ts": 1760299847740,
-        "lvl": "info",
-        "case": "redacts API keys",
-        "phase": "execution",
-        "evt": "test.run"
-      },
-      {
-        "ts": 1760299847741,
-        "lvl": "error",
-        "case": "redacts API keys",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected 0 to be greater than 0",
-          "stack": "AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/redaction.spec.ts:171:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"
-        }
-      },
-      {
-        "ts": 1760299847742,
-        "lvl": "error",
-        "case": "redacts API keys",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 2,
-          "status": "failed"
-        }
-      }
-    ]
-  },
-  "reproduction": {
-    "vitestCommand": "vitest run --reporter=verbose --pool=threads \"/srv/repos0/mkolbol/tests/digest/redaction.spec.ts\" -t \"redacts API keys\"",
-    "logCommand": "npm run logq -- reports/redaction.spec/redacts_API_keys.jsonl"
-  }
-}
\ No newline at end of file
diff --git a/reports/bundles/redaction.spec/redacts_API_keys.repro.md b/reports/bundles/redaction.spec/redacts_API_keys.repro.md
deleted file mode 100644
index 11aba50..0000000
--- a/reports/bundles/redaction.spec/redacts_API_keys.repro.md
+++ /dev/null
@@ -1,43 +0,0 @@
-# Reproduction Bundle: redacts API keys
-
-**Generated:** 2025-10-12T20:18:06.206Z
-**Status:** FAIL
-**Duration:** 2ms
-**Test File:** /srv/repos0/mkolbol/tests/digest/redaction.spec.ts
-
-## Environment
-
-- **Seed:** none
-- **Node:** v24.9.0
-- **Platform:** linux x64
-
-## Failure Summary
-
-**Error:**
-```
-expected 0 to be greater than 0
-```
-
-**Error Events:** 2
-
-- **test.error** (2025-10-12T20:10:47.741Z)
-  - expected 0 to be greater than 0
-- **case.end** (2025-10-12T20:10:47.742Z)
-
-## Reproduction Commands
-
-**Run test:**
-```bash
-vitest run --reporter=verbose --pool=threads "/srv/repos0/mkolbol/tests/digest/redaction.spec.ts" -t "redacts API keys"
-```
-
-**View logs:**
-```bash
-npm run logq -- reports/redaction.spec/redacts_API_keys.jsonl
-```
-
-## Context Events
-
-**Total context events:** 4
-
-_See JSON bundle for full event details_
diff --git a/reports/bundles/redaction.spec/redacts_AWS_access_keys.repro.json b/reports/bundles/redaction.spec/redacts_AWS_access_keys.repro.json
deleted file mode 100644
index d651002..0000000
--- a/reports/bundles/redaction.spec/redacts_AWS_access_keys.repro.json
+++ /dev/null
@@ -1,94 +0,0 @@
-{
-  "metadata": {
-    "bundleVersion": "1.0.0",
-    "generated": "2025-10-12T20:17:58.287Z",
-    "testName": "redacts AWS access keys",
-    "testFile": "/srv/repos0/mkolbol/tests/digest/redaction.spec.ts",
-    "status": "fail",
-    "duration": 2
-  },
-  "environment": {
-    "nodeVersion": "v24.9.0",
-    "platform": "linux x64"
-  },
-  "failure": {
-    "errorMessage": "expected 0 to be greater than 0",
-    "errorEvents": [
-      {
-        "ts": 1760299847741,
-        "lvl": "error",
-        "case": "redacts AWS access keys",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected 0 to be greater than 0",
-          "stack": "AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/redaction.spec.ts:112:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"
-        }
-      },
-      {
-        "ts": 1760299847742,
-        "lvl": "error",
-        "case": "redacts AWS access keys",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 2,
-          "status": "failed"
-        }
-      }
-    ],
-    "contextEvents": [
-      {
-        "ts": 1760299847739,
-        "lvl": "info",
-        "case": "redacts AWS access keys",
-        "phase": "setup",
-        "evt": "case.begin",
-        "env": {
-          "nodeVersion": "v24.9.0",
-          "platform": "linux",
-          "arch": "x64",
-          "os": "Linux 6.8.0-85-generic",
-          "seed": 42,
-          "envVars": {
-            "NODE_ENV": "test"
-          }
-        },
-        "seed": 42
-      },
-      {
-        "ts": 1760299847740,
-        "lvl": "info",
-        "case": "redacts AWS access keys",
-        "phase": "execution",
-        "evt": "test.run"
-      },
-      {
-        "ts": 1760299847741,
-        "lvl": "error",
-        "case": "redacts AWS access keys",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected 0 to be greater than 0",
-          "stack": "AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/redaction.spec.ts:112:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"
-        }
-      },
-      {
-        "ts": 1760299847742,
-        "lvl": "error",
-        "case": "redacts AWS access keys",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 2,
-          "status": "failed"
-        }
-      }
-    ]
-  },
-  "reproduction": {
-    "vitestCommand": "vitest run --reporter=verbose --pool=threads \"/srv/repos0/mkolbol/tests/digest/redaction.spec.ts\" -t \"redacts AWS access keys\"",
-    "logCommand": "npm run logq -- reports/redaction.spec/redacts_AWS_access_keys.jsonl"
-  }
-}
\ No newline at end of file
diff --git a/reports/bundles/redaction.spec/redacts_AWS_access_keys.repro.md b/reports/bundles/redaction.spec/redacts_AWS_access_keys.repro.md
deleted file mode 100644
index ea59936..0000000
--- a/reports/bundles/redaction.spec/redacts_AWS_access_keys.repro.md
+++ /dev/null
@@ -1,43 +0,0 @@
-# Reproduction Bundle: redacts AWS access keys
-
-**Generated:** 2025-10-12T20:17:58.287Z
-**Status:** FAIL
-**Duration:** 2ms
-**Test File:** /srv/repos0/mkolbol/tests/digest/redaction.spec.ts
-
-## Environment
-
-- **Seed:** none
-- **Node:** v24.9.0
-- **Platform:** linux x64
-
-## Failure Summary
-
-**Error:**
-```
-expected 0 to be greater than 0
-```
-
-**Error Events:** 2
-
-- **test.error** (2025-10-12T20:10:47.741Z)
-  - expected 0 to be greater than 0
-- **case.end** (2025-10-12T20:10:47.742Z)
-
-## Reproduction Commands
-
-**Run test:**
-```bash
-vitest run --reporter=verbose --pool=threads "/srv/repos0/mkolbol/tests/digest/redaction.spec.ts" -t "redacts AWS access keys"
-```
-
-**View logs:**
-```bash
-npm run logq -- reports/redaction.spec/redacts_AWS_access_keys.jsonl
-```
-
-## Context Events
-
-**Total context events:** 4
-
-_See JSON bundle for full event details_
diff --git a/reports/bundles/redaction.spec/redacts_AWS_secret_keys.repro.json b/reports/bundles/redaction.spec/redacts_AWS_secret_keys.repro.json
deleted file mode 100644
index 7581fb4..0000000
--- a/reports/bundles/redaction.spec/redacts_AWS_secret_keys.repro.json
+++ /dev/null
@@ -1,94 +0,0 @@
-{
-  "metadata": {
-    "bundleVersion": "1.0.0",
-    "generated": "2025-10-12T20:17:58.288Z",
-    "testName": "redacts AWS secret keys",
-    "testFile": "/srv/repos0/mkolbol/tests/digest/redaction.spec.ts",
-    "status": "fail",
-    "duration": 2
-  },
-  "environment": {
-    "nodeVersion": "v24.9.0",
-    "platform": "linux x64"
-  },
-  "failure": {
-    "errorMessage": "expected 0 to be greater than 0",
-    "errorEvents": [
-      {
-        "ts": 1760299847741,
-        "lvl": "error",
-        "case": "redacts AWS secret keys",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected 0 to be greater than 0",
-          "stack": "AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/redaction.spec.ts:140:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"
-        }
-      },
-      {
-        "ts": 1760299847742,
-        "lvl": "error",
-        "case": "redacts AWS secret keys",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 2,
-          "status": "failed"
-        }
-      }
-    ],
-    "contextEvents": [
-      {
-        "ts": 1760299847739,
-        "lvl": "info",
-        "case": "redacts AWS secret keys",
-        "phase": "setup",
-        "evt": "case.begin",
-        "env": {
-          "nodeVersion": "v24.9.0",
-          "platform": "linux",
-          "arch": "x64",
-          "os": "Linux 6.8.0-85-generic",
-          "seed": 42,
-          "envVars": {
-            "NODE_ENV": "test"
-          }
-        },
-        "seed": 42
-      },
-      {
-        "ts": 1760299847740,
-        "lvl": "info",
-        "case": "redacts AWS secret keys",
-        "phase": "execution",
-        "evt": "test.run"
-      },
-      {
-        "ts": 1760299847741,
-        "lvl": "error",
-        "case": "redacts AWS secret keys",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected 0 to be greater than 0",
-          "stack": "AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/redaction.spec.ts:140:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"
-        }
-      },
-      {
-        "ts": 1760299847742,
-        "lvl": "error",
-        "case": "redacts AWS secret keys",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 2,
-          "status": "failed"
-        }
-      }
-    ]
-  },
-  "reproduction": {
-    "vitestCommand": "vitest run --reporter=verbose --pool=threads \"/srv/repos0/mkolbol/tests/digest/redaction.spec.ts\" -t \"redacts AWS secret keys\"",
-    "logCommand": "npm run logq -- reports/redaction.spec/redacts_AWS_secret_keys.jsonl"
-  }
-}
\ No newline at end of file
diff --git a/reports/bundles/redaction.spec/redacts_AWS_secret_keys.repro.md b/reports/bundles/redaction.spec/redacts_AWS_secret_keys.repro.md
deleted file mode 100644
index a42592c..0000000
--- a/reports/bundles/redaction.spec/redacts_AWS_secret_keys.repro.md
+++ /dev/null
@@ -1,43 +0,0 @@
-# Reproduction Bundle: redacts AWS secret keys
-
-**Generated:** 2025-10-12T20:17:58.288Z
-**Status:** FAIL
-**Duration:** 2ms
-**Test File:** /srv/repos0/mkolbol/tests/digest/redaction.spec.ts
-
-## Environment
-
-- **Seed:** none
-- **Node:** v24.9.0
-- **Platform:** linux x64
-
-## Failure Summary
-
-**Error:**
-```
-expected 0 to be greater than 0
-```
-
-**Error Events:** 2
-
-- **test.error** (2025-10-12T20:10:47.741Z)
-  - expected 0 to be greater than 0
-- **case.end** (2025-10-12T20:10:47.742Z)
-
-## Reproduction Commands
-
-**Run test:**
-```bash
-vitest run --reporter=verbose --pool=threads "/srv/repos0/mkolbol/tests/digest/redaction.spec.ts" -t "redacts AWS secret keys"
-```
-
-**View logs:**
-```bash
-npm run logq -- reports/redaction.spec/redacts_AWS_secret_keys.jsonl
-```
-
-## Context Events
-
-**Total context events:** 4
-
-_See JSON bundle for full event details_
diff --git a/reports/bundles/redaction.spec/redacts_JWT_tokens_in_payload.repro.json b/reports/bundles/redaction.spec/redacts_JWT_tokens_in_payload.repro.json
deleted file mode 100644
index 8b90f8a..0000000
--- a/reports/bundles/redaction.spec/redacts_JWT_tokens_in_payload.repro.json
+++ /dev/null
@@ -1,94 +0,0 @@
-{
-  "metadata": {
-    "bundleVersion": "1.0.0",
-    "generated": "2025-10-12T20:17:58.286Z",
-    "testName": "redacts JWT tokens in payload",
-    "testFile": "/srv/repos0/mkolbol/tests/digest/redaction.spec.ts",
-    "status": "fail",
-    "duration": 22
-  },
-  "environment": {
-    "nodeVersion": "v24.9.0",
-    "platform": "linux x64"
-  },
-  "failure": {
-    "errorMessage": "expected 0 to be greater than 0",
-    "errorEvents": [
-      {
-        "ts": 1760299847740,
-        "lvl": "error",
-        "case": "redacts JWT tokens in payload",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected 0 to be greater than 0",
-          "stack": "AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/redaction.spec.ts:52:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"
-        }
-      },
-      {
-        "ts": 1760299847741,
-        "lvl": "error",
-        "case": "redacts JWT tokens in payload",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 22,
-          "status": "failed"
-        }
-      }
-    ],
-    "contextEvents": [
-      {
-        "ts": 1760299847738,
-        "lvl": "info",
-        "case": "redacts JWT tokens in payload",
-        "phase": "setup",
-        "evt": "case.begin",
-        "env": {
-          "nodeVersion": "v24.9.0",
-          "platform": "linux",
-          "arch": "x64",
-          "os": "Linux 6.8.0-85-generic",
-          "seed": 42,
-          "envVars": {
-            "NODE_ENV": "test"
-          }
-        },
-        "seed": 42
-      },
-      {
-        "ts": 1760299847739,
-        "lvl": "info",
-        "case": "redacts JWT tokens in payload",
-        "phase": "execution",
-        "evt": "test.run"
-      },
-      {
-        "ts": 1760299847740,
-        "lvl": "error",
-        "case": "redacts JWT tokens in payload",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected 0 to be greater than 0",
-          "stack": "AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/redaction.spec.ts:52:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"
-        }
-      },
-      {
-        "ts": 1760299847741,
-        "lvl": "error",
-        "case": "redacts JWT tokens in payload",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 22,
-          "status": "failed"
-        }
-      }
-    ]
-  },
-  "reproduction": {
-    "vitestCommand": "vitest run --reporter=verbose --pool=threads \"/srv/repos0/mkolbol/tests/digest/redaction.spec.ts\" -t \"redacts JWT tokens in payload\"",
-    "logCommand": "npm run logq -- reports/redaction.spec/redacts_JWT_tokens_in_payload.jsonl"
-  }
-}
\ No newline at end of file
diff --git a/reports/bundles/redaction.spec/redacts_JWT_tokens_in_payload.repro.md b/reports/bundles/redaction.spec/redacts_JWT_tokens_in_payload.repro.md
deleted file mode 100644
index d3342cd..0000000
--- a/reports/bundles/redaction.spec/redacts_JWT_tokens_in_payload.repro.md
+++ /dev/null
@@ -1,43 +0,0 @@
-# Reproduction Bundle: redacts JWT tokens in payload
-
-**Generated:** 2025-10-12T20:17:58.286Z
-**Status:** FAIL
-**Duration:** 22ms
-**Test File:** /srv/repos0/mkolbol/tests/digest/redaction.spec.ts
-
-## Environment
-
-- **Seed:** none
-- **Node:** v24.9.0
-- **Platform:** linux x64
-
-## Failure Summary
-
-**Error:**
-```
-expected 0 to be greater than 0
-```
-
-**Error Events:** 2
-
-- **test.error** (2025-10-12T20:10:47.740Z)
-  - expected 0 to be greater than 0
-- **case.end** (2025-10-12T20:10:47.741Z)
-
-## Reproduction Commands
-
-**Run test:**
-```bash
-vitest run --reporter=verbose --pool=threads "/srv/repos0/mkolbol/tests/digest/redaction.spec.ts" -t "redacts JWT tokens in payload"
-```
-
-**View logs:**
-```bash
-npm run logq -- reports/redaction.spec/redacts_JWT_tokens_in_payload.jsonl
-```
-
-## Context Events
-
-**Total context events:** 4
-
-_See JSON bundle for full event details_
diff --git a/reports/bundles/redaction.spec/redacts_JWT_tokens_in_string_fields.repro.json b/reports/bundles/redaction.spec/redacts_JWT_tokens_in_string_fields.repro.json
deleted file mode 100644
index c1ecebf..0000000
--- a/reports/bundles/redaction.spec/redacts_JWT_tokens_in_string_fields.repro.json
+++ /dev/null
@@ -1,94 +0,0 @@
-{
-  "metadata": {
-    "bundleVersion": "1.0.0",
-    "generated": "2025-10-12T20:17:58.287Z",
-    "testName": "redacts JWT tokens in string fields",
-    "testFile": "/srv/repos0/mkolbol/tests/digest/redaction.spec.ts",
-    "status": "fail",
-    "duration": 2
-  },
-  "environment": {
-    "nodeVersion": "v24.9.0",
-    "platform": "linux x64"
-  },
-  "failure": {
-    "errorMessage": "expected 0 to be greater than 0",
-    "errorEvents": [
-      {
-        "ts": 1760299847741,
-        "lvl": "error",
-        "case": "redacts JWT tokens in string fields",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected 0 to be greater than 0",
-          "stack": "AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/redaction.spec.ts:80:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"
-        }
-      },
-      {
-        "ts": 1760299847742,
-        "lvl": "error",
-        "case": "redacts JWT tokens in string fields",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 2,
-          "status": "failed"
-        }
-      }
-    ],
-    "contextEvents": [
-      {
-        "ts": 1760299847739,
-        "lvl": "info",
-        "case": "redacts JWT tokens in string fields",
-        "phase": "setup",
-        "evt": "case.begin",
-        "env": {
-          "nodeVersion": "v24.9.0",
-          "platform": "linux",
-          "arch": "x64",
-          "os": "Linux 6.8.0-85-generic",
-          "seed": 42,
-          "envVars": {
-            "NODE_ENV": "test"
-          }
-        },
-        "seed": 42
-      },
-      {
-        "ts": 1760299847740,
-        "lvl": "info",
-        "case": "redacts JWT tokens in string fields",
-        "phase": "execution",
-        "evt": "test.run"
-      },
-      {
-        "ts": 1760299847741,
-        "lvl": "error",
-        "case": "redacts JWT tokens in string fields",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected 0 to be greater than 0",
-          "stack": "AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/redaction.spec.ts:80:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"
-        }
-      },
-      {
-        "ts": 1760299847742,
-        "lvl": "error",
-        "case": "redacts JWT tokens in string fields",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 2,
-          "status": "failed"
-        }
-      }
-    ]
-  },
-  "reproduction": {
-    "vitestCommand": "vitest run --reporter=verbose --pool=threads \"/srv/repos0/mkolbol/tests/digest/redaction.spec.ts\" -t \"redacts JWT tokens in string fields\"",
-    "logCommand": "npm run logq -- reports/redaction.spec/redacts_JWT_tokens_in_string_fields.jsonl"
-  }
-}
\ No newline at end of file
diff --git a/reports/bundles/redaction.spec/redacts_JWT_tokens_in_string_fields.repro.md b/reports/bundles/redaction.spec/redacts_JWT_tokens_in_string_fields.repro.md
deleted file mode 100644
index 15a8a0f..0000000
--- a/reports/bundles/redaction.spec/redacts_JWT_tokens_in_string_fields.repro.md
+++ /dev/null
@@ -1,43 +0,0 @@
-# Reproduction Bundle: redacts JWT tokens in string fields
-
-**Generated:** 2025-10-12T20:17:58.287Z
-**Status:** FAIL
-**Duration:** 2ms
-**Test File:** /srv/repos0/mkolbol/tests/digest/redaction.spec.ts
-
-## Environment
-
-- **Seed:** none
-- **Node:** v24.9.0
-- **Platform:** linux x64
-
-## Failure Summary
-
-**Error:**
-```
-expected 0 to be greater than 0
-```
-
-**Error Events:** 2
-
-- **test.error** (2025-10-12T20:10:47.741Z)
-  - expected 0 to be greater than 0
-- **case.end** (2025-10-12T20:10:47.742Z)
-
-## Reproduction Commands
-
-**Run test:**
-```bash
-vitest run --reporter=verbose --pool=threads "/srv/repos0/mkolbol/tests/digest/redaction.spec.ts" -t "redacts JWT tokens in string fields"
-```
-
-**View logs:**
-```bash
-npm run logq -- reports/redaction.spec/redacts_JWT_tokens_in_string_fields.jsonl
-```
-
-## Context Events
-
-**Total context events:** 4
-
-_See JSON bundle for full event details_
diff --git a/reports/bundles/redaction.spec/redacts_RSA_private_keys.repro.json b/reports/bundles/redaction.spec/redacts_RSA_private_keys.repro.json
deleted file mode 100644
index 7d027ab..0000000
--- a/reports/bundles/redaction.spec/redacts_RSA_private_keys.repro.json
+++ /dev/null
@@ -1,94 +0,0 @@
-{
-  "metadata": {
-    "bundleVersion": "1.0.0",
-    "generated": "2025-10-12T20:17:58.289Z",
-    "testName": "redacts RSA private keys",
-    "testFile": "/srv/repos0/mkolbol/tests/digest/redaction.spec.ts",
-    "status": "fail",
-    "duration": 1
-  },
-  "environment": {
-    "nodeVersion": "v24.9.0",
-    "platform": "linux x64"
-  },
-  "failure": {
-    "errorMessage": "expected 0 to be greater than 0",
-    "errorEvents": [
-      {
-        "ts": 1760299847741,
-        "lvl": "error",
-        "case": "redacts RSA private keys",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected 0 to be greater than 0",
-          "stack": "AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/redaction.spec.ts:239:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"
-        }
-      },
-      {
-        "ts": 1760299847742,
-        "lvl": "error",
-        "case": "redacts RSA private keys",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 1,
-          "status": "failed"
-        }
-      }
-    ],
-    "contextEvents": [
-      {
-        "ts": 1760299847739,
-        "lvl": "info",
-        "case": "redacts RSA private keys",
-        "phase": "setup",
-        "evt": "case.begin",
-        "env": {
-          "nodeVersion": "v24.9.0",
-          "platform": "linux",
-          "arch": "x64",
-          "os": "Linux 6.8.0-85-generic",
-          "seed": 42,
-          "envVars": {
-            "NODE_ENV": "test"
-          }
-        },
-        "seed": 42
-      },
-      {
-        "ts": 1760299847740,
-        "lvl": "info",
-        "case": "redacts RSA private keys",
-        "phase": "execution",
-        "evt": "test.run"
-      },
-      {
-        "ts": 1760299847741,
-        "lvl": "error",
-        "case": "redacts RSA private keys",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected 0 to be greater than 0",
-          "stack": "AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/redaction.spec.ts:239:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"
-        }
-      },
-      {
-        "ts": 1760299847742,
-        "lvl": "error",
-        "case": "redacts RSA private keys",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 1,
-          "status": "failed"
-        }
-      }
-    ]
-  },
-  "reproduction": {
-    "vitestCommand": "vitest run --reporter=verbose --pool=threads \"/srv/repos0/mkolbol/tests/digest/redaction.spec.ts\" -t \"redacts RSA private keys\"",
-    "logCommand": "npm run logq -- reports/redaction.spec/redacts_RSA_private_keys.jsonl"
-  }
-}
\ No newline at end of file
diff --git a/reports/bundles/redaction.spec/redacts_RSA_private_keys.repro.md b/reports/bundles/redaction.spec/redacts_RSA_private_keys.repro.md
deleted file mode 100644
index ec627cf..0000000
--- a/reports/bundles/redaction.spec/redacts_RSA_private_keys.repro.md
+++ /dev/null
@@ -1,43 +0,0 @@
-# Reproduction Bundle: redacts RSA private keys
-
-**Generated:** 2025-10-12T20:17:58.289Z
-**Status:** FAIL
-**Duration:** 1ms
-**Test File:** /srv/repos0/mkolbol/tests/digest/redaction.spec.ts
-
-## Environment
-
-- **Seed:** none
-- **Node:** v24.9.0
-- **Platform:** linux x64
-
-## Failure Summary
-
-**Error:**
-```
-expected 0 to be greater than 0
-```
-
-**Error Events:** 2
-
-- **test.error** (2025-10-12T20:10:47.741Z)
-  - expected 0 to be greater than 0
-- **case.end** (2025-10-12T20:10:47.742Z)
-
-## Reproduction Commands
-
-**Run test:**
-```bash
-vitest run --reporter=verbose --pool=threads "/srv/repos0/mkolbol/tests/digest/redaction.spec.ts" -t "redacts RSA private keys"
-```
-
-**View logs:**
-```bash
-npm run logq -- reports/redaction.spec/redacts_RSA_private_keys.jsonl
-```
-
-## Context Events
-
-**Total context events:** 4
-
-_See JSON bundle for full event details_
diff --git a/reports/bundles/redaction.spec/redacts_credentials_from_URLs.repro.json b/reports/bundles/redaction.spec/redacts_credentials_from_URLs.repro.json
deleted file mode 100644
index e9e1170..0000000
--- a/reports/bundles/redaction.spec/redacts_credentials_from_URLs.repro.json
+++ /dev/null
@@ -1,94 +0,0 @@
-{
-  "metadata": {
-    "bundleVersion": "1.0.0",
-    "generated": "2025-10-12T20:17:58.288Z",
-    "testName": "redacts credentials from URLs",
-    "testFile": "/srv/repos0/mkolbol/tests/digest/redaction.spec.ts",
-    "status": "fail",
-    "duration": 2
-  },
-  "environment": {
-    "nodeVersion": "v24.9.0",
-    "platform": "linux x64"
-  },
-  "failure": {
-    "errorMessage": "expected 0 to be greater than 0",
-    "errorEvents": [
-      {
-        "ts": 1760299847741,
-        "lvl": "error",
-        "case": "redacts credentials from URLs",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected 0 to be greater than 0",
-          "stack": "AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/redaction.spec.ts:202:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"
-        }
-      },
-      {
-        "ts": 1760299847742,
-        "lvl": "error",
-        "case": "redacts credentials from URLs",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 2,
-          "status": "failed"
-        }
-      }
-    ],
-    "contextEvents": [
-      {
-        "ts": 1760299847739,
-        "lvl": "info",
-        "case": "redacts credentials from URLs",
-        "phase": "setup",
-        "evt": "case.begin",
-        "env": {
-          "nodeVersion": "v24.9.0",
-          "platform": "linux",
-          "arch": "x64",
-          "os": "Linux 6.8.0-85-generic",
-          "seed": 42,
-          "envVars": {
-            "NODE_ENV": "test"
-          }
-        },
-        "seed": 42
-      },
-      {
-        "ts": 1760299847740,
-        "lvl": "info",
-        "case": "redacts credentials from URLs",
-        "phase": "execution",
-        "evt": "test.run"
-      },
-      {
-        "ts": 1760299847741,
-        "lvl": "error",
-        "case": "redacts credentials from URLs",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected 0 to be greater than 0",
-          "stack": "AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/redaction.spec.ts:202:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"
-        }
-      },
-      {
-        "ts": 1760299847742,
-        "lvl": "error",
-        "case": "redacts credentials from URLs",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 2,
-          "status": "failed"
-        }
-      }
-    ]
-  },
-  "reproduction": {
-    "vitestCommand": "vitest run --reporter=verbose --pool=threads \"/srv/repos0/mkolbol/tests/digest/redaction.spec.ts\" -t \"redacts credentials from URLs\"",
-    "logCommand": "npm run logq -- reports/redaction.spec/redacts_credentials_from_URLs.jsonl"
-  }
-}
\ No newline at end of file
diff --git a/reports/bundles/redaction.spec/redacts_credentials_from_URLs.repro.md b/reports/bundles/redaction.spec/redacts_credentials_from_URLs.repro.md
deleted file mode 100644
index 30eedd6..0000000
--- a/reports/bundles/redaction.spec/redacts_credentials_from_URLs.repro.md
+++ /dev/null
@@ -1,43 +0,0 @@
-# Reproduction Bundle: redacts credentials from URLs
-
-**Generated:** 2025-10-12T20:17:58.288Z
-**Status:** FAIL
-**Duration:** 2ms
-**Test File:** /srv/repos0/mkolbol/tests/digest/redaction.spec.ts
-
-## Environment
-
-- **Seed:** none
-- **Node:** v24.9.0
-- **Platform:** linux x64
-
-## Failure Summary
-
-**Error:**
-```
-expected 0 to be greater than 0
-```
-
-**Error Events:** 2
-
-- **test.error** (2025-10-12T20:10:47.741Z)
-  - expected 0 to be greater than 0
-- **case.end** (2025-10-12T20:10:47.742Z)
-
-## Reproduction Commands
-
-**Run test:**
-```bash
-vitest run --reporter=verbose --pool=threads "/srv/repos0/mkolbol/tests/digest/redaction.spec.ts" -t "redacts credentials from URLs"
-```
-
-**View logs:**
-```bash
-npm run logq -- reports/redaction.spec/redacts_credentials_from_URLs.jsonl
-```
-
-## Context Events
-
-**Total context events:** 4
-
-_See JSON bundle for full event details_
diff --git a/reports/bundles/redaction.spec/redacts_secrets_in_arrays.repro.json b/reports/bundles/redaction.spec/redacts_secrets_in_arrays.repro.json
deleted file mode 100644
index 8293fbf..0000000
--- a/reports/bundles/redaction.spec/redacts_secrets_in_arrays.repro.json
+++ /dev/null
@@ -1,94 +0,0 @@
-{
-  "metadata": {
-    "bundleVersion": "1.0.0",
-    "generated": "2025-10-12T20:17:58.289Z",
-    "testName": "redacts secrets in arrays",
-    "testFile": "/srv/repos0/mkolbol/tests/digest/redaction.spec.ts",
-    "status": "fail",
-    "duration": 1
-  },
-  "environment": {
-    "nodeVersion": "v24.9.0",
-    "platform": "linux x64"
-  },
-  "failure": {
-    "errorMessage": "expected 0 to be greater than 0",
-    "errorEvents": [
-      {
-        "ts": 1760299847742,
-        "lvl": "error",
-        "case": "redacts secrets in arrays",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected 0 to be greater than 0",
-          "stack": "AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/redaction.spec.ts:423:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"
-        }
-      },
-      {
-        "ts": 1760299847743,
-        "lvl": "error",
-        "case": "redacts secrets in arrays",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 1,
-          "status": "failed"
-        }
-      }
-    ],
-    "contextEvents": [
-      {
-        "ts": 1760299847740,
-        "lvl": "info",
-        "case": "redacts secrets in arrays",
-        "phase": "setup",
-        "evt": "case.begin",
-        "env": {
-          "nodeVersion": "v24.9.0",
-          "platform": "linux",
-          "arch": "x64",
-          "os": "Linux 6.8.0-85-generic",
-          "seed": 42,
-          "envVars": {
-            "NODE_ENV": "test"
-          }
-        },
-        "seed": 42
-      },
-      {
-        "ts": 1760299847741,
-        "lvl": "info",
-        "case": "redacts secrets in arrays",
-        "phase": "execution",
-        "evt": "test.run"
-      },
-      {
-        "ts": 1760299847742,
-        "lvl": "error",
-        "case": "redacts secrets in arrays",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected 0 to be greater than 0",
-          "stack": "AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/redaction.spec.ts:423:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"
-        }
-      },
-      {
-        "ts": 1760299847743,
-        "lvl": "error",
-        "case": "redacts secrets in arrays",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 1,
-          "status": "failed"
-        }
-      }
-    ]
-  },
-  "reproduction": {
-    "vitestCommand": "vitest run --reporter=verbose --pool=threads \"/srv/repos0/mkolbol/tests/digest/redaction.spec.ts\" -t \"redacts secrets in arrays\"",
-    "logCommand": "npm run logq -- reports/redaction.spec/redacts_secrets_in_arrays.jsonl"
-  }
-}
\ No newline at end of file
diff --git a/reports/bundles/redaction.spec/redacts_secrets_in_arrays.repro.md b/reports/bundles/redaction.spec/redacts_secrets_in_arrays.repro.md
deleted file mode 100644
index 489aa6c..0000000
--- a/reports/bundles/redaction.spec/redacts_secrets_in_arrays.repro.md
+++ /dev/null
@@ -1,43 +0,0 @@
-# Reproduction Bundle: redacts secrets in arrays
-
-**Generated:** 2025-10-12T20:17:58.289Z
-**Status:** FAIL
-**Duration:** 1ms
-**Test File:** /srv/repos0/mkolbol/tests/digest/redaction.spec.ts
-
-## Environment
-
-- **Seed:** none
-- **Node:** v24.9.0
-- **Platform:** linux x64
-
-## Failure Summary
-
-**Error:**
-```
-expected 0 to be greater than 0
-```
-
-**Error Events:** 2
-
-- **test.error** (2025-10-12T20:10:47.742Z)
-  - expected 0 to be greater than 0
-- **case.end** (2025-10-12T20:10:47.743Z)
-
-## Reproduction Commands
-
-**Run test:**
-```bash
-vitest run --reporter=verbose --pool=threads "/srv/repos0/mkolbol/tests/digest/redaction.spec.ts" -t "redacts secrets in arrays"
-```
-
-**View logs:**
-```bash
-npm run logq -- reports/redaction.spec/redacts_secrets_in_arrays.jsonl
-```
-
-## Context Events
-
-**Total context events:** 4
-
-_See JSON bundle for full event details_
diff --git a/reports/bundles/redaction.spec/redacts_secrets_in_nested_objects.repro.json b/reports/bundles/redaction.spec/redacts_secrets_in_nested_objects.repro.json
deleted file mode 100644
index af7cfc0..0000000
--- a/reports/bundles/redaction.spec/redacts_secrets_in_nested_objects.repro.json
+++ /dev/null
@@ -1,94 +0,0 @@
-{
-  "metadata": {
-    "bundleVersion": "1.0.0",
-    "generated": "2025-10-12T20:17:58.289Z",
-    "testName": "redacts secrets in nested objects",
-    "testFile": "/srv/repos0/mkolbol/tests/digest/redaction.spec.ts",
-    "status": "fail",
-    "duration": 2
-  },
-  "environment": {
-    "nodeVersion": "v24.9.0",
-    "platform": "linux x64"
-  },
-  "failure": {
-    "errorMessage": "expected 0 to be greater than 0",
-    "errorEvents": [
-      {
-        "ts": 1760299847742,
-        "lvl": "error",
-        "case": "redacts secrets in nested objects",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected 0 to be greater than 0",
-          "stack": "AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/redaction.spec.ts:389:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"
-        }
-      },
-      {
-        "ts": 1760299847743,
-        "lvl": "error",
-        "case": "redacts secrets in nested objects",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 2,
-          "status": "failed"
-        }
-      }
-    ],
-    "contextEvents": [
-      {
-        "ts": 1760299847740,
-        "lvl": "info",
-        "case": "redacts secrets in nested objects",
-        "phase": "setup",
-        "evt": "case.begin",
-        "env": {
-          "nodeVersion": "v24.9.0",
-          "platform": "linux",
-          "arch": "x64",
-          "os": "Linux 6.8.0-85-generic",
-          "seed": 42,
-          "envVars": {
-            "NODE_ENV": "test"
-          }
-        },
-        "seed": 42
-      },
-      {
-        "ts": 1760299847741,
-        "lvl": "info",
-        "case": "redacts secrets in nested objects",
-        "phase": "execution",
-        "evt": "test.run"
-      },
-      {
-        "ts": 1760299847742,
-        "lvl": "error",
-        "case": "redacts secrets in nested objects",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected 0 to be greater than 0",
-          "stack": "AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/redaction.spec.ts:389:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"
-        }
-      },
-      {
-        "ts": 1760299847743,
-        "lvl": "error",
-        "case": "redacts secrets in nested objects",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 2,
-          "status": "failed"
-        }
-      }
-    ]
-  },
-  "reproduction": {
-    "vitestCommand": "vitest run --reporter=verbose --pool=threads \"/srv/repos0/mkolbol/tests/digest/redaction.spec.ts\" -t \"redacts secrets in nested objects\"",
-    "logCommand": "npm run logq -- reports/redaction.spec/redacts_secrets_in_nested_objects.jsonl"
-  }
-}
\ No newline at end of file
diff --git a/reports/bundles/redaction.spec/redacts_secrets_in_nested_objects.repro.md b/reports/bundles/redaction.spec/redacts_secrets_in_nested_objects.repro.md
deleted file mode 100644
index 75af6b0..0000000
--- a/reports/bundles/redaction.spec/redacts_secrets_in_nested_objects.repro.md
+++ /dev/null
@@ -1,43 +0,0 @@
-# Reproduction Bundle: redacts secrets in nested objects
-
-**Generated:** 2025-10-12T20:17:58.289Z
-**Status:** FAIL
-**Duration:** 2ms
-**Test File:** /srv/repos0/mkolbol/tests/digest/redaction.spec.ts
-
-## Environment
-
-- **Seed:** none
-- **Node:** v24.9.0
-- **Platform:** linux x64
-
-## Failure Summary
-
-**Error:**
-```
-expected 0 to be greater than 0
-```
-
-**Error Events:** 2
-
-- **test.error** (2025-10-12T20:10:47.742Z)
-  - expected 0 to be greater than 0
-- **case.end** (2025-10-12T20:10:47.743Z)
-
-## Reproduction Commands
-
-**Run test:**
-```bash
-vitest run --reporter=verbose --pool=threads "/srv/repos0/mkolbol/tests/digest/redaction.spec.ts" -t "redacts secrets in nested objects"
-```
-
-**View logs:**
-```bash
-npm run logq -- reports/redaction.spec/redacts_secrets_in_nested_objects.jsonl
-```
-
-## Context Events
-
-**Total context events:** 4
-
-_See JSON bundle for full event details_
diff --git a/reports/bundles/rulepacks.spec/detects_and_redacts_all_secret_types_in_one_event.repro.json b/reports/bundles/rulepacks.spec/detects_and_redacts_all_secret_types_in_one_event.repro.json
deleted file mode 100644
index 01eca4b..0000000
--- a/reports/bundles/rulepacks.spec/detects_and_redacts_all_secret_types_in_one_event.repro.json
+++ /dev/null
@@ -1,94 +0,0 @@
-{
-  "metadata": {
-    "bundleVersion": "1.0.0",
-    "generated": "2025-10-12T20:17:58.293Z",
-    "testName": "detects and redacts all secret types in one event",
-    "testFile": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts",
-    "status": "fail",
-    "duration": 5
-  },
-  "environment": {
-    "nodeVersion": "v24.9.0",
-    "platform": "linux x64"
-  },
-  "failure": {
-    "errorMessage": "expected +0 to be 6 // Object.is equality",
-    "errorEvents": [
-      {
-        "ts": 1760299847841,
-        "lvl": "error",
-        "case": "detects and redacts all secret types in one event",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected +0 to be 6 // Object.is equality",
-          "stack": "AssertionError: expected +0 to be 6 // Object.is equality\n    at /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:717:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"
-        }
-      },
-      {
-        "ts": 1760299847842,
-        "lvl": "error",
-        "case": "detects and redacts all secret types in one event",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 5,
-          "status": "failed"
-        }
-      }
-    ],
-    "contextEvents": [
-      {
-        "ts": 1760299847839,
-        "lvl": "info",
-        "case": "detects and redacts all secret types in one event",
-        "phase": "setup",
-        "evt": "case.begin",
-        "env": {
-          "nodeVersion": "v24.9.0",
-          "platform": "linux",
-          "arch": "x64",
-          "os": "Linux 6.8.0-85-generic",
-          "seed": 42,
-          "envVars": {
-            "NODE_ENV": "test"
-          }
-        },
-        "seed": 42
-      },
-      {
-        "ts": 1760299847840,
-        "lvl": "info",
-        "case": "detects and redacts all secret types in one event",
-        "phase": "execution",
-        "evt": "test.run"
-      },
-      {
-        "ts": 1760299847841,
-        "lvl": "error",
-        "case": "detects and redacts all secret types in one event",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected +0 to be 6 // Object.is equality",
-          "stack": "AssertionError: expected +0 to be 6 // Object.is equality\n    at /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:717:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"
-        }
-      },
-      {
-        "ts": 1760299847842,
-        "lvl": "error",
-        "case": "detects and redacts all secret types in one event",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 5,
-          "status": "failed"
-        }
-      }
-    ]
-  },
-  "reproduction": {
-    "vitestCommand": "vitest run --reporter=verbose --pool=threads \"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts\" -t \"detects and redacts all secret types in one event\"",
-    "logCommand": "npm run logq -- reports/rulepacks.spec/detects_and_redacts_all_secret_types_in_one_event.jsonl"
-  }
-}
\ No newline at end of file
diff --git a/reports/bundles/rulepacks.spec/detects_and_redacts_all_secret_types_in_one_event.repro.md b/reports/bundles/rulepacks.spec/detects_and_redacts_all_secret_types_in_one_event.repro.md
deleted file mode 100644
index 5f3a3c2..0000000
--- a/reports/bundles/rulepacks.spec/detects_and_redacts_all_secret_types_in_one_event.repro.md
+++ /dev/null
@@ -1,43 +0,0 @@
-# Reproduction Bundle: detects and redacts all secret types in one event
-
-**Generated:** 2025-10-12T20:17:58.293Z
-**Status:** FAIL
-**Duration:** 5ms
-**Test File:** /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts
-
-## Environment
-
-- **Seed:** none
-- **Node:** v24.9.0
-- **Platform:** linux x64
-
-## Failure Summary
-
-**Error:**
-```
-expected +0 to be 6 // Object.is equality
-```
-
-**Error Events:** 2
-
-- **test.error** (2025-10-12T20:10:47.841Z)
-  - expected +0 to be 6 // Object.is equality
-- **case.end** (2025-10-12T20:10:47.842Z)
-
-## Reproduction Commands
-
-**Run test:**
-```bash
-vitest run --reporter=verbose --pool=threads "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts" -t "detects and redacts all secret types in one event"
-```
-
-**View logs:**
-```bash
-npm run logq -- reports/rulepacks.spec/detects_and_redacts_all_secret_types_in_one_event.jsonl
-```
-
-## Context Events
-
-**Total context events:** 4
-
-_See JSON bundle for full event details_
diff --git a/reports/bundles/rulepacks.spec/enforces_budget_after_redaction.repro.json b/reports/bundles/rulepacks.spec/enforces_budget_after_redaction.repro.json
deleted file mode 100644
index 3e4a800..0000000
--- a/reports/bundles/rulepacks.spec/enforces_budget_after_redaction.repro.json
+++ /dev/null
@@ -1,94 +0,0 @@
-{
-  "metadata": {
-    "bundleVersion": "1.0.0",
-    "generated": "2025-10-12T20:17:58.294Z",
-    "testName": "enforces budget after redaction",
-    "testFile": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts",
-    "status": "fail",
-    "duration": 6
-  },
-  "environment": {
-    "nodeVersion": "v24.9.0",
-    "platform": "linux x64"
-  },
-  "failure": {
-    "errorMessage": "expected 0 to be greater than 0",
-    "errorEvents": [
-      {
-        "ts": 1760299847842,
-        "lvl": "error",
-        "case": "enforces budget after redaction",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected 0 to be greater than 0",
-          "stack": "AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:928:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"
-        }
-      },
-      {
-        "ts": 1760299847843,
-        "lvl": "error",
-        "case": "enforces budget after redaction",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 6,
-          "status": "failed"
-        }
-      }
-    ],
-    "contextEvents": [
-      {
-        "ts": 1760299847840,
-        "lvl": "info",
-        "case": "enforces budget after redaction",
-        "phase": "setup",
-        "evt": "case.begin",
-        "env": {
-          "nodeVersion": "v24.9.0",
-          "platform": "linux",
-          "arch": "x64",
-          "os": "Linux 6.8.0-85-generic",
-          "seed": 42,
-          "envVars": {
-            "NODE_ENV": "test"
-          }
-        },
-        "seed": 42
-      },
-      {
-        "ts": 1760299847841,
-        "lvl": "info",
-        "case": "enforces budget after redaction",
-        "phase": "execution",
-        "evt": "test.run"
-      },
-      {
-        "ts": 1760299847842,
-        "lvl": "error",
-        "case": "enforces budget after redaction",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected 0 to be greater than 0",
-          "stack": "AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:928:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"
-        }
-      },
-      {
-        "ts": 1760299847843,
-        "lvl": "error",
-        "case": "enforces budget after redaction",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 6,
-          "status": "failed"
-        }
-      }
-    ]
-  },
-  "reproduction": {
-    "vitestCommand": "vitest run --reporter=verbose --pool=threads \"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts\" -t \"enforces budget after redaction\"",
-    "logCommand": "npm run logq -- reports/rulepacks.spec/enforces_budget_after_redaction.jsonl"
-  }
-}
\ No newline at end of file
diff --git a/reports/bundles/rulepacks.spec/enforces_budget_after_redaction.repro.md b/reports/bundles/rulepacks.spec/enforces_budget_after_redaction.repro.md
deleted file mode 100644
index bf14add..0000000
--- a/reports/bundles/rulepacks.spec/enforces_budget_after_redaction.repro.md
+++ /dev/null
@@ -1,43 +0,0 @@
-# Reproduction Bundle: enforces budget after redaction
-
-**Generated:** 2025-10-12T20:17:58.294Z
-**Status:** FAIL
-**Duration:** 6ms
-**Test File:** /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts
-
-## Environment
-
-- **Seed:** none
-- **Node:** v24.9.0
-- **Platform:** linux x64
-
-## Failure Summary
-
-**Error:**
-```
-expected 0 to be greater than 0
-```
-
-**Error Events:** 2
-
-- **test.error** (2025-10-12T20:10:47.842Z)
-  - expected 0 to be greater than 0
-- **case.end** (2025-10-12T20:10:47.843Z)
-
-## Reproduction Commands
-
-**Run test:**
-```bash
-vitest run --reporter=verbose --pool=threads "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts" -t "enforces budget after redaction"
-```
-
-**View logs:**
-```bash
-npm run logq -- reports/rulepacks.spec/enforces_budget_after_redaction.jsonl
-```
-
-## Context Events
-
-**Total context events:** 4
-
-_See JSON bundle for full event details_
diff --git a/reports/bundles/rulepacks.spec/handles_nested_secrets_in_complex_objects.repro.json b/reports/bundles/rulepacks.spec/handles_nested_secrets_in_complex_objects.repro.json
deleted file mode 100644
index d57888a..0000000
--- a/reports/bundles/rulepacks.spec/handles_nested_secrets_in_complex_objects.repro.json
+++ /dev/null
@@ -1,94 +0,0 @@
-{
-  "metadata": {
-    "bundleVersion": "1.0.0",
-    "generated": "2025-10-12T20:17:58.293Z",
-    "testName": "handles nested secrets in complex objects",
-    "testFile": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts",
-    "status": "fail",
-    "duration": 1
-  },
-  "environment": {
-    "nodeVersion": "v24.9.0",
-    "platform": "linux x64"
-  },
-  "failure": {
-    "errorMessage": "expected +0 to be 4 // Object.is equality",
-    "errorEvents": [
-      {
-        "ts": 1760299847842,
-        "lvl": "error",
-        "case": "handles nested secrets in complex objects",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected +0 to be 4 // Object.is equality",
-          "stack": "AssertionError: expected +0 to be 4 // Object.is equality\n    at /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:811:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"
-        }
-      },
-      {
-        "ts": 1760299847843,
-        "lvl": "error",
-        "case": "handles nested secrets in complex objects",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 1,
-          "status": "failed"
-        }
-      }
-    ],
-    "contextEvents": [
-      {
-        "ts": 1760299847840,
-        "lvl": "info",
-        "case": "handles nested secrets in complex objects",
-        "phase": "setup",
-        "evt": "case.begin",
-        "env": {
-          "nodeVersion": "v24.9.0",
-          "platform": "linux",
-          "arch": "x64",
-          "os": "Linux 6.8.0-85-generic",
-          "seed": 42,
-          "envVars": {
-            "NODE_ENV": "test"
-          }
-        },
-        "seed": 42
-      },
-      {
-        "ts": 1760299847841,
-        "lvl": "info",
-        "case": "handles nested secrets in complex objects",
-        "phase": "execution",
-        "evt": "test.run"
-      },
-      {
-        "ts": 1760299847842,
-        "lvl": "error",
-        "case": "handles nested secrets in complex objects",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected +0 to be 4 // Object.is equality",
-          "stack": "AssertionError: expected +0 to be 4 // Object.is equality\n    at /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:811:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"
-        }
-      },
-      {
-        "ts": 1760299847843,
-        "lvl": "error",
-        "case": "handles nested secrets in complex objects",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 1,
-          "status": "failed"
-        }
-      }
-    ]
-  },
-  "reproduction": {
-    "vitestCommand": "vitest run --reporter=verbose --pool=threads \"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts\" -t \"handles nested secrets in complex objects\"",
-    "logCommand": "npm run logq -- reports/rulepacks.spec/handles_nested_secrets_in_complex_objects.jsonl"
-  }
-}
\ No newline at end of file
diff --git a/reports/bundles/rulepacks.spec/handles_nested_secrets_in_complex_objects.repro.md b/reports/bundles/rulepacks.spec/handles_nested_secrets_in_complex_objects.repro.md
deleted file mode 100644
index b06d335..0000000
--- a/reports/bundles/rulepacks.spec/handles_nested_secrets_in_complex_objects.repro.md
+++ /dev/null
@@ -1,43 +0,0 @@
-# Reproduction Bundle: handles nested secrets in complex objects
-
-**Generated:** 2025-10-12T20:17:58.293Z
-**Status:** FAIL
-**Duration:** 1ms
-**Test File:** /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts
-
-## Environment
-
-- **Seed:** none
-- **Node:** v24.9.0
-- **Platform:** linux x64
-
-## Failure Summary
-
-**Error:**
-```
-expected +0 to be 4 // Object.is equality
-```
-
-**Error Events:** 2
-
-- **test.error** (2025-10-12T20:10:47.842Z)
-  - expected +0 to be 4 // Object.is equality
-- **case.end** (2025-10-12T20:10:47.843Z)
-
-## Reproduction Commands
-
-**Run test:**
-```bash
-vitest run --reporter=verbose --pool=threads "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts" -t "handles nested secrets in complex objects"
-```
-
-**View logs:**
-```bash
-npm run logq -- reports/rulepacks.spec/handles_nested_secrets_in_complex_objects.jsonl
-```
-
-## Context Events
-
-**Total context events:** 4
-
-_See JSON bundle for full event details_
diff --git a/reports/bundles/rulepacks.spec/redacts_API_keys_in_test_events.repro.json b/reports/bundles/rulepacks.spec/redacts_API_keys_in_test_events.repro.json
deleted file mode 100644
index 73f87ea..0000000
--- a/reports/bundles/rulepacks.spec/redacts_API_keys_in_test_events.repro.json
+++ /dev/null
@@ -1,94 +0,0 @@
-{
-  "metadata": {
-    "bundleVersion": "1.0.0",
-    "generated": "2025-10-12T20:17:58.291Z",
-    "testName": "redacts API keys in test events",
-    "testFile": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts",
-    "status": "fail",
-    "duration": 1
-  },
-  "environment": {
-    "nodeVersion": "v24.9.0",
-    "platform": "linux x64"
-  },
-  "failure": {
-    "errorMessage": "expected 0 to be greater than 0",
-    "errorEvents": [
-      {
-        "ts": 1760299847840,
-        "lvl": "error",
-        "case": "redacts API keys in test events",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected 0 to be greater than 0",
-          "stack": "AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:408:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"
-        }
-      },
-      {
-        "ts": 1760299847841,
-        "lvl": "error",
-        "case": "redacts API keys in test events",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 1,
-          "status": "failed"
-        }
-      }
-    ],
-    "contextEvents": [
-      {
-        "ts": 1760299847838,
-        "lvl": "info",
-        "case": "redacts API keys in test events",
-        "phase": "setup",
-        "evt": "case.begin",
-        "env": {
-          "nodeVersion": "v24.9.0",
-          "platform": "linux",
-          "arch": "x64",
-          "os": "Linux 6.8.0-85-generic",
-          "seed": 42,
-          "envVars": {
-            "NODE_ENV": "test"
-          }
-        },
-        "seed": 42
-      },
-      {
-        "ts": 1760299847839,
-        "lvl": "info",
-        "case": "redacts API keys in test events",
-        "phase": "execution",
-        "evt": "test.run"
-      },
-      {
-        "ts": 1760299847840,
-        "lvl": "error",
-        "case": "redacts API keys in test events",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected 0 to be greater than 0",
-          "stack": "AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:408:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"
-        }
-      },
-      {
-        "ts": 1760299847841,
-        "lvl": "error",
-        "case": "redacts API keys in test events",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 1,
-          "status": "failed"
-        }
-      }
-    ]
-  },
-  "reproduction": {
-    "vitestCommand": "vitest run --reporter=verbose --pool=threads \"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts\" -t \"redacts API keys in test events\"",
-    "logCommand": "npm run logq -- reports/rulepacks.spec/redacts_API_keys_in_test_events.jsonl"
-  }
-}
\ No newline at end of file
diff --git a/reports/bundles/rulepacks.spec/redacts_API_keys_in_test_events.repro.md b/reports/bundles/rulepacks.spec/redacts_API_keys_in_test_events.repro.md
deleted file mode 100644
index df3370f..0000000
--- a/reports/bundles/rulepacks.spec/redacts_API_keys_in_test_events.repro.md
+++ /dev/null
@@ -1,43 +0,0 @@
-# Reproduction Bundle: redacts API keys in test events
-
-**Generated:** 2025-10-12T20:17:58.291Z
-**Status:** FAIL
-**Duration:** 1ms
-**Test File:** /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts
-
-## Environment
-
-- **Seed:** none
-- **Node:** v24.9.0
-- **Platform:** linux x64
-
-## Failure Summary
-
-**Error:**
-```
-expected 0 to be greater than 0
-```
-
-**Error Events:** 2
-
-- **test.error** (2025-10-12T20:10:47.840Z)
-  - expected 0 to be greater than 0
-- **case.end** (2025-10-12T20:10:47.841Z)
-
-## Reproduction Commands
-
-**Run test:**
-```bash
-vitest run --reporter=verbose --pool=threads "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts" -t "redacts API keys in test events"
-```
-
-**View logs:**
-```bash
-npm run logq -- reports/rulepacks.spec/redacts_API_keys_in_test_events.jsonl
-```
-
-## Context Events
-
-**Total context events:** 4
-
-_See JSON bundle for full event details_
diff --git a/reports/bundles/rulepacks.spec/redacts_AWS_credentials_in_Go_test_logs.repro.json b/reports/bundles/rulepacks.spec/redacts_AWS_credentials_in_Go_test_logs.repro.json
deleted file mode 100644
index 8cc5515..0000000
--- a/reports/bundles/rulepacks.spec/redacts_AWS_credentials_in_Go_test_logs.repro.json
+++ /dev/null
@@ -1,94 +0,0 @@
-{
-  "metadata": {
-    "bundleVersion": "1.0.0",
-    "generated": "2025-10-12T20:17:58.292Z",
-    "testName": "redacts AWS credentials in Go test logs",
-    "testFile": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts",
-    "status": "fail",
-    "duration": 1
-  },
-  "environment": {
-    "nodeVersion": "v24.9.0",
-    "platform": "linux x64"
-  },
-  "failure": {
-    "errorMessage": "expected 0 to be greater than 0",
-    "errorEvents": [
-      {
-        "ts": 1760299847841,
-        "lvl": "error",
-        "case": "redacts AWS credentials in Go test logs",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected 0 to be greater than 0",
-          "stack": "AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:543:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"
-        }
-      },
-      {
-        "ts": 1760299847842,
-        "lvl": "error",
-        "case": "redacts AWS credentials in Go test logs",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 1,
-          "status": "failed"
-        }
-      }
-    ],
-    "contextEvents": [
-      {
-        "ts": 1760299847839,
-        "lvl": "info",
-        "case": "redacts AWS credentials in Go test logs",
-        "phase": "setup",
-        "evt": "case.begin",
-        "env": {
-          "nodeVersion": "v24.9.0",
-          "platform": "linux",
-          "arch": "x64",
-          "os": "Linux 6.8.0-85-generic",
-          "seed": 42,
-          "envVars": {
-            "NODE_ENV": "test"
-          }
-        },
-        "seed": 42
-      },
-      {
-        "ts": 1760299847840,
-        "lvl": "info",
-        "case": "redacts AWS credentials in Go test logs",
-        "phase": "execution",
-        "evt": "test.run"
-      },
-      {
-        "ts": 1760299847841,
-        "lvl": "error",
-        "case": "redacts AWS credentials in Go test logs",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected 0 to be greater than 0",
-          "stack": "AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:543:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"
-        }
-      },
-      {
-        "ts": 1760299847842,
-        "lvl": "error",
-        "case": "redacts AWS credentials in Go test logs",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 1,
-          "status": "failed"
-        }
-      }
-    ]
-  },
-  "reproduction": {
-    "vitestCommand": "vitest run --reporter=verbose --pool=threads \"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts\" -t \"redacts AWS credentials in Go test logs\"",
-    "logCommand": "npm run logq -- reports/rulepacks.spec/redacts_AWS_credentials_in_Go_test_logs.jsonl"
-  }
-}
\ No newline at end of file
diff --git a/reports/bundles/rulepacks.spec/redacts_AWS_credentials_in_Go_test_logs.repro.md b/reports/bundles/rulepacks.spec/redacts_AWS_credentials_in_Go_test_logs.repro.md
deleted file mode 100644
index f7ee2ab..0000000
--- a/reports/bundles/rulepacks.spec/redacts_AWS_credentials_in_Go_test_logs.repro.md
+++ /dev/null
@@ -1,43 +0,0 @@
-# Reproduction Bundle: redacts AWS credentials in Go test logs
-
-**Generated:** 2025-10-12T20:17:58.292Z
-**Status:** FAIL
-**Duration:** 1ms
-**Test File:** /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts
-
-## Environment
-
-- **Seed:** none
-- **Node:** v24.9.0
-- **Platform:** linux x64
-
-## Failure Summary
-
-**Error:**
-```
-expected 0 to be greater than 0
-```
-
-**Error Events:** 2
-
-- **test.error** (2025-10-12T20:10:47.841Z)
-  - expected 0 to be greater than 0
-- **case.end** (2025-10-12T20:10:47.842Z)
-
-## Reproduction Commands
-
-**Run test:**
-```bash
-vitest run --reporter=verbose --pool=threads "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts" -t "redacts AWS credentials in Go test logs"
-```
-
-**View logs:**
-```bash
-npm run logq -- reports/rulepacks.spec/redacts_AWS_credentials_in_Go_test_logs.jsonl
-```
-
-## Context Events
-
-**Total context events:** 4
-
-_See JSON bundle for full event details_
diff --git a/reports/bundles/rulepacks.spec/redacts_AWS_credentials_in_test_events.repro.json b/reports/bundles/rulepacks.spec/redacts_AWS_credentials_in_test_events.repro.json
deleted file mode 100644
index 66cf858..0000000
--- a/reports/bundles/rulepacks.spec/redacts_AWS_credentials_in_test_events.repro.json
+++ /dev/null
@@ -1,94 +0,0 @@
-{
-  "metadata": {
-    "bundleVersion": "1.0.0",
-    "generated": "2025-10-12T20:17:58.291Z",
-    "testName": "redacts AWS credentials in test events",
-    "testFile": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts",
-    "status": "fail",
-    "duration": 2
-  },
-  "environment": {
-    "nodeVersion": "v24.9.0",
-    "platform": "linux x64"
-  },
-  "failure": {
-    "errorMessage": "expected 0 to be greater than 0",
-    "errorEvents": [
-      {
-        "ts": 1760299847840,
-        "lvl": "error",
-        "case": "redacts AWS credentials in test events",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected 0 to be greater than 0",
-          "stack": "AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:376:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"
-        }
-      },
-      {
-        "ts": 1760299847841,
-        "lvl": "error",
-        "case": "redacts AWS credentials in test events",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 2,
-          "status": "failed"
-        }
-      }
-    ],
-    "contextEvents": [
-      {
-        "ts": 1760299847838,
-        "lvl": "info",
-        "case": "redacts AWS credentials in test events",
-        "phase": "setup",
-        "evt": "case.begin",
-        "env": {
-          "nodeVersion": "v24.9.0",
-          "platform": "linux",
-          "arch": "x64",
-          "os": "Linux 6.8.0-85-generic",
-          "seed": 42,
-          "envVars": {
-            "NODE_ENV": "test"
-          }
-        },
-        "seed": 42
-      },
-      {
-        "ts": 1760299847839,
-        "lvl": "info",
-        "case": "redacts AWS credentials in test events",
-        "phase": "execution",
-        "evt": "test.run"
-      },
-      {
-        "ts": 1760299847840,
-        "lvl": "error",
-        "case": "redacts AWS credentials in test events",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected 0 to be greater than 0",
-          "stack": "AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:376:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"
-        }
-      },
-      {
-        "ts": 1760299847841,
-        "lvl": "error",
-        "case": "redacts AWS credentials in test events",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 2,
-          "status": "failed"
-        }
-      }
-    ]
-  },
-  "reproduction": {
-    "vitestCommand": "vitest run --reporter=verbose --pool=threads \"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts\" -t \"redacts AWS credentials in test events\"",
-    "logCommand": "npm run logq -- reports/rulepacks.spec/redacts_AWS_credentials_in_test_events.jsonl"
-  }
-}
\ No newline at end of file
diff --git a/reports/bundles/rulepacks.spec/redacts_AWS_credentials_in_test_events.repro.md b/reports/bundles/rulepacks.spec/redacts_AWS_credentials_in_test_events.repro.md
deleted file mode 100644
index c2eca72..0000000
--- a/reports/bundles/rulepacks.spec/redacts_AWS_credentials_in_test_events.repro.md
+++ /dev/null
@@ -1,43 +0,0 @@
-# Reproduction Bundle: redacts AWS credentials in test events
-
-**Generated:** 2025-10-12T20:17:58.291Z
-**Status:** FAIL
-**Duration:** 2ms
-**Test File:** /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts
-
-## Environment
-
-- **Seed:** none
-- **Node:** v24.9.0
-- **Platform:** linux x64
-
-## Failure Summary
-
-**Error:**
-```
-expected 0 to be greater than 0
-```
-
-**Error Events:** 2
-
-- **test.error** (2025-10-12T20:10:47.840Z)
-  - expected 0 to be greater than 0
-- **case.end** (2025-10-12T20:10:47.841Z)
-
-## Reproduction Commands
-
-**Run test:**
-```bash
-vitest run --reporter=verbose --pool=threads "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts" -t "redacts AWS credentials in test events"
-```
-
-**View logs:**
-```bash
-npm run logq -- reports/rulepacks.spec/redacts_AWS_credentials_in_test_events.jsonl
-```
-
-## Context Events
-
-**Total context events:** 4
-
-_See JSON bundle for full event details_
diff --git a/reports/bundles/rulepacks.spec/redacts_JWT_tokens_in_Node_js_test_events.repro.json b/reports/bundles/rulepacks.spec/redacts_JWT_tokens_in_Node_js_test_events.repro.json
deleted file mode 100644
index 32db6d2..0000000
--- a/reports/bundles/rulepacks.spec/redacts_JWT_tokens_in_Node_js_test_events.repro.json
+++ /dev/null
@@ -1,94 +0,0 @@
-{
-  "metadata": {
-    "bundleVersion": "1.0.0",
-    "generated": "2025-10-12T20:17:58.290Z",
-    "testName": "redacts JWT tokens in Node js test events",
-    "testFile": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts",
-    "status": "fail",
-    "duration": 17
-  },
-  "environment": {
-    "nodeVersion": "v24.9.0",
-    "platform": "linux x64"
-  },
-  "failure": {
-    "errorMessage": "expected 0 to be greater than 0",
-    "errorEvents": [
-      {
-        "ts": 1760299847840,
-        "lvl": "error",
-        "case": "redacts JWT tokens in Node.js test events",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected 0 to be greater than 0",
-          "stack": "AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:344:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"
-        }
-      },
-      {
-        "ts": 1760299847841,
-        "lvl": "error",
-        "case": "redacts JWT tokens in Node.js test events",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 17,
-          "status": "failed"
-        }
-      }
-    ],
-    "contextEvents": [
-      {
-        "ts": 1760299847838,
-        "lvl": "info",
-        "case": "redacts JWT tokens in Node.js test events",
-        "phase": "setup",
-        "evt": "case.begin",
-        "env": {
-          "nodeVersion": "v24.9.0",
-          "platform": "linux",
-          "arch": "x64",
-          "os": "Linux 6.8.0-85-generic",
-          "seed": 42,
-          "envVars": {
-            "NODE_ENV": "test"
-          }
-        },
-        "seed": 42
-      },
-      {
-        "ts": 1760299847839,
-        "lvl": "info",
-        "case": "redacts JWT tokens in Node.js test events",
-        "phase": "execution",
-        "evt": "test.run"
-      },
-      {
-        "ts": 1760299847840,
-        "lvl": "error",
-        "case": "redacts JWT tokens in Node.js test events",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected 0 to be greater than 0",
-          "stack": "AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:344:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"
-        }
-      },
-      {
-        "ts": 1760299847841,
-        "lvl": "error",
-        "case": "redacts JWT tokens in Node.js test events",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 17,
-          "status": "failed"
-        }
-      }
-    ]
-  },
-  "reproduction": {
-    "vitestCommand": "vitest run --reporter=verbose --pool=threads \"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts\" -t \"redacts JWT tokens in Node js test events\"",
-    "logCommand": "npm run logq -- reports/rulepacks.spec/redacts_JWT_tokens_in_Node_js_test_events.jsonl"
-  }
-}
\ No newline at end of file
diff --git a/reports/bundles/rulepacks.spec/redacts_JWT_tokens_in_Node_js_test_events.repro.md b/reports/bundles/rulepacks.spec/redacts_JWT_tokens_in_Node_js_test_events.repro.md
deleted file mode 100644
index 6e5368c..0000000
--- a/reports/bundles/rulepacks.spec/redacts_JWT_tokens_in_Node_js_test_events.repro.md
+++ /dev/null
@@ -1,43 +0,0 @@
-# Reproduction Bundle: redacts JWT tokens in Node js test events
-
-**Generated:** 2025-10-12T20:17:58.290Z
-**Status:** FAIL
-**Duration:** 17ms
-**Test File:** /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts
-
-## Environment
-
-- **Seed:** none
-- **Node:** v24.9.0
-- **Platform:** linux x64
-
-## Failure Summary
-
-**Error:**
-```
-expected 0 to be greater than 0
-```
-
-**Error Events:** 2
-
-- **test.error** (2025-10-12T20:10:47.840Z)
-  - expected 0 to be greater than 0
-- **case.end** (2025-10-12T20:10:47.841Z)
-
-## Reproduction Commands
-
-**Run test:**
-```bash
-vitest run --reporter=verbose --pool=threads "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts" -t "redacts JWT tokens in Node js test events"
-```
-
-**View logs:**
-```bash
-npm run logq -- reports/rulepacks.spec/redacts_JWT_tokens_in_Node_js_test_events.jsonl
-```
-
-## Context Events
-
-**Total context events:** 4
-
-_See JSON bundle for full event details_
diff --git a/reports/bundles/rulepacks.spec/redacts_URL_credentials_in_test_events.repro.json b/reports/bundles/rulepacks.spec/redacts_URL_credentials_in_test_events.repro.json
deleted file mode 100644
index 3e13374..0000000
--- a/reports/bundles/rulepacks.spec/redacts_URL_credentials_in_test_events.repro.json
+++ /dev/null
@@ -1,94 +0,0 @@
-{
-  "metadata": {
-    "bundleVersion": "1.0.0",
-    "generated": "2025-10-12T20:17:58.291Z",
-    "testName": "redacts URL credentials in test events",
-    "testFile": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts",
-    "status": "fail",
-    "duration": 2
-  },
-  "environment": {
-    "nodeVersion": "v24.9.0",
-    "platform": "linux x64"
-  },
-  "failure": {
-    "errorMessage": "expected 0 to be greater than 0",
-    "errorEvents": [
-      {
-        "ts": 1760299847840,
-        "lvl": "error",
-        "case": "redacts URL credentials in test events",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected 0 to be greater than 0",
-          "stack": "AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:440:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"
-        }
-      },
-      {
-        "ts": 1760299847841,
-        "lvl": "error",
-        "case": "redacts URL credentials in test events",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 2,
-          "status": "failed"
-        }
-      }
-    ],
-    "contextEvents": [
-      {
-        "ts": 1760299847838,
-        "lvl": "info",
-        "case": "redacts URL credentials in test events",
-        "phase": "setup",
-        "evt": "case.begin",
-        "env": {
-          "nodeVersion": "v24.9.0",
-          "platform": "linux",
-          "arch": "x64",
-          "os": "Linux 6.8.0-85-generic",
-          "seed": 42,
-          "envVars": {
-            "NODE_ENV": "test"
-          }
-        },
-        "seed": 42
-      },
-      {
-        "ts": 1760299847839,
-        "lvl": "info",
-        "case": "redacts URL credentials in test events",
-        "phase": "execution",
-        "evt": "test.run"
-      },
-      {
-        "ts": 1760299847840,
-        "lvl": "error",
-        "case": "redacts URL credentials in test events",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected 0 to be greater than 0",
-          "stack": "AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:440:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"
-        }
-      },
-      {
-        "ts": 1760299847841,
-        "lvl": "error",
-        "case": "redacts URL credentials in test events",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 2,
-          "status": "failed"
-        }
-      }
-    ]
-  },
-  "reproduction": {
-    "vitestCommand": "vitest run --reporter=verbose --pool=threads \"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts\" -t \"redacts URL credentials in test events\"",
-    "logCommand": "npm run logq -- reports/rulepacks.spec/redacts_URL_credentials_in_test_events.jsonl"
-  }
-}
\ No newline at end of file
diff --git a/reports/bundles/rulepacks.spec/redacts_URL_credentials_in_test_events.repro.md b/reports/bundles/rulepacks.spec/redacts_URL_credentials_in_test_events.repro.md
deleted file mode 100644
index 5c80d72..0000000
--- a/reports/bundles/rulepacks.spec/redacts_URL_credentials_in_test_events.repro.md
+++ /dev/null
@@ -1,43 +0,0 @@
-# Reproduction Bundle: redacts URL credentials in test events
-
-**Generated:** 2025-10-12T20:17:58.291Z
-**Status:** FAIL
-**Duration:** 2ms
-**Test File:** /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts
-
-## Environment
-
-- **Seed:** none
-- **Node:** v24.9.0
-- **Platform:** linux x64
-
-## Failure Summary
-
-**Error:**
-```
-expected 0 to be greater than 0
-```
-
-**Error Events:** 2
-
-- **test.error** (2025-10-12T20:10:47.840Z)
-  - expected 0 to be greater than 0
-- **case.end** (2025-10-12T20:10:47.841Z)
-
-## Reproduction Commands
-
-**Run test:**
-```bash
-vitest run --reporter=verbose --pool=threads "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts" -t "redacts URL credentials in test events"
-```
-
-**View logs:**
-```bash
-npm run logq -- reports/rulepacks.spec/redacts_URL_credentials_in_test_events.jsonl
-```
-
-## Context Events
-
-**Total context events:** 4
-
-_See JSON bundle for full event details_
diff --git a/reports/bundles/rulepacks.spec/redacts_database_URLs_in_Go_test_failures.repro.json b/reports/bundles/rulepacks.spec/redacts_database_URLs_in_Go_test_failures.repro.json
deleted file mode 100644
index 862d2c3..0000000
--- a/reports/bundles/rulepacks.spec/redacts_database_URLs_in_Go_test_failures.repro.json
+++ /dev/null
@@ -1,94 +0,0 @@
-{
-  "metadata": {
-    "bundleVersion": "1.0.0",
-    "generated": "2025-10-12T20:17:58.292Z",
-    "testName": "redacts database URLs in Go test failures",
-    "testFile": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts",
-    "status": "fail",
-    "duration": 2
-  },
-  "environment": {
-    "nodeVersion": "v24.9.0",
-    "platform": "linux x64"
-  },
-  "failure": {
-    "errorMessage": "expected 0 to be greater than 0",
-    "errorEvents": [
-      {
-        "ts": 1760299847841,
-        "lvl": "error",
-        "case": "redacts database URLs in Go test failures",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected 0 to be greater than 0",
-          "stack": "AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:574:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"
-        }
-      },
-      {
-        "ts": 1760299847842,
-        "lvl": "error",
-        "case": "redacts database URLs in Go test failures",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 2,
-          "status": "failed"
-        }
-      }
-    ],
-    "contextEvents": [
-      {
-        "ts": 1760299847839,
-        "lvl": "info",
-        "case": "redacts database URLs in Go test failures",
-        "phase": "setup",
-        "evt": "case.begin",
-        "env": {
-          "nodeVersion": "v24.9.0",
-          "platform": "linux",
-          "arch": "x64",
-          "os": "Linux 6.8.0-85-generic",
-          "seed": 42,
-          "envVars": {
-            "NODE_ENV": "test"
-          }
-        },
-        "seed": 42
-      },
-      {
-        "ts": 1760299847840,
-        "lvl": "info",
-        "case": "redacts database URLs in Go test failures",
-        "phase": "execution",
-        "evt": "test.run"
-      },
-      {
-        "ts": 1760299847841,
-        "lvl": "error",
-        "case": "redacts database URLs in Go test failures",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected 0 to be greater than 0",
-          "stack": "AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:574:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"
-        }
-      },
-      {
-        "ts": 1760299847842,
-        "lvl": "error",
-        "case": "redacts database URLs in Go test failures",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 2,
-          "status": "failed"
-        }
-      }
-    ]
-  },
-  "reproduction": {
-    "vitestCommand": "vitest run --reporter=verbose --pool=threads \"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts\" -t \"redacts database URLs in Go test failures\"",
-    "logCommand": "npm run logq -- reports/rulepacks.spec/redacts_database_URLs_in_Go_test_failures.jsonl"
-  }
-}
\ No newline at end of file
diff --git a/reports/bundles/rulepacks.spec/redacts_database_URLs_in_Go_test_failures.repro.md b/reports/bundles/rulepacks.spec/redacts_database_URLs_in_Go_test_failures.repro.md
deleted file mode 100644
index 3e86f36..0000000
--- a/reports/bundles/rulepacks.spec/redacts_database_URLs_in_Go_test_failures.repro.md
+++ /dev/null
@@ -1,43 +0,0 @@
-# Reproduction Bundle: redacts database URLs in Go test failures
-
-**Generated:** 2025-10-12T20:17:58.292Z
-**Status:** FAIL
-**Duration:** 2ms
-**Test File:** /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts
-
-## Environment
-
-- **Seed:** none
-- **Node:** v24.9.0
-- **Platform:** linux x64
-
-## Failure Summary
-
-**Error:**
-```
-expected 0 to be greater than 0
-```
-
-**Error Events:** 2
-
-- **test.error** (2025-10-12T20:10:47.841Z)
-  - expected 0 to be greater than 0
-- **case.end** (2025-10-12T20:10:47.842Z)
-
-## Reproduction Commands
-
-**Run test:**
-```bash
-vitest run --reporter=verbose --pool=threads "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts" -t "redacts database URLs in Go test failures"
-```
-
-**View logs:**
-```bash
-npm run logq -- reports/rulepacks.spec/redacts_database_URLs_in_Go_test_failures.jsonl
-```
-
-## Context Events
-
-**Total context events:** 4
-
-_See JSON bundle for full event details_
diff --git a/reports/bundles/rulepacks.spec/redacts_multiple_occurrences_of_the_same_secret_type.repro.json b/reports/bundles/rulepacks.spec/redacts_multiple_occurrences_of_the_same_secret_type.repro.json
deleted file mode 100644
index f6f72a1..0000000
--- a/reports/bundles/rulepacks.spec/redacts_multiple_occurrences_of_the_same_secret_type.repro.json
+++ /dev/null
@@ -1,94 +0,0 @@
-{
-  "metadata": {
-    "bundleVersion": "1.0.0",
-    "generated": "2025-10-12T20:17:58.293Z",
-    "testName": "redacts multiple occurrences of the same secret type",
-    "testFile": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts",
-    "status": "fail",
-    "duration": 2
-  },
-  "environment": {
-    "nodeVersion": "v24.9.0",
-    "platform": "linux x64"
-  },
-  "failure": {
-    "errorMessage": "expected +0 to be 3 // Object.is equality",
-    "errorEvents": [
-      {
-        "ts": 1760299847841,
-        "lvl": "error",
-        "case": "redacts multiple occurrences of the same secret type",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected +0 to be 3 // Object.is equality",
-          "stack": "AssertionError: expected +0 to be 3 // Object.is equality\n    at /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:757:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"
-        }
-      },
-      {
-        "ts": 1760299847842,
-        "lvl": "error",
-        "case": "redacts multiple occurrences of the same secret type",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 2,
-          "status": "failed"
-        }
-      }
-    ],
-    "contextEvents": [
-      {
-        "ts": 1760299847839,
-        "lvl": "info",
-        "case": "redacts multiple occurrences of the same secret type",
-        "phase": "setup",
-        "evt": "case.begin",
-        "env": {
-          "nodeVersion": "v24.9.0",
-          "platform": "linux",
-          "arch": "x64",
-          "os": "Linux 6.8.0-85-generic",
-          "seed": 42,
-          "envVars": {
-            "NODE_ENV": "test"
-          }
-        },
-        "seed": 42
-      },
-      {
-        "ts": 1760299847840,
-        "lvl": "info",
-        "case": "redacts multiple occurrences of the same secret type",
-        "phase": "execution",
-        "evt": "test.run"
-      },
-      {
-        "ts": 1760299847841,
-        "lvl": "error",
-        "case": "redacts multiple occurrences of the same secret type",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected +0 to be 3 // Object.is equality",
-          "stack": "AssertionError: expected +0 to be 3 // Object.is equality\n    at /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:757:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"
-        }
-      },
-      {
-        "ts": 1760299847842,
-        "lvl": "error",
-        "case": "redacts multiple occurrences of the same secret type",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 2,
-          "status": "failed"
-        }
-      }
-    ]
-  },
-  "reproduction": {
-    "vitestCommand": "vitest run --reporter=verbose --pool=threads \"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts\" -t \"redacts multiple occurrences of the same secret type\"",
-    "logCommand": "npm run logq -- reports/rulepacks.spec/redacts_multiple_occurrences_of_the_same_secret_type.jsonl"
-  }
-}
\ No newline at end of file
diff --git a/reports/bundles/rulepacks.spec/redacts_multiple_occurrences_of_the_same_secret_type.repro.md b/reports/bundles/rulepacks.spec/redacts_multiple_occurrences_of_the_same_secret_type.repro.md
deleted file mode 100644
index 2b8479b..0000000
--- a/reports/bundles/rulepacks.spec/redacts_multiple_occurrences_of_the_same_secret_type.repro.md
+++ /dev/null
@@ -1,43 +0,0 @@
-# Reproduction Bundle: redacts multiple occurrences of the same secret type
-
-**Generated:** 2025-10-12T20:17:58.293Z
-**Status:** FAIL
-**Duration:** 2ms
-**Test File:** /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts
-
-## Environment
-
-- **Seed:** none
-- **Node:** v24.9.0
-- **Platform:** linux x64
-
-## Failure Summary
-
-**Error:**
-```
-expected +0 to be 3 // Object.is equality
-```
-
-**Error Events:** 2
-
-- **test.error** (2025-10-12T20:10:47.841Z)
-  - expected +0 to be 3 // Object.is equality
-- **case.end** (2025-10-12T20:10:47.842Z)
-
-## Reproduction Commands
-
-**Run test:**
-```bash
-vitest run --reporter=verbose --pool=threads "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts" -t "redacts multiple occurrences of the same secret type"
-```
-
-**View logs:**
-```bash
-npm run logq -- reports/rulepacks.spec/redacts_multiple_occurrences_of_the_same_secret_type.jsonl
-```
-
-## Context Events
-
-**Total context events:** 4
-
-_See JSON bundle for full event details_
diff --git a/reports/bundles/rulepacks.spec/redacts_private_keys_in_test_events.repro.json b/reports/bundles/rulepacks.spec/redacts_private_keys_in_test_events.repro.json
deleted file mode 100644
index 668bdb1..0000000
--- a/reports/bundles/rulepacks.spec/redacts_private_keys_in_test_events.repro.json
+++ /dev/null
@@ -1,94 +0,0 @@
-{
-  "metadata": {
-    "bundleVersion": "1.0.0",
-    "generated": "2025-10-12T20:17:58.291Z",
-    "testName": "redacts private keys in test events",
-    "testFile": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts",
-    "status": "fail",
-    "duration": 1
-  },
-  "environment": {
-    "nodeVersion": "v24.9.0",
-    "platform": "linux x64"
-  },
-  "failure": {
-    "errorMessage": "expected 0 to be greater than 0",
-    "errorEvents": [
-      {
-        "ts": 1760299847841,
-        "lvl": "error",
-        "case": "redacts private keys in test events",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected 0 to be greater than 0",
-          "stack": "AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:478:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"
-        }
-      },
-      {
-        "ts": 1760299847842,
-        "lvl": "error",
-        "case": "redacts private keys in test events",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 1,
-          "status": "failed"
-        }
-      }
-    ],
-    "contextEvents": [
-      {
-        "ts": 1760299847839,
-        "lvl": "info",
-        "case": "redacts private keys in test events",
-        "phase": "setup",
-        "evt": "case.begin",
-        "env": {
-          "nodeVersion": "v24.9.0",
-          "platform": "linux",
-          "arch": "x64",
-          "os": "Linux 6.8.0-85-generic",
-          "seed": 42,
-          "envVars": {
-            "NODE_ENV": "test"
-          }
-        },
-        "seed": 42
-      },
-      {
-        "ts": 1760299847840,
-        "lvl": "info",
-        "case": "redacts private keys in test events",
-        "phase": "execution",
-        "evt": "test.run"
-      },
-      {
-        "ts": 1760299847841,
-        "lvl": "error",
-        "case": "redacts private keys in test events",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected 0 to be greater than 0",
-          "stack": "AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:478:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"
-        }
-      },
-      {
-        "ts": 1760299847842,
-        "lvl": "error",
-        "case": "redacts private keys in test events",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 1,
-          "status": "failed"
-        }
-      }
-    ]
-  },
-  "reproduction": {
-    "vitestCommand": "vitest run --reporter=verbose --pool=threads \"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts\" -t \"redacts private keys in test events\"",
-    "logCommand": "npm run logq -- reports/rulepacks.spec/redacts_private_keys_in_test_events.jsonl"
-  }
-}
\ No newline at end of file
diff --git a/reports/bundles/rulepacks.spec/redacts_private_keys_in_test_events.repro.md b/reports/bundles/rulepacks.spec/redacts_private_keys_in_test_events.repro.md
deleted file mode 100644
index 03b6f4f..0000000
--- a/reports/bundles/rulepacks.spec/redacts_private_keys_in_test_events.repro.md
+++ /dev/null
@@ -1,43 +0,0 @@
-# Reproduction Bundle: redacts private keys in test events
-
-**Generated:** 2025-10-12T20:17:58.291Z
-**Status:** FAIL
-**Duration:** 1ms
-**Test File:** /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts
-
-## Environment
-
-- **Seed:** none
-- **Node:** v24.9.0
-- **Platform:** linux x64
-
-## Failure Summary
-
-**Error:**
-```
-expected 0 to be greater than 0
-```
-
-**Error Events:** 2
-
-- **test.error** (2025-10-12T20:10:47.841Z)
-  - expected 0 to be greater than 0
-- **case.end** (2025-10-12T20:10:47.842Z)
-
-## Reproduction Commands
-
-**Run test:**
-```bash
-vitest run --reporter=verbose --pool=threads "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts" -t "redacts private keys in test events"
-```
-
-**View logs:**
-```bash
-npm run logq -- reports/rulepacks.spec/redacts_private_keys_in_test_events.jsonl
-```
-
-## Context Events
-
-**Total context events:** 4
-
-_See JSON bundle for full event details_
diff --git a/reports/bundles/rulepacks.spec/redacts_secrets_in_Go_test_output.repro.json b/reports/bundles/rulepacks.spec/redacts_secrets_in_Go_test_output.repro.json
deleted file mode 100644
index c86386c..0000000
--- a/reports/bundles/rulepacks.spec/redacts_secrets_in_Go_test_output.repro.json
+++ /dev/null
@@ -1,94 +0,0 @@
-{
-  "metadata": {
-    "bundleVersion": "1.0.0",
-    "generated": "2025-10-12T20:17:58.292Z",
-    "testName": "redacts secrets in Go test output",
-    "testFile": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts",
-    "status": "fail",
-    "duration": 1
-  },
-  "environment": {
-    "nodeVersion": "v24.9.0",
-    "platform": "linux x64"
-  },
-  "failure": {
-    "errorMessage": "expected 0 to be greater than 0",
-    "errorEvents": [
-      {
-        "ts": 1760299847841,
-        "lvl": "error",
-        "case": "redacts secrets in Go test output",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected 0 to be greater than 0",
-          "stack": "AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:511:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"
-        }
-      },
-      {
-        "ts": 1760299847842,
-        "lvl": "error",
-        "case": "redacts secrets in Go test output",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 1,
-          "status": "failed"
-        }
-      }
-    ],
-    "contextEvents": [
-      {
-        "ts": 1760299847839,
-        "lvl": "info",
-        "case": "redacts secrets in Go test output",
-        "phase": "setup",
-        "evt": "case.begin",
-        "env": {
-          "nodeVersion": "v24.9.0",
-          "platform": "linux",
-          "arch": "x64",
-          "os": "Linux 6.8.0-85-generic",
-          "seed": 42,
-          "envVars": {
-            "NODE_ENV": "test"
-          }
-        },
-        "seed": 42
-      },
-      {
-        "ts": 1760299847840,
-        "lvl": "info",
-        "case": "redacts secrets in Go test output",
-        "phase": "execution",
-        "evt": "test.run"
-      },
-      {
-        "ts": 1760299847841,
-        "lvl": "error",
-        "case": "redacts secrets in Go test output",
-        "phase": "execution",
-        "evt": "test.error",
-        "payload": {
-          "message": "expected 0 to be greater than 0",
-          "stack": "AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:511:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"
-        }
-      },
-      {
-        "ts": 1760299847842,
-        "lvl": "error",
-        "case": "redacts secrets in Go test output",
-        "phase": "teardown",
-        "evt": "case.end",
-        "payload": {
-          "duration": 1,
-          "status": "failed"
-        }
-      }
-    ]
-  },
-  "reproduction": {
-    "vitestCommand": "vitest run --reporter=verbose --pool=threads \"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts\" -t \"redacts secrets in Go test output\"",
-    "logCommand": "npm run logq -- reports/rulepacks.spec/redacts_secrets_in_Go_test_output.jsonl"
-  }
-}
\ No newline at end of file
diff --git a/reports/bundles/rulepacks.spec/redacts_secrets_in_Go_test_output.repro.md b/reports/bundles/rulepacks.spec/redacts_secrets_in_Go_test_output.repro.md
deleted file mode 100644
index f43b0fc..0000000
--- a/reports/bundles/rulepacks.spec/redacts_secrets_in_Go_test_output.repro.md
+++ /dev/null
@@ -1,43 +0,0 @@
-# Reproduction Bundle: redacts secrets in Go test output
-
-**Generated:** 2025-10-12T20:17:58.292Z
-**Status:** FAIL
-**Duration:** 1ms
-**Test File:** /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts
-
-## Environment
-
-- **Seed:** none
-- **Node:** v24.9.0
-- **Platform:** linux x64
-
-## Failure Summary
-
-**Error:**
-```
-expected 0 to be greater than 0
-```
-
-**Error Events:** 2
-
-- **test.error** (2025-10-12T20:10:47.841Z)
-  - expected 0 to be greater than 0
-- **case.end** (2025-10-12T20:10:47.842Z)
-
-## Reproduction Commands
-
-**Run test:**
-```bash
-vitest run --reporter=verbose --pool=threads "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts" -t "redacts secrets in Go test output"
-```
-
-**View logs:**
-```bash
-npm run logq -- reports/rulepacks.spec/redacts_secrets_in_Go_test_output.jsonl
-```
-
-## Context Events
-
-**Total context events:** 4
-
-_See JSON bundle for full event details_
diff --git a/reports/coreReporter.spec/should_contain_valid_JSONL_format.jsonl b/reports/coreReporter.spec/should_contain_valid_JSONL_format.jsonl
index 7e4cf05..3c7b6b6 100644
--- a/reports/coreReporter.spec/should_contain_valid_JSONL_format.jsonl
+++ b/reports/coreReporter.spec/should_contain_valid_JSONL_format.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274573,"lvl":"info","case":"should contain valid JSONL format","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274574,"lvl":"info","case":"should contain valid JSONL format","phase":"execution","evt":"test.run"}
-{"ts":1760297274575,"lvl":"info","case":"should contain valid JSONL format","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
+{"ts":1760303270386,"lvl":"info","case":"should contain valid JSONL format","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270387,"lvl":"info","case":"should contain valid JSONL format","phase":"execution","evt":"test.run"}
+{"ts":1760303270388,"lvl":"info","case":"should contain valid JSONL format","phase":"teardown","evt":"case.end","payload":{"duration":23,"status":"passed"}}
diff --git a/reports/coreReporter.spec/should_create_JSONL_file_for_each_test_case.jsonl b/reports/coreReporter.spec/should_create_JSONL_file_for_each_test_case.jsonl
index e7e95c7..6e06469 100644
--- a/reports/coreReporter.spec/should_create_JSONL_file_for_each_test_case.jsonl
+++ b/reports/coreReporter.spec/should_create_JSONL_file_for_each_test_case.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274573,"lvl":"info","case":"should create JSONL file for each test case","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274574,"lvl":"info","case":"should create JSONL file for each test case","phase":"execution","evt":"test.run"}
-{"ts":1760297274575,"lvl":"info","case":"should create JSONL file for each test case","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270385,"lvl":"info","case":"should create JSONL file for each test case","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270386,"lvl":"info","case":"should create JSONL file for each test case","phase":"execution","evt":"test.run"}
+{"ts":1760303270387,"lvl":"info","case":"should create JSONL file for each test case","phase":"teardown","evt":"case.end","payload":{"duration":8,"status":"passed"}}
diff --git a/reports/coreReporter.spec/should_cross-reference_between_index_and_case_files.digest.json b/reports/coreReporter.spec/should_cross-reference_between_index_and_case_files.digest.json
deleted file mode 100644
index 97389aa..0000000
--- a/reports/coreReporter.spec/should_cross-reference_between_index_and_case_files.digest.json
+++ /dev/null
@@ -1,157 +0,0 @@
-{
-  "case": "should_cross-reference_between_index_and_case_files",
-  "status": "fail",
-  "duration": 3,
-  "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
-  "error": "expected +0 to be 1 // Object.is equality",
-  "summary": {
-    "totalEvents": 4,
-    "includedEvents": 2,
-    "redactedFields": 0,
-    "budgetUsed": 2396,
-    "budgetLimit": 10240
-  },
-  "suspects": [
-    {
-      "ts": 1760295605853,
-      "lvl": "error",
-      "case": "should cross-reference between index and case files",
-      "phase": "teardown",
-      "evt": "case.end",
-      "payload": {
-        "duration": 3,
-        "status": "failed"
-      },
-      "score": 80,
-      "reasons": [
-        "error level",
-        "close proximity to failure"
-      ]
-    },
-    {
-      "ts": 1760295605852,
-      "lvl": "error",
-      "case": "should cross-reference between index and case files",
-      "phase": "execution",
-      "evt": "test.error",
-      "payload": {
-        "message": "expected +0 to be 1 // Object.is equality",
-        "stack": "AssertionError: expected +0 to be 1 // Object.is equality\n    at /srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:261:47\n    at Array.forEach (<anonymous>)\n    at /srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:253:39\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:135:14\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:60:26\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:17)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)"
-      },
-      "score": 79.99,
-      "reasons": [
-        "error level",
-        "close proximity to failure"
-      ]
-    },
-    {
-      "ts": 1760295605851,
-      "lvl": "info",
-      "case": "should cross-reference between index and case files",
-      "phase": "execution",
-      "evt": "test.run",
-      "score": 29.98,
-      "reasons": [
-        "close proximity to failure"
-      ]
-    },
-    {
-      "ts": 1760295605850,
-      "lvl": "info",
-      "case": "should cross-reference between index and case files",
-      "phase": "setup",
-      "evt": "case.begin",
-      "env": {
-        "nodeVersion": "v24.9.0",
-        "platform": "linux",
-        "arch": "x64",
-        "os": "Linux 6.8.0-85-generic",
-        "seed": 42,
-        "envVars": {
-          "NODE_ENV": "test",
-          "TEST_SEED": "42",
-          "LAMINAR_DEBUG": "1",
-          "LAMINAR_SUITE": "coreReporter.spec",
-          "LAMINAR_CASE": "should_have_matching_test_count_between_index_and_summary"
-        }
-      },
-      "seed": 42,
-      "score": 29.97,
-      "reasons": [
-        "close proximity to failure"
-      ]
-    }
-  ],
-  "codeframes": [
-    {
-      "file": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts",
-      "line": 261,
-      "column": 47,
-      "source": [
-        "          ",
-        "          const endEvent = events.find(e => e.evt === 'case.end');",
-        "          expect(endEvent?.payload?.duration).toBe(entry.duration);",
-        "        }",
-        "      });"
-      ],
-      "context": {
-        "before": [
-          "          ",
-          "          const endEvent = events.find(e => e.evt === 'case.end');"
-        ],
-        "focus": "          expect(endEvent?.payload?.duration).toBe(entry.duration);",
-        "after": [
-          "        }",
-          "      });"
-        ]
-      }
-    },
-    {
-      "file": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts",
-      "line": 253,
-      "column": 39,
-      "source": [
-        "",
-        "    it('should cross-reference between index and case files', () => {",
-        "      indexData.artifacts.slice(0, 5).forEach((entry) => {",
-        "        if (entry.artifacts.caseFile) {",
-        "          expect(fs.existsSync(entry.artifacts.caseFile)).toBe(true);"
-      ],
-      "context": {
-        "before": [
-          "",
-          "    it('should cross-reference between index and case files', () => {"
-        ],
-        "focus": "      indexData.artifacts.slice(0, 5).forEach((entry) => {",
-        "after": [
-          "        if (entry.artifacts.caseFile) {",
-          "          expect(fs.existsSync(entry.artifacts.caseFile)).toBe(true);"
-        ]
-      }
-    }
-  ],
-  "events": [
-    {
-      "ts": 1760295605852,
-      "lvl": "error",
-      "case": "should cross-reference between index and case files",
-      "phase": "execution",
-      "evt": "test.error",
-      "payload": {
-        "message": "expected +0 to be 1 // Object.is equality",
-        "stack": "AssertionError: expected +0 to be 1 // Object.is equality\n    at /srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:261:47\n    at Array.forEach (<anonymous>)\n    at /srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:253:39\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:135:14\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:60:26\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:17)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)"
-      }
-    },
-    {
-      "ts": 1760295605853,
-      "lvl": "error",
-      "case": "should cross-reference between index and case files",
-      "phase": "teardown",
-      "evt": "case.end",
-      "payload": {
-        "duration": 3,
-        "status": "failed"
-      }
-    }
-  ]
-}
\ No newline at end of file
diff --git a/reports/coreReporter.spec/should_cross-reference_between_index_and_case_files.digest.md b/reports/coreReporter.spec/should_cross-reference_between_index_and_case_files.digest.md
deleted file mode 100644
index 88a3c12..0000000
--- a/reports/coreReporter.spec/should_cross-reference_between_index_and_case_files.digest.md
+++ /dev/null
@@ -1,52 +0,0 @@
-# Digest: should_cross-reference_between_index_and_case_files
-
-**Status**: fail
-**Duration**: 3ms
-**Location**: /srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0
-**Error**: expected +0 to be 1 // Object.is equality
-
-## Summary
-- Total Events: 4
-- Included Events: 2
-- Budget Used: 2396 / 10240 bytes
-
-## Suspects
-- **Score: 80.0** - case.end (error)
-  - Reasons: error level, close proximity to failure
-  - Time: 2025-10-12T19:00:05.853Z
-- **Score: 80.0** - test.error (error)
-  - Reasons: error level, close proximity to failure
-  - Time: 2025-10-12T19:00:05.852Z
-- **Score: 30.0** - test.run (info)
-  - Reasons: close proximity to failure
-  - Time: 2025-10-12T19:00:05.851Z
-- **Score: 30.0** - case.begin (info)
-  - Reasons: close proximity to failure
-  - Time: 2025-10-12T19:00:05.850Z
-
-## Code Frames
-```
-  at /srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:261:47
-  259 |           
-  260 |           const endEvent = events.find(e => e.evt === 'case.end');
-> 261 |           expect(endEvent?.payload?.duration).toBe(entry.duration);
-                                                    ^
-  262 |         }
-  263 |       });
-```
-
-```
-  at /srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:253:39
-  251 | 
-  252 |     it('should cross-reference between index and case files', () => {
-> 253 |       indexData.artifacts.slice(0, 5).forEach((entry) => {
-                                            ^
-  254 |         if (entry.artifacts.caseFile) {
-  255 |           expect(fs.existsSync(entry.artifacts.caseFile)).toBe(true);
-```
-
-## Events
-```json
-{"ts":1760295605852,"lvl":"error","case":"should cross-reference between index and case files","phase":"execution","evt":"test.error","payload":{"message":"expected +0 to be 1 // Object.is equality","stack":"AssertionError: expected +0 to be 1 // Object.is equality\n    at /srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:261:47\n    at Array.forEach (<anonymous>)\n    at /srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:253:39\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:135:14\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:60:26\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:17)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)"}}
-{"ts":1760295605853,"lvl":"error","case":"should cross-reference between index and case files","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"failed"}}
-```
\ No newline at end of file
diff --git a/reports/coreReporter.spec/should_cross-reference_between_index_and_case_files.jsonl b/reports/coreReporter.spec/should_cross-reference_between_index_and_case_files.jsonl
index 6217e8e..572b9a1 100644
--- a/reports/coreReporter.spec/should_cross-reference_between_index_and_case_files.jsonl
+++ b/reports/coreReporter.spec/should_cross-reference_between_index_and_case_files.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274575,"lvl":"info","case":"should cross-reference between index and case files","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274576,"lvl":"info","case":"should cross-reference between index and case files","phase":"execution","evt":"test.run"}
-{"ts":1760297274577,"lvl":"info","case":"should cross-reference between index and case files","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
+{"ts":1760303270391,"lvl":"info","case":"should cross-reference between index and case files","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270392,"lvl":"info","case":"should cross-reference between index and case files","phase":"execution","evt":"test.run"}
+{"ts":1760303270393,"lvl":"info","case":"should cross-reference between index and case files","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/coreReporter.spec/should_generate_index_json_with_valid_structure.jsonl b/reports/coreReporter.spec/should_generate_index_json_with_valid_structure.jsonl
index 4647f5a..c4769f3 100644
--- a/reports/coreReporter.spec/should_generate_index_json_with_valid_structure.jsonl
+++ b/reports/coreReporter.spec/should_generate_index_json_with_valid_structure.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274571,"lvl":"info","case":"should generate index.json with valid structure","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274572,"lvl":"info","case":"should generate index.json with valid structure","phase":"execution","evt":"test.run"}
-{"ts":1760297274573,"lvl":"info","case":"should generate index.json with valid structure","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
+{"ts":1760303270380,"lvl":"info","case":"should generate index.json with valid structure","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270381,"lvl":"info","case":"should generate index.json with valid structure","phase":"execution","evt":"test.run"}
+{"ts":1760303270382,"lvl":"info","case":"should generate index.json with valid structure","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/coreReporter.spec/should_handle_test_names_with_special_characters.jsonl b/reports/coreReporter.spec/should_handle_test_names_with_special_characters.jsonl
index fced2fb..19e8817 100644
--- a/reports/coreReporter.spec/should_handle_test_names_with_special_characters.jsonl
+++ b/reports/coreReporter.spec/should_handle_test_names_with_special_characters.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274575,"lvl":"info","case":"should handle test names with special characters","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274576,"lvl":"info","case":"should handle test names with special characters","phase":"execution","evt":"test.run"}
-{"ts":1760297274577,"lvl":"info","case":"should handle test names with special characters","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270392,"lvl":"info","case":"should handle test names with special characters","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270393,"lvl":"info","case":"should handle test names with special characters","phase":"execution","evt":"test.run"}
+{"ts":1760303270394,"lvl":"info","case":"should handle test names with special characters","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/coreReporter.spec/should_have_all_case_files_in_reports_directory.jsonl b/reports/coreReporter.spec/should_have_all_case_files_in_reports_directory.jsonl
index 198ac03..df90f01 100644
--- a/reports/coreReporter.spec/should_have_all_case_files_in_reports_directory.jsonl
+++ b/reports/coreReporter.spec/should_have_all_case_files_in_reports_directory.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274575,"lvl":"info","case":"should have all case files in reports directory","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274576,"lvl":"info","case":"should have all case files in reports directory","phase":"execution","evt":"test.run"}
-{"ts":1760297274577,"lvl":"info","case":"should have all case files in reports directory","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270392,"lvl":"info","case":"should have all case files in reports directory","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270393,"lvl":"info","case":"should have all case files in reports directory","phase":"execution","evt":"test.run"}
+{"ts":1760303270394,"lvl":"info","case":"should have all case files in reports directory","phase":"teardown","evt":"case.end","payload":{"duration":19,"status":"passed"}}
diff --git a/reports/coreReporter.spec/should_have_at_least_one_artifact_entry.jsonl b/reports/coreReporter.spec/should_have_at_least_one_artifact_entry.jsonl
index 7658025..5cd1f50 100644
--- a/reports/coreReporter.spec/should_have_at_least_one_artifact_entry.jsonl
+++ b/reports/coreReporter.spec/should_have_at_least_one_artifact_entry.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274572,"lvl":"info","case":"should have at least one artifact entry","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274573,"lvl":"info","case":"should have at least one artifact entry","phase":"execution","evt":"test.run"}
-{"ts":1760297274574,"lvl":"info","case":"should have at least one artifact entry","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
+{"ts":1760303270382,"lvl":"info","case":"should have at least one artifact entry","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270383,"lvl":"info","case":"should have at least one artifact entry","phase":"execution","evt":"test.run"}
+{"ts":1760303270384,"lvl":"info","case":"should have at least one artifact entry","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/coreReporter.spec/should_have_caseFile_path_for_each_entry.jsonl b/reports/coreReporter.spec/should_have_caseFile_path_for_each_entry.jsonl
index 08b4d1e..a90f5aa 100644
--- a/reports/coreReporter.spec/should_have_caseFile_path_for_each_entry.jsonl
+++ b/reports/coreReporter.spec/should_have_caseFile_path_for_each_entry.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274573,"lvl":"info","case":"should have caseFile path for each entry","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274574,"lvl":"info","case":"should have caseFile path for each entry","phase":"execution","evt":"test.run"}
-{"ts":1760297274575,"lvl":"info","case":"should have caseFile path for each entry","phase":"teardown","evt":"case.end","payload":{"duration":4,"status":"passed"}}
+{"ts":1760303270384,"lvl":"info","case":"should have caseFile path for each entry","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270385,"lvl":"info","case":"should have caseFile path for each entry","phase":"execution","evt":"test.run"}
+{"ts":1760303270386,"lvl":"info","case":"should have caseFile path for each entry","phase":"teardown","evt":"case.end","payload":{"duration":8,"status":"passed"}}
diff --git a/reports/coreReporter.spec/should_have_case_name_in_JSONL_events_matching_test_name.jsonl b/reports/coreReporter.spec/should_have_case_name_in_JSONL_events_matching_test_name.jsonl
index 9cc3442..b32900c 100644
--- a/reports/coreReporter.spec/should_have_case_name_in_JSONL_events_matching_test_name.jsonl
+++ b/reports/coreReporter.spec/should_have_case_name_in_JSONL_events_matching_test_name.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274575,"lvl":"info","case":"should have case name in JSONL events matching test name","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274576,"lvl":"info","case":"should have case name in JSONL events matching test name","phase":"execution","evt":"test.run"}
-{"ts":1760297274577,"lvl":"info","case":"should have case name in JSONL events matching test name","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
+{"ts":1760303270391,"lvl":"info","case":"should have case name in JSONL events matching test name","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270392,"lvl":"info","case":"should have case name in JSONL events matching test name","phase":"execution","evt":"test.run"}
+{"ts":1760303270393,"lvl":"info","case":"should have case name in JSONL events matching test name","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/coreReporter.spec/should_have_chronological_timestamps.jsonl b/reports/coreReporter.spec/should_have_chronological_timestamps.jsonl
index 9ab920b..dfef60d 100644
--- a/reports/coreReporter.spec/should_have_chronological_timestamps.jsonl
+++ b/reports/coreReporter.spec/should_have_chronological_timestamps.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274574,"lvl":"info","case":"should have chronological timestamps","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274575,"lvl":"info","case":"should have chronological timestamps","phase":"execution","evt":"test.run"}
-{"ts":1760297274576,"lvl":"info","case":"should have chronological timestamps","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
+{"ts":1760303270388,"lvl":"info","case":"should have chronological timestamps","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270389,"lvl":"info","case":"should have chronological timestamps","phase":"execution","evt":"test.run"}
+{"ts":1760303270390,"lvl":"info","case":"should have chronological timestamps","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/coreReporter.spec/should_have_consistent_status_values.jsonl b/reports/coreReporter.spec/should_have_consistent_status_values.jsonl
index 81e9dc7..d11cbbf 100644
--- a/reports/coreReporter.spec/should_have_consistent_status_values.jsonl
+++ b/reports/coreReporter.spec/should_have_consistent_status_values.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274576,"lvl":"info","case":"should have consistent status values","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274577,"lvl":"info","case":"should have consistent status values","phase":"execution","evt":"test.run"}
-{"ts":1760297274578,"lvl":"info","case":"should have consistent status values","phase":"teardown","evt":"case.end","payload":{"duration":4,"status":"passed"}}
+{"ts":1760303270392,"lvl":"info","case":"should have consistent status values","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270393,"lvl":"info","case":"should have consistent status values","phase":"execution","evt":"test.run"}
+{"ts":1760303270394,"lvl":"info","case":"should have consistent status values","phase":"teardown","evt":"case.end","payload":{"duration":55,"status":"passed"}}
diff --git a/reports/coreReporter.spec/should_have_error-level_log_for_case_end_of_failed_tests.digest.json b/reports/coreReporter.spec/should_have_error-level_log_for_case_end_of_failed_tests.digest.json
deleted file mode 100644
index d35b07b..0000000
--- a/reports/coreReporter.spec/should_have_error-level_log_for_case_end_of_failed_tests.digest.json
+++ /dev/null
@@ -1,134 +0,0 @@
-{
-  "case": "should_have_error-level_log_for_case_end_of_failed_tests",
-  "status": "fail",
-  "duration": 2,
-  "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
-  "error": "expected 'info' to be 'error' // Object.is equality",
-  "summary": {
-    "totalEvents": 4,
-    "includedEvents": 2,
-    "redactedFields": 0,
-    "budgetUsed": 1917,
-    "budgetLimit": 10240
-  },
-  "suspects": [
-    {
-      "ts": 1760295577966,
-      "lvl": "error",
-      "case": "should have error-level log for case.end of failed tests",
-      "phase": "teardown",
-      "evt": "case.end",
-      "payload": {
-        "duration": 2,
-        "status": "failed"
-      },
-      "score": 80,
-      "reasons": [
-        "error level",
-        "close proximity to failure"
-      ]
-    },
-    {
-      "ts": 1760295577965,
-      "lvl": "error",
-      "case": "should have error-level log for case.end of failed tests",
-      "phase": "execution",
-      "evt": "test.error",
-      "payload": {
-        "message": "expected 'info' to be 'error' // Object.is equality",
-        "stack": "AssertionError: expected 'info' to be 'error' // Object.is equality\n    at /srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:226:31\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:135:14\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:60:26\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:17)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7"
-      },
-      "score": 79.99,
-      "reasons": [
-        "error level",
-        "close proximity to failure"
-      ]
-    },
-    {
-      "ts": 1760295577964,
-      "lvl": "info",
-      "case": "should have error-level log for case.end of failed tests",
-      "phase": "execution",
-      "evt": "test.run",
-      "score": 29.98,
-      "reasons": [
-        "close proximity to failure"
-      ]
-    },
-    {
-      "ts": 1760295577963,
-      "lvl": "info",
-      "case": "should have error-level log for case.end of failed tests",
-      "phase": "setup",
-      "evt": "case.begin",
-      "env": {
-        "nodeVersion": "v24.9.0",
-        "platform": "linux",
-        "arch": "x64",
-        "os": "Linux 6.8.0-85-generic",
-        "seed": 42,
-        "envVars": {
-          "NODE_ENV": "test",
-          "TEST_SEED": "42",
-          "LAMINAR_DEBUG": "1",
-          "LAMINAR_SUITE": "coreReporter.spec",
-          "LAMINAR_CASE": "should_have_matching_test_count_between_index_and_summary"
-        }
-      },
-      "seed": 42,
-      "score": 29.97,
-      "reasons": [
-        "close proximity to failure"
-      ]
-    }
-  ],
-  "codeframes": [
-    {
-      "file": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts",
-      "line": 226,
-      "column": 31,
-      "source": [
-        "        ",
-        "        const endEvent = lines.find(e => e.evt === 'case.end');",
-        "        expect(endEvent?.lvl).toBe('error');",
-        "        expect(endEvent?.payload?.status).toBe('failed');",
-        "      }"
-      ],
-      "context": {
-        "before": [
-          "        ",
-          "        const endEvent = lines.find(e => e.evt === 'case.end');"
-        ],
-        "focus": "        expect(endEvent?.lvl).toBe('error');",
-        "after": [
-          "        expect(endEvent?.payload?.status).toBe('failed');",
-          "      }"
-        ]
-      }
-    }
-  ],
-  "events": [
-    {
-      "ts": 1760295577965,
-      "lvl": "error",
-      "case": "should have error-level log for case.end of failed tests",
-      "phase": "execution",
-      "evt": "test.error",
-      "payload": {
-        "message": "expected 'info' to be 'error' // Object.is equality",
-        "stack": "AssertionError: expected 'info' to be 'error' // Object.is equality\n    at /srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:226:31\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:135:14\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:60:26\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:17)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7"
-      }
-    },
-    {
-      "ts": 1760295577966,
-      "lvl": "error",
-      "case": "should have error-level log for case.end of failed tests",
-      "phase": "teardown",
-      "evt": "case.end",
-      "payload": {
-        "duration": 2,
-        "status": "failed"
-      }
-    }
-  ]
-}
\ No newline at end of file
diff --git a/reports/coreReporter.spec/should_have_error-level_log_for_case_end_of_failed_tests.digest.md b/reports/coreReporter.spec/should_have_error-level_log_for_case_end_of_failed_tests.digest.md
deleted file mode 100644
index 2a2380f..0000000
--- a/reports/coreReporter.spec/should_have_error-level_log_for_case_end_of_failed_tests.digest.md
+++ /dev/null
@@ -1,42 +0,0 @@
-# Digest: should_have_error-level_log_for_case_end_of_failed_tests
-
-**Status**: fail
-**Duration**: 2ms
-**Location**: /srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0
-**Error**: expected 'info' to be 'error' // Object.is equality
-
-## Summary
-- Total Events: 4
-- Included Events: 2
-- Budget Used: 1917 / 10240 bytes
-
-## Suspects
-- **Score: 80.0** - case.end (error)
-  - Reasons: error level, close proximity to failure
-  - Time: 2025-10-12T18:59:37.966Z
-- **Score: 80.0** - test.error (error)
-  - Reasons: error level, close proximity to failure
-  - Time: 2025-10-12T18:59:37.965Z
-- **Score: 30.0** - test.run (info)
-  - Reasons: close proximity to failure
-  - Time: 2025-10-12T18:59:37.964Z
-- **Score: 30.0** - case.begin (info)
-  - Reasons: close proximity to failure
-  - Time: 2025-10-12T18:59:37.963Z
-
-## Code Frames
-```
-  at /srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:226:31
-  224 |         
-  225 |         const endEvent = lines.find(e => e.evt === 'case.end');
-> 226 |         expect(endEvent?.lvl).toBe('error');
-                                    ^
-  227 |         expect(endEvent?.payload?.status).toBe('failed');
-  228 |       }
-```
-
-## Events
-```json
-{"ts":1760295577965,"lvl":"error","case":"should have error-level log for case.end of failed tests","phase":"execution","evt":"test.error","payload":{"message":"expected 'info' to be 'error' // Object.is equality","stack":"AssertionError: expected 'info' to be 'error' // Object.is equality\n    at /srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:226:31\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:135:14\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:60:26\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:17)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7"}}
-{"ts":1760295577966,"lvl":"error","case":"should have error-level log for case.end of failed tests","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"failed"}}
-```
\ No newline at end of file
diff --git a/reports/coreReporter.spec/should_have_error-level_log_for_case_end_of_failed_tests.jsonl b/reports/coreReporter.spec/should_have_error-level_log_for_case_end_of_failed_tests.jsonl
index 9e4fc0c..b9be04e 100644
--- a/reports/coreReporter.spec/should_have_error-level_log_for_case_end_of_failed_tests.jsonl
+++ b/reports/coreReporter.spec/should_have_error-level_log_for_case_end_of_failed_tests.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274574,"lvl":"info","case":"should have error-level log for case.end of failed tests","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274575,"lvl":"info","case":"should have error-level log for case.end of failed tests","phase":"execution","evt":"test.run"}
-{"ts":1760297274576,"lvl":"info","case":"should have error-level log for case.end of failed tests","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270389,"lvl":"info","case":"should have error-level log for case.end of failed tests","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270390,"lvl":"info","case":"should have error-level log for case.end of failed tests","phase":"execution","evt":"test.run"}
+{"ts":1760303270391,"lvl":"info","case":"should have error-level log for case.end of failed tests","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/coreReporter.spec/should_have_matching_test_count_between_index_and_summary.digest.json b/reports/coreReporter.spec/should_have_matching_test_count_between_index_and_summary.digest.json
deleted file mode 100644
index 888bef0..0000000
--- a/reports/coreReporter.spec/should_have_matching_test_count_between_index_and_summary.digest.json
+++ /dev/null
@@ -1,134 +0,0 @@
-{
-  "case": "should_have_matching_test_count_between_index_and_summary",
-  "status": "fail",
-  "duration": 6,
-  "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
-  "error": "expected 1 to be greater than or equal to 243",
-  "summary": {
-    "totalEvents": 4,
-    "includedEvents": 2,
-    "redactedFields": 0,
-    "budgetUsed": 1981,
-    "budgetLimit": 10240
-  },
-  "suspects": [
-    {
-      "ts": 1760295620994,
-      "lvl": "error",
-      "case": "should have matching test count between index and summary",
-      "phase": "teardown",
-      "evt": "case.end",
-      "payload": {
-        "duration": 6,
-        "status": "failed"
-      },
-      "score": 80,
-      "reasons": [
-        "error level",
-        "close proximity to failure"
-      ]
-    },
-    {
-      "ts": 1760295620993,
-      "lvl": "error",
-      "case": "should have matching test count between index and summary",
-      "phase": "execution",
-      "evt": "test.error",
-      "payload": {
-        "message": "expected 1 to be greater than or equal to 243",
-        "stack": "AssertionError: expected 1 to be greater than or equal to 243\n    at /srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:240:35\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:135:14\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:60:26\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:17)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7"
-      },
-      "score": 79.99,
-      "reasons": [
-        "error level",
-        "close proximity to failure"
-      ]
-    },
-    {
-      "ts": 1760295620992,
-      "lvl": "info",
-      "case": "should have matching test count between index and summary",
-      "phase": "execution",
-      "evt": "test.run",
-      "score": 29.98,
-      "reasons": [
-        "close proximity to failure"
-      ]
-    },
-    {
-      "ts": 1760295620991,
-      "lvl": "info",
-      "case": "should have matching test count between index and summary",
-      "phase": "setup",
-      "evt": "case.begin",
-      "env": {
-        "nodeVersion": "v24.9.0",
-        "platform": "linux",
-        "arch": "x64",
-        "os": "Linux 6.8.0-85-generic",
-        "seed": 42,
-        "envVars": {
-          "NODE_ENV": "test",
-          "TEST_SEED": "42",
-          "LAMINAR_DEBUG": "1",
-          "LAMINAR_SUITE": "coreReporter.spec",
-          "LAMINAR_CASE": "should_have_matching_test_count_between_index_and_summary"
-        }
-      },
-      "seed": 42,
-      "score": 29.97,
-      "reasons": [
-        "close proximity to failure"
-      ]
-    }
-  ],
-  "codeframes": [
-    {
-      "file": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts",
-      "line": 240,
-      "column": 35,
-      "source": [
-        "      const summaryContent = fs.readFileSync(SUMMARY_PATH, 'utf-8');",
-        "      const summaryLines = summaryContent.trim().split('\\n');",
-        "      expect(summaryLines.length).toBeGreaterThanOrEqual(indexData.totalTests);",
-        "    });",
-        ""
-      ],
-      "context": {
-        "before": [
-          "      const summaryContent = fs.readFileSync(SUMMARY_PATH, 'utf-8');",
-          "      const summaryLines = summaryContent.trim().split('\\n');"
-        ],
-        "focus": "      expect(summaryLines.length).toBeGreaterThanOrEqual(indexData.totalTests);",
-        "after": [
-          "    });",
-          ""
-        ]
-      }
-    }
-  ],
-  "events": [
-    {
-      "ts": 1760295620993,
-      "lvl": "error",
-      "case": "should have matching test count between index and summary",
-      "phase": "execution",
-      "evt": "test.error",
-      "payload": {
-        "message": "expected 1 to be greater than or equal to 243",
-        "stack": "AssertionError: expected 1 to be greater than or equal to 243\n    at /srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:240:35\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:135:14\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:60:26\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:17)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7"
-      }
-    },
-    {
-      "ts": 1760295620994,
-      "lvl": "error",
-      "case": "should have matching test count between index and summary",
-      "phase": "teardown",
-      "evt": "case.end",
-      "payload": {
-        "duration": 6,
-        "status": "failed"
-      }
-    }
-  ]
-}
\ No newline at end of file
diff --git a/reports/coreReporter.spec/should_have_matching_test_count_between_index_and_summary.digest.md b/reports/coreReporter.spec/should_have_matching_test_count_between_index_and_summary.digest.md
deleted file mode 100644
index 688e93e..0000000
--- a/reports/coreReporter.spec/should_have_matching_test_count_between_index_and_summary.digest.md
+++ /dev/null
@@ -1,42 +0,0 @@
-# Digest: should_have_matching_test_count_between_index_and_summary
-
-**Status**: fail
-**Duration**: 6ms
-**Location**: /srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0
-**Error**: expected 1 to be greater than or equal to 243
-
-## Summary
-- Total Events: 4
-- Included Events: 2
-- Budget Used: 1981 / 10240 bytes
-
-## Suspects
-- **Score: 80.0** - case.end (error)
-  - Reasons: error level, close proximity to failure
-  - Time: 2025-10-12T19:00:20.994Z
-- **Score: 80.0** - test.error (error)
-  - Reasons: error level, close proximity to failure
-  - Time: 2025-10-12T19:00:20.993Z
-- **Score: 30.0** - test.run (info)
-  - Reasons: close proximity to failure
-  - Time: 2025-10-12T19:00:20.992Z
-- **Score: 30.0** - case.begin (info)
-  - Reasons: close proximity to failure
-  - Time: 2025-10-12T19:00:20.991Z
-
-## Code Frames
-```
-  at /srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:240:35
-  238 |       const summaryContent = fs.readFileSync(SUMMARY_PATH, 'utf-8');
-  239 |       const summaryLines = summaryContent.trim().split('\n');
-> 240 |       expect(summaryLines.length).toBeGreaterThanOrEqual(indexData.totalTests);
-                                        ^
-  241 |     });
-  242 | 
-```
-
-## Events
-```json
-{"ts":1760295620993,"lvl":"error","case":"should have matching test count between index and summary","phase":"execution","evt":"test.error","payload":{"message":"expected 1 to be greater than or equal to 243","stack":"AssertionError: expected 1 to be greater than or equal to 243\n    at /srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:240:35\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:135:14\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:60:26\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:17)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7"}}
-{"ts":1760295620994,"lvl":"error","case":"should have matching test count between index and summary","phase":"teardown","evt":"case.end","payload":{"duration":6,"status":"failed"}}
-```
\ No newline at end of file
diff --git a/reports/coreReporter.spec/should_have_matching_test_count_between_index_and_summary.jsonl b/reports/coreReporter.spec/should_have_matching_test_count_between_index_and_summary.jsonl
index 05052fa..ff0a79d 100644
--- a/reports/coreReporter.spec/should_have_matching_test_count_between_index_and_summary.jsonl
+++ b/reports/coreReporter.spec/should_have_matching_test_count_between_index_and_summary.jsonl
@@ -1,4 +1,4 @@
-{"ts":1760297274574,"lvl":"info","case":"should have matching test count between index and summary","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274575,"lvl":"info","case":"should have matching test count between index and summary","phase":"execution","evt":"test.run"}
-{"ts":1760297274576,"lvl":"error","case":"should have matching test count between index and summary","phase":"execution","evt":"test.error","payload":{"message":"expected 1 to be greater than or equal to 48","stack":"AssertionError: expected 1 to be greater than or equal to 48\n    at /srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:240:35\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:135:14\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:60:26\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:17)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7"}}
-{"ts":1760297274577,"lvl":"error","case":"should have matching test count between index and summary","phase":"teardown","evt":"case.end","payload":{"duration":9,"status":"failed"}}
+{"ts":1760303270390,"lvl":"info","case":"should have matching test count between index and summary","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270391,"lvl":"info","case":"should have matching test count between index and summary","phase":"execution","evt":"test.run"}
+{"ts":1760303270392,"lvl":"error","case":"should have matching test count between index and summary","phase":"execution","evt":"test.error","payload":{"message":"expected 107 to be greater than or equal to 409","stack":"AssertionError: expected 107 to be greater than or equal to 409\n    at /srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:240:35\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:135:14\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:60:26\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:17)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7"}}
+{"ts":1760303270393,"lvl":"error","case":"should have matching test count between index and summary","phase":"teardown","evt":"case.end","payload":{"duration":37,"status":"failed"}}
diff --git a/reports/coreReporter.spec/should_have_summary_jsonl_file.jsonl b/reports/coreReporter.spec/should_have_summary_jsonl_file.jsonl
index 792da3a..cd321f4 100644
--- a/reports/coreReporter.spec/should_have_summary_jsonl_file.jsonl
+++ b/reports/coreReporter.spec/should_have_summary_jsonl_file.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274574,"lvl":"info","case":"should have summary.jsonl file","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274575,"lvl":"info","case":"should have summary.jsonl file","phase":"execution","evt":"test.run"}
-{"ts":1760297274576,"lvl":"info","case":"should have summary.jsonl file","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
+{"ts":1760303270390,"lvl":"info","case":"should have summary.jsonl file","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270391,"lvl":"info","case":"should have summary.jsonl file","phase":"execution","evt":"test.run"}
+{"ts":1760303270392,"lvl":"info","case":"should have summary.jsonl file","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/coreReporter.spec/should_have_timestamps_for_all_events.jsonl b/reports/coreReporter.spec/should_have_timestamps_for_all_events.jsonl
index 3f98758..771a7da 100644
--- a/reports/coreReporter.spec/should_have_timestamps_for_all_events.jsonl
+++ b/reports/coreReporter.spec/should_have_timestamps_for_all_events.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274574,"lvl":"info","case":"should have timestamps for all events","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274575,"lvl":"info","case":"should have timestamps for all events","phase":"execution","evt":"test.run"}
-{"ts":1760297274576,"lvl":"info","case":"should have timestamps for all events","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270388,"lvl":"info","case":"should have timestamps for all events","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270389,"lvl":"info","case":"should have timestamps for all events","phase":"execution","evt":"test.run"}
+{"ts":1760303270390,"lvl":"info","case":"should have timestamps for all events","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/coreReporter.spec/should_have_totalTests_matching_artifacts_length.jsonl b/reports/coreReporter.spec/should_have_totalTests_matching_artifacts_length.jsonl
index 3532f98..900744f 100644
--- a/reports/coreReporter.spec/should_have_totalTests_matching_artifacts_length.jsonl
+++ b/reports/coreReporter.spec/should_have_totalTests_matching_artifacts_length.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274572,"lvl":"info","case":"should have totalTests matching artifacts length","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274573,"lvl":"info","case":"should have totalTests matching artifacts length","phase":"execution","evt":"test.run"}
-{"ts":1760297274574,"lvl":"info","case":"should have totalTests matching artifacts length","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270381,"lvl":"info","case":"should have totalTests matching artifacts length","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270382,"lvl":"info","case":"should have totalTests matching artifacts length","phase":"execution","evt":"test.run"}
+{"ts":1760303270383,"lvl":"info","case":"should have totalTests matching artifacts length","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/coreReporter.spec/should_have_unique_case_file_paths.jsonl b/reports/coreReporter.spec/should_have_unique_case_file_paths.jsonl
index 29b9596..db924ab 100644
--- a/reports/coreReporter.spec/should_have_unique_case_file_paths.jsonl
+++ b/reports/coreReporter.spec/should_have_unique_case_file_paths.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274575,"lvl":"info","case":"should have unique case file paths","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274576,"lvl":"info","case":"should have unique case file paths","phase":"execution","evt":"test.run"}
-{"ts":1760297274577,"lvl":"info","case":"should have unique case file paths","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
+{"ts":1760303270392,"lvl":"info","case":"should have unique case file paths","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270393,"lvl":"info","case":"should have unique case file paths","phase":"execution","evt":"test.run"}
+{"ts":1760303270394,"lvl":"info","case":"should have unique case file paths","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/coreReporter.spec/should_have_valid_JSONL_in_summary_file.jsonl b/reports/coreReporter.spec/should_have_valid_JSONL_in_summary_file.jsonl
index de0d81d..f121145 100644
--- a/reports/coreReporter.spec/should_have_valid_JSONL_in_summary_file.jsonl
+++ b/reports/coreReporter.spec/should_have_valid_JSONL_in_summary_file.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274575,"lvl":"info","case":"should have valid JSONL in summary file","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274576,"lvl":"info","case":"should have valid JSONL in summary file","phase":"execution","evt":"test.run"}
-{"ts":1760297274577,"lvl":"info","case":"should have valid JSONL in summary file","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270390,"lvl":"info","case":"should have valid JSONL in summary file","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270391,"lvl":"info","case":"should have valid JSONL in summary file","phase":"execution","evt":"test.run"}
+{"ts":1760303270392,"lvl":"info","case":"should have valid JSONL in summary file","phase":"teardown","evt":"case.end","payload":{"duration":23,"status":"passed"}}
diff --git a/reports/coreReporter.spec/should_have_valid_location_paths.jsonl b/reports/coreReporter.spec/should_have_valid_location_paths.jsonl
index fb0f77d..88c9ddf 100644
--- a/reports/coreReporter.spec/should_have_valid_location_paths.jsonl
+++ b/reports/coreReporter.spec/should_have_valid_location_paths.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274573,"lvl":"info","case":"should have valid location paths","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274574,"lvl":"info","case":"should have valid location paths","phase":"execution","evt":"test.run"}
-{"ts":1760297274575,"lvl":"info","case":"should have valid location paths","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270385,"lvl":"info","case":"should have valid location paths","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270386,"lvl":"info","case":"should have valid location paths","phase":"execution","evt":"test.run"}
+{"ts":1760303270387,"lvl":"info","case":"should have valid location paths","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
diff --git a/reports/coreReporter.spec/should_have_valid_structure_for_each_artifact_entry.jsonl b/reports/coreReporter.spec/should_have_valid_structure_for_each_artifact_entry.jsonl
index 8978795..a183c58 100644
--- a/reports/coreReporter.spec/should_have_valid_structure_for_each_artifact_entry.jsonl
+++ b/reports/coreReporter.spec/should_have_valid_structure_for_each_artifact_entry.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274572,"lvl":"info","case":"should have valid structure for each artifact entry","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274573,"lvl":"info","case":"should have valid structure for each artifact entry","phase":"execution","evt":"test.run"}
-{"ts":1760297274574,"lvl":"info","case":"should have valid structure for each artifact entry","phase":"teardown","evt":"case.end","payload":{"duration":11,"status":"passed"}}
+{"ts":1760303270383,"lvl":"info","case":"should have valid structure for each artifact entry","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270384,"lvl":"info","case":"should have valid structure for each artifact entry","phase":"execution","evt":"test.run"}
+{"ts":1760303270385,"lvl":"info","case":"should have valid structure for each artifact entry","phase":"teardown","evt":"case.end","payload":{"duration":86,"status":"passed"}}
diff --git a/reports/coreReporter.spec/should_have_valid_timestamp_format.jsonl b/reports/coreReporter.spec/should_have_valid_timestamp_format.jsonl
index 51c9edd..24f34ce 100644
--- a/reports/coreReporter.spec/should_have_valid_timestamp_format.jsonl
+++ b/reports/coreReporter.spec/should_have_valid_timestamp_format.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274572,"lvl":"info","case":"should have valid timestamp format","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274573,"lvl":"info","case":"should have valid timestamp format","phase":"execution","evt":"test.run"}
-{"ts":1760297274574,"lvl":"info","case":"should have valid timestamp format","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270381,"lvl":"info","case":"should have valid timestamp format","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270382,"lvl":"info","case":"should have valid timestamp format","phase":"execution","evt":"test.run"}
+{"ts":1760303270383,"lvl":"info","case":"should have valid timestamp format","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/coreReporter.spec/should_have_valid_timestamps_for_each_entry.jsonl b/reports/coreReporter.spec/should_have_valid_timestamps_for_each_entry.jsonl
index 9ba37c6..15969bb 100644
--- a/reports/coreReporter.spec/should_have_valid_timestamps_for_each_entry.jsonl
+++ b/reports/coreReporter.spec/should_have_valid_timestamps_for_each_entry.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274572,"lvl":"info","case":"should have valid timestamps for each entry","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274573,"lvl":"info","case":"should have valid timestamps for each entry","phase":"execution","evt":"test.run"}
-{"ts":1760297274574,"lvl":"info","case":"should have valid timestamps for each entry","phase":"teardown","evt":"case.end","payload":{"duration":4,"status":"passed"}}
+{"ts":1760303270383,"lvl":"info","case":"should have valid timestamps for each entry","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270384,"lvl":"info","case":"should have valid timestamps for each entry","phase":"execution","evt":"test.run"}
+{"ts":1760303270385,"lvl":"info","case":"should have valid timestamps for each entry","phase":"teardown","evt":"case.end","payload":{"duration":6,"status":"passed"}}
diff --git a/reports/coreReporter.spec/should_include_case_begin_event.jsonl b/reports/coreReporter.spec/should_include_case_begin_event.jsonl
index 9e769d1..3038def 100644
--- a/reports/coreReporter.spec/should_include_case_begin_event.jsonl
+++ b/reports/coreReporter.spec/should_include_case_begin_event.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274573,"lvl":"info","case":"should include case.begin event","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274574,"lvl":"info","case":"should include case.begin event","phase":"execution","evt":"test.run"}
-{"ts":1760297274575,"lvl":"info","case":"should include case.begin event","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
+{"ts":1760303270387,"lvl":"info","case":"should include case.begin event","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270388,"lvl":"info","case":"should include case.begin event","phase":"execution","evt":"test.run"}
+{"ts":1760303270389,"lvl":"info","case":"should include case.begin event","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/coreReporter.spec/should_include_case_end_event_with_payload.jsonl b/reports/coreReporter.spec/should_include_case_end_event_with_payload.jsonl
index 3d1ab6e..d4a231c 100644
--- a/reports/coreReporter.spec/should_include_case_end_event_with_payload.jsonl
+++ b/reports/coreReporter.spec/should_include_case_end_event_with_payload.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274573,"lvl":"info","case":"should include case.end event with payload","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274574,"lvl":"info","case":"should include case.end event with payload","phase":"execution","evt":"test.run"}
-{"ts":1760297274575,"lvl":"info","case":"should include case.end event with payload","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
+{"ts":1760303270388,"lvl":"info","case":"should include case.end event with payload","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270389,"lvl":"info","case":"should include case.end event with payload","phase":"execution","evt":"test.run"}
+{"ts":1760303270390,"lvl":"info","case":"should include case.end event with payload","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/coreReporter.spec/should_include_test_error_events_for_failed_tests.digest.json b/reports/coreReporter.spec/should_include_test_error_events_for_failed_tests.digest.json
deleted file mode 100644
index d1b0059..0000000
--- a/reports/coreReporter.spec/should_include_test_error_events_for_failed_tests.digest.json
+++ /dev/null
@@ -1,157 +0,0 @@
-{
-  "case": "should_include_test_error_events_for_failed_tests",
-  "status": "fail",
-  "duration": 7,
-  "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
-  "error": "test.error event should exist for failed test: expected undefined not to be undefined",
-  "summary": {
-    "totalEvents": 4,
-    "includedEvents": 2,
-    "redactedFields": 0,
-    "budgetUsed": 2533,
-    "budgetLimit": 10240
-  },
-  "suspects": [
-    {
-      "ts": 1760295577966,
-      "lvl": "error",
-      "case": "should include test.error events for failed tests",
-      "phase": "teardown",
-      "evt": "case.end",
-      "payload": {
-        "duration": 7,
-        "status": "failed"
-      },
-      "score": 80,
-      "reasons": [
-        "error level",
-        "close proximity to failure"
-      ]
-    },
-    {
-      "ts": 1760295577965,
-      "lvl": "error",
-      "case": "should include test.error events for failed tests",
-      "phase": "execution",
-      "evt": "test.error",
-      "payload": {
-        "message": "test.error event should exist for failed test: expected undefined not to be undefined",
-        "stack": "AssertionError: test.error event should exist for failed test: expected undefined not to be undefined\n    at Proxy.<anonymous> (file:///srv/repos0/mkolbol/node_modules/@vitest/expect/dist/index.js:1102:24)\n    at Proxy.<anonymous> (file:///srv/repos0/mkolbol/node_modules/@vitest/expect/dist/index.js:800:17)\n    at Proxy.methodWrapper (/srv/repos0/mkolbol/node_modules/chai/lib/chai/utils/addMethod.js:57:25)\n    at /srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:212:77\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:135:14\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:60:26\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:17)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)"
-      },
-      "score": 79.99,
-      "reasons": [
-        "error level",
-        "close proximity to failure"
-      ]
-    },
-    {
-      "ts": 1760295577964,
-      "lvl": "info",
-      "case": "should include test.error events for failed tests",
-      "phase": "execution",
-      "evt": "test.run",
-      "score": 29.98,
-      "reasons": [
-        "close proximity to failure"
-      ]
-    },
-    {
-      "ts": 1760295577963,
-      "lvl": "info",
-      "case": "should include test.error events for failed tests",
-      "phase": "setup",
-      "evt": "case.begin",
-      "env": {
-        "nodeVersion": "v24.9.0",
-        "platform": "linux",
-        "arch": "x64",
-        "os": "Linux 6.8.0-85-generic",
-        "seed": 42,
-        "envVars": {
-          "NODE_ENV": "test",
-          "TEST_SEED": "42",
-          "LAMINAR_DEBUG": "1",
-          "LAMINAR_SUITE": "coreReporter.spec",
-          "LAMINAR_CASE": "should_have_matching_test_count_between_index_and_summary"
-        }
-      },
-      "seed": 42,
-      "score": 29.97,
-      "reasons": [
-        "close proximity to failure"
-      ]
-    }
-  ],
-  "codeframes": [
-    {
-      "file": "/srv/repos0/mkolbol/node_modules/chai/lib/chai/utils/addMethod.js",
-      "line": 57,
-      "column": 25,
-      "source": [
-        "    }",
-        "",
-        "    var result = method.apply(this, arguments);",
-        "    if (result !== undefined)",
-        "      return result;"
-      ],
-      "context": {
-        "before": [
-          "    }",
-          ""
-        ],
-        "focus": "    var result = method.apply(this, arguments);",
-        "after": [
-          "    if (result !== undefined)",
-          "      return result;"
-        ]
-      }
-    },
-    {
-      "file": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts",
-      "line": 212,
-      "column": 77,
-      "source": [
-        "        ",
-        "        const errorEvent = lines.find(e => e.evt === 'test.error');",
-        "        expect(errorEvent, 'test.error event should exist for failed test').toBeDefined();",
-        "        expect(errorEvent?.lvl).toBe('error');",
-        "        expect(errorEvent?.payload).toBeDefined();"
-      ],
-      "context": {
-        "before": [
-          "        ",
-          "        const errorEvent = lines.find(e => e.evt === 'test.error');"
-        ],
-        "focus": "        expect(errorEvent, 'test.error event should exist for failed test').toBeDefined();",
-        "after": [
-          "        expect(errorEvent?.lvl).toBe('error');",
-          "        expect(errorEvent?.payload).toBeDefined();"
-        ]
-      }
-    }
-  ],
-  "events": [
-    {
-      "ts": 1760295577965,
-      "lvl": "error",
-      "case": "should include test.error events for failed tests",
-      "phase": "execution",
-      "evt": "test.error",
-      "payload": {
-        "message": "test.error event should exist for failed test: expected undefined not to be undefined",
-        "stack": "AssertionError: test.error event should exist for failed test: expected undefined not to be undefined\n    at Proxy.<anonymous> (file:///srv/repos0/mkolbol/node_modules/@vitest/expect/dist/index.js:1102:24)\n    at Proxy.<anonymous> (file:///srv/repos0/mkolbol/node_modules/@vitest/expect/dist/index.js:800:17)\n    at Proxy.methodWrapper (/srv/repos0/mkolbol/node_modules/chai/lib/chai/utils/addMethod.js:57:25)\n    at /srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:212:77\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:135:14\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:60:26\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:17)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)"
-      }
-    },
-    {
-      "ts": 1760295577966,
-      "lvl": "error",
-      "case": "should include test.error events for failed tests",
-      "phase": "teardown",
-      "evt": "case.end",
-      "payload": {
-        "duration": 7,
-        "status": "failed"
-      }
-    }
-  ]
-}
\ No newline at end of file
diff --git a/reports/coreReporter.spec/should_include_test_error_events_for_failed_tests.digest.md b/reports/coreReporter.spec/should_include_test_error_events_for_failed_tests.digest.md
deleted file mode 100644
index 70ec7a7..0000000
--- a/reports/coreReporter.spec/should_include_test_error_events_for_failed_tests.digest.md
+++ /dev/null
@@ -1,52 +0,0 @@
-# Digest: should_include_test_error_events_for_failed_tests
-
-**Status**: fail
-**Duration**: 7ms
-**Location**: /srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0
-**Error**: test.error event should exist for failed test: expected undefined not to be undefined
-
-## Summary
-- Total Events: 4
-- Included Events: 2
-- Budget Used: 2533 / 10240 bytes
-
-## Suspects
-- **Score: 80.0** - case.end (error)
-  - Reasons: error level, close proximity to failure
-  - Time: 2025-10-12T18:59:37.966Z
-- **Score: 80.0** - test.error (error)
-  - Reasons: error level, close proximity to failure
-  - Time: 2025-10-12T18:59:37.965Z
-- **Score: 30.0** - test.run (info)
-  - Reasons: close proximity to failure
-  - Time: 2025-10-12T18:59:37.964Z
-- **Score: 30.0** - case.begin (info)
-  - Reasons: close proximity to failure
-  - Time: 2025-10-12T18:59:37.963Z
-
-## Code Frames
-```
-  at /srv/repos0/mkolbol/node_modules/chai/lib/chai/utils/addMethod.js:57:25
-  55 |     }
-  56 | 
-> 57 |     var result = method.apply(this, arguments);
-                             ^
-  58 |     if (result !== undefined)
-  59 |       return result;
-```
-
-```
-  at /srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:212:77
-  210 |         
-  211 |         const errorEvent = lines.find(e => e.evt === 'test.error');
-> 212 |         expect(errorEvent, 'test.error event should exist for failed test').toBeDefined();
-                                                                                  ^
-  213 |         expect(errorEvent?.lvl).toBe('error');
-  214 |         expect(errorEvent?.payload).toBeDefined();
-```
-
-## Events
-```json
-{"ts":1760295577965,"lvl":"error","case":"should include test.error events for failed tests","phase":"execution","evt":"test.error","payload":{"message":"test.error event should exist for failed test: expected undefined not to be undefined","stack":"AssertionError: test.error event should exist for failed test: expected undefined not to be undefined\n    at Proxy.<anonymous> (file:///srv/repos0/mkolbol/node_modules/@vitest/expect/dist/index.js:1102:24)\n    at Proxy.<anonymous> (file:///srv/repos0/mkolbol/node_modules/@vitest/expect/dist/index.js:800:17)\n    at Proxy.methodWrapper (/srv/repos0/mkolbol/node_modules/chai/lib/chai/utils/addMethod.js:57:25)\n    at /srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:212:77\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:135:14\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:60:26\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:17)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)"}}
-{"ts":1760295577966,"lvl":"error","case":"should include test.error events for failed tests","phase":"teardown","evt":"case.end","payload":{"duration":7,"status":"failed"}}
-```
\ No newline at end of file
diff --git a/reports/coreReporter.spec/should_include_test_error_events_for_failed_tests.jsonl b/reports/coreReporter.spec/should_include_test_error_events_for_failed_tests.jsonl
index c4fef6b..d686d87 100644
--- a/reports/coreReporter.spec/should_include_test_error_events_for_failed_tests.jsonl
+++ b/reports/coreReporter.spec/should_include_test_error_events_for_failed_tests.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274574,"lvl":"info","case":"should include test.error events for failed tests","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274575,"lvl":"info","case":"should include test.error events for failed tests","phase":"execution","evt":"test.run"}
-{"ts":1760297274576,"lvl":"info","case":"should include test.error events for failed tests","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270389,"lvl":"info","case":"should include test.error events for failed tests","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270390,"lvl":"info","case":"should include test.error events for failed tests","phase":"execution","evt":"test.run"}
+{"ts":1760303270391,"lvl":"info","case":"should include test.error events for failed tests","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/coreReporter.spec/should_include_test_run_event.jsonl b/reports/coreReporter.spec/should_include_test_run_event.jsonl
index 0afb6fe..fc8e997 100644
--- a/reports/coreReporter.spec/should_include_test_run_event.jsonl
+++ b/reports/coreReporter.spec/should_include_test_run_event.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274573,"lvl":"info","case":"should include test.run event","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274574,"lvl":"info","case":"should include test.run event","phase":"execution","evt":"test.run"}
-{"ts":1760297274575,"lvl":"info","case":"should include test.run event","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270387,"lvl":"info","case":"should include test.run event","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270388,"lvl":"info","case":"should include test.run event","phase":"execution","evt":"test.run"}
+{"ts":1760303270389,"lvl":"info","case":"should include test.run event","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/coreReporter.spec/should_organize_case_files_in_suite_directories.jsonl b/reports/coreReporter.spec/should_organize_case_files_in_suite_directories.jsonl
index 094e687..5600193 100644
--- a/reports/coreReporter.spec/should_organize_case_files_in_suite_directories.jsonl
+++ b/reports/coreReporter.spec/should_organize_case_files_in_suite_directories.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274573,"lvl":"info","case":"should organize case files in suite directories","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274574,"lvl":"info","case":"should organize case files in suite directories","phase":"execution","evt":"test.run"}
-{"ts":1760297274575,"lvl":"info","case":"should organize case files in suite directories","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
+{"ts":1760303270386,"lvl":"info","case":"should organize case files in suite directories","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270387,"lvl":"info","case":"should organize case files in suite directories","phase":"execution","evt":"test.run"}
+{"ts":1760303270388,"lvl":"info","case":"should organize case files in suite directories","phase":"teardown","evt":"case.end","payload":{"duration":8,"status":"passed"}}
diff --git a/reports/coreReporter.spec/should_reference_summary_jsonl_in_artifacts.jsonl b/reports/coreReporter.spec/should_reference_summary_jsonl_in_artifacts.jsonl
index ca91b33..42a716b 100644
--- a/reports/coreReporter.spec/should_reference_summary_jsonl_in_artifacts.jsonl
+++ b/reports/coreReporter.spec/should_reference_summary_jsonl_in_artifacts.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274572,"lvl":"info","case":"should reference summary.jsonl in artifacts","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274573,"lvl":"info","case":"should reference summary.jsonl in artifacts","phase":"execution","evt":"test.run"}
-{"ts":1760297274574,"lvl":"info","case":"should reference summary.jsonl in artifacts","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270384,"lvl":"info","case":"should reference summary.jsonl in artifacts","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270385,"lvl":"info","case":"should reference summary.jsonl in artifacts","phase":"execution","evt":"test.run"}
+{"ts":1760303270386,"lvl":"info","case":"should reference summary.jsonl in artifacts","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
diff --git a/reports/debug-api.spec/checks_module_against_config_modules_when_enabled.jsonl b/reports/debug-api.spec/checks_module_against_config_modules_when_enabled.jsonl
index 0ed1e97..dbfce59 100644
--- a/reports/debug-api.spec/checks_module_against_config_modules_when_enabled.jsonl
+++ b/reports/debug-api.spec/checks_module_against_config_modules_when_enabled.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274587,"lvl":"info","case":"checks module against config.modules when enabled","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274588,"lvl":"info","case":"checks module against config.modules when enabled","phase":"execution","evt":"test.run"}
-{"ts":1760297274589,"lvl":"info","case":"checks module against config.modules when enabled","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270153,"lvl":"info","case":"checks module against config.modules when enabled","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270154,"lvl":"info","case":"checks module against config.modules when enabled","phase":"execution","evt":"test.run"}
+{"ts":1760303270155,"lvl":"info","case":"checks module against config.modules when enabled","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/debug-api.spec/does_not_emit_when_on___returns_false.jsonl b/reports/debug-api.spec/does_not_emit_when_on___returns_false.jsonl
index 348a1f5..399284c 100644
--- a/reports/debug-api.spec/does_not_emit_when_on___returns_false.jsonl
+++ b/reports/debug-api.spec/does_not_emit_when_on___returns_false.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274587,"lvl":"info","case":"does not emit when on() returns false","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274588,"lvl":"info","case":"does not emit when on() returns false","phase":"execution","evt":"test.run"}
-{"ts":1760297274589,"lvl":"info","case":"does not emit when on() returns false","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270154,"lvl":"info","case":"does not emit when on() returns false","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270155,"lvl":"info","case":"does not emit when on() returns false","phase":"execution","evt":"test.run"}
+{"ts":1760303270156,"lvl":"info","case":"does not emit when on() returns false","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
diff --git a/reports/debug-api.spec/emit_returns_immediately_when_module_is_disabled.jsonl b/reports/debug-api.spec/emit_returns_immediately_when_module_is_disabled.jsonl
index 066e5a1..ae6f53c 100644
--- a/reports/debug-api.spec/emit_returns_immediately_when_module_is_disabled.jsonl
+++ b/reports/debug-api.spec/emit_returns_immediately_when_module_is_disabled.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274587,"lvl":"info","case":"emit returns immediately when module is disabled","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274588,"lvl":"info","case":"emit returns immediately when module is disabled","phase":"execution","evt":"test.run"}
-{"ts":1760297274589,"lvl":"info","case":"emit returns immediately when module is disabled","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270154,"lvl":"info","case":"emit returns immediately when module is disabled","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270155,"lvl":"info","case":"emit returns immediately when module is disabled","phase":"execution","evt":"test.run"}
+{"ts":1760303270156,"lvl":"info","case":"emit returns immediately when module is disabled","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/debug-api.spec/emits_formatted_output_to_console.jsonl b/reports/debug-api.spec/emits_formatted_output_to_console.jsonl
index 50b1b50..87e0cb2 100644
--- a/reports/debug-api.spec/emits_formatted_output_to_console.jsonl
+++ b/reports/debug-api.spec/emits_formatted_output_to_console.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274588,"lvl":"info","case":"emits formatted output to console","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274589,"lvl":"info","case":"emits formatted output to console","phase":"execution","evt":"test.run"}
-{"ts":1760297274590,"lvl":"info","case":"emits formatted output to console","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270169,"lvl":"info","case":"emits formatted output to console","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270170,"lvl":"info","case":"emits formatted output to console","phase":"execution","evt":"test.run"}
+{"ts":1760303270171,"lvl":"info","case":"emits formatted output to console","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/debug-api.spec/emits_to_console_when_module_is_enabled.jsonl b/reports/debug-api.spec/emits_to_console_when_module_is_enabled.jsonl
index 332ef83..c4d7b9b 100644
--- a/reports/debug-api.spec/emits_to_console_when_module_is_enabled.jsonl
+++ b/reports/debug-api.spec/emits_to_console_when_module_is_enabled.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274588,"lvl":"info","case":"emits to console when module is enabled","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274589,"lvl":"info","case":"emits to console when module is enabled","phase":"execution","evt":"test.run"}
-{"ts":1760297274590,"lvl":"info","case":"emits to console when module is enabled","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
+{"ts":1760303270155,"lvl":"info","case":"emits to console when module is enabled","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270156,"lvl":"info","case":"emits to console when module is enabled","phase":"execution","evt":"test.run"}
+{"ts":1760303270157,"lvl":"info","case":"emits to console when module is enabled","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/debug-api.spec/handles_emit_without_payload.jsonl b/reports/debug-api.spec/handles_emit_without_payload.jsonl
index 8b9aacf..c832467 100644
--- a/reports/debug-api.spec/handles_emit_without_payload.jsonl
+++ b/reports/debug-api.spec/handles_emit_without_payload.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274588,"lvl":"info","case":"handles emit without payload","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274589,"lvl":"info","case":"handles emit without payload","phase":"execution","evt":"test.run"}
-{"ts":1760297274590,"lvl":"info","case":"handles emit without payload","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
+{"ts":1760303270169,"lvl":"info","case":"handles emit without payload","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270170,"lvl":"info","case":"handles emit without payload","phase":"execution","evt":"test.run"}
+{"ts":1760303270171,"lvl":"info","case":"handles emit without payload","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/debug-api.spec/respects_debug_level_filtering.jsonl b/reports/debug-api.spec/respects_debug_level_filtering.jsonl
index cec09de..d264e81 100644
--- a/reports/debug-api.spec/respects_debug_level_filtering.jsonl
+++ b/reports/debug-api.spec/respects_debug_level_filtering.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274588,"lvl":"info","case":"respects debug level filtering","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274589,"lvl":"info","case":"respects debug level filtering","phase":"execution","evt":"test.run"}
-{"ts":1760297274590,"lvl":"info","case":"respects debug level filtering","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
+{"ts":1760303270155,"lvl":"info","case":"respects debug level filtering","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270156,"lvl":"info","case":"respects debug level filtering","phase":"execution","evt":"test.run"}
+{"ts":1760303270157,"lvl":"info","case":"respects debug level filtering","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/debug-api.spec/returns_consistent_value_for_same_module.jsonl b/reports/debug-api.spec/returns_consistent_value_for_same_module.jsonl
index e747db1..e1211eb 100644
--- a/reports/debug-api.spec/returns_consistent_value_for_same_module.jsonl
+++ b/reports/debug-api.spec/returns_consistent_value_for_same_module.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274587,"lvl":"info","case":"returns consistent value for same module","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274588,"lvl":"info","case":"returns consistent value for same module","phase":"execution","evt":"test.run"}
-{"ts":1760297274589,"lvl":"info","case":"returns consistent value for same module","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
+{"ts":1760303270139,"lvl":"info","case":"returns consistent value for same module","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270140,"lvl":"info","case":"returns consistent value for same module","phase":"execution","evt":"test.run"}
+{"ts":1760303270141,"lvl":"info","case":"returns consistent value for same module","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/debug-api.spec/returns_false_when_config_is_disabled.jsonl b/reports/debug-api.spec/returns_false_when_config_is_disabled.jsonl
index 9086fae..07ebe55 100644
--- a/reports/debug-api.spec/returns_false_when_config_is_disabled.jsonl
+++ b/reports/debug-api.spec/returns_false_when_config_is_disabled.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274587,"lvl":"info","case":"returns false when config is disabled","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274588,"lvl":"info","case":"returns false when config is disabled","phase":"execution","evt":"test.run"}
-{"ts":1760297274589,"lvl":"info","case":"returns false when config is disabled","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
+{"ts":1760303270153,"lvl":"info","case":"returns false when config is disabled","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270154,"lvl":"info","case":"returns false when config is disabled","phase":"execution","evt":"test.run"}
+{"ts":1760303270155,"lvl":"info","case":"returns false when config is disabled","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/debug-api.spec/returns_false_when_module_is_not_enabled.jsonl b/reports/debug-api.spec/returns_false_when_module_is_not_enabled.jsonl
index 55709cf..2681f1f 100644
--- a/reports/debug-api.spec/returns_false_when_module_is_not_enabled.jsonl
+++ b/reports/debug-api.spec/returns_false_when_module_is_not_enabled.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274587,"lvl":"info","case":"returns false when module is not enabled","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274588,"lvl":"info","case":"returns false when module is not enabled","phase":"execution","evt":"test.run"}
-{"ts":1760297274589,"lvl":"info","case":"returns false when module is not enabled","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270139,"lvl":"info","case":"returns false when module is not enabled","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270140,"lvl":"info","case":"returns false when module is not enabled","phase":"execution","evt":"test.run"}
+{"ts":1760303270141,"lvl":"info","case":"returns false when module is not enabled","phase":"teardown","evt":"case.end","payload":{"duration":4,"status":"passed"}}
diff --git a/reports/debug-api.spec/shouldEmit_respects_level_hierarchy.jsonl b/reports/debug-api.spec/shouldEmit_respects_level_hierarchy.jsonl
index 856c79d..8bc8f16 100644
--- a/reports/debug-api.spec/shouldEmit_respects_level_hierarchy.jsonl
+++ b/reports/debug-api.spec/shouldEmit_respects_level_hierarchy.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274588,"lvl":"info","case":"shouldEmit respects level hierarchy","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274589,"lvl":"info","case":"shouldEmit respects level hierarchy","phase":"execution","evt":"test.run"}
-{"ts":1760297274590,"lvl":"info","case":"shouldEmit respects level hierarchy","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
+{"ts":1760303270169,"lvl":"info","case":"shouldEmit respects level hierarchy","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270170,"lvl":"info","case":"shouldEmit respects level hierarchy","phase":"execution","evt":"test.run"}
+{"ts":1760303270171,"lvl":"info","case":"shouldEmit respects level hierarchy","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/debug-api.spec/shouldEmit_returns_false_when_module_is_disabled.jsonl b/reports/debug-api.spec/shouldEmit_returns_false_when_module_is_disabled.jsonl
index 5e7566d..c50ce5b 100644
--- a/reports/debug-api.spec/shouldEmit_returns_false_when_module_is_disabled.jsonl
+++ b/reports/debug-api.spec/shouldEmit_returns_false_when_module_is_disabled.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274587,"lvl":"info","case":"shouldEmit returns false when module is disabled","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274588,"lvl":"info","case":"shouldEmit returns false when module is disabled","phase":"execution","evt":"test.run"}
-{"ts":1760297274589,"lvl":"info","case":"shouldEmit returns false when module is disabled","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270155,"lvl":"info","case":"shouldEmit returns false when module is disabled","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270156,"lvl":"info","case":"shouldEmit returns false when module is disabled","phase":"execution","evt":"test.run"}
+{"ts":1760303270157,"lvl":"info","case":"shouldEmit returns false when module is disabled","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/diff.spec/calculates_duration_delta_correctly.jsonl b/reports/diff.spec/calculates_duration_delta_correctly.jsonl
index 33467f9..ef5716d 100644
--- a/reports/diff.spec/calculates_duration_delta_correctly.jsonl
+++ b/reports/diff.spec/calculates_duration_delta_correctly.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760301597486,"lvl":"info","case":"calculates duration delta correctly","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760301597487,"lvl":"info","case":"calculates duration delta correctly","phase":"execution","evt":"test.run"}
-{"ts":1760301597488,"lvl":"info","case":"calculates duration delta correctly","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270043,"lvl":"info","case":"calculates duration delta correctly","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270044,"lvl":"info","case":"calculates duration delta correctly","phase":"execution","evt":"test.run"}
+{"ts":1760303270045,"lvl":"info","case":"calculates duration delta correctly","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/diff.spec/creates_both_JSON_and_markdown_outputs.jsonl b/reports/diff.spec/creates_both_JSON_and_markdown_outputs.jsonl
index 16e7a94..f536ec6 100644
--- a/reports/diff.spec/creates_both_JSON_and_markdown_outputs.jsonl
+++ b/reports/diff.spec/creates_both_JSON_and_markdown_outputs.jsonl
@@ -1,4 +1,4 @@
-{"ts":1760301597489,"lvl":"info","case":"creates both JSON and markdown outputs","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760301597490,"lvl":"info","case":"creates both JSON and markdown outputs","phase":"execution","evt":"test.run"}
-{"ts":1760301597491,"lvl":"error","case":"creates both JSON and markdown outputs","phase":"execution","evt":"test.error","payload":{"message":"process.chdir() is not supported in workers","stack":"TypeError: process.chdir() is not supported in workers\n    at process.unavailableInWorker [as chdir] (node:internal/process/worker_thread_only:14:11)\n    at /srv/repos0/mkolbol/tests/digest/diff.spec.ts:505:15\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:135:14\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:60:26\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:17)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)"}}
-{"ts":1760301597492,"lvl":"error","case":"creates both JSON and markdown outputs","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"failed"}}
+{"ts":1760303270046,"lvl":"info","case":"creates both JSON and markdown outputs","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270047,"lvl":"info","case":"creates both JSON and markdown outputs","phase":"execution","evt":"test.run"}
+{"ts":1760303270048,"lvl":"error","case":"creates both JSON and markdown outputs","phase":"execution","evt":"test.error","payload":{"message":"process.chdir() is not supported in workers","stack":"TypeError: process.chdir() is not supported in workers\n    at process.unavailableInWorker [as chdir] (node:internal/process/worker_thread_only:14:11)\n    at /srv/repos0/mkolbol/tests/digest/diff.spec.ts:505:15\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:135:14\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:60:26\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:17)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)"}}
+{"ts":1760303270049,"lvl":"error","case":"creates both JSON and markdown outputs","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"failed"}}
diff --git a/reports/diff.spec/detects_added_events_in_new_digest.jsonl b/reports/diff.spec/detects_added_events_in_new_digest.jsonl
index 1dbc534..5bee430 100644
--- a/reports/diff.spec/detects_added_events_in_new_digest.jsonl
+++ b/reports/diff.spec/detects_added_events_in_new_digest.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760301597485,"lvl":"info","case":"detects added events in new digest","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760301597486,"lvl":"info","case":"detects added events in new digest","phase":"execution","evt":"test.run"}
-{"ts":1760301597487,"lvl":"info","case":"detects added events in new digest","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
+{"ts":1760303270042,"lvl":"info","case":"detects added events in new digest","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270043,"lvl":"info","case":"detects added events in new digest","phase":"execution","evt":"test.run"}
+{"ts":1760303270044,"lvl":"info","case":"detects added events in new digest","phase":"teardown","evt":"case.end","payload":{"duration":4,"status":"passed"}}
diff --git a/reports/diff.spec/detects_changed_codeframes.jsonl b/reports/diff.spec/detects_changed_codeframes.jsonl
index e2b110d..fb0e650 100644
--- a/reports/diff.spec/detects_changed_codeframes.jsonl
+++ b/reports/diff.spec/detects_changed_codeframes.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760301597486,"lvl":"info","case":"detects changed codeframes","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760301597487,"lvl":"info","case":"detects changed codeframes","phase":"execution","evt":"test.run"}
-{"ts":1760301597488,"lvl":"info","case":"detects changed codeframes","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270043,"lvl":"info","case":"detects changed codeframes","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270044,"lvl":"info","case":"detects changed codeframes","phase":"execution","evt":"test.run"}
+{"ts":1760303270045,"lvl":"info","case":"detects changed codeframes","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
diff --git a/reports/diff.spec/detects_changed_suspects__score_changes_.jsonl b/reports/diff.spec/detects_changed_suspects__score_changes_.jsonl
index a0e1fbd..8613d23 100644
--- a/reports/diff.spec/detects_changed_suspects__score_changes_.jsonl
+++ b/reports/diff.spec/detects_changed_suspects__score_changes_.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760301597486,"lvl":"info","case":"detects changed suspects (score changes)","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760301597487,"lvl":"info","case":"detects changed suspects (score changes)","phase":"execution","evt":"test.run"}
-{"ts":1760301597488,"lvl":"info","case":"detects changed suspects (score changes)","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270043,"lvl":"info","case":"detects changed suspects (score changes)","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270044,"lvl":"info","case":"detects changed suspects (score changes)","phase":"execution","evt":"test.run"}
+{"ts":1760303270045,"lvl":"info","case":"detects changed suspects (score changes)","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/diff.spec/detects_identical_digests__no_diff_.jsonl b/reports/diff.spec/detects_identical_digests__no_diff_.jsonl
index c83182c..c96ed98 100644
--- a/reports/diff.spec/detects_identical_digests__no_diff_.jsonl
+++ b/reports/diff.spec/detects_identical_digests__no_diff_.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760301597485,"lvl":"info","case":"detects identical digests (no diff)","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760301597486,"lvl":"info","case":"detects identical digests (no diff)","phase":"execution","evt":"test.run"}
-{"ts":1760301597487,"lvl":"info","case":"detects identical digests (no diff)","phase":"teardown","evt":"case.end","payload":{"duration":9,"status":"passed"}}
+{"ts":1760303270042,"lvl":"info","case":"detects identical digests (no diff)","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270043,"lvl":"info","case":"detects identical digests (no diff)","phase":"execution","evt":"test.run"}
+{"ts":1760303270044,"lvl":"info","case":"detects identical digests (no diff)","phase":"teardown","evt":"case.end","payload":{"duration":12,"status":"passed"}}
diff --git a/reports/diff.spec/detects_mixed_changes__events__suspects__codeframes_.jsonl b/reports/diff.spec/detects_mixed_changes__events__suspects__codeframes_.jsonl
index 09d4cbf..6a1f271 100644
--- a/reports/diff.spec/detects_mixed_changes__events__suspects__codeframes_.jsonl
+++ b/reports/diff.spec/detects_mixed_changes__events__suspects__codeframes_.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760301597486,"lvl":"info","case":"detects mixed changes (events, suspects, codeframes)","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760301597487,"lvl":"info","case":"detects mixed changes (events, suspects, codeframes)","phase":"execution","evt":"test.run"}
-{"ts":1760301597488,"lvl":"info","case":"detects mixed changes (events, suspects, codeframes)","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270043,"lvl":"info","case":"detects mixed changes (events, suspects, codeframes)","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270044,"lvl":"info","case":"detects mixed changes (events, suspects, codeframes)","phase":"execution","evt":"test.run"}
+{"ts":1760303270045,"lvl":"info","case":"detects mixed changes (events, suspects, codeframes)","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/diff.spec/detects_removed_events_from_old_digest.jsonl b/reports/diff.spec/detects_removed_events_from_old_digest.jsonl
index 41eb9bb..6d260bc 100644
--- a/reports/diff.spec/detects_removed_events_from_old_digest.jsonl
+++ b/reports/diff.spec/detects_removed_events_from_old_digest.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760301597485,"lvl":"info","case":"detects removed events from old digest","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760301597486,"lvl":"info","case":"detects removed events from old digest","phase":"execution","evt":"test.run"}
-{"ts":1760301597487,"lvl":"info","case":"detects removed events from old digest","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270042,"lvl":"info","case":"detects removed events from old digest","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270043,"lvl":"info","case":"detects removed events from old digest","phase":"execution","evt":"test.run"}
+{"ts":1760303270044,"lvl":"info","case":"detects removed events from old digest","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/diff.spec/diffs_Go_test_digests_correctly.jsonl b/reports/diff.spec/diffs_Go_test_digests_correctly.jsonl
index 1c9656d..589882b 100644
--- a/reports/diff.spec/diffs_Go_test_digests_correctly.jsonl
+++ b/reports/diff.spec/diffs_Go_test_digests_correctly.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760301597486,"lvl":"info","case":"diffs Go test digests correctly","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760301597487,"lvl":"info","case":"diffs Go test digests correctly","phase":"execution","evt":"test.run"}
-{"ts":1760301597488,"lvl":"info","case":"diffs Go test digests correctly","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270043,"lvl":"info","case":"diffs Go test digests correctly","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270044,"lvl":"info","case":"diffs Go test digests correctly","phase":"execution","evt":"test.run"}
+{"ts":1760303270045,"lvl":"info","case":"diffs Go test digests correctly","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/diff.spec/extracts_Go_test_phase_information.jsonl b/reports/diff.spec/extracts_Go_test_phase_information.jsonl
index ee20f5d..8e355ff 100644
--- a/reports/diff.spec/extracts_Go_test_phase_information.jsonl
+++ b/reports/diff.spec/extracts_Go_test_phase_information.jsonl
@@ -1,4 +1,4 @@
-{"ts":1760301597489,"lvl":"info","case":"extracts Go test phase information","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760301597490,"lvl":"info","case":"extracts Go test phase information","phase":"execution","evt":"test.run"}
-{"ts":1760301597491,"lvl":"error","case":"extracts Go test phase information","phase":"execution","evt":"test.error","payload":{"message":"process.chdir() is not supported in workers","stack":"TypeError: process.chdir() is not supported in workers\n    at process.unavailableInWorker [as chdir] (node:internal/process/worker_thread_only:14:11)\n    at /srv/repos0/mkolbol/tests/digest/diff.spec.ts:585:15\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:135:14\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:60:26\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:17)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)"}}
-{"ts":1760301597492,"lvl":"error","case":"extracts Go test phase information","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"failed"}}
+{"ts":1760303270047,"lvl":"info","case":"extracts Go test phase information","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270048,"lvl":"info","case":"extracts Go test phase information","phase":"execution","evt":"test.run"}
+{"ts":1760303270049,"lvl":"error","case":"extracts Go test phase information","phase":"execution","evt":"test.error","payload":{"message":"process.chdir() is not supported in workers","stack":"TypeError: process.chdir() is not supported in workers\n    at process.unavailableInWorker [as chdir] (node:internal/process/worker_thread_only:14:11)\n    at /srv/repos0/mkolbol/tests/digest/diff.spec.ts:585:15\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:135:14\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:60:26\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:17)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)"}}
+{"ts":1760303270050,"lvl":"error","case":"extracts Go test phase information","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"failed"}}
diff --git a/reports/diff.spec/generates_readable_markdown_output.jsonl b/reports/diff.spec/generates_readable_markdown_output.jsonl
index 31d3831..5f78451 100644
--- a/reports/diff.spec/generates_readable_markdown_output.jsonl
+++ b/reports/diff.spec/generates_readable_markdown_output.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760301597487,"lvl":"info","case":"generates readable markdown output","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760301597488,"lvl":"info","case":"generates readable markdown output","phase":"execution","evt":"test.run"}
-{"ts":1760301597489,"lvl":"info","case":"generates readable markdown output","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270044,"lvl":"info","case":"generates readable markdown output","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270045,"lvl":"info","case":"generates readable markdown output","phase":"execution","evt":"test.run"}
+{"ts":1760303270046,"lvl":"info","case":"generates readable markdown output","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/diff.spec/generates_valid_JSON_output.jsonl b/reports/diff.spec/generates_valid_JSON_output.jsonl
index 537ef47..e6fbf1d 100644
--- a/reports/diff.spec/generates_valid_JSON_output.jsonl
+++ b/reports/diff.spec/generates_valid_JSON_output.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760301597487,"lvl":"info","case":"generates valid JSON output","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760301597488,"lvl":"info","case":"generates valid JSON output","phase":"execution","evt":"test.run"}
-{"ts":1760301597489,"lvl":"info","case":"generates valid JSON output","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
+{"ts":1760303270044,"lvl":"info","case":"generates valid JSON output","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270045,"lvl":"info","case":"generates valid JSON output","phase":"execution","evt":"test.run"}
+{"ts":1760303270046,"lvl":"info","case":"generates valid JSON output","phase":"teardown","evt":"case.end","payload":{"duration":4,"status":"passed"}}
diff --git a/reports/diff.spec/handles_Go_test_case_bundles.jsonl b/reports/diff.spec/handles_Go_test_case_bundles.jsonl
index 95161cf..b95892e 100644
--- a/reports/diff.spec/handles_Go_test_case_bundles.jsonl
+++ b/reports/diff.spec/handles_Go_test_case_bundles.jsonl
@@ -1,4 +1,4 @@
-{"ts":1760301597489,"lvl":"info","case":"handles Go test case bundles","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760301597490,"lvl":"info","case":"handles Go test case bundles","phase":"execution","evt":"test.run"}
-{"ts":1760301597491,"lvl":"error","case":"handles Go test case bundles","phase":"execution","evt":"test.error","payload":{"message":"process.chdir() is not supported in workers","stack":"TypeError: process.chdir() is not supported in workers\n    at process.unavailableInWorker [as chdir] (node:internal/process/worker_thread_only:14:11)\n    at /srv/repos0/mkolbol/tests/digest/diff.spec.ts:547:15\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:135:14\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:60:26\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:17)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)"}}
-{"ts":1760301597492,"lvl":"error","case":"handles Go test case bundles","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"failed"}}
+{"ts":1760303270046,"lvl":"info","case":"handles Go test case bundles","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270047,"lvl":"info","case":"handles Go test case bundles","phase":"execution","evt":"test.run"}
+{"ts":1760303270048,"lvl":"error","case":"handles Go test case bundles","phase":"execution","evt":"test.error","payload":{"message":"process.chdir() is not supported in workers","stack":"TypeError: process.chdir() is not supported in workers\n    at process.unavailableInWorker [as chdir] (node:internal/process/worker_thread_only:14:11)\n    at /srv/repos0/mkolbol/tests/digest/diff.spec.ts:547:15\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:135:14\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:60:26\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:17)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)"}}
+{"ts":1760303270049,"lvl":"error","case":"handles Go test case bundles","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"failed"}}
diff --git a/reports/diff.spec/handles_Go_test_event_structure.jsonl b/reports/diff.spec/handles_Go_test_event_structure.jsonl
index aa836de..7665b5d 100644
--- a/reports/diff.spec/handles_Go_test_event_structure.jsonl
+++ b/reports/diff.spec/handles_Go_test_event_structure.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760301597487,"lvl":"info","case":"handles Go test event structure","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760301597488,"lvl":"info","case":"handles Go test event structure","phase":"execution","evt":"test.run"}
-{"ts":1760301597489,"lvl":"info","case":"handles Go test event structure","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270044,"lvl":"info","case":"handles Go test event structure","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270045,"lvl":"info","case":"handles Go test event structure","phase":"execution","evt":"test.run"}
+{"ts":1760303270046,"lvl":"info","case":"handles Go test event structure","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/diff.spec/handles_case_with_no_seed_in_events.jsonl b/reports/diff.spec/handles_case_with_no_seed_in_events.jsonl
index 148b7b7..19f5c55 100644
--- a/reports/diff.spec/handles_case_with_no_seed_in_events.jsonl
+++ b/reports/diff.spec/handles_case_with_no_seed_in_events.jsonl
@@ -1,4 +1,4 @@
-{"ts":1760301597489,"lvl":"info","case":"handles case with no seed in events","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760301597490,"lvl":"info","case":"handles case with no seed in events","phase":"execution","evt":"test.run"}
-{"ts":1760301597491,"lvl":"error","case":"handles case with no seed in events","phase":"execution","evt":"test.error","payload":{"message":"process.chdir() is not supported in workers","stack":"TypeError: process.chdir() is not supported in workers\n    at process.unavailableInWorker [as chdir] (node:internal/process/worker_thread_only:14:11)\n    at /srv/repos0/mkolbol/tests/digest/diff.spec.ts:652:15\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:135:14\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:60:26\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:17)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)"}}
-{"ts":1760301597492,"lvl":"error","case":"handles case with no seed in events","phase":"teardown","evt":"case.end","payload":{"duration":20,"status":"failed"}}
+{"ts":1760303270047,"lvl":"info","case":"handles case with no seed in events","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270048,"lvl":"info","case":"handles case with no seed in events","phase":"execution","evt":"test.run"}
+{"ts":1760303270049,"lvl":"error","case":"handles case with no seed in events","phase":"execution","evt":"test.error","payload":{"message":"process.chdir() is not supported in workers","stack":"TypeError: process.chdir() is not supported in workers\n    at process.unavailableInWorker [as chdir] (node:internal/process/worker_thread_only:14:11)\n    at /srv/repos0/mkolbol/tests/digest/diff.spec.ts:652:15\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:135:14\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:60:26\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:17)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)"}}
+{"ts":1760303270050,"lvl":"error","case":"handles case with no seed in events","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"failed"}}
diff --git a/reports/diff.spec/handles_digests_with_no_codeframes.jsonl b/reports/diff.spec/handles_digests_with_no_codeframes.jsonl
index 2b853b6..c0f531c 100644
--- a/reports/diff.spec/handles_digests_with_no_codeframes.jsonl
+++ b/reports/diff.spec/handles_digests_with_no_codeframes.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760301597488,"lvl":"info","case":"handles digests with no codeframes","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760301597489,"lvl":"info","case":"handles digests with no codeframes","phase":"execution","evt":"test.run"}
-{"ts":1760301597490,"lvl":"info","case":"handles digests with no codeframes","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270045,"lvl":"info","case":"handles digests with no codeframes","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270046,"lvl":"info","case":"handles digests with no codeframes","phase":"execution","evt":"test.run"}
+{"ts":1760303270047,"lvl":"info","case":"handles digests with no codeframes","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/diff.spec/handles_digests_with_no_suspects.jsonl b/reports/diff.spec/handles_digests_with_no_suspects.jsonl
index 7fb3f4a..11ff4da 100644
--- a/reports/diff.spec/handles_digests_with_no_suspects.jsonl
+++ b/reports/diff.spec/handles_digests_with_no_suspects.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760301597488,"lvl":"info","case":"handles digests with no suspects","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760301597489,"lvl":"info","case":"handles digests with no suspects","phase":"execution","evt":"test.run"}
-{"ts":1760301597490,"lvl":"info","case":"handles digests with no suspects","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270045,"lvl":"info","case":"handles digests with no suspects","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270046,"lvl":"info","case":"handles digests with no suspects","phase":"execution","evt":"test.run"}
+{"ts":1760303270047,"lvl":"info","case":"handles digests with no suspects","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/diff.spec/handles_missing_artifact_file_gracefully.jsonl b/reports/diff.spec/handles_missing_artifact_file_gracefully.jsonl
index 7175ad2..3115490 100644
--- a/reports/diff.spec/handles_missing_artifact_file_gracefully.jsonl
+++ b/reports/diff.spec/handles_missing_artifact_file_gracefully.jsonl
@@ -1,4 +1,4 @@
-{"ts":1760301597489,"lvl":"info","case":"handles missing artifact file gracefully","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760301597490,"lvl":"info","case":"handles missing artifact file gracefully","phase":"execution","evt":"test.run"}
-{"ts":1760301597491,"lvl":"error","case":"handles missing artifact file gracefully","phase":"execution","evt":"test.error","payload":{"message":"process.chdir() is not supported in workers","stack":"TypeError: process.chdir() is not supported in workers\n    at process.unavailableInWorker [as chdir] (node:internal/process/worker_thread_only:14:11)\n    at /srv/repos0/mkolbol/tests/digest/diff.spec.ts:616:15\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:135:14\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:60:26\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:17)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)"}}
-{"ts":1760301597492,"lvl":"error","case":"handles missing artifact file gracefully","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"failed"}}
+{"ts":1760303270047,"lvl":"info","case":"handles missing artifact file gracefully","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270048,"lvl":"info","case":"handles missing artifact file gracefully","phase":"execution","evt":"test.run"}
+{"ts":1760303270049,"lvl":"error","case":"handles missing artifact file gracefully","phase":"execution","evt":"test.error","payload":{"message":"process.chdir() is not supported in workers","stack":"TypeError: process.chdir() is not supported in workers\n    at process.unavailableInWorker [as chdir] (node:internal/process/worker_thread_only:14:11)\n    at /srv/repos0/mkolbol/tests/digest/diff.spec.ts:616:15\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:135:14\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:60:26\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:17)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)"}}
+{"ts":1760303270050,"lvl":"error","case":"handles missing artifact file gracefully","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"failed"}}
diff --git a/reports/diff.spec/includes_complete_metadata.jsonl b/reports/diff.spec/includes_complete_metadata.jsonl
index 8bed510..2d380ca 100644
--- a/reports/diff.spec/includes_complete_metadata.jsonl
+++ b/reports/diff.spec/includes_complete_metadata.jsonl
@@ -1,4 +1,4 @@
-{"ts":1760301597489,"lvl":"info","case":"includes complete metadata","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760301597490,"lvl":"info","case":"includes complete metadata","phase":"execution","evt":"test.run"}
-{"ts":1760301597491,"lvl":"error","case":"includes complete metadata","phase":"execution","evt":"test.error","payload":{"message":"process.chdir() is not supported in workers","stack":"TypeError: process.chdir() is not supported in workers\n    at process.unavailableInWorker [as chdir] (node:internal/process/worker_thread_only:14:11)\n    at /srv/repos0/mkolbol/tests/digest/diff.spec.ts:465:15\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:135:14\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:60:26\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:17)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)"}}
-{"ts":1760301597492,"lvl":"error","case":"includes complete metadata","phase":"teardown","evt":"case.end","payload":{"duration":22,"status":"failed"}}
+{"ts":1760303270046,"lvl":"info","case":"includes complete metadata","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270047,"lvl":"info","case":"includes complete metadata","phase":"execution","evt":"test.run"}
+{"ts":1760303270048,"lvl":"error","case":"includes complete metadata","phase":"execution","evt":"test.error","payload":{"message":"process.chdir() is not supported in workers","stack":"TypeError: process.chdir() is not supported in workers\n    at process.unavailableInWorker [as chdir] (node:internal/process/worker_thread_only:14:11)\n    at /srv/repos0/mkolbol/tests/digest/diff.spec.ts:465:15\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:135:14\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:60:26\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:17)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)"}}
+{"ts":1760303270049,"lvl":"error","case":"includes complete metadata","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"failed"}}
diff --git a/reports/diff.spec/includes_minimal_logs__not_full_logs_.jsonl b/reports/diff.spec/includes_minimal_logs__not_full_logs_.jsonl
index 2da10d2..b966884 100644
--- a/reports/diff.spec/includes_minimal_logs__not_full_logs_.jsonl
+++ b/reports/diff.spec/includes_minimal_logs__not_full_logs_.jsonl
@@ -1,4 +1,4 @@
-{"ts":1760301597488,"lvl":"info","case":"includes minimal logs (not full logs)","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760301597489,"lvl":"info","case":"includes minimal logs (not full logs)","phase":"execution","evt":"test.run"}
-{"ts":1760301597490,"lvl":"error","case":"includes minimal logs (not full logs)","phase":"execution","evt":"test.error","payload":{"message":"process.chdir() is not supported in workers","stack":"TypeError: process.chdir() is not supported in workers\n    at process.unavailableInWorker [as chdir] (node:internal/process/worker_thread_only:14:11)\n    at /srv/repos0/mkolbol/tests/digest/diff.spec.ts:385:15\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:135:14\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:60:26\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:17)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)"}}
-{"ts":1760301597491,"lvl":"error","case":"includes minimal logs (not full logs)","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"failed"}}
+{"ts":1760303270045,"lvl":"info","case":"includes minimal logs (not full logs)","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270046,"lvl":"info","case":"includes minimal logs (not full logs)","phase":"execution","evt":"test.run"}
+{"ts":1760303270047,"lvl":"error","case":"includes minimal logs (not full logs)","phase":"execution","evt":"test.error","payload":{"message":"process.chdir() is not supported in workers","stack":"TypeError: process.chdir() is not supported in workers\n    at process.unavailableInWorker [as chdir] (node:internal/process/worker_thread_only:14:11)\n    at /srv/repos0/mkolbol/tests/digest/diff.spec.ts:385:15\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:135:14\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:60:26\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:17)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)"}}
+{"ts":1760303270048,"lvl":"error","case":"includes minimal logs (not full logs)","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"failed"}}
diff --git a/reports/diff.spec/includes_seed_and_environment_information.jsonl b/reports/diff.spec/includes_seed_and_environment_information.jsonl
index 0cdba3f..b5ac6a2 100644
--- a/reports/diff.spec/includes_seed_and_environment_information.jsonl
+++ b/reports/diff.spec/includes_seed_and_environment_information.jsonl
@@ -1,4 +1,4 @@
-{"ts":1760301597488,"lvl":"info","case":"includes seed and environment information","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760301597489,"lvl":"info","case":"includes seed and environment information","phase":"execution","evt":"test.run"}
-{"ts":1760301597490,"lvl":"error","case":"includes seed and environment information","phase":"execution","evt":"test.error","payload":{"message":"process.chdir() is not supported in workers","stack":"TypeError: process.chdir() is not supported in workers\n    at process.unavailableInWorker [as chdir] (node:internal/process/worker_thread_only:14:11)\n    at /srv/repos0/mkolbol/tests/digest/diff.spec.ts:346:15\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:135:14\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:60:26\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:17)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)"}}
-{"ts":1760301597491,"lvl":"error","case":"includes seed and environment information","phase":"teardown","evt":"case.end","payload":{"duration":11,"status":"failed"}}
+{"ts":1760303270045,"lvl":"info","case":"includes seed and environment information","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270046,"lvl":"info","case":"includes seed and environment information","phase":"execution","evt":"test.run"}
+{"ts":1760303270047,"lvl":"error","case":"includes seed and environment information","phase":"execution","evt":"test.error","payload":{"message":"process.chdir() is not supported in workers","stack":"TypeError: process.chdir() is not supported in workers\n    at process.unavailableInWorker [as chdir] (node:internal/process/worker_thread_only:14:11)\n    at /srv/repos0/mkolbol/tests/digest/diff.spec.ts:346:15\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:135:14\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:60:26\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:17)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)"}}
+{"ts":1760303270048,"lvl":"error","case":"includes seed and environment information","phase":"teardown","evt":"case.end","payload":{"duration":13,"status":"failed"}}
diff --git a/reports/diff.spec/includes_valid_reproduction_commands.jsonl b/reports/diff.spec/includes_valid_reproduction_commands.jsonl
index d52c300..5d69e34 100644
--- a/reports/diff.spec/includes_valid_reproduction_commands.jsonl
+++ b/reports/diff.spec/includes_valid_reproduction_commands.jsonl
@@ -1,4 +1,4 @@
-{"ts":1760301597488,"lvl":"info","case":"includes valid reproduction commands","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760301597489,"lvl":"info","case":"includes valid reproduction commands","phase":"execution","evt":"test.run"}
-{"ts":1760301597490,"lvl":"error","case":"includes valid reproduction commands","phase":"execution","evt":"test.error","payload":{"message":"process.chdir() is not supported in workers","stack":"TypeError: process.chdir() is not supported in workers\n    at process.unavailableInWorker [as chdir] (node:internal/process/worker_thread_only:14:11)\n    at /srv/repos0/mkolbol/tests/digest/diff.spec.ts:424:15\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:135:14\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:60:26\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:17)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)"}}
-{"ts":1760301597491,"lvl":"error","case":"includes valid reproduction commands","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"failed"}}
+{"ts":1760303270046,"lvl":"info","case":"includes valid reproduction commands","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270047,"lvl":"info","case":"includes valid reproduction commands","phase":"execution","evt":"test.run"}
+{"ts":1760303270048,"lvl":"error","case":"includes valid reproduction commands","phase":"execution","evt":"test.error","payload":{"message":"process.chdir() is not supported in workers","stack":"TypeError: process.chdir() is not supported in workers\n    at process.unavailableInWorker [as chdir] (node:internal/process/worker_thread_only:14:11)\n    at /srv/repos0/mkolbol/tests/digest/diff.spec.ts:424:15\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:135:14\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:60:26\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:17)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)"}}
+{"ts":1760303270049,"lvl":"error","case":"includes valid reproduction commands","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"failed"}}
diff --git a/reports/diff.spec/performs_diff_and_writes_output.jsonl b/reports/diff.spec/performs_diff_and_writes_output.jsonl
index 67320f9..3e6874b 100644
--- a/reports/diff.spec/performs_diff_and_writes_output.jsonl
+++ b/reports/diff.spec/performs_diff_and_writes_output.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760301597487,"lvl":"info","case":"performs diff and writes output","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760301597488,"lvl":"info","case":"performs diff and writes output","phase":"execution","evt":"test.run"}
-{"ts":1760301597489,"lvl":"info","case":"performs diff and writes output","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270045,"lvl":"info","case":"performs diff and writes output","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270046,"lvl":"info","case":"performs diff and writes output","phase":"execution","evt":"test.run"}
+{"ts":1760303270047,"lvl":"info","case":"performs diff and writes output","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/diff.spec/tracks_metadata_changes__duration__location__error_.jsonl b/reports/diff.spec/tracks_metadata_changes__duration__location__error_.jsonl
index 9938272..b6f8f02 100644
--- a/reports/diff.spec/tracks_metadata_changes__duration__location__error_.jsonl
+++ b/reports/diff.spec/tracks_metadata_changes__duration__location__error_.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760301597486,"lvl":"info","case":"tracks metadata changes (duration, location, error)","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760301597487,"lvl":"info","case":"tracks metadata changes (duration, location, error)","phase":"execution","evt":"test.run"}
-{"ts":1760301597488,"lvl":"info","case":"tracks metadata changes (duration, location, error)","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270043,"lvl":"info","case":"tracks metadata changes (duration, location, error)","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270044,"lvl":"info","case":"tracks metadata changes (duration, location, error)","phase":"execution","evt":"test.run"}
+{"ts":1760303270045,"lvl":"info","case":"tracks metadata changes (duration, location, error)","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/diff.spec/works_without_output_file.jsonl b/reports/diff.spec/works_without_output_file.jsonl
index aee43c4..6220aef 100644
--- a/reports/diff.spec/works_without_output_file.jsonl
+++ b/reports/diff.spec/works_without_output_file.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760301597488,"lvl":"info","case":"works without output file","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760301597489,"lvl":"info","case":"works without output file","phase":"execution","evt":"test.run"}
-{"ts":1760301597490,"lvl":"info","case":"works without output file","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270045,"lvl":"info","case":"works without output file","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270046,"lvl":"info","case":"works without output file","phase":"execution","evt":"test.run"}
+{"ts":1760303270047,"lvl":"info","case":"works without output file","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/diff.spec/writes_diff_to_file_in_JSON_format.jsonl b/reports/diff.spec/writes_diff_to_file_in_JSON_format.jsonl
index 7a91387..8ddb2e7 100644
--- a/reports/diff.spec/writes_diff_to_file_in_JSON_format.jsonl
+++ b/reports/diff.spec/writes_diff_to_file_in_JSON_format.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760301597487,"lvl":"info","case":"writes diff to file in JSON format","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760301597488,"lvl":"info","case":"writes diff to file in JSON format","phase":"execution","evt":"test.run"}
-{"ts":1760301597489,"lvl":"info","case":"writes diff to file in JSON format","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270044,"lvl":"info","case":"writes diff to file in JSON format","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270045,"lvl":"info","case":"writes diff to file in JSON format","phase":"execution","evt":"test.run"}
+{"ts":1760303270046,"lvl":"info","case":"writes diff to file in JSON format","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/diff.spec/writes_diff_to_file_in_markdown_format.jsonl b/reports/diff.spec/writes_diff_to_file_in_markdown_format.jsonl
index edc4461..8de0f93 100644
--- a/reports/diff.spec/writes_diff_to_file_in_markdown_format.jsonl
+++ b/reports/diff.spec/writes_diff_to_file_in_markdown_format.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760301597487,"lvl":"info","case":"writes diff to file in markdown format","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760301597488,"lvl":"info","case":"writes diff to file in markdown format","phase":"execution","evt":"test.run"}
-{"ts":1760301597489,"lvl":"info","case":"writes diff to file in markdown format","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270044,"lvl":"info","case":"writes diff to file in markdown format","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270045,"lvl":"info","case":"writes diff to file in markdown format","phase":"execution","evt":"test.run"}
+{"ts":1760303270046,"lvl":"info","case":"writes diff to file in markdown format","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/digest.spec/applies_redact_action_to_fields.jsonl b/reports/digest.spec/applies_redact_action_to_fields.jsonl
index b9ebf6a..6c5b7da 100644
--- a/reports/digest.spec/applies_redact_action_to_fields.jsonl
+++ b/reports/digest.spec/applies_redact_action_to_fields.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274615,"lvl":"info","case":"applies redact action to fields","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274616,"lvl":"info","case":"applies redact action to fields","phase":"execution","evt":"test.run"}
-{"ts":1760297274617,"lvl":"info","case":"applies redact action to fields","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270049,"lvl":"info","case":"applies redact action to fields","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270050,"lvl":"info","case":"applies redact action to fields","phase":"execution","evt":"test.run"}
+{"ts":1760303270051,"lvl":"info","case":"applies redact action to fields","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/digest.spec/applies_slice_action_with_window.jsonl b/reports/digest.spec/applies_slice_action_with_window.jsonl
index 296fb8c..93ea5db 100644
--- a/reports/digest.spec/applies_slice_action_with_window.jsonl
+++ b/reports/digest.spec/applies_slice_action_with_window.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274615,"lvl":"info","case":"applies slice action with window","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274616,"lvl":"info","case":"applies slice action with window","phase":"execution","evt":"test.run"}
-{"ts":1760297274617,"lvl":"info","case":"applies slice action with window","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
+{"ts":1760303270049,"lvl":"info","case":"applies slice action with window","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270050,"lvl":"info","case":"applies slice action with window","phase":"execution","evt":"test.run"}
+{"ts":1760303270051,"lvl":"info","case":"applies slice action with window","phase":"teardown","evt":"case.end","payload":{"duration":4,"status":"passed"}}
diff --git a/reports/digest.spec/enforces_byte_budget.jsonl b/reports/digest.spec/enforces_byte_budget.jsonl
index dff5980..71339ac 100644
--- a/reports/digest.spec/enforces_byte_budget.jsonl
+++ b/reports/digest.spec/enforces_byte_budget.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274615,"lvl":"info","case":"enforces byte budget","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274616,"lvl":"info","case":"enforces byte budget","phase":"execution","evt":"test.run"}
-{"ts":1760297274617,"lvl":"info","case":"enforces byte budget","phase":"teardown","evt":"case.end","payload":{"duration":9,"status":"passed"}}
+{"ts":1760303270066,"lvl":"info","case":"enforces byte budget","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270067,"lvl":"info","case":"enforces byte budget","phase":"execution","evt":"test.run"}
+{"ts":1760303270068,"lvl":"info","case":"enforces byte budget","phase":"teardown","evt":"case.end","payload":{"duration":8,"status":"passed"}}
diff --git a/reports/digest.spec/enforces_line_budget.jsonl b/reports/digest.spec/enforces_line_budget.jsonl
index 08cd808..d986753 100644
--- a/reports/digest.spec/enforces_line_budget.jsonl
+++ b/reports/digest.spec/enforces_line_budget.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274616,"lvl":"info","case":"enforces line budget","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274617,"lvl":"info","case":"enforces line budget","phase":"execution","evt":"test.run"}
-{"ts":1760297274618,"lvl":"info","case":"enforces line budget","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270066,"lvl":"info","case":"enforces line budget","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270067,"lvl":"info","case":"enforces line budget","phase":"execution","evt":"test.run"}
+{"ts":1760303270068,"lvl":"info","case":"enforces line budget","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/digest.spec/generates_digest_from_synthetic_logs_with_failures.jsonl b/reports/digest.spec/generates_digest_from_synthetic_logs_with_failures.jsonl
index 48af968..1c4626b 100644
--- a/reports/digest.spec/generates_digest_from_synthetic_logs_with_failures.jsonl
+++ b/reports/digest.spec/generates_digest_from_synthetic_logs_with_failures.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274614,"lvl":"info","case":"generates digest from synthetic logs with failures","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274615,"lvl":"info","case":"generates digest from synthetic logs with failures","phase":"execution","evt":"test.run"}
-{"ts":1760297274616,"lvl":"info","case":"generates digest from synthetic logs with failures","phase":"teardown","evt":"case.end","payload":{"duration":9,"status":"passed"}}
+{"ts":1760303270047,"lvl":"info","case":"generates digest from synthetic logs with failures","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270048,"lvl":"info","case":"generates digest from synthetic logs with failures","phase":"execution","evt":"test.run"}
+{"ts":1760303270049,"lvl":"info","case":"generates digest from synthetic logs with failures","phase":"teardown","evt":"case.end","payload":{"duration":9,"status":"passed"}}
diff --git a/reports/digest.spec/handles_empty_log_file.jsonl b/reports/digest.spec/handles_empty_log_file.jsonl
index 0c16278..dde6008 100644
--- a/reports/digest.spec/handles_empty_log_file.jsonl
+++ b/reports/digest.spec/handles_empty_log_file.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274617,"lvl":"info","case":"handles empty log file","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274618,"lvl":"info","case":"handles empty log file","phase":"execution","evt":"test.run"}
-{"ts":1760297274619,"lvl":"info","case":"handles empty log file","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270069,"lvl":"info","case":"handles empty log file","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270070,"lvl":"info","case":"handles empty log file","phase":"execution","evt":"test.run"}
+{"ts":1760303270071,"lvl":"info","case":"handles empty log file","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/digest.spec/handles_events_without_optional_fields.jsonl b/reports/digest.spec/handles_events_without_optional_fields.jsonl
index 2ed313f..ee2dd18 100644
--- a/reports/digest.spec/handles_events_without_optional_fields.jsonl
+++ b/reports/digest.spec/handles_events_without_optional_fields.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274617,"lvl":"info","case":"handles events without optional fields","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274618,"lvl":"info","case":"handles events without optional fields","phase":"execution","evt":"test.run"}
-{"ts":1760297274619,"lvl":"info","case":"handles events without optional fields","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270071,"lvl":"info","case":"handles events without optional fields","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270072,"lvl":"info","case":"handles events without optional fields","phase":"execution","evt":"test.run"}
+{"ts":1760303270073,"lvl":"info","case":"handles events without optional fields","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/digest.spec/handles_missing_log_file.jsonl b/reports/digest.spec/handles_missing_log_file.jsonl
index 1df3cb9..f35fcfc 100644
--- a/reports/digest.spec/handles_missing_log_file.jsonl
+++ b/reports/digest.spec/handles_missing_log_file.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274617,"lvl":"info","case":"handles missing log file","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274618,"lvl":"info","case":"handles missing log file","phase":"execution","evt":"test.run"}
-{"ts":1760297274619,"lvl":"info","case":"handles missing log file","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270070,"lvl":"info","case":"handles missing log file","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270071,"lvl":"info","case":"handles missing log file","phase":"execution","evt":"test.run"}
+{"ts":1760303270072,"lvl":"info","case":"handles missing log file","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/digest.spec/identifies_error-level_events_as_suspects.jsonl b/reports/digest.spec/identifies_error-level_events_as_suspects.jsonl
index 20ef37e..f70bd55 100644
--- a/reports/digest.spec/identifies_error-level_events_as_suspects.jsonl
+++ b/reports/digest.spec/identifies_error-level_events_as_suspects.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274616,"lvl":"info","case":"identifies error-level events as suspects","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274617,"lvl":"info","case":"identifies error-level events as suspects","phase":"execution","evt":"test.run"}
-{"ts":1760297274618,"lvl":"info","case":"identifies error-level events as suspects","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270067,"lvl":"info","case":"identifies error-level events as suspects","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270068,"lvl":"info","case":"identifies error-level events as suspects","phase":"execution","evt":"test.run"}
+{"ts":1760303270069,"lvl":"info","case":"identifies error-level events as suspects","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/digest.spec/includes_correct_summary_statistics.jsonl b/reports/digest.spec/includes_correct_summary_statistics.jsonl
index 84e1555..8489982 100644
--- a/reports/digest.spec/includes_correct_summary_statistics.jsonl
+++ b/reports/digest.spec/includes_correct_summary_statistics.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274614,"lvl":"info","case":"includes correct summary statistics","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274615,"lvl":"info","case":"includes correct summary statistics","phase":"execution","evt":"test.run"}
-{"ts":1760297274616,"lvl":"info","case":"includes correct summary statistics","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270048,"lvl":"info","case":"includes correct summary statistics","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270049,"lvl":"info","case":"includes correct summary statistics","phase":"execution","evt":"test.run"}
+{"ts":1760303270050,"lvl":"info","case":"includes correct summary statistics","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
diff --git a/reports/digest.spec/includes_events_matching_error_level.jsonl b/reports/digest.spec/includes_events_matching_error_level.jsonl
index 32e9849..45c14b3 100644
--- a/reports/digest.spec/includes_events_matching_error_level.jsonl
+++ b/reports/digest.spec/includes_events_matching_error_level.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274614,"lvl":"info","case":"includes events matching error level","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274615,"lvl":"info","case":"includes events matching error level","phase":"execution","evt":"test.run"}
-{"ts":1760297274616,"lvl":"info","case":"includes events matching error level","phase":"teardown","evt":"case.end","payload":{"duration":4,"status":"passed"}}
+{"ts":1760303270048,"lvl":"info","case":"includes events matching error level","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270049,"lvl":"info","case":"includes events matching error level","phase":"execution","evt":"test.run"}
+{"ts":1760303270050,"lvl":"info","case":"includes events matching error level","phase":"teardown","evt":"case.end","payload":{"duration":4,"status":"passed"}}
diff --git a/reports/digest.spec/includes_events_matching_specific_event_name.jsonl b/reports/digest.spec/includes_events_matching_specific_event_name.jsonl
index 513fdcb..673fb9a 100644
--- a/reports/digest.spec/includes_events_matching_specific_event_name.jsonl
+++ b/reports/digest.spec/includes_events_matching_specific_event_name.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274615,"lvl":"info","case":"includes events matching specific event name","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274616,"lvl":"info","case":"includes events matching specific event name","phase":"execution","evt":"test.run"}
-{"ts":1760297274617,"lvl":"info","case":"includes events matching specific event name","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270048,"lvl":"info","case":"includes events matching specific event name","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270049,"lvl":"info","case":"includes events matching specific event name","phase":"execution","evt":"test.run"}
+{"ts":1760303270050,"lvl":"info","case":"includes events matching specific event name","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/digest.spec/keeps_all_events_when_within_budget.jsonl b/reports/digest.spec/keeps_all_events_when_within_budget.jsonl
index 7980a29..7153a39 100644
--- a/reports/digest.spec/keeps_all_events_when_within_budget.jsonl
+++ b/reports/digest.spec/keeps_all_events_when_within_budget.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274616,"lvl":"info","case":"keeps all events when within budget","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274617,"lvl":"info","case":"keeps all events when within budget","phase":"execution","evt":"test.run"}
-{"ts":1760297274618,"lvl":"info","case":"keeps all events when within budget","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270067,"lvl":"info","case":"keeps all events when within budget","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270068,"lvl":"info","case":"keeps all events when within budget","phase":"execution","evt":"test.run"}
+{"ts":1760303270069,"lvl":"info","case":"keeps all events when within budget","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/digest.spec/limits_suspects_to_top_5.jsonl b/reports/digest.spec/limits_suspects_to_top_5.jsonl
index 0445140..93c8d1b 100644
--- a/reports/digest.spec/limits_suspects_to_top_5.jsonl
+++ b/reports/digest.spec/limits_suspects_to_top_5.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274616,"lvl":"info","case":"limits suspects to top 5","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274617,"lvl":"info","case":"limits suspects to top 5","phase":"execution","evt":"test.run"}
-{"ts":1760297274618,"lvl":"info","case":"limits suspects to top 5","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270069,"lvl":"info","case":"limits suspects to top 5","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270070,"lvl":"info","case":"limits suspects to top 5","phase":"execution","evt":"test.run"}
+{"ts":1760303270071,"lvl":"info","case":"limits suspects to top 5","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/digest.spec/processes_ingested_Go_test_failures_transparently.jsonl b/reports/digest.spec/processes_ingested_Go_test_failures_transparently.jsonl
index 2eb8ff8..44f19a0 100644
--- a/reports/digest.spec/processes_ingested_Go_test_failures_transparently.jsonl
+++ b/reports/digest.spec/processes_ingested_Go_test_failures_transparently.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274617,"lvl":"info","case":"processes ingested Go test failures transparently","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274618,"lvl":"info","case":"processes ingested Go test failures transparently","phase":"execution","evt":"test.run"}
-{"ts":1760297274619,"lvl":"info","case":"processes ingested Go test failures transparently","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270071,"lvl":"info","case":"processes ingested Go test failures transparently","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270072,"lvl":"info","case":"processes ingested Go test failures transparently","phase":"execution","evt":"test.run"}
+{"ts":1760303270073,"lvl":"info","case":"processes ingested Go test failures transparently","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/digest.spec/recognizes_Go_test_fail_events_in_rules.jsonl b/reports/digest.spec/recognizes_Go_test_fail_events_in_rules.jsonl
index 35d8486..34055a5 100644
--- a/reports/digest.spec/recognizes_Go_test_fail_events_in_rules.jsonl
+++ b/reports/digest.spec/recognizes_Go_test_fail_events_in_rules.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274617,"lvl":"info","case":"recognizes Go test.fail events in rules","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274618,"lvl":"info","case":"recognizes Go test.fail events in rules","phase":"execution","evt":"test.run"}
-{"ts":1760297274619,"lvl":"info","case":"recognizes Go test.fail events in rules","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270071,"lvl":"info","case":"recognizes Go test.fail events in rules","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270072,"lvl":"info","case":"recognizes Go test.fail events in rules","phase":"execution","evt":"test.run"}
+{"ts":1760303270073,"lvl":"info","case":"recognizes Go test.fail events in rules","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/digest.spec/respects_priority_order.jsonl b/reports/digest.spec/respects_priority_order.jsonl
index 5294a79..8f80ad1 100644
--- a/reports/digest.spec/respects_priority_order.jsonl
+++ b/reports/digest.spec/respects_priority_order.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274615,"lvl":"info","case":"respects priority order","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274616,"lvl":"info","case":"respects priority order","phase":"execution","evt":"test.run"}
-{"ts":1760297274617,"lvl":"info","case":"respects priority order","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270049,"lvl":"info","case":"respects priority order","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270050,"lvl":"info","case":"respects priority order","phase":"execution","evt":"test.run"}
+{"ts":1760303270051,"lvl":"info","case":"respects priority order","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/digest.spec/returns_empty_suspects_for_no_failure_events.jsonl b/reports/digest.spec/returns_empty_suspects_for_no_failure_events.jsonl
index ed40dcf..86219f7 100644
--- a/reports/digest.spec/returns_empty_suspects_for_no_failure_events.jsonl
+++ b/reports/digest.spec/returns_empty_suspects_for_no_failure_events.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274616,"lvl":"info","case":"returns empty suspects for no failure events","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274617,"lvl":"info","case":"returns empty suspects for no failure events","phase":"execution","evt":"test.run"}
-{"ts":1760297274618,"lvl":"info","case":"returns empty suspects for no failure events","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270069,"lvl":"info","case":"returns empty suspects for no failure events","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270070,"lvl":"info","case":"returns empty suspects for no failure events","phase":"execution","evt":"test.run"}
+{"ts":1760303270071,"lvl":"info","case":"returns empty suspects for no failure events","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/digest.spec/returns_null_for_passing_tests.jsonl b/reports/digest.spec/returns_null_for_passing_tests.jsonl
index f9acd7e..e81485f 100644
--- a/reports/digest.spec/returns_null_for_passing_tests.jsonl
+++ b/reports/digest.spec/returns_null_for_passing_tests.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274614,"lvl":"info","case":"returns null for passing tests","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274615,"lvl":"info","case":"returns null for passing tests","phase":"execution","evt":"test.run"}
-{"ts":1760297274616,"lvl":"info","case":"returns null for passing tests","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270047,"lvl":"info","case":"returns null for passing tests","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270048,"lvl":"info","case":"returns null for passing tests","phase":"execution","evt":"test.run"}
+{"ts":1760303270049,"lvl":"info","case":"returns null for passing tests","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/digest.spec/returns_null_when_disabled.jsonl b/reports/digest.spec/returns_null_when_disabled.jsonl
index abbd544..3b11b67 100644
--- a/reports/digest.spec/returns_null_when_disabled.jsonl
+++ b/reports/digest.spec/returns_null_when_disabled.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274614,"lvl":"info","case":"returns null when disabled","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274615,"lvl":"info","case":"returns null when disabled","phase":"execution","evt":"test.run"}
-{"ts":1760297274616,"lvl":"info","case":"returns null when disabled","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270048,"lvl":"info","case":"returns null when disabled","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270049,"lvl":"info","case":"returns null when disabled","phase":"execution","evt":"test.run"}
+{"ts":1760303270050,"lvl":"info","case":"returns null when disabled","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/digest.spec/scores_correlated_events.jsonl b/reports/digest.spec/scores_correlated_events.jsonl
index f2a77e9..9537dd2 100644
--- a/reports/digest.spec/scores_correlated_events.jsonl
+++ b/reports/digest.spec/scores_correlated_events.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274616,"lvl":"info","case":"scores correlated events","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274617,"lvl":"info","case":"scores correlated events","phase":"execution","evt":"test.run"}
-{"ts":1760297274618,"lvl":"info","case":"scores correlated events","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270068,"lvl":"info","case":"scores correlated events","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270069,"lvl":"info","case":"scores correlated events","phase":"execution","evt":"test.run"}
+{"ts":1760303270070,"lvl":"info","case":"scores correlated events","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/digest.spec/scores_events_close_to_failure_time.jsonl b/reports/digest.spec/scores_events_close_to_failure_time.jsonl
index f6279bc..b5f057c 100644
--- a/reports/digest.spec/scores_events_close_to_failure_time.jsonl
+++ b/reports/digest.spec/scores_events_close_to_failure_time.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274616,"lvl":"info","case":"scores events close to failure time","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274617,"lvl":"info","case":"scores events close to failure time","phase":"execution","evt":"test.run"}
-{"ts":1760297274618,"lvl":"info","case":"scores events close to failure time","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270068,"lvl":"info","case":"scores events close to failure time","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270069,"lvl":"info","case":"scores events close to failure time","phase":"execution","evt":"test.run"}
+{"ts":1760303270070,"lvl":"info","case":"scores events close to failure time","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/digest.spec/scores_failure_events.jsonl b/reports/digest.spec/scores_failure_events.jsonl
index 54f1759..6bf6944 100644
--- a/reports/digest.spec/scores_failure_events.jsonl
+++ b/reports/digest.spec/scores_failure_events.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274616,"lvl":"info","case":"scores failure events","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274617,"lvl":"info","case":"scores failure events","phase":"execution","evt":"test.run"}
-{"ts":1760297274618,"lvl":"info","case":"scores failure events","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270068,"lvl":"info","case":"scores failure events","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270069,"lvl":"info","case":"scores failure events","phase":"execution","evt":"test.run"}
+{"ts":1760303270070,"lvl":"info","case":"scores failure events","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/digest.spec/skips_malformed_JSON_lines.jsonl b/reports/digest.spec/skips_malformed_JSON_lines.jsonl
index 248c9da..48191e2 100644
--- a/reports/digest.spec/skips_malformed_JSON_lines.jsonl
+++ b/reports/digest.spec/skips_malformed_JSON_lines.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274617,"lvl":"info","case":"skips malformed JSON lines","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274618,"lvl":"info","case":"skips malformed JSON lines","phase":"execution","evt":"test.run"}
-{"ts":1760297274619,"lvl":"info","case":"skips malformed JSON lines","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270070,"lvl":"info","case":"skips malformed JSON lines","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270071,"lvl":"info","case":"skips malformed JSON lines","phase":"execution","evt":"test.run"}
+{"ts":1760303270072,"lvl":"info","case":"skips malformed JSON lines","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/digest.spec/supports_multiple_match_criteria.jsonl b/reports/digest.spec/supports_multiple_match_criteria.jsonl
index fbd5746..1dbcbf7 100644
--- a/reports/digest.spec/supports_multiple_match_criteria.jsonl
+++ b/reports/digest.spec/supports_multiple_match_criteria.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274615,"lvl":"info","case":"supports multiple match criteria","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274616,"lvl":"info","case":"supports multiple match criteria","phase":"execution","evt":"test.run"}
-{"ts":1760297274617,"lvl":"info","case":"supports multiple match criteria","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270049,"lvl":"info","case":"supports multiple match criteria","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270050,"lvl":"info","case":"supports multiple match criteria","phase":"execution","evt":"test.run"}
+{"ts":1760303270051,"lvl":"info","case":"supports multiple match criteria","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/digest.spec/supports_wildcard_patterns_in_event_matching.jsonl b/reports/digest.spec/supports_wildcard_patterns_in_event_matching.jsonl
index 892acff..5eac523 100644
--- a/reports/digest.spec/supports_wildcard_patterns_in_event_matching.jsonl
+++ b/reports/digest.spec/supports_wildcard_patterns_in_event_matching.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274615,"lvl":"info","case":"supports wildcard patterns in event matching","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274616,"lvl":"info","case":"supports wildcard patterns in event matching","phase":"execution","evt":"test.run"}
-{"ts":1760297274617,"lvl":"info","case":"supports wildcard patterns in event matching","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270049,"lvl":"info","case":"supports wildcard patterns in event matching","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270050,"lvl":"info","case":"supports wildcard patterns in event matching","phase":"execution","evt":"test.run"}
+{"ts":1760303270051,"lvl":"info","case":"supports wildcard patterns in event matching","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/digest.spec/writes_valid_JSON_file.jsonl b/reports/digest.spec/writes_valid_JSON_file.jsonl
index 75bcc45..d7f2689 100644
--- a/reports/digest.spec/writes_valid_JSON_file.jsonl
+++ b/reports/digest.spec/writes_valid_JSON_file.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274614,"lvl":"info","case":"writes valid JSON file","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274615,"lvl":"info","case":"writes valid JSON file","phase":"execution","evt":"test.run"}
-{"ts":1760297274616,"lvl":"info","case":"writes valid JSON file","phase":"teardown","evt":"case.end","payload":{"duration":4,"status":"passed"}}
+{"ts":1760303270048,"lvl":"info","case":"writes valid JSON file","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270049,"lvl":"info","case":"writes valid JSON file","phase":"execution","evt":"test.run"}
+{"ts":1760303270050,"lvl":"info","case":"writes valid JSON file","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
diff --git a/reports/digest.spec/writes_valid_markdown_file.jsonl b/reports/digest.spec/writes_valid_markdown_file.jsonl
index 67ab9a0..7605128 100644
--- a/reports/digest.spec/writes_valid_markdown_file.jsonl
+++ b/reports/digest.spec/writes_valid_markdown_file.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274614,"lvl":"info","case":"writes valid markdown file","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274615,"lvl":"info","case":"writes valid markdown file","phase":"execution","evt":"test.run"}
-{"ts":1760297274616,"lvl":"info","case":"writes valid markdown file","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270048,"lvl":"info","case":"writes valid markdown file","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270049,"lvl":"info","case":"writes valid markdown file","phase":"execution","evt":"test.run"}
+{"ts":1760303270050,"lvl":"info","case":"writes valid markdown file","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/executor.spec/should_instantiate_modules_and_register_with_hostess.jsonl b/reports/executor.spec/should_instantiate_modules_and_register_with_hostess.jsonl
index dbb2bb8..216e113 100644
--- a/reports/executor.spec/should_instantiate_modules_and_register_with_hostess.jsonl
+++ b/reports/executor.spec/should_instantiate_modules_and_register_with_hostess.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297276893,"lvl":"info","case":"should instantiate modules and register with hostess","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297276894,"lvl":"info","case":"should instantiate modules and register with hostess","phase":"execution","evt":"test.run"}
-{"ts":1760297276895,"lvl":"info","case":"should instantiate modules and register with hostess","phase":"teardown","evt":"case.end","payload":{"duration":4,"status":"passed"}}
+{"ts":1760303272603,"lvl":"info","case":"should instantiate modules and register with hostess","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303272604,"lvl":"info","case":"should instantiate modules and register with hostess","phase":"execution","evt":"test.run"}
+{"ts":1760303272605,"lvl":"info","case":"should instantiate modules and register with hostess","phase":"teardown","evt":"case.end","payload":{"duration":37,"status":"passed"}}
diff --git a/reports/executor.spec/should_load_configuration.jsonl b/reports/executor.spec/should_load_configuration.jsonl
index 0adeec5..4cce979 100644
--- a/reports/executor.spec/should_load_configuration.jsonl
+++ b/reports/executor.spec/should_load_configuration.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297276892,"lvl":"info","case":"should load configuration","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297276893,"lvl":"info","case":"should load configuration","phase":"execution","evt":"test.run"}
-{"ts":1760297276894,"lvl":"info","case":"should load configuration","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
+{"ts":1760303272602,"lvl":"info","case":"should load configuration","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303272603,"lvl":"info","case":"should load configuration","phase":"execution","evt":"test.run"}
+{"ts":1760303272604,"lvl":"info","case":"should load configuration","phase":"teardown","evt":"case.end","payload":{"duration":59,"status":"passed"}}
diff --git a/reports/executor.spec/should_support_restartNode.jsonl b/reports/executor.spec/should_support_restartNode.jsonl
index 13f203e..8a0af42 100644
--- a/reports/executor.spec/should_support_restartNode.jsonl
+++ b/reports/executor.spec/should_support_restartNode.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297276893,"lvl":"info","case":"should support restartNode","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297276894,"lvl":"info","case":"should support restartNode","phase":"execution","evt":"test.run"}
-{"ts":1760297276895,"lvl":"info","case":"should support restartNode","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303272603,"lvl":"info","case":"should support restartNode","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303272604,"lvl":"info","case":"should support restartNode","phase":"execution","evt":"test.run"}
+{"ts":1760303272605,"lvl":"info","case":"should support restartNode","phase":"teardown","evt":"case.end","payload":{"duration":36,"status":"passed"}}
diff --git a/reports/executor.spec/should_throw_if_up___called_without_load__.jsonl b/reports/executor.spec/should_throw_if_up___called_without_load__.jsonl
index 146faa1..ac11c11 100644
--- a/reports/executor.spec/should_throw_if_up___called_without_load__.jsonl
+++ b/reports/executor.spec/should_throw_if_up___called_without_load__.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297276892,"lvl":"info","case":"should throw if up() called without load()","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297276893,"lvl":"info","case":"should throw if up() called without load()","phase":"execution","evt":"test.run"}
-{"ts":1760297276894,"lvl":"info","case":"should throw if up() called without load()","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303272602,"lvl":"info","case":"should throw if up() called without load()","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303272603,"lvl":"info","case":"should throw if up() called without load()","phase":"execution","evt":"test.run"}
+{"ts":1760303272604,"lvl":"info","case":"should throw if up() called without load()","phase":"teardown","evt":"case.end","payload":{"duration":4,"status":"passed"}}
diff --git a/reports/executor.spec/should_throw_on_restartNode_for_non-existent_node.jsonl b/reports/executor.spec/should_throw_on_restartNode_for_non-existent_node.jsonl
index 4566ef2..3c001aa 100644
--- a/reports/executor.spec/should_throw_on_restartNode_for_non-existent_node.jsonl
+++ b/reports/executor.spec/should_throw_on_restartNode_for_non-existent_node.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297276894,"lvl":"info","case":"should throw on restartNode for non-existent node","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297276895,"lvl":"info","case":"should throw on restartNode for non-existent node","phase":"execution","evt":"test.run"}
-{"ts":1760297276896,"lvl":"info","case":"should throw on restartNode for non-existent node","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303272603,"lvl":"info","case":"should throw on restartNode for non-existent node","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303272604,"lvl":"info","case":"should throw on restartNode for non-existent node","phase":"execution","evt":"test.run"}
+{"ts":1760303272605,"lvl":"info","case":"should throw on restartNode for non-existent node","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
diff --git a/reports/executor.spec/should_wire_connections_via_StateManager.jsonl b/reports/executor.spec/should_wire_connections_via_StateManager.jsonl
index f8b6d0e..cfbcb41 100644
--- a/reports/executor.spec/should_wire_connections_via_StateManager.jsonl
+++ b/reports/executor.spec/should_wire_connections_via_StateManager.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297276893,"lvl":"info","case":"should wire connections via StateManager","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297276894,"lvl":"info","case":"should wire connections via StateManager","phase":"execution","evt":"test.run"}
-{"ts":1760297276895,"lvl":"info","case":"should wire connections via StateManager","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303272603,"lvl":"info","case":"should wire connections via StateManager","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303272604,"lvl":"info","case":"should wire connections via StateManager","phase":"execution","evt":"test.run"}
+{"ts":1760303272605,"lvl":"info","case":"should wire connections via StateManager","phase":"teardown","evt":"case.end","payload":{"duration":85,"status":"passed"}}
diff --git a/reports/externalServerWrapper.spec/should_gracefully_shutdown_with_SIGTERM.jsonl b/reports/externalServerWrapper.spec/should_gracefully_shutdown_with_SIGTERM.jsonl
index 25100a6..0d9b3b9 100644
--- a/reports/externalServerWrapper.spec/should_gracefully_shutdown_with_SIGTERM.jsonl
+++ b/reports/externalServerWrapper.spec/should_gracefully_shutdown_with_SIGTERM.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297276898,"lvl":"info","case":"should gracefully shutdown with SIGTERM","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297276899,"lvl":"info","case":"should gracefully shutdown with SIGTERM","phase":"execution","evt":"test.run"}
-{"ts":1760297276900,"lvl":"info","case":"should gracefully shutdown with SIGTERM","phase":"teardown","evt":"case.end","payload":{"duration":51,"status":"passed"}}
+{"ts":1760303272607,"lvl":"info","case":"should gracefully shutdown with SIGTERM","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303272608,"lvl":"info","case":"should gracefully shutdown with SIGTERM","phase":"execution","evt":"test.run"}
+{"ts":1760303272609,"lvl":"info","case":"should gracefully shutdown with SIGTERM","phase":"teardown","evt":"case.end","payload":{"duration":36,"status":"passed"}}
diff --git a/reports/externalServerWrapper.spec/should_handle_environment_variables.jsonl b/reports/externalServerWrapper.spec/should_handle_environment_variables.jsonl
index 7351024..55f6ad9 100644
--- a/reports/externalServerWrapper.spec/should_handle_environment_variables.jsonl
+++ b/reports/externalServerWrapper.spec/should_handle_environment_variables.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297276897,"lvl":"info","case":"should handle environment variables","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297276898,"lvl":"info","case":"should handle environment variables","phase":"execution","evt":"test.run"}
-{"ts":1760297276899,"lvl":"info","case":"should handle environment variables","phase":"teardown","evt":"case.end","payload":{"duration":261,"status":"passed"}}
+{"ts":1760303032409,"lvl":"info","case":"should handle environment variables","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303032410,"lvl":"info","case":"should handle environment variables","phase":"execution","evt":"test.run"}
+{"ts":1760303032411,"lvl":"info","case":"should handle environment variables","phase":"teardown","evt":"case.end","payload":{"duration":246,"status":"passed"}}
diff --git a/reports/externalServerWrapper.spec/should_not_restart_with__never__policy.jsonl b/reports/externalServerWrapper.spec/should_not_restart_with__never__policy.jsonl
index e20a10b..3eb33f0 100644
--- a/reports/externalServerWrapper.spec/should_not_restart_with__never__policy.jsonl
+++ b/reports/externalServerWrapper.spec/should_not_restart_with__never__policy.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297276898,"lvl":"info","case":"should not restart with \"never\" policy","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297276899,"lvl":"info","case":"should not restart with \"never\" policy","phase":"execution","evt":"test.run"}
-{"ts":1760297276900,"lvl":"info","case":"should not restart with \"never\" policy","phase":"teardown","evt":"case.end","payload":{"duration":337,"status":"passed"}}
+{"ts":1760303272607,"lvl":"info","case":"should not restart with \"never\" policy","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303272608,"lvl":"info","case":"should not restart with \"never\" policy","phase":"execution","evt":"test.run"}
+{"ts":1760303272609,"lvl":"info","case":"should not restart with \"never\" policy","phase":"teardown","evt":"case.end","payload":{"duration":353,"status":"passed"}}
diff --git a/reports/externalServerWrapper.spec/should_pipe_data_bidirectionally.jsonl b/reports/externalServerWrapper.spec/should_pipe_data_bidirectionally.jsonl
index 3c73eb2..ec99882 100644
--- a/reports/externalServerWrapper.spec/should_pipe_data_bidirectionally.jsonl
+++ b/reports/externalServerWrapper.spec/should_pipe_data_bidirectionally.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297276897,"lvl":"info","case":"should pipe data bidirectionally","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297276898,"lvl":"info","case":"should pipe data bidirectionally","phase":"execution","evt":"test.run"}
-{"ts":1760297276899,"lvl":"info","case":"should pipe data bidirectionally","phase":"teardown","evt":"case.end","payload":{"duration":160,"status":"passed"}}
+{"ts":1760303032409,"lvl":"info","case":"should pipe data bidirectionally","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303032410,"lvl":"info","case":"should pipe data bidirectionally","phase":"execution","evt":"test.run"}
+{"ts":1760303032411,"lvl":"info","case":"should pipe data bidirectionally","phase":"teardown","evt":"case.end","payload":{"duration":201,"status":"passed"}}
diff --git a/reports/externalServerWrapper.spec/should_provide_process_info.jsonl b/reports/externalServerWrapper.spec/should_provide_process_info.jsonl
index 747fad0..0866c34 100644
--- a/reports/externalServerWrapper.spec/should_provide_process_info.jsonl
+++ b/reports/externalServerWrapper.spec/should_provide_process_info.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297276899,"lvl":"info","case":"should provide process info","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297276900,"lvl":"info","case":"should provide process info","phase":"execution","evt":"test.run"}
-{"ts":1760297276901,"lvl":"info","case":"should provide process info","phase":"teardown","evt":"case.end","payload":{"duration":41,"status":"passed"}}
+{"ts":1760303272608,"lvl":"info","case":"should provide process info","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303272609,"lvl":"info","case":"should provide process info","phase":"execution","evt":"test.run"}
+{"ts":1760303272610,"lvl":"info","case":"should provide process info","phase":"teardown","evt":"case.end","payload":{"duration":40,"status":"passed"}}
diff --git a/reports/externalServerWrapper.spec/should_register_with_Hostess_on_spawn.jsonl b/reports/externalServerWrapper.spec/should_register_with_Hostess_on_spawn.jsonl
index ed5cc68..6d8b12a 100644
--- a/reports/externalServerWrapper.spec/should_register_with_Hostess_on_spawn.jsonl
+++ b/reports/externalServerWrapper.spec/should_register_with_Hostess_on_spawn.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297276898,"lvl":"info","case":"should register with Hostess on spawn","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297276899,"lvl":"info","case":"should register with Hostess on spawn","phase":"execution","evt":"test.run"}
-{"ts":1760297276900,"lvl":"info","case":"should register with Hostess on spawn","phase":"teardown","evt":"case.end","payload":{"duration":139,"status":"passed"}}
+{"ts":1760303272606,"lvl":"info","case":"should register with Hostess on spawn","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303272607,"lvl":"info","case":"should register with Hostess on spawn","phase":"execution","evt":"test.run"}
+{"ts":1760303272608,"lvl":"info","case":"should register with Hostess on spawn","phase":"teardown","evt":"case.end","payload":{"duration":32,"status":"passed"}}
diff --git a/reports/externalServerWrapper.spec/should_respect_maxRestarts_limit.jsonl b/reports/externalServerWrapper.spec/should_respect_maxRestarts_limit.jsonl
index 6eac6c3..0d8c37b 100644
--- a/reports/externalServerWrapper.spec/should_respect_maxRestarts_limit.jsonl
+++ b/reports/externalServerWrapper.spec/should_respect_maxRestarts_limit.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297276899,"lvl":"info","case":"should respect maxRestarts limit","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297276900,"lvl":"info","case":"should respect maxRestarts limit","phase":"execution","evt":"test.run"}
-{"ts":1760297276901,"lvl":"info","case":"should respect maxRestarts limit","phase":"teardown","evt":"case.end","payload":{"duration":531,"status":"passed"}}
+{"ts":1760303272608,"lvl":"info","case":"should respect maxRestarts limit","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303272609,"lvl":"info","case":"should respect maxRestarts limit","phase":"execution","evt":"test.run"}
+{"ts":1760303272610,"lvl":"info","case":"should respect maxRestarts limit","phase":"teardown","evt":"case.end","payload":{"duration":541,"status":"passed"}}
diff --git a/reports/externalServerWrapper.spec/should_restart_on_failure_with__on-failure__policy.jsonl b/reports/externalServerWrapper.spec/should_restart_on_failure_with__on-failure__policy.jsonl
index 437bf55..9d0ebfe 100644
--- a/reports/externalServerWrapper.spec/should_restart_on_failure_with__on-failure__policy.jsonl
+++ b/reports/externalServerWrapper.spec/should_restart_on_failure_with__on-failure__policy.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297276898,"lvl":"info","case":"should restart on failure with \"on-failure\" policy","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297276899,"lvl":"info","case":"should restart on failure with \"on-failure\" policy","phase":"execution","evt":"test.run"}
-{"ts":1760297276900,"lvl":"info","case":"should restart on failure with \"on-failure\" policy","phase":"teardown","evt":"case.end","payload":{"duration":547,"status":"passed"}}
+{"ts":1760303272607,"lvl":"info","case":"should restart on failure with \"on-failure\" policy","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303272608,"lvl":"info","case":"should restart on failure with \"on-failure\" policy","phase":"execution","evt":"test.run"}
+{"ts":1760303272609,"lvl":"info","case":"should restart on failure with \"on-failure\" policy","phase":"teardown","evt":"case.end","payload":{"duration":529,"status":"passed"}}
diff --git a/reports/externalServerWrapper.spec/should_spawn_a_simple_process.jsonl b/reports/externalServerWrapper.spec/should_spawn_a_simple_process.jsonl
index 7a28697..105efa9 100644
--- a/reports/externalServerWrapper.spec/should_spawn_a_simple_process.jsonl
+++ b/reports/externalServerWrapper.spec/should_spawn_a_simple_process.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297276897,"lvl":"info","case":"should spawn a simple process","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297276898,"lvl":"info","case":"should spawn a simple process","phase":"execution","evt":"test.run"}
-{"ts":1760297276899,"lvl":"info","case":"should spawn a simple process","phase":"teardown","evt":"case.end","payload":{"duration":93,"status":"passed"}}
+{"ts":1760303270428,"lvl":"info","case":"should spawn a simple process","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270429,"lvl":"info","case":"should spawn a simple process","phase":"execution","evt":"test.run"}
+{"ts":1760303270430,"lvl":"info","case":"should spawn a simple process","phase":"teardown","evt":"case.end","payload":{"duration":48,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/caches_sourcemap_for_repeated_access.jsonl b/reports/flakeAndFrames.spec/caches_sourcemap_for_repeated_access.jsonl
index d8eb1c8..ee027a2 100644
--- a/reports/flakeAndFrames.spec/caches_sourcemap_for_repeated_access.jsonl
+++ b/reports/flakeAndFrames.spec/caches_sourcemap_for_repeated_access.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274651,"lvl":"info","case":"caches sourcemap for repeated access","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274652,"lvl":"info","case":"caches sourcemap for repeated access","phase":"execution","evt":"test.run"}
-{"ts":1760297274653,"lvl":"info","case":"caches sourcemap for repeated access","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270115,"lvl":"info","case":"caches sourcemap for repeated access","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270116,"lvl":"info","case":"caches sourcemap for repeated access","phase":"execution","evt":"test.run"}
+{"ts":1760303270117,"lvl":"info","case":"caches sourcemap for repeated access","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/calculates_0__stability_for_always-failing_tests.jsonl b/reports/flakeAndFrames.spec/calculates_0__stability_for_always-failing_tests.jsonl
index d9efddd..8fa916a 100644
--- a/reports/flakeAndFrames.spec/calculates_0__stability_for_always-failing_tests.jsonl
+++ b/reports/flakeAndFrames.spec/calculates_0__stability_for_always-failing_tests.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274618,"lvl":"info","case":"calculates 0% stability for always-failing tests","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274619,"lvl":"info","case":"calculates 0% stability for always-failing tests","phase":"execution","evt":"test.run"}
-{"ts":1760297274620,"lvl":"info","case":"calculates 0% stability for always-failing tests","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270079,"lvl":"info","case":"calculates 0% stability for always-failing tests","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270080,"lvl":"info","case":"calculates 0% stability for always-failing tests","phase":"execution","evt":"test.run"}
+{"ts":1760303270081,"lvl":"info","case":"calculates 0% stability for always-failing tests","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/calculates_100__stability_for_always-passing_tests.jsonl b/reports/flakeAndFrames.spec/calculates_100__stability_for_always-passing_tests.jsonl
index 544e63b..db12222 100644
--- a/reports/flakeAndFrames.spec/calculates_100__stability_for_always-passing_tests.jsonl
+++ b/reports/flakeAndFrames.spec/calculates_100__stability_for_always-passing_tests.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274618,"lvl":"info","case":"calculates 100% stability for always-passing tests","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274619,"lvl":"info","case":"calculates 100% stability for always-passing tests","phase":"execution","evt":"test.run"}
-{"ts":1760297274620,"lvl":"info","case":"calculates 100% stability for always-passing tests","phase":"teardown","evt":"case.end","payload":{"duration":4,"status":"passed"}}
+{"ts":1760303270078,"lvl":"info","case":"calculates 100% stability for always-passing tests","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270079,"lvl":"info","case":"calculates 100% stability for always-passing tests","phase":"execution","evt":"test.run"}
+{"ts":1760303270080,"lvl":"info","case":"calculates 100% stability for always-passing tests","phase":"teardown","evt":"case.end","payload":{"duration":5,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/calculates_correct_score_for_1_pass_out_of_10_runs.jsonl b/reports/flakeAndFrames.spec/calculates_correct_score_for_1_pass_out_of_10_runs.jsonl
index 94e27e7..52562f7 100644
--- a/reports/flakeAndFrames.spec/calculates_correct_score_for_1_pass_out_of_10_runs.jsonl
+++ b/reports/flakeAndFrames.spec/calculates_correct_score_for_1_pass_out_of_10_runs.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274619,"lvl":"info","case":"calculates correct score for 1 pass out of 10 runs","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274620,"lvl":"info","case":"calculates correct score for 1 pass out of 10 runs","phase":"execution","evt":"test.run"}
-{"ts":1760297274621,"lvl":"info","case":"calculates correct score for 1 pass out of 10 runs","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270080,"lvl":"info","case":"calculates correct score for 1 pass out of 10 runs","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270081,"lvl":"info","case":"calculates correct score for 1 pass out of 10 runs","phase":"execution","evt":"test.run"}
+{"ts":1760303270082,"lvl":"info","case":"calculates correct score for 1 pass out of 10 runs","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/calculates_correct_score_for_9_passes_out_of_10_runs.jsonl b/reports/flakeAndFrames.spec/calculates_correct_score_for_9_passes_out_of_10_runs.jsonl
index f9153f9..4cc0bdd 100644
--- a/reports/flakeAndFrames.spec/calculates_correct_score_for_9_passes_out_of_10_runs.jsonl
+++ b/reports/flakeAndFrames.spec/calculates_correct_score_for_9_passes_out_of_10_runs.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274619,"lvl":"info","case":"calculates correct score for 9 passes out of 10 runs","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274620,"lvl":"info","case":"calculates correct score for 9 passes out of 10 runs","phase":"execution","evt":"test.run"}
-{"ts":1760297274621,"lvl":"info","case":"calculates correct score for 9 passes out of 10 runs","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270080,"lvl":"info","case":"calculates correct score for 9 passes out of 10 runs","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270081,"lvl":"info","case":"calculates correct score for 9 passes out of 10 runs","phase":"execution","evt":"test.run"}
+{"ts":1760303270082,"lvl":"info","case":"calculates correct score for 9 passes out of 10 runs","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/calculates_partial_stability_for_flaky_tests.jsonl b/reports/flakeAndFrames.spec/calculates_partial_stability_for_flaky_tests.jsonl
index a3812d4..232d3d2 100644
--- a/reports/flakeAndFrames.spec/calculates_partial_stability_for_flaky_tests.jsonl
+++ b/reports/flakeAndFrames.spec/calculates_partial_stability_for_flaky_tests.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274618,"lvl":"info","case":"calculates partial stability for flaky tests","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274619,"lvl":"info","case":"calculates partial stability for flaky tests","phase":"execution","evt":"test.run"}
-{"ts":1760297274620,"lvl":"info","case":"calculates partial stability for flaky tests","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270079,"lvl":"info","case":"calculates partial stability for flaky tests","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270080,"lvl":"info","case":"calculates partial stability for flaky tests","phase":"execution","evt":"test.run"}
+{"ts":1760303270081,"lvl":"info","case":"calculates partial stability for flaky tests","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/captures_environment_variables_in_artifact.jsonl b/reports/flakeAndFrames.spec/captures_environment_variables_in_artifact.jsonl
index 0e71848..fe35004 100644
--- a/reports/flakeAndFrames.spec/captures_environment_variables_in_artifact.jsonl
+++ b/reports/flakeAndFrames.spec/captures_environment_variables_in_artifact.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274620,"lvl":"info","case":"captures environment variables in artifact","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274621,"lvl":"info","case":"captures environment variables in artifact","phase":"execution","evt":"test.run"}
-{"ts":1760297274622,"lvl":"info","case":"captures environment variables in artifact","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270082,"lvl":"info","case":"captures environment variables in artifact","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270083,"lvl":"info","case":"captures environment variables in artifact","phase":"execution","evt":"test.run"}
+{"ts":1760303270084,"lvl":"info","case":"captures environment variables in artifact","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/captures_relevant_environment_variables_only.jsonl b/reports/flakeAndFrames.spec/captures_relevant_environment_variables_only.jsonl
index f9d49a1..69976a3 100644
--- a/reports/flakeAndFrames.spec/captures_relevant_environment_variables_only.jsonl
+++ b/reports/flakeAndFrames.spec/captures_relevant_environment_variables_only.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274638,"lvl":"info","case":"captures relevant environment variables only","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274639,"lvl":"info","case":"captures relevant environment variables only","phase":"execution","evt":"test.run"}
-{"ts":1760297274640,"lvl":"info","case":"captures relevant environment variables only","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270082,"lvl":"info","case":"captures relevant environment variables only","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270083,"lvl":"info","case":"captures relevant environment variables only","phase":"execution","evt":"test.run"}
+{"ts":1760303270084,"lvl":"info","case":"captures relevant environment variables only","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/captures_test_seed_in_artifact.jsonl b/reports/flakeAndFrames.spec/captures_test_seed_in_artifact.jsonl
index fcc6d6e..6cb56c2 100644
--- a/reports/flakeAndFrames.spec/captures_test_seed_in_artifact.jsonl
+++ b/reports/flakeAndFrames.spec/captures_test_seed_in_artifact.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274620,"lvl":"info","case":"captures test seed in artifact","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274621,"lvl":"info","case":"captures test seed in artifact","phase":"execution","evt":"test.run"}
-{"ts":1760297274622,"lvl":"info","case":"captures test seed in artifact","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270081,"lvl":"info","case":"captures test seed in artifact","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270082,"lvl":"info","case":"captures test seed in artifact","phase":"execution","evt":"test.run"}
+{"ts":1760303270083,"lvl":"info","case":"captures test seed in artifact","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/classifies_test_as_always-fail_when_score_is_0.jsonl b/reports/flakeAndFrames.spec/classifies_test_as_always-fail_when_score_is_0.jsonl
index 45ba326..3baac6d 100644
--- a/reports/flakeAndFrames.spec/classifies_test_as_always-fail_when_score_is_0.jsonl
+++ b/reports/flakeAndFrames.spec/classifies_test_as_always-fail_when_score_is_0.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274618,"lvl":"info","case":"classifies test as always-fail when score is 0","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274619,"lvl":"info","case":"classifies test as always-fail when score is 0","phase":"execution","evt":"test.run"}
-{"ts":1760297274620,"lvl":"info","case":"classifies test as always-fail when score is 0","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270079,"lvl":"info","case":"classifies test as always-fail when score is 0","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270080,"lvl":"info","case":"classifies test as always-fail when score is 0","phase":"execution","evt":"test.run"}
+{"ts":1760303270081,"lvl":"info","case":"classifies test as always-fail when score is 0","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/classifies_test_as_flaky_when_score_is_between_0_and_100.jsonl b/reports/flakeAndFrames.spec/classifies_test_as_flaky_when_score_is_between_0_and_100.jsonl
index f74d847..36995a2 100644
--- a/reports/flakeAndFrames.spec/classifies_test_as_flaky_when_score_is_between_0_and_100.jsonl
+++ b/reports/flakeAndFrames.spec/classifies_test_as_flaky_when_score_is_between_0_and_100.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274618,"lvl":"info","case":"classifies test as flaky when score is between 0 and 100","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274619,"lvl":"info","case":"classifies test as flaky when score is between 0 and 100","phase":"execution","evt":"test.run"}
-{"ts":1760297274620,"lvl":"info","case":"classifies test as flaky when score is between 0 and 100","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270079,"lvl":"info","case":"classifies test as flaky when score is between 0 and 100","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270080,"lvl":"info","case":"classifies test as flaky when score is between 0 and 100","phase":"execution","evt":"test.run"}
+{"ts":1760303270081,"lvl":"info","case":"classifies test as flaky when score is between 0 and 100","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/classifies_test_as_stable_when_score_is_100.jsonl b/reports/flakeAndFrames.spec/classifies_test_as_stable_when_score_is_100.jsonl
index ac00c80..2065c55 100644
--- a/reports/flakeAndFrames.spec/classifies_test_as_stable_when_score_is_100.jsonl
+++ b/reports/flakeAndFrames.spec/classifies_test_as_stable_when_score_is_100.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274618,"lvl":"info","case":"classifies test as stable when score is 100","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274619,"lvl":"info","case":"classifies test as stable when score is 100","phase":"execution","evt":"test.run"}
-{"ts":1760297274620,"lvl":"info","case":"classifies test as stable when score is 100","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270079,"lvl":"info","case":"classifies test as stable when score is 100","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270080,"lvl":"info","case":"classifies test as stable when score is 100","phase":"execution","evt":"test.run"}
+{"ts":1760303270081,"lvl":"info","case":"classifies test as stable when score is 100","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/extracts_code_frame_with_context_lines.jsonl b/reports/flakeAndFrames.spec/extracts_code_frame_with_context_lines.jsonl
index f548859..fee4878 100644
--- a/reports/flakeAndFrames.spec/extracts_code_frame_with_context_lines.jsonl
+++ b/reports/flakeAndFrames.spec/extracts_code_frame_with_context_lines.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274640,"lvl":"info","case":"extracts code frame with context lines","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274641,"lvl":"info","case":"extracts code frame with context lines","phase":"execution","evt":"test.run"}
-{"ts":1760297274642,"lvl":"info","case":"extracts code frame with context lines","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270113,"lvl":"info","case":"extracts code frame with context lines","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270114,"lvl":"info","case":"extracts code frame with context lines","phase":"execution","evt":"test.run"}
+{"ts":1760303270115,"lvl":"info","case":"extracts code frame with context lines","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/extracts_code_frames_from_stack_trace.jsonl b/reports/flakeAndFrames.spec/extracts_code_frames_from_stack_trace.jsonl
index 533925a..969e6b3 100644
--- a/reports/flakeAndFrames.spec/extracts_code_frames_from_stack_trace.jsonl
+++ b/reports/flakeAndFrames.spec/extracts_code_frames_from_stack_trace.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274652,"lvl":"info","case":"extracts code frames from stack trace","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274653,"lvl":"info","case":"extracts code frames from stack trace","phase":"execution","evt":"test.run"}
-{"ts":1760297274654,"lvl":"info","case":"extracts code frames from stack trace","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270131,"lvl":"info","case":"extracts code frames from stack trace","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270132,"lvl":"info","case":"extracts code frames from stack trace","phase":"execution","evt":"test.run"}
+{"ts":1760303270133,"lvl":"info","case":"extracts code frames from stack trace","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/extracts_code_frames_only_from_error_events_with_stack.jsonl b/reports/flakeAndFrames.spec/extracts_code_frames_only_from_error_events_with_stack.jsonl
index 415fb5e..9cf5920 100644
--- a/reports/flakeAndFrames.spec/extracts_code_frames_only_from_error_events_with_stack.jsonl
+++ b/reports/flakeAndFrames.spec/extracts_code_frames_only_from_error_events_with_stack.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274654,"lvl":"info","case":"extracts code frames only from error events with stack","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274655,"lvl":"info","case":"extracts code frames only from error events with stack","phase":"execution","evt":"test.run"}
-{"ts":1760297274656,"lvl":"info","case":"extracts code frames only from error events with stack","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270133,"lvl":"info","case":"extracts code frames only from error events with stack","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270134,"lvl":"info","case":"extracts code frames only from error events with stack","phase":"execution","evt":"test.run"}
+{"ts":1760303270135,"lvl":"info","case":"extracts code frames only from error events with stack","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/extracts_code_frames_only_when_configured.jsonl b/reports/flakeAndFrames.spec/extracts_code_frames_only_when_configured.jsonl
index da1492e..4b88b8e 100644
--- a/reports/flakeAndFrames.spec/extracts_code_frames_only_when_configured.jsonl
+++ b/reports/flakeAndFrames.spec/extracts_code_frames_only_when_configured.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274653,"lvl":"info","case":"extracts code frames only when configured","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274654,"lvl":"info","case":"extracts code frames only when configured","phase":"execution","evt":"test.run"}
-{"ts":1760297274655,"lvl":"info","case":"extracts code frames only when configured","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270132,"lvl":"info","case":"extracts code frames only when configured","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270133,"lvl":"info","case":"extracts code frames only when configured","phase":"execution","evt":"test.run"}
+{"ts":1760303270134,"lvl":"info","case":"extracts code frames only when configured","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/extracts_file_path_correctly.jsonl b/reports/flakeAndFrames.spec/extracts_file_path_correctly.jsonl
index 80cc9e3..6ed26f9 100644
--- a/reports/flakeAndFrames.spec/extracts_file_path_correctly.jsonl
+++ b/reports/flakeAndFrames.spec/extracts_file_path_correctly.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274640,"lvl":"info","case":"extracts file path correctly","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274641,"lvl":"info","case":"extracts file path correctly","phase":"execution","evt":"test.run"}
-{"ts":1760297274642,"lvl":"info","case":"extracts file path correctly","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270112,"lvl":"info","case":"extracts file path correctly","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270113,"lvl":"info","case":"extracts file path correctly","phase":"execution","evt":"test.run"}
+{"ts":1760303270114,"lvl":"info","case":"extracts file path correctly","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/extracts_line_and_column_numbers_as_integers.jsonl b/reports/flakeAndFrames.spec/extracts_line_and_column_numbers_as_integers.jsonl
index ab5f4aa..8596d31 100644
--- a/reports/flakeAndFrames.spec/extracts_line_and_column_numbers_as_integers.jsonl
+++ b/reports/flakeAndFrames.spec/extracts_line_and_column_numbers_as_integers.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274640,"lvl":"info","case":"extracts line and column numbers as integers","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274641,"lvl":"info","case":"extracts line and column numbers as integers","phase":"execution","evt":"test.run"}
-{"ts":1760297274642,"lvl":"info","case":"extracts line and column numbers as integers","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270113,"lvl":"info","case":"extracts line and column numbers as integers","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270114,"lvl":"info","case":"extracts line and column numbers as integers","phase":"execution","evt":"test.run"}
+{"ts":1760303270115,"lvl":"info","case":"extracts line and column numbers as integers","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/falls_back_to__ts_file_if_sourcemap_does_not_exist.jsonl b/reports/flakeAndFrames.spec/falls_back_to__ts_file_if_sourcemap_does_not_exist.jsonl
index 0aa977d..7d76367 100644
--- a/reports/flakeAndFrames.spec/falls_back_to__ts_file_if_sourcemap_does_not_exist.jsonl
+++ b/reports/flakeAndFrames.spec/falls_back_to__ts_file_if_sourcemap_does_not_exist.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274641,"lvl":"info","case":"falls back to .ts file if sourcemap does not exist","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274642,"lvl":"info","case":"falls back to .ts file if sourcemap does not exist","phase":"execution","evt":"test.run"}
-{"ts":1760297274643,"lvl":"info","case":"falls back to .ts file if sourcemap does not exist","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270115,"lvl":"info","case":"falls back to .ts file if sourcemap does not exist","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270116,"lvl":"info","case":"falls back to .ts file if sourcemap does not exist","phase":"execution","evt":"test.run"}
+{"ts":1760303270117,"lvl":"info","case":"falls back to .ts file if sourcemap does not exist","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/filters_always-fail_tests_correctly.jsonl b/reports/flakeAndFrames.spec/filters_always-fail_tests_correctly.jsonl
index 79b8535..c5955ee 100644
--- a/reports/flakeAndFrames.spec/filters_always-fail_tests_correctly.jsonl
+++ b/reports/flakeAndFrames.spec/filters_always-fail_tests_correctly.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274620,"lvl":"info","case":"filters always-fail tests correctly","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274621,"lvl":"info","case":"filters always-fail tests correctly","phase":"execution","evt":"test.run"}
-{"ts":1760297274622,"lvl":"info","case":"filters always-fail tests correctly","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270081,"lvl":"info","case":"filters always-fail tests correctly","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270082,"lvl":"info","case":"filters always-fail tests correctly","phase":"execution","evt":"test.run"}
+{"ts":1760303270083,"lvl":"info","case":"filters always-fail tests correctly","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/filters_flaky_tests_correctly.jsonl b/reports/flakeAndFrames.spec/filters_flaky_tests_correctly.jsonl
index 8fda488..4d9edad 100644
--- a/reports/flakeAndFrames.spec/filters_flaky_tests_correctly.jsonl
+++ b/reports/flakeAndFrames.spec/filters_flaky_tests_correctly.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274620,"lvl":"info","case":"filters flaky tests correctly","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274621,"lvl":"info","case":"filters flaky tests correctly","phase":"execution","evt":"test.run"}
-{"ts":1760297274622,"lvl":"info","case":"filters flaky tests correctly","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270081,"lvl":"info","case":"filters flaky tests correctly","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270082,"lvl":"info","case":"filters flaky tests correctly","phase":"execution","evt":"test.run"}
+{"ts":1760303270083,"lvl":"info","case":"filters flaky tests correctly","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/filters_stable_tests_correctly.jsonl b/reports/flakeAndFrames.spec/filters_stable_tests_correctly.jsonl
index d387e1b..c708911 100644
--- a/reports/flakeAndFrames.spec/filters_stable_tests_correctly.jsonl
+++ b/reports/flakeAndFrames.spec/filters_stable_tests_correctly.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274619,"lvl":"info","case":"filters stable tests correctly","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274620,"lvl":"info","case":"filters stable tests correctly","phase":"execution","evt":"test.run"}
-{"ts":1760297274621,"lvl":"info","case":"filters stable tests correctly","phase":"teardown","evt":"case.end","payload":{"duration":4,"status":"passed"}}
+{"ts":1760303270081,"lvl":"info","case":"filters stable tests correctly","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270082,"lvl":"info","case":"filters stable tests correctly","phase":"execution","evt":"test.run"}
+{"ts":1760303270083,"lvl":"info","case":"filters stable tests correctly","phase":"teardown","evt":"case.end","payload":{"duration":4,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/formats_code_frame_with_line_numbers.jsonl b/reports/flakeAndFrames.spec/formats_code_frame_with_line_numbers.jsonl
index 6dbf097..ba367fc 100644
--- a/reports/flakeAndFrames.spec/formats_code_frame_with_line_numbers.jsonl
+++ b/reports/flakeAndFrames.spec/formats_code_frame_with_line_numbers.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274651,"lvl":"info","case":"formats code frame with line numbers","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274652,"lvl":"info","case":"formats code frame with line numbers","phase":"execution","evt":"test.run"}
-{"ts":1760297274653,"lvl":"info","case":"formats code frame with line numbers","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270115,"lvl":"info","case":"formats code frame with line numbers","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270116,"lvl":"info","case":"formats code frame with line numbers","phase":"execution","evt":"test.run"}
+{"ts":1760303270117,"lvl":"info","case":"formats code frame with line numbers","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/handles_edge_case_of_single_run_failing.jsonl b/reports/flakeAndFrames.spec/handles_edge_case_of_single_run_failing.jsonl
index c848ab1..b5460c4 100644
--- a/reports/flakeAndFrames.spec/handles_edge_case_of_single_run_failing.jsonl
+++ b/reports/flakeAndFrames.spec/handles_edge_case_of_single_run_failing.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274619,"lvl":"info","case":"handles edge case of single run failing","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274620,"lvl":"info","case":"handles edge case of single run failing","phase":"execution","evt":"test.run"}
-{"ts":1760297274621,"lvl":"info","case":"handles edge case of single run failing","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270080,"lvl":"info","case":"handles edge case of single run failing","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270081,"lvl":"info","case":"handles edge case of single run failing","phase":"execution","evt":"test.run"}
+{"ts":1760303270082,"lvl":"info","case":"handles edge case of single run failing","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/handles_edge_case_of_single_run_passing.jsonl b/reports/flakeAndFrames.spec/handles_edge_case_of_single_run_passing.jsonl
index 56932d1..d367da0 100644
--- a/reports/flakeAndFrames.spec/handles_edge_case_of_single_run_passing.jsonl
+++ b/reports/flakeAndFrames.spec/handles_edge_case_of_single_run_passing.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274618,"lvl":"info","case":"handles edge case of single run passing","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274619,"lvl":"info","case":"handles edge case of single run passing","phase":"execution","evt":"test.run"}
-{"ts":1760297274620,"lvl":"info","case":"handles edge case of single run passing","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270080,"lvl":"info","case":"handles edge case of single run passing","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270081,"lvl":"info","case":"handles edge case of single run passing","phase":"execution","evt":"test.run"}
+{"ts":1760303270082,"lvl":"info","case":"handles edge case of single run passing","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/handles_empty_stack_traces.jsonl b/reports/flakeAndFrames.spec/handles_empty_stack_traces.jsonl
index 9ec818a..eab872c 100644
--- a/reports/flakeAndFrames.spec/handles_empty_stack_traces.jsonl
+++ b/reports/flakeAndFrames.spec/handles_empty_stack_traces.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274639,"lvl":"info","case":"handles empty stack traces","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274640,"lvl":"info","case":"handles empty stack traces","phase":"execution","evt":"test.run"}
-{"ts":1760297274641,"lvl":"info","case":"handles empty stack traces","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270111,"lvl":"info","case":"handles empty stack traces","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270112,"lvl":"info","case":"handles empty stack traces","phase":"execution","evt":"test.run"}
+{"ts":1760303270113,"lvl":"info","case":"handles empty stack traces","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/handles_first_line_of_file.jsonl b/reports/flakeAndFrames.spec/handles_first_line_of_file.jsonl
index 17d2d30..1c1eb09 100644
--- a/reports/flakeAndFrames.spec/handles_first_line_of_file.jsonl
+++ b/reports/flakeAndFrames.spec/handles_first_line_of_file.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274640,"lvl":"info","case":"handles first line of file","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274641,"lvl":"info","case":"handles first line of file","phase":"execution","evt":"test.run"}
-{"ts":1760297274642,"lvl":"info","case":"handles first line of file","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270113,"lvl":"info","case":"handles first line of file","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270114,"lvl":"info","case":"handles first line of file","phase":"execution","evt":"test.run"}
+{"ts":1760303270115,"lvl":"info","case":"handles first line of file","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/handles_last_line_of_file.jsonl b/reports/flakeAndFrames.spec/handles_last_line_of_file.jsonl
index cdc7a55..8144958 100644
--- a/reports/flakeAndFrames.spec/handles_last_line_of_file.jsonl
+++ b/reports/flakeAndFrames.spec/handles_last_line_of_file.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274641,"lvl":"info","case":"handles last line of file","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274642,"lvl":"info","case":"handles last line of file","phase":"execution","evt":"test.run"}
-{"ts":1760297274643,"lvl":"info","case":"handles last line of file","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270114,"lvl":"info","case":"handles last line of file","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270115,"lvl":"info","case":"handles last line of file","phase":"execution","evt":"test.run"}
+{"ts":1760303270116,"lvl":"info","case":"handles last line of file","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/includes_code_frames_in_budget_calculation.jsonl b/reports/flakeAndFrames.spec/includes_code_frames_in_budget_calculation.jsonl
index a4fe34e..c89b3b4 100644
--- a/reports/flakeAndFrames.spec/includes_code_frames_in_budget_calculation.jsonl
+++ b/reports/flakeAndFrames.spec/includes_code_frames_in_budget_calculation.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274653,"lvl":"info","case":"includes code frames in budget calculation","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274654,"lvl":"info","case":"includes code frames in budget calculation","phase":"execution","evt":"test.run"}
-{"ts":1760297274655,"lvl":"info","case":"includes code frames in budget calculation","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270132,"lvl":"info","case":"includes code frames in budget calculation","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270133,"lvl":"info","case":"includes code frames in budget calculation","phase":"execution","evt":"test.run"}
+{"ts":1760303270134,"lvl":"info","case":"includes code frames in budget calculation","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/includes_column_indicator_when_column_is_specified.jsonl b/reports/flakeAndFrames.spec/includes_column_indicator_when_column_is_specified.jsonl
index d967a8c..6e539e3 100644
--- a/reports/flakeAndFrames.spec/includes_column_indicator_when_column_is_specified.jsonl
+++ b/reports/flakeAndFrames.spec/includes_column_indicator_when_column_is_specified.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274651,"lvl":"info","case":"includes column indicator when column is specified","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274652,"lvl":"info","case":"includes column indicator when column is specified","phase":"execution","evt":"test.run"}
-{"ts":1760297274653,"lvl":"info","case":"includes column indicator when column is specified","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270130,"lvl":"info","case":"includes column indicator when column is specified","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270131,"lvl":"info","case":"includes column indicator when column is specified","phase":"execution","evt":"test.run"}
+{"ts":1760303270132,"lvl":"info","case":"includes column indicator when column is specified","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/includes_correct_line_numbers_in_source_array.jsonl b/reports/flakeAndFrames.spec/includes_correct_line_numbers_in_source_array.jsonl
index d116cd8..5889824 100644
--- a/reports/flakeAndFrames.spec/includes_correct_line_numbers_in_source_array.jsonl
+++ b/reports/flakeAndFrames.spec/includes_correct_line_numbers_in_source_array.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274641,"lvl":"info","case":"includes correct line numbers in source array","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274642,"lvl":"info","case":"includes correct line numbers in source array","phase":"execution","evt":"test.run"}
-{"ts":1760297274643,"lvl":"info","case":"includes correct line numbers in source array","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270114,"lvl":"info","case":"includes correct line numbers in source array","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270115,"lvl":"info","case":"includes correct line numbers in source array","phase":"execution","evt":"test.run"}
+{"ts":1760303270116,"lvl":"info","case":"includes correct line numbers in source array","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/includes_seed_in_multiple_runs_for_reproducibility.jsonl b/reports/flakeAndFrames.spec/includes_seed_in_multiple_runs_for_reproducibility.jsonl
index 39455a4..4410063 100644
--- a/reports/flakeAndFrames.spec/includes_seed_in_multiple_runs_for_reproducibility.jsonl
+++ b/reports/flakeAndFrames.spec/includes_seed_in_multiple_runs_for_reproducibility.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274638,"lvl":"info","case":"includes seed in multiple runs for reproducibility","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274639,"lvl":"info","case":"includes seed in multiple runs for reproducibility","phase":"execution","evt":"test.run"}
-{"ts":1760297274640,"lvl":"info","case":"includes seed in multiple runs for reproducibility","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270082,"lvl":"info","case":"includes seed in multiple runs for reproducibility","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270083,"lvl":"info","case":"includes seed in multiple runs for reproducibility","phase":"execution","evt":"test.run"}
+{"ts":1760303270084,"lvl":"info","case":"includes seed in multiple runs for reproducibility","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/increments_run_counts_correctly.jsonl b/reports/flakeAndFrames.spec/increments_run_counts_correctly.jsonl
index 1445120..6ab854f 100644
--- a/reports/flakeAndFrames.spec/increments_run_counts_correctly.jsonl
+++ b/reports/flakeAndFrames.spec/increments_run_counts_correctly.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274619,"lvl":"info","case":"increments run counts correctly","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274620,"lvl":"info","case":"increments run counts correctly","phase":"execution","evt":"test.run"}
-{"ts":1760297274621,"lvl":"info","case":"increments run counts correctly","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270081,"lvl":"info","case":"increments run counts correctly","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270082,"lvl":"info","case":"increments run counts correctly","phase":"execution","evt":"test.run"}
+{"ts":1760303270083,"lvl":"info","case":"increments run counts correctly","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/limits_number_of_code_frames_to_5.jsonl b/reports/flakeAndFrames.spec/limits_number_of_code_frames_to_5.jsonl
index 474f619..1b52b51 100644
--- a/reports/flakeAndFrames.spec/limits_number_of_code_frames_to_5.jsonl
+++ b/reports/flakeAndFrames.spec/limits_number_of_code_frames_to_5.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274653,"lvl":"info","case":"limits number of code frames to 5","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274654,"lvl":"info","case":"limits number of code frames to 5","phase":"execution","evt":"test.run"}
-{"ts":1760297274655,"lvl":"info","case":"limits number of code frames to 5","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
+{"ts":1760303270132,"lvl":"info","case":"limits number of code frames to 5","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270133,"lvl":"info","case":"limits number of code frames to 5","phase":"execution","evt":"test.run"}
+{"ts":1760303270134,"lvl":"info","case":"limits number of code frames to 5","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/limits_to_maximum_3_code_frames.jsonl b/reports/flakeAndFrames.spec/limits_to_maximum_3_code_frames.jsonl
index 7ef54ef..53facfc 100644
--- a/reports/flakeAndFrames.spec/limits_to_maximum_3_code_frames.jsonl
+++ b/reports/flakeAndFrames.spec/limits_to_maximum_3_code_frames.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274653,"lvl":"info","case":"limits to maximum 3 code frames","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274654,"lvl":"info","case":"limits to maximum 3 code frames","phase":"execution","evt":"test.run"}
-{"ts":1760297274655,"lvl":"info","case":"limits to maximum 3 code frames","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270131,"lvl":"info","case":"limits to maximum 3 code frames","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270132,"lvl":"info","case":"limits to maximum 3 code frames","phase":"execution","evt":"test.run"}
+{"ts":1760303270133,"lvl":"info","case":"limits to maximum 3 code frames","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/omits_column_indicator_when_column_is_not_specified.jsonl b/reports/flakeAndFrames.spec/omits_column_indicator_when_column_is_not_specified.jsonl
index 901e648..dcc102a 100644
--- a/reports/flakeAndFrames.spec/omits_column_indicator_when_column_is_not_specified.jsonl
+++ b/reports/flakeAndFrames.spec/omits_column_indicator_when_column_is_not_specified.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274652,"lvl":"info","case":"omits column indicator when column is not specified","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274653,"lvl":"info","case":"omits column indicator when column is not specified","phase":"execution","evt":"test.run"}
-{"ts":1760297274654,"lvl":"info","case":"omits column indicator when column is not specified","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
+{"ts":1760303270130,"lvl":"info","case":"omits column indicator when column is not specified","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270131,"lvl":"info","case":"omits column indicator when column is not specified","phase":"execution","evt":"test.run"}
+{"ts":1760303270132,"lvl":"info","case":"omits column indicator when column is not specified","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/pads_line_numbers_correctly.jsonl b/reports/flakeAndFrames.spec/pads_line_numbers_correctly.jsonl
index 6c99198..4c02c33 100644
--- a/reports/flakeAndFrames.spec/pads_line_numbers_correctly.jsonl
+++ b/reports/flakeAndFrames.spec/pads_line_numbers_correctly.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274652,"lvl":"info","case":"pads line numbers correctly","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274653,"lvl":"info","case":"pads line numbers correctly","phase":"execution","evt":"test.run"}
-{"ts":1760297274654,"lvl":"info","case":"pads line numbers correctly","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270130,"lvl":"info","case":"pads line numbers correctly","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270131,"lvl":"info","case":"pads line numbers correctly","phase":"execution","evt":"test.run"}
+{"ts":1760303270132,"lvl":"info","case":"pads line numbers correctly","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/parses_Firefox-style_stack_traces.jsonl b/reports/flakeAndFrames.spec/parses_Firefox-style_stack_traces.jsonl
index 9ea2437..be5d7f0 100644
--- a/reports/flakeAndFrames.spec/parses_Firefox-style_stack_traces.jsonl
+++ b/reports/flakeAndFrames.spec/parses_Firefox-style_stack_traces.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274639,"lvl":"info","case":"parses Firefox-style stack traces","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274640,"lvl":"info","case":"parses Firefox-style stack traces","phase":"execution","evt":"test.run"}
-{"ts":1760297274641,"lvl":"info","case":"parses Firefox-style stack traces","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270111,"lvl":"info","case":"parses Firefox-style stack traces","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270112,"lvl":"info","case":"parses Firefox-style stack traces","phase":"execution","evt":"test.run"}
+{"ts":1760303270113,"lvl":"info","case":"parses Firefox-style stack traces","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/parses_Node_js_stack_trace_format.jsonl b/reports/flakeAndFrames.spec/parses_Node_js_stack_trace_format.jsonl
index 84e914d..42176b3 100644
--- a/reports/flakeAndFrames.spec/parses_Node_js_stack_trace_format.jsonl
+++ b/reports/flakeAndFrames.spec/parses_Node_js_stack_trace_format.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274639,"lvl":"info","case":"parses Node.js stack trace format","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274640,"lvl":"info","case":"parses Node.js stack trace format","phase":"execution","evt":"test.run"}
-{"ts":1760297274641,"lvl":"info","case":"parses Node.js stack trace format","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
+{"ts":1760303270097,"lvl":"info","case":"parses Node.js stack trace format","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270098,"lvl":"info","case":"parses Node.js stack trace format","phase":"execution","evt":"test.run"}
+{"ts":1760303270099,"lvl":"info","case":"parses Node.js stack trace format","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/parses_V8_stack_trace_without_function_names.jsonl b/reports/flakeAndFrames.spec/parses_V8_stack_trace_without_function_names.jsonl
index 1af8bbf..80493bc 100644
--- a/reports/flakeAndFrames.spec/parses_V8_stack_trace_without_function_names.jsonl
+++ b/reports/flakeAndFrames.spec/parses_V8_stack_trace_without_function_names.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274639,"lvl":"info","case":"parses V8 stack trace without function names","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274640,"lvl":"info","case":"parses V8 stack trace without function names","phase":"execution","evt":"test.run"}
-{"ts":1760297274641,"lvl":"info","case":"parses V8 stack trace without function names","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270110,"lvl":"info","case":"parses V8 stack trace without function names","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270111,"lvl":"info","case":"parses V8 stack trace without function names","phase":"execution","evt":"test.run"}
+{"ts":1760303270112,"lvl":"info","case":"parses V8 stack trace without function names","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/resolves__ts_file_when__js_map_exists.jsonl b/reports/flakeAndFrames.spec/resolves__ts_file_when__js_map_exists.jsonl
index d6c7ced..bb22fe3 100644
--- a/reports/flakeAndFrames.spec/resolves__ts_file_when__js_map_exists.jsonl
+++ b/reports/flakeAndFrames.spec/resolves__ts_file_when__js_map_exists.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274641,"lvl":"info","case":"resolves .ts file when .js.map exists","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274642,"lvl":"info","case":"resolves .ts file when .js.map exists","phase":"execution","evt":"test.run"}
-{"ts":1760297274643,"lvl":"info","case":"resolves .ts file when .js.map exists","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270115,"lvl":"info","case":"resolves .ts file when .js.map exists","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270116,"lvl":"info","case":"resolves .ts file when .js.map exists","phase":"execution","evt":"test.run"}
+{"ts":1760303270117,"lvl":"info","case":"resolves .ts file when .js.map exists","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/respects_context_lines_configuration_in_codeframe_action.jsonl b/reports/flakeAndFrames.spec/respects_context_lines_configuration_in_codeframe_action.jsonl
index 15126bf..2fb4509 100644
--- a/reports/flakeAndFrames.spec/respects_context_lines_configuration_in_codeframe_action.jsonl
+++ b/reports/flakeAndFrames.spec/respects_context_lines_configuration_in_codeframe_action.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274654,"lvl":"info","case":"respects context lines configuration in codeframe action","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274655,"lvl":"info","case":"respects context lines configuration in codeframe action","phase":"execution","evt":"test.run"}
-{"ts":1760297274656,"lvl":"info","case":"respects context lines configuration in codeframe action","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270133,"lvl":"info","case":"respects context lines configuration in codeframe action","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270134,"lvl":"info","case":"respects context lines configuration in codeframe action","phase":"execution","evt":"test.run"}
+{"ts":1760303270135,"lvl":"info","case":"respects context lines configuration in codeframe action","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/returns_null_for_line_number_out_of_range.jsonl b/reports/flakeAndFrames.spec/returns_null_for_line_number_out_of_range.jsonl
index cc87972..106bc93 100644
--- a/reports/flakeAndFrames.spec/returns_null_for_line_number_out_of_range.jsonl
+++ b/reports/flakeAndFrames.spec/returns_null_for_line_number_out_of_range.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274641,"lvl":"info","case":"returns null for line number out of range","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274642,"lvl":"info","case":"returns null for line number out of range","phase":"execution","evt":"test.run"}
-{"ts":1760297274643,"lvl":"info","case":"returns null for line number out of range","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
+{"ts":1760303270114,"lvl":"info","case":"returns null for line number out of range","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270115,"lvl":"info","case":"returns null for line number out of range","phase":"execution","evt":"test.run"}
+{"ts":1760303270116,"lvl":"info","case":"returns null for line number out of range","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/returns_null_for_non-existent_file.jsonl b/reports/flakeAndFrames.spec/returns_null_for_non-existent_file.jsonl
index 876f56d..3f2fd93 100644
--- a/reports/flakeAndFrames.spec/returns_null_for_non-existent_file.jsonl
+++ b/reports/flakeAndFrames.spec/returns_null_for_non-existent_file.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274641,"lvl":"info","case":"returns null for non-existent file","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274642,"lvl":"info","case":"returns null for non-existent file","phase":"execution","evt":"test.run"}
-{"ts":1760297274643,"lvl":"info","case":"returns null for non-existent file","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270114,"lvl":"info","case":"returns null for non-existent file","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270115,"lvl":"info","case":"returns null for non-existent file","phase":"execution","evt":"test.run"}
+{"ts":1760303270116,"lvl":"info","case":"returns null for non-existent file","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/returns_original_file_if_neither_sourcemap_nor__ts_exists.jsonl b/reports/flakeAndFrames.spec/returns_original_file_if_neither_sourcemap_nor__ts_exists.jsonl
index 1b72e62..2cc449c 100644
--- a/reports/flakeAndFrames.spec/returns_original_file_if_neither_sourcemap_nor__ts_exists.jsonl
+++ b/reports/flakeAndFrames.spec/returns_original_file_if_neither_sourcemap_nor__ts_exists.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274642,"lvl":"info","case":"returns original file if neither sourcemap nor .ts exists","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274643,"lvl":"info","case":"returns original file if neither sourcemap nor .ts exists","phase":"execution","evt":"test.run"}
-{"ts":1760297274644,"lvl":"info","case":"returns original file if neither sourcemap nor .ts exists","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
+{"ts":1760303270115,"lvl":"info","case":"returns original file if neither sourcemap nor .ts exists","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270116,"lvl":"info","case":"returns original file if neither sourcemap nor .ts exists","phase":"execution","evt":"test.run"}
+{"ts":1760303270117,"lvl":"info","case":"returns original file if neither sourcemap nor .ts exists","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/skips_frames_without_file_or_line_information.jsonl b/reports/flakeAndFrames.spec/skips_frames_without_file_or_line_information.jsonl
index 33017a8..762c65e 100644
--- a/reports/flakeAndFrames.spec/skips_frames_without_file_or_line_information.jsonl
+++ b/reports/flakeAndFrames.spec/skips_frames_without_file_or_line_information.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274653,"lvl":"info","case":"skips frames without file or line information","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274654,"lvl":"info","case":"skips frames without file or line information","phase":"execution","evt":"test.run"}
-{"ts":1760297274655,"lvl":"info","case":"skips frames without file or line information","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270131,"lvl":"info","case":"skips frames without file or line information","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270132,"lvl":"info","case":"skips frames without file or line information","phase":"execution","evt":"test.run"}
+{"ts":1760303270133,"lvl":"info","case":"skips frames without file or line information","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/skips_unparseable_lines.jsonl b/reports/flakeAndFrames.spec/skips_unparseable_lines.jsonl
index 6654210..3f92b1a 100644
--- a/reports/flakeAndFrames.spec/skips_unparseable_lines.jsonl
+++ b/reports/flakeAndFrames.spec/skips_unparseable_lines.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274640,"lvl":"info","case":"skips unparseable lines","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274641,"lvl":"info","case":"skips unparseable lines","phase":"execution","evt":"test.run"}
-{"ts":1760297274642,"lvl":"info","case":"skips unparseable lines","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270112,"lvl":"info","case":"skips unparseable lines","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270113,"lvl":"info","case":"skips unparseable lines","phase":"execution","evt":"test.run"}
+{"ts":1760303270114,"lvl":"info","case":"skips unparseable lines","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/sorts_tests_by_score_ascending__flakiest_first_.jsonl b/reports/flakeAndFrames.spec/sorts_tests_by_score_ascending__flakiest_first_.jsonl
index 858801d..8f7ef99 100644
--- a/reports/flakeAndFrames.spec/sorts_tests_by_score_ascending__flakiest_first_.jsonl
+++ b/reports/flakeAndFrames.spec/sorts_tests_by_score_ascending__flakiest_first_.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274619,"lvl":"info","case":"sorts tests by score ascending (flakiest first)","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274620,"lvl":"info","case":"sorts tests by score ascending (flakiest first)","phase":"execution","evt":"test.run"}
-{"ts":1760297274621,"lvl":"info","case":"sorts tests by score ascending (flakiest first)","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270081,"lvl":"info","case":"sorts tests by score ascending (flakiest first)","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270082,"lvl":"info","case":"sorts tests by score ascending (flakiest first)","phase":"execution","evt":"test.run"}
+{"ts":1760303270083,"lvl":"info","case":"sorts tests by score ascending (flakiest first)","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/stores_platform_information_in_artifact.jsonl b/reports/flakeAndFrames.spec/stores_platform_information_in_artifact.jsonl
index e27a76b..de06814 100644
--- a/reports/flakeAndFrames.spec/stores_platform_information_in_artifact.jsonl
+++ b/reports/flakeAndFrames.spec/stores_platform_information_in_artifact.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274620,"lvl":"info","case":"stores platform information in artifact","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274621,"lvl":"info","case":"stores platform information in artifact","phase":"execution","evt":"test.run"}
-{"ts":1760297274622,"lvl":"info","case":"stores platform information in artifact","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270082,"lvl":"info","case":"stores platform information in artifact","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270083,"lvl":"info","case":"stores platform information in artifact","phase":"execution","evt":"test.run"}
+{"ts":1760303270084,"lvl":"info","case":"stores platform information in artifact","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/tracks_multiple_tests_independently.jsonl b/reports/flakeAndFrames.spec/tracks_multiple_tests_independently.jsonl
index 19971a2..868e934 100644
--- a/reports/flakeAndFrames.spec/tracks_multiple_tests_independently.jsonl
+++ b/reports/flakeAndFrames.spec/tracks_multiple_tests_independently.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274619,"lvl":"info","case":"tracks multiple tests independently","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274620,"lvl":"info","case":"tracks multiple tests independently","phase":"execution","evt":"test.run"}
-{"ts":1760297274621,"lvl":"info","case":"tracks multiple tests independently","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270080,"lvl":"info","case":"tracks multiple tests independently","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270081,"lvl":"info","case":"tracks multiple tests independently","phase":"execution","evt":"test.run"}
+{"ts":1760303270082,"lvl":"info","case":"tracks multiple tests independently","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/flakeAndFrames.spec/uses_fixed_seed_for_deterministic_flake_detection.jsonl b/reports/flakeAndFrames.spec/uses_fixed_seed_for_deterministic_flake_detection.jsonl
index 15d85d5..609b561 100644
--- a/reports/flakeAndFrames.spec/uses_fixed_seed_for_deterministic_flake_detection.jsonl
+++ b/reports/flakeAndFrames.spec/uses_fixed_seed_for_deterministic_flake_detection.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274637,"lvl":"info","case":"uses fixed seed for deterministic flake detection","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274638,"lvl":"info","case":"uses fixed seed for deterministic flake detection","phase":"execution","evt":"test.run"}
-{"ts":1760297274639,"lvl":"info","case":"uses fixed seed for deterministic flake detection","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270082,"lvl":"info","case":"uses fixed seed for deterministic flake detection","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270083,"lvl":"info","case":"uses fixed seed for deterministic flake detection","phase":"execution","evt":"test.run"}
+{"ts":1760303270084,"lvl":"info","case":"uses fixed seed for deterministic flake detection","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/goIngest.spec/converts_Go_events_to_Laminar_format.jsonl b/reports/goIngest.spec/converts_Go_events_to_Laminar_format.jsonl
index 1d9b767..eddf7e9 100644
--- a/reports/goIngest.spec/converts_Go_events_to_Laminar_format.jsonl
+++ b/reports/goIngest.spec/converts_Go_events_to_Laminar_format.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274552,"lvl":"info","case":"converts Go events to Laminar format","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274553,"lvl":"info","case":"converts Go events to Laminar format","phase":"execution","evt":"test.run"}
-{"ts":1760297274554,"lvl":"info","case":"converts Go events to Laminar format","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270134,"lvl":"info","case":"converts Go events to Laminar format","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270135,"lvl":"info","case":"converts Go events to Laminar format","phase":"execution","evt":"test.run"}
+{"ts":1760303270136,"lvl":"info","case":"converts Go events to Laminar format","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
diff --git a/reports/goIngest.spec/creates_test_fail_events_with_error_level.jsonl b/reports/goIngest.spec/creates_test_fail_events_with_error_level.jsonl
index 59f55a1..9ff509f 100644
--- a/reports/goIngest.spec/creates_test_fail_events_with_error_level.jsonl
+++ b/reports/goIngest.spec/creates_test_fail_events_with_error_level.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274552,"lvl":"info","case":"creates test.fail events with error level","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274553,"lvl":"info","case":"creates test.fail events with error level","phase":"execution","evt":"test.run"}
-{"ts":1760297274554,"lvl":"info","case":"creates test.fail events with error level","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270135,"lvl":"info","case":"creates test.fail events with error level","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270136,"lvl":"info","case":"creates test.fail events with error level","phase":"execution","evt":"test.run"}
+{"ts":1760303270137,"lvl":"info","case":"creates test.fail events with error level","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/goIngest.spec/creates_test_output_events_for_output_actions.jsonl b/reports/goIngest.spec/creates_test_output_events_for_output_actions.jsonl
index 9ec98bb..0c8c021 100644
--- a/reports/goIngest.spec/creates_test_output_events_for_output_actions.jsonl
+++ b/reports/goIngest.spec/creates_test_output_events_for_output_actions.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274552,"lvl":"info","case":"creates test.output events for output actions","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274553,"lvl":"info","case":"creates test.output events for output actions","phase":"execution","evt":"test.run"}
-{"ts":1760297274554,"lvl":"info","case":"creates test.output events for output actions","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270135,"lvl":"info","case":"creates test.output events for output actions","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270136,"lvl":"info","case":"creates test.output events for output actions","phase":"execution","evt":"test.run"}
+{"ts":1760303270137,"lvl":"info","case":"creates test.output events for output actions","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/goIngest.spec/creates_test_pass_events_with_correct_status.jsonl b/reports/goIngest.spec/creates_test_pass_events_with_correct_status.jsonl
index e8f9817..cd5416d 100644
--- a/reports/goIngest.spec/creates_test_pass_events_with_correct_status.jsonl
+++ b/reports/goIngest.spec/creates_test_pass_events_with_correct_status.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274552,"lvl":"info","case":"creates test.pass events with correct status","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274553,"lvl":"info","case":"creates test.pass events with correct status","phase":"execution","evt":"test.run"}
-{"ts":1760297274554,"lvl":"info","case":"creates test.pass events with correct status","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270135,"lvl":"info","case":"creates test.pass events with correct status","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270136,"lvl":"info","case":"creates test.pass events with correct status","phase":"execution","evt":"test.run"}
+{"ts":1760303270137,"lvl":"info","case":"creates test.pass events with correct status","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/goIngest.spec/creates_test_skip_events_for_skipped_tests.jsonl b/reports/goIngest.spec/creates_test_skip_events_for_skipped_tests.jsonl
index 6ca9c48..c7f5dfc 100644
--- a/reports/goIngest.spec/creates_test_skip_events_for_skipped_tests.jsonl
+++ b/reports/goIngest.spec/creates_test_skip_events_for_skipped_tests.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274553,"lvl":"info","case":"creates test.skip events for skipped tests","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274554,"lvl":"info","case":"creates test.skip events for skipped tests","phase":"execution","evt":"test.run"}
-{"ts":1760297274555,"lvl":"info","case":"creates test.skip events for skipped tests","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270136,"lvl":"info","case":"creates test.skip events for skipped tests","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270137,"lvl":"info","case":"creates test.skip events for skipped tests","phase":"execution","evt":"test.run"}
+{"ts":1760303270138,"lvl":"info","case":"creates test.skip events for skipped tests","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/goIngest.spec/creates_test_start_events_for_run_actions.jsonl b/reports/goIngest.spec/creates_test_start_events_for_run_actions.jsonl
index 5c8b453..56db82d 100644
--- a/reports/goIngest.spec/creates_test_start_events_for_run_actions.jsonl
+++ b/reports/goIngest.spec/creates_test_start_events_for_run_actions.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274552,"lvl":"info","case":"creates test.start events for run actions","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274553,"lvl":"info","case":"creates test.start events for run actions","phase":"execution","evt":"test.run"}
-{"ts":1760297274554,"lvl":"info","case":"creates test.start events for run actions","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270135,"lvl":"info","case":"creates test.start events for run actions","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270136,"lvl":"info","case":"creates test.start events for run actions","phase":"execution","evt":"test.run"}
+{"ts":1760303270137,"lvl":"info","case":"creates test.start events for run actions","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/goIngest.spec/generates_summary_with_correct_test_results.jsonl b/reports/goIngest.spec/generates_summary_with_correct_test_results.jsonl
index 4001009..177a1e8 100644
--- a/reports/goIngest.spec/generates_summary_with_correct_test_results.jsonl
+++ b/reports/goIngest.spec/generates_summary_with_correct_test_results.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274553,"lvl":"info","case":"generates summary with correct test results","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274554,"lvl":"info","case":"generates summary with correct test results","phase":"execution","evt":"test.run"}
-{"ts":1760297274555,"lvl":"info","case":"generates summary with correct test results","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270136,"lvl":"info","case":"generates summary with correct test results","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270137,"lvl":"info","case":"generates summary with correct test results","phase":"execution","evt":"test.run"}
+{"ts":1760303270138,"lvl":"info","case":"generates summary with correct test results","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/goIngest.spec/groups_events_by_test_case_correctly.jsonl b/reports/goIngest.spec/groups_events_by_test_case_correctly.jsonl
index 68010da..020a848 100644
--- a/reports/goIngest.spec/groups_events_by_test_case_correctly.jsonl
+++ b/reports/goIngest.spec/groups_events_by_test_case_correctly.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274554,"lvl":"info","case":"groups events by test case correctly","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274555,"lvl":"info","case":"groups events by test case correctly","phase":"execution","evt":"test.run"}
-{"ts":1760297274556,"lvl":"info","case":"groups events by test case correctly","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270137,"lvl":"info","case":"groups events by test case correctly","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270138,"lvl":"info","case":"groups events by test case correctly","phase":"execution","evt":"test.run"}
+{"ts":1760303270139,"lvl":"info","case":"groups events by test case correctly","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/goIngest.spec/handles_empty_input.jsonl b/reports/goIngest.spec/handles_empty_input.jsonl
index bb8a0fe..975646a 100644
--- a/reports/goIngest.spec/handles_empty_input.jsonl
+++ b/reports/goIngest.spec/handles_empty_input.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274551,"lvl":"info","case":"handles empty input","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274552,"lvl":"info","case":"handles empty input","phase":"execution","evt":"test.run"}
-{"ts":1760297274553,"lvl":"info","case":"handles empty input","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270134,"lvl":"info","case":"handles empty input","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270135,"lvl":"info","case":"handles empty input","phase":"execution","evt":"test.run"}
+{"ts":1760303270136,"lvl":"info","case":"handles empty input","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/goIngest.spec/handles_malformed_JSON_lines.jsonl b/reports/goIngest.spec/handles_malformed_JSON_lines.jsonl
index 47f352d..17e5293 100644
--- a/reports/goIngest.spec/handles_malformed_JSON_lines.jsonl
+++ b/reports/goIngest.spec/handles_malformed_JSON_lines.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274551,"lvl":"info","case":"handles malformed JSON lines","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274552,"lvl":"info","case":"handles malformed JSON lines","phase":"execution","evt":"test.run"}
-{"ts":1760297274553,"lvl":"info","case":"handles malformed JSON lines","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270134,"lvl":"info","case":"handles malformed JSON lines","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270135,"lvl":"info","case":"handles malformed JSON lines","phase":"execution","evt":"test.run"}
+{"ts":1760303270136,"lvl":"info","case":"handles malformed JSON lines","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/goIngest.spec/includes_artifactURI_in_summary.jsonl b/reports/goIngest.spec/includes_artifactURI_in_summary.jsonl
index 4641fa3..4047b09 100644
--- a/reports/goIngest.spec/includes_artifactURI_in_summary.jsonl
+++ b/reports/goIngest.spec/includes_artifactURI_in_summary.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274553,"lvl":"info","case":"includes artifactURI in summary","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274554,"lvl":"info","case":"includes artifactURI in summary","phase":"execution","evt":"test.run"}
-{"ts":1760297274555,"lvl":"info","case":"includes artifactURI in summary","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
+{"ts":1760303270136,"lvl":"info","case":"includes artifactURI in summary","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270137,"lvl":"info","case":"includes artifactURI in summary","phase":"execution","evt":"test.run"}
+{"ts":1760303270138,"lvl":"info","case":"includes artifactURI in summary","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/goIngest.spec/includes_duration_in_summary.jsonl b/reports/goIngest.spec/includes_duration_in_summary.jsonl
index 0b5001d..4de267d 100644
--- a/reports/goIngest.spec/includes_duration_in_summary.jsonl
+++ b/reports/goIngest.spec/includes_duration_in_summary.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274553,"lvl":"info","case":"includes duration in summary","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274554,"lvl":"info","case":"includes duration in summary","phase":"execution","evt":"test.run"}
-{"ts":1760297274555,"lvl":"info","case":"includes duration in summary","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270136,"lvl":"info","case":"includes duration in summary","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270137,"lvl":"info","case":"includes duration in summary","phase":"execution","evt":"test.run"}
+{"ts":1760303270138,"lvl":"info","case":"includes duration in summary","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/goIngest.spec/includes_location_in_summary.jsonl b/reports/goIngest.spec/includes_location_in_summary.jsonl
index ae466c6..9376d20 100644
--- a/reports/goIngest.spec/includes_location_in_summary.jsonl
+++ b/reports/goIngest.spec/includes_location_in_summary.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274553,"lvl":"info","case":"includes location in summary","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274554,"lvl":"info","case":"includes location in summary","phase":"execution","evt":"test.run"}
-{"ts":1760297274555,"lvl":"info","case":"includes location in summary","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270136,"lvl":"info","case":"includes location in summary","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270137,"lvl":"info","case":"includes location in summary","phase":"execution","evt":"test.run"}
+{"ts":1760303270138,"lvl":"info","case":"includes location in summary","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/goIngest.spec/parses_go_test_-json_fixture_data.jsonl b/reports/goIngest.spec/parses_go_test_-json_fixture_data.jsonl
index 8afb34c..086dfd6 100644
--- a/reports/goIngest.spec/parses_go_test_-json_fixture_data.jsonl
+++ b/reports/goIngest.spec/parses_go_test_-json_fixture_data.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274550,"lvl":"info","case":"parses go test -json fixture data","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274551,"lvl":"info","case":"parses go test -json fixture data","phase":"execution","evt":"test.run"}
-{"ts":1760297274552,"lvl":"info","case":"parses go test -json fixture data","phase":"teardown","evt":"case.end","payload":{"duration":4,"status":"passed"}}
+{"ts":1760303270133,"lvl":"info","case":"parses go test -json fixture data","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270134,"lvl":"info","case":"parses go test -json fixture data","phase":"execution","evt":"test.run"}
+{"ts":1760303270135,"lvl":"info","case":"parses go test -json fixture data","phase":"teardown","evt":"case.end","payload":{"duration":7,"status":"passed"}}
diff --git a/reports/goIngest.spec/parses_individual_event_fields_correctly.jsonl b/reports/goIngest.spec/parses_individual_event_fields_correctly.jsonl
index bfe4a87..7910cdc 100644
--- a/reports/goIngest.spec/parses_individual_event_fields_correctly.jsonl
+++ b/reports/goIngest.spec/parses_individual_event_fields_correctly.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274551,"lvl":"info","case":"parses individual event fields correctly","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274552,"lvl":"info","case":"parses individual event fields correctly","phase":"execution","evt":"test.run"}
-{"ts":1760297274553,"lvl":"info","case":"parses individual event fields correctly","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270134,"lvl":"info","case":"parses individual event fields correctly","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270135,"lvl":"info","case":"parses individual event fields correctly","phase":"execution","evt":"test.run"}
+{"ts":1760303270136,"lvl":"info","case":"parses individual event fields correctly","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/goIngest.spec/preserves_timestamp_ordering.jsonl b/reports/goIngest.spec/preserves_timestamp_ordering.jsonl
index f0d49db..fabfbd4 100644
--- a/reports/goIngest.spec/preserves_timestamp_ordering.jsonl
+++ b/reports/goIngest.spec/preserves_timestamp_ordering.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274554,"lvl":"info","case":"preserves timestamp ordering","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274555,"lvl":"info","case":"preserves timestamp ordering","phase":"execution","evt":"test.run"}
-{"ts":1760297274556,"lvl":"info","case":"preserves timestamp ordering","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270137,"lvl":"info","case":"preserves timestamp ordering","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270138,"lvl":"info","case":"preserves timestamp ordering","phase":"execution","evt":"test.run"}
+{"ts":1760303270139,"lvl":"info","case":"preserves timestamp ordering","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/goIngest.spec/processes_fixture_data_from_parsing_to_output.jsonl b/reports/goIngest.spec/processes_fixture_data_from_parsing_to_output.jsonl
index ecb92ec..cf6feb8 100644
--- a/reports/goIngest.spec/processes_fixture_data_from_parsing_to_output.jsonl
+++ b/reports/goIngest.spec/processes_fixture_data_from_parsing_to_output.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274554,"lvl":"info","case":"processes fixture data from parsing to output","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274555,"lvl":"info","case":"processes fixture data from parsing to output","phase":"execution","evt":"test.run"}
-{"ts":1760297274556,"lvl":"info","case":"processes fixture data from parsing to output","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270138,"lvl":"info","case":"processes fixture data from parsing to output","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270139,"lvl":"info","case":"processes fixture data from parsing to output","phase":"execution","evt":"test.run"}
+{"ts":1760303270140,"lvl":"info","case":"processes fixture data from parsing to output","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/goIngest.spec/validates_Laminar_event_structure.jsonl b/reports/goIngest.spec/validates_Laminar_event_structure.jsonl
index 55d518b..d426df1 100644
--- a/reports/goIngest.spec/validates_Laminar_event_structure.jsonl
+++ b/reports/goIngest.spec/validates_Laminar_event_structure.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274553,"lvl":"info","case":"validates Laminar event structure","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274554,"lvl":"info","case":"validates Laminar event structure","phase":"execution","evt":"test.run"}
-{"ts":1760297274555,"lvl":"info","case":"validates Laminar event structure","phase":"teardown","evt":"case.end","payload":{"duration":6,"status":"passed"}}
+{"ts":1760303270136,"lvl":"info","case":"validates Laminar event structure","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270137,"lvl":"info","case":"validates Laminar event structure","phase":"execution","evt":"test.run"}
+{"ts":1760303270138,"lvl":"info","case":"validates Laminar event structure","phase":"teardown","evt":"case.end","payload":{"duration":9,"status":"passed"}}
diff --git a/reports/goIngest.spec/writes_JSONL_files_per_test_case.jsonl b/reports/goIngest.spec/writes_JSONL_files_per_test_case.jsonl
index 9f69d5e..2a984ca 100644
--- a/reports/goIngest.spec/writes_JSONL_files_per_test_case.jsonl
+++ b/reports/goIngest.spec/writes_JSONL_files_per_test_case.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274554,"lvl":"info","case":"writes JSONL files per test case","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274555,"lvl":"info","case":"writes JSONL files per test case","phase":"execution","evt":"test.run"}
-{"ts":1760297274556,"lvl":"info","case":"writes JSONL files per test case","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270137,"lvl":"info","case":"writes JSONL files per test case","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270138,"lvl":"info","case":"writes JSONL files per test case","phase":"execution","evt":"test.run"}
+{"ts":1760303270139,"lvl":"info","case":"writes JSONL files per test case","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
diff --git a/reports/goIngest.spec/writes_summary_jsonl_file.jsonl b/reports/goIngest.spec/writes_summary_jsonl_file.jsonl
index cfdd37c..f30d4a4 100644
--- a/reports/goIngest.spec/writes_summary_jsonl_file.jsonl
+++ b/reports/goIngest.spec/writes_summary_jsonl_file.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274554,"lvl":"info","case":"writes summary.jsonl file","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274555,"lvl":"info","case":"writes summary.jsonl file","phase":"execution","evt":"test.run"}
-{"ts":1760297274556,"lvl":"info","case":"writes summary.jsonl file","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270137,"lvl":"info","case":"writes summary.jsonl file","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270138,"lvl":"info","case":"writes summary.jsonl file","phase":"execution","evt":"test.run"}
+{"ts":1760303270139,"lvl":"info","case":"writes summary.jsonl file","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/goIngest.spec/writes_valid_JSONL_format.jsonl b/reports/goIngest.spec/writes_valid_JSONL_format.jsonl
index 12cd280..78fda52 100644
--- a/reports/goIngest.spec/writes_valid_JSONL_format.jsonl
+++ b/reports/goIngest.spec/writes_valid_JSONL_format.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274554,"lvl":"info","case":"writes valid JSONL format","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274555,"lvl":"info","case":"writes valid JSONL format","phase":"execution","evt":"test.run"}
-{"ts":1760297274556,"lvl":"info","case":"writes valid JSONL format","phase":"teardown","evt":"case.end","payload":{"duration":4,"status":"passed"}}
+{"ts":1760303270137,"lvl":"info","case":"writes valid JSONL format","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270138,"lvl":"info","case":"writes valid JSONL format","phase":"execution","evt":"test.run"}
+{"ts":1760303270139,"lvl":"info","case":"writes valid JSONL format","phase":"teardown","evt":"case.end","payload":{"duration":6,"status":"passed"}}
diff --git a/reports/hostess.spec/evicts_after_missed_heartbeats.jsonl b/reports/hostess.spec/evicts_after_missed_heartbeats.jsonl
index 1378a0a..db81b0c 100644
--- a/reports/hostess.spec/evicts_after_missed_heartbeats.jsonl
+++ b/reports/hostess.spec/evicts_after_missed_heartbeats.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274758,"lvl":"info","case":"evicts after missed heartbeats","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274759,"lvl":"info","case":"evicts after missed heartbeats","phase":"execution","evt":"test.run"}
-{"ts":1760297274760,"lvl":"info","case":"evicts after missed heartbeats","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
+{"ts":1760303270171,"lvl":"info","case":"evicts after missed heartbeats","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270172,"lvl":"info","case":"evicts after missed heartbeats","phase":"execution","evt":"test.run"}
+{"ts":1760303270173,"lvl":"info","case":"evicts after missed heartbeats","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/hostess.spec/heartbeat_maintains_liveness.jsonl b/reports/hostess.spec/heartbeat_maintains_liveness.jsonl
index 17f8c5f..f0185c1 100644
--- a/reports/hostess.spec/heartbeat_maintains_liveness.jsonl
+++ b/reports/hostess.spec/heartbeat_maintains_liveness.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274758,"lvl":"info","case":"heartbeat maintains liveness","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274759,"lvl":"info","case":"heartbeat maintains liveness","phase":"execution","evt":"test.run"}
-{"ts":1760297274760,"lvl":"info","case":"heartbeat maintains liveness","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270171,"lvl":"info","case":"heartbeat maintains liveness","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270172,"lvl":"info","case":"heartbeat maintains liveness","phase":"execution","evt":"test.run"}
+{"ts":1760303270173,"lvl":"info","case":"heartbeat maintains liveness","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/hostess.spec/marks_in-use_and_back_to_available.jsonl b/reports/hostess.spec/marks_in-use_and_back_to_available.jsonl
index 23e9ba1..9bee697 100644
--- a/reports/hostess.spec/marks_in-use_and_back_to_available.jsonl
+++ b/reports/hostess.spec/marks_in-use_and_back_to_available.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274758,"lvl":"info","case":"marks in-use and back to available","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274759,"lvl":"info","case":"marks in-use and back to available","phase":"execution","evt":"test.run"}
-{"ts":1760297274760,"lvl":"info","case":"marks in-use and back to available","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270170,"lvl":"info","case":"marks in-use and back to available","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270171,"lvl":"info","case":"marks in-use and back to available","phase":"execution","evt":"test.run"}
+{"ts":1760303270172,"lvl":"info","case":"marks in-use and back to available","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/hostess.spec/registers_and_queries_by_capabilities.jsonl b/reports/hostess.spec/registers_and_queries_by_capabilities.jsonl
index 7ce0c3b..31255e3 100644
--- a/reports/hostess.spec/registers_and_queries_by_capabilities.jsonl
+++ b/reports/hostess.spec/registers_and_queries_by_capabilities.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274758,"lvl":"info","case":"registers and queries by capabilities","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274759,"lvl":"info","case":"registers and queries by capabilities","phase":"execution","evt":"test.run"}
-{"ts":1760297274760,"lvl":"info","case":"registers and queries by capabilities","phase":"teardown","evt":"case.end","payload":{"duration":10,"status":"passed"}}
+{"ts":1760303270170,"lvl":"info","case":"registers and queries by capabilities","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270171,"lvl":"info","case":"registers and queries by capabilities","phase":"execution","evt":"test.run"}
+{"ts":1760303270172,"lvl":"info","case":"registers and queries by capabilities","phase":"teardown","evt":"case.end","payload":{"duration":6,"status":"passed"}}
diff --git a/reports/index.json b/reports/index.json
index 0375768..85bdf0c 100644
--- a/reports/index.json
+++ b/reports/index.json
@@ -1,2477 +1,4303 @@
 {
-  "generated": "2025-10-12T19:27:56.899Z",
-  "totalTests": 245,
+  "generated": "2025-10-12T21:07:52.608Z",
+  "totalTests": 409,
   "artifacts": [
     {
-      "testName": "parses go test -json fixture data",
+      "testName": "parses simple passing test fixture",
       "status": "pass",
       "duration": 4,
-      "location": "/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.551Z",
+      "location": "/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.956Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/goIngest.spec/parses_go_test_-json_fixture_data.jsonl"
+        "caseFile": "reports/junitIngest.spec/parses_simple_passing_test_fixture.jsonl"
       }
     },
     {
-      "testName": "parses individual event fields correctly",
+      "testName": "parses test cases correctly",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.551Z",
+      "location": "/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.956Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/goIngest.spec/parses_individual_event_fields_correctly.jsonl"
+        "caseFile": "reports/junitIngest.spec/parses_test_cases_correctly.jsonl"
       }
     },
     {
-      "testName": "handles empty input",
+      "testName": "parses fixtures with failures",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.551Z",
+      "location": "/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.956Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/goIngest.spec/handles_empty_input.jsonl"
+        "caseFile": "reports/junitIngest.spec/parses_fixtures_with_failures.jsonl"
       }
     },
     {
-      "testName": "handles malformed JSON lines",
+      "testName": "extracts failure messages and stack traces",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.552Z",
-      "artifacts": {
-        "summary": "reports/summary.jsonl",
-        "caseFile": "reports/goIngest.spec/handles_malformed_JSON_lines.jsonl"
-      }
-    },
-    {
-      "testName": "converts Go events to Laminar format",
-      "status": "pass",
-      "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.552Z",
+      "location": "/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.956Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/goIngest.spec/converts_Go_events_to_Laminar_format.jsonl"
+        "caseFile": "reports/junitIngest.spec/extracts_failure_messages_and_stack_traces.jsonl"
       }
     },
     {
-      "testName": "creates test.start events for run actions",
+      "testName": "extracts error messages and stack traces",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.552Z",
+      "location": "/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.957Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/goIngest.spec/creates_test_start_events_for_run_actions.jsonl"
+        "caseFile": "reports/junitIngest.spec/extracts_error_messages_and_stack_traces.jsonl"
       }
     },
     {
-      "testName": "creates test.output events for output actions",
+      "testName": "parses fixtures with skipped tests",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.552Z",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.957Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/goIngest.spec/creates_test_output_events_for_output_actions.jsonl"
+        "caseFile": "reports/junitIngest.spec/parses_fixtures_with_skipped_tests.jsonl"
       }
     },
     {
-      "testName": "creates test.pass events with correct status",
+      "testName": "extracts skipped test messages",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.552Z",
+      "location": "/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.957Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/goIngest.spec/creates_test_pass_events_with_correct_status.jsonl"
+        "caseFile": "reports/junitIngest.spec/extracts_skipped_test_messages.jsonl"
       }
     },
     {
-      "testName": "creates test.fail events with error level",
+      "testName": "handles skipped tests without messages",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.553Z",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.957Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/goIngest.spec/creates_test_fail_events_with_error_level.jsonl"
+        "caseFile": "reports/junitIngest.spec/handles_skipped_tests_without_messages.jsonl"
       }
     },
     {
-      "testName": "creates test.skip events for skipped tests",
+      "testName": "parses nested test suites",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.553Z",
+      "location": "/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.958Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/goIngest.spec/creates_test_skip_events_for_skipped_tests.jsonl"
+        "caseFile": "reports/junitIngest.spec/parses_nested_test_suites.jsonl"
       }
     },
     {
-      "testName": "generates summary with correct test results",
+      "testName": "parses test cases across multiple suites",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.553Z",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.958Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/goIngest.spec/generates_summary_with_correct_test_results.jsonl"
+        "caseFile": "reports/junitIngest.spec/parses_test_cases_across_multiple_suites.jsonl"
       }
     },
     {
-      "testName": "includes duration in summary",
+      "testName": "decodes XML entities in error messages",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.553Z",
+      "location": "/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.958Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/goIngest.spec/includes_duration_in_summary.jsonl"
+        "caseFile": "reports/junitIngest.spec/decodes_XML_entities_in_error_messages.jsonl"
       }
     },
     {
-      "testName": "includes location in summary",
+      "testName": "handles empty XML",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.553Z",
+      "location": "/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.958Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/goIngest.spec/includes_location_in_summary.jsonl"
+        "caseFile": "reports/junitIngest.spec/handles_empty_XML.jsonl"
       }
     },
     {
-      "testName": "includes artifactURI in summary",
+      "testName": "parses time attributes correctly",
       "status": "pass",
       "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.553Z",
+      "location": "/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.958Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/goIngest.spec/includes_artifactURI_in_summary.jsonl"
+        "caseFile": "reports/junitIngest.spec/parses_time_attributes_correctly.jsonl"
       }
     },
     {
-      "testName": "validates Laminar event structure",
+      "testName": "converts passing tests to Laminar format",
       "status": "pass",
-      "duration": 6,
-      "location": "/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.554Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.958Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/goIngest.spec/validates_Laminar_event_structure.jsonl"
+        "caseFile": "reports/junitIngest.spec/converts_passing_tests_to_Laminar_format.jsonl"
       }
     },
     {
-      "testName": "preserves timestamp ordering",
+      "testName": "creates case.begin events for test start",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.554Z",
+      "location": "/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.958Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/goIngest.spec/preserves_timestamp_ordering.jsonl"
+        "caseFile": "reports/junitIngest.spec/creates_case_begin_events_for_test_start.jsonl"
       }
     },
     {
-      "testName": "writes JSONL files per test case",
+      "testName": "creates test.run events for test execution",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.554Z",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.959Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/goIngest.spec/writes_JSONL_files_per_test_case.jsonl"
+        "caseFile": "reports/junitIngest.spec/creates_test_run_events_for_test_execution.jsonl"
       }
     },
     {
-      "testName": "writes summary.jsonl file",
+      "testName": "creates case.end events for test completion",
       "status": "pass",
-      "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.554Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.959Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/goIngest.spec/writes_summary_jsonl_file.jsonl"
+        "caseFile": "reports/junitIngest.spec/creates_case_end_events_for_test_completion.jsonl"
       }
     },
     {
-      "testName": "groups events by test case correctly",
+      "testName": "handles failed tests with error events",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.554Z",
+      "location": "/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.959Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/goIngest.spec/groups_events_by_test_case_correctly.jsonl"
+        "caseFile": "reports/junitIngest.spec/handles_failed_tests_with_error_events.jsonl"
       }
     },
     {
-      "testName": "writes valid JSONL format",
+      "testName": "extracts error messages from failures",
       "status": "pass",
-      "duration": 4,
-      "location": "/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.554Z",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.959Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/goIngest.spec/writes_valid_JSONL_format.jsonl"
+        "caseFile": "reports/junitIngest.spec/extracts_error_messages_from_failures.jsonl"
       }
     },
     {
-      "testName": "processes fixture data from parsing to output",
+      "testName": "extracts stack traces from errors",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.554Z",
+      "location": "/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.959Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/goIngest.spec/processes_fixture_data_from_parsing_to_output.jsonl"
+        "caseFile": "reports/junitIngest.spec/extracts_stack_traces_from_errors.jsonl"
       }
     },
     {
-      "testName": "should create and compare snapshots with masking",
+      "testName": "handles skipped tests correctly",
       "status": "pass",
-      "duration": 3,
-      "location": "/srv/repos0/mkolbol/tests/golden/sample.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.554Z",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.959Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/sample.spec/should_create_and_compare_snapshots_with_masking.jsonl"
+        "caseFile": "reports/junitIngest.spec/handles_skipped_tests_correctly.jsonl"
       }
     },
     {
-      "testName": "should detect mismatches",
+      "testName": "generates correct summary for all test outcomes",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/golden/sample.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.555Z",
+      "location": "/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.959Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/sample.spec/should_detect_mismatches.jsonl"
+        "caseFile": "reports/junitIngest.spec/generates_correct_summary_for_all_test_outcomes.jsonl"
       }
     },
     {
-      "testName": "should support custom mask rules",
+      "testName": "includes duration in summary entries",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/golden/sample.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.555Z",
+      "location": "/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.959Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/sample.spec/should_support_custom_mask_rules.jsonl"
+        "caseFile": "reports/junitIngest.spec/includes_duration_in_summary_entries.jsonl"
       }
     },
     {
-      "testName": "initialize",
+      "testName": "includes location in summary entries",
       "status": "pass",
-      "duration": 2,
-      "location": "/srv/repos0/mkolbol/archived/mcp-kernel/tests/router.test.ts:0",
-      "timestamp": "2025-10-12T19:27:54.555Z",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.960Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/router.test/initialize.jsonl"
+        "caseFile": "reports/junitIngest.spec/includes_location_in_summary_entries.jsonl"
       }
     },
     {
-      "testName": "tools/resources list read",
+      "testName": "includes artifactURI in summary entries",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/archived/mcp-kernel/tests/router.test.ts:0",
-      "timestamp": "2025-10-12T19:27:54.555Z",
+      "location": "/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.960Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/router.test/tools_resources_list_read.jsonl"
+        "caseFile": "reports/junitIngest.spec/includes_artifactURI_in_summary_entries.jsonl"
       }
     },
     {
-      "testName": "should generate index.json with valid structure",
+      "testName": "includes testName in summary entries",
       "status": "pass",
-      "duration": 3,
-      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.572Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.960Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/coreReporter.spec/should_generate_index_json_with_valid_structure.jsonl"
+        "caseFile": "reports/junitIngest.spec/includes_testName_in_summary_entries.jsonl"
       }
     },
     {
-      "testName": "should have valid timestamp format",
+      "testName": "includes errorMessage for failed tests in summary",
       "status": "pass",
-      "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.572Z",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.960Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/coreReporter.spec/should_have_valid_timestamp_format.jsonl"
+        "caseFile": "reports/junitIngest.spec/includes_errorMessage_for_failed_tests_in_summary.jsonl"
       }
     },
     {
-      "testName": "should have totalTests matching artifacts length",
+      "testName": "validates Laminar event structure",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.572Z",
+      "duration": 3,
+      "location": "/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.960Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/coreReporter.spec/should_have_totalTests_matching_artifacts_length.jsonl"
+        "caseFile": "reports/junitIngest.spec/validates_Laminar_event_structure.jsonl"
       }
     },
     {
-      "testName": "should have at least one artifact entry",
+      "testName": "preserves timestamp ordering",
       "status": "pass",
-      "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.572Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.960Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/coreReporter.spec/should_have_at_least_one_artifact_entry.jsonl"
+        "caseFile": "reports/junitIngest.spec/preserves_timestamp_ordering.jsonl"
       }
     },
     {
-      "testName": "should have valid structure for each artifact entry",
+      "testName": "handles multiple test suites",
       "status": "pass",
-      "duration": 11,
-      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.572Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.960Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/coreReporter.spec/should_have_valid_structure_for_each_artifact_entry.jsonl"
+        "caseFile": "reports/junitIngest.spec/handles_multiple_test_suites.jsonl"
       }
     },
     {
-      "testName": "should have valid timestamps for each entry",
+      "testName": "handles empty test suites",
       "status": "pass",
-      "duration": 4,
-      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.572Z",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.960Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/coreReporter.spec/should_have_valid_timestamps_for_each_entry.jsonl"
+        "caseFile": "reports/junitIngest.spec/handles_empty_test_suites.jsonl"
       }
     },
     {
-      "testName": "should reference summary.jsonl in artifacts",
+      "testName": "writes JSONL files per test case in suite directories",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.572Z",
+      "location": "/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.961Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/coreReporter.spec/should_reference_summary_jsonl_in_artifacts.jsonl"
+        "caseFile": "reports/junitIngest.spec/writes_JSONL_files_per_test_case_in_suite_directories.jsonl"
       }
     },
     {
-      "testName": "should have caseFile path for each entry",
+      "testName": "writes summary.jsonl file",
       "status": "pass",
-      "duration": 4,
-      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.573Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.961Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/coreReporter.spec/should_have_caseFile_path_for_each_entry.jsonl"
+        "caseFile": "reports/junitIngest.spec/writes_summary_jsonl_file.jsonl"
       }
     },
     {
-      "testName": "should have valid location paths",
+      "testName": "groups events by test case correctly",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.573Z",
+      "location": "/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.961Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/coreReporter.spec/should_have_valid_location_paths.jsonl"
+        "caseFile": "reports/junitIngest.spec/groups_events_by_test_case_correctly.jsonl"
       }
     },
     {
-      "testName": "should create JSONL file for each test case",
+      "testName": "writes valid JSONL format",
       "status": "pass",
-      "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.573Z",
+      "duration": 3,
+      "location": "/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.961Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/coreReporter.spec/should_create_JSONL_file_for_each_test_case.jsonl"
+        "caseFile": "reports/junitIngest.spec/writes_valid_JSONL_format.jsonl"
       }
     },
     {
-      "testName": "should organize case files in suite directories",
+      "testName": "processes simple passing tests from parsing to output",
       "status": "pass",
-      "duration": 3,
-      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.573Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.961Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/coreReporter.spec/should_organize_case_files_in_suite_directories.jsonl"
+        "caseFile": "reports/junitIngest.spec/processes_simple_passing_tests_from_parsing_to_output.jsonl"
       }
     },
     {
-      "testName": "should contain valid JSONL format",
+      "testName": "processes tests with failures and errors",
       "status": "pass",
-      "duration": 3,
-      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.573Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.961Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/coreReporter.spec/should_contain_valid_JSONL_format.jsonl"
+        "caseFile": "reports/junitIngest.spec/processes_tests_with_failures_and_errors.jsonl"
       }
     },
     {
-      "testName": "should include case.begin event",
+      "testName": "processes tests with skipped tests",
       "status": "pass",
       "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.573Z",
+      "location": "/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.961Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/coreReporter.spec/should_include_case_begin_event.jsonl"
+        "caseFile": "reports/junitIngest.spec/processes_tests_with_skipped_tests.jsonl"
       }
     },
     {
-      "testName": "should include test.run event",
+      "testName": "processes nested test suites correctly",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.573Z",
+      "location": "/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.961Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/coreReporter.spec/should_include_test_run_event.jsonl"
+        "caseFile": "reports/junitIngest.spec/processes_nested_test_suites_correctly.jsonl"
       }
     },
     {
-      "testName": "should include case.end event with payload",
+      "testName": "should create and compare snapshots with masking",
       "status": "pass",
-      "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.573Z",
+      "duration": 6,
+      "location": "/srv/repos0/mkolbol/tests/golden/sample.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.976Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/coreReporter.spec/should_include_case_end_event_with_payload.jsonl"
+        "caseFile": "reports/sample.spec/should_create_and_compare_snapshots_with_masking.jsonl"
       }
     },
     {
-      "testName": "should have timestamps for all events",
+      "testName": "should detect mismatches",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.574Z",
+      "duration": 3,
+      "location": "/srv/repos0/mkolbol/tests/golden/sample.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.976Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/coreReporter.spec/should_have_timestamps_for_all_events.jsonl"
+        "caseFile": "reports/sample.spec/should_detect_mismatches.jsonl"
       }
     },
     {
-      "testName": "should have chronological timestamps",
+      "testName": "should support custom mask rules",
       "status": "pass",
-      "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.574Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/golden/sample.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.976Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/coreReporter.spec/should_have_chronological_timestamps.jsonl"
+        "caseFile": "reports/sample.spec/should_support_custom_mask_rules.jsonl"
       }
     },
     {
-      "testName": "should include test.error events for failed tests",
+      "testName": "initialize",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.574Z",
+      "duration": 3,
+      "location": "/srv/repos0/mkolbol/archived/mcp-kernel/tests/router.test.ts:0",
+      "timestamp": "2025-10-12T21:07:49.977Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/coreReporter.spec/should_include_test_error_events_for_failed_tests.jsonl"
+        "caseFile": "reports/router.test/initialize.jsonl"
       }
     },
     {
-      "testName": "should have error-level log for case.end of failed tests",
+      "testName": "tools/resources list read",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.574Z",
+      "location": "/srv/repos0/mkolbol/archived/mcp-kernel/tests/router.test.ts:0",
+      "timestamp": "2025-10-12T21:07:49.977Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/coreReporter.spec/should_have_error-level_log_for_case_end_of_failed_tests.jsonl"
+        "caseFile": "reports/router.test/tools_resources_list_read.jsonl"
       }
     },
     {
-      "testName": "should have summary.jsonl file",
+      "testName": "generates consistent fingerprint for same failures",
       "status": "pass",
-      "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.574Z",
+      "duration": 8,
+      "location": "/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.989Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/coreReporter.spec/should_have_summary_jsonl_file.jsonl"
+        "caseFile": "reports/trends.spec/generates_consistent_fingerprint_for_same_failures.jsonl"
       }
     },
     {
-      "testName": "should have matching test count between index and summary",
-      "status": "fail",
-      "duration": 9,
-      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.575Z",
+      "testName": "generates different fingerprints for different test names",
+      "status": "pass",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.989Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/coreReporter.spec/should_have_matching_test_count_between_index_and_summary.jsonl"
+        "caseFile": "reports/trends.spec/generates_different_fingerprints_for_different_test_names.jsonl"
       }
     },
     {
-      "testName": "should have valid JSONL in summary file",
+      "testName": "generates different fingerprints for different error types",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.575Z",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.989Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/coreReporter.spec/should_have_valid_JSONL_in_summary_file.jsonl"
+        "caseFile": "reports/trends.spec/generates_different_fingerprints_for_different_error_types.jsonl"
       }
     },
     {
-      "testName": "should cross-reference between index and case files",
+      "testName": "generates different fingerprints for different stack locations",
       "status": "pass",
-      "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.575Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.989Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/coreReporter.spec/should_cross-reference_between_index_and_case_files.jsonl"
+        "caseFile": "reports/trends.spec/generates_different_fingerprints_for_different_stack_locations.jsonl"
       }
     },
     {
-      "testName": "should have case name in JSONL events matching test name",
+      "testName": "generates fingerprint from test name only when no error details",
       "status": "pass",
       "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.575Z",
+      "location": "/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.989Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/coreReporter.spec/should_have_case_name_in_JSONL_events_matching_test_name.jsonl"
+        "caseFile": "reports/trends.spec/generates_fingerprint_from_test_name_only_when_no_error_details.jsonl"
       }
     },
     {
-      "testName": "should handle test names with special characters",
+      "testName": "extracts error type from error message",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.575Z",
+      "location": "/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.990Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/coreReporter.spec/should_handle_test_names_with_special_characters.jsonl"
+        "caseFile": "reports/trends.spec/extracts_error_type_from_error_message.jsonl"
       }
     },
     {
-      "testName": "should have unique case file paths",
+      "testName": "extracts stack location from payload",
       "status": "pass",
       "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.575Z",
+      "location": "/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.990Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/coreReporter.spec/should_have_unique_case_file_paths.jsonl"
+        "caseFile": "reports/trends.spec/extracts_stack_location_from_payload.jsonl"
       }
     },
     {
-      "testName": "should have all case files in reports directory",
+      "testName": "extracts error name from payload",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.575Z",
+      "location": "/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.990Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/coreReporter.spec/should_have_all_case_files_in_reports_directory.jsonl"
+        "caseFile": "reports/trends.spec/extracts_error_name_from_payload.jsonl"
       }
     },
     {
-      "testName": "should have consistent status values",
+      "testName": "handles payload with parenthesis-style stack format",
       "status": "pass",
-      "duration": 4,
-      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.576Z",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.990Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/coreReporter.spec/should_have_consistent_status_values.jsonl"
+        "caseFile": "reports/trends.spec/handles_payload_with_parenthesis-style_stack_format.jsonl"
       }
     },
     {
-      "testName": "connect moves data 1:1",
+      "testName": "handles missing error details gracefully",
       "status": "pass",
-      "duration": 5,
-      "location": "/srv/repos0/mkolbol/tests/kernel/kernel.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.586Z",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.990Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/kernel.spec/connect_moves_data_1_1.jsonl"
+        "caseFile": "reports/trends.spec/handles_missing_error_details_gracefully.jsonl"
       }
     },
     {
-      "testName": "split fans out to multiple destinations",
+      "testName": "creates valid history entry from test result",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/kernel/kernel.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.586Z",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.990Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/kernel.spec/split_fans_out_to_multiple_destinations.jsonl"
+        "caseFile": "reports/trends.spec/creates_valid_history_entry_from_test_result.jsonl"
       }
     },
     {
-      "testName": "merge combines multiple sources into one destination",
+      "testName": "appends entries to history",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/kernel/kernel.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.586Z",
-      "artifacts": {
-        "summary": "reports/summary.jsonl",
-        "caseFile": "reports/kernel.spec/merge_combines_multiple_sources_into_one_destination.jsonl"
-      }
-    },
-    {
-      "testName": "register/lookup filters by capabilities",
-      "status": "pass",
-      "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/kernel/kernel.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.587Z",
+      "location": "/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.991Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/kernel.spec/register_lookup_filters_by_capabilities.jsonl"
+        "caseFile": "reports/trends.spec/appends_entries_to_history.jsonl"
       }
     },
     {
-      "testName": "returns false when module is not enabled",
+      "testName": "calculates failure rate from history",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.587Z",
+      "location": "/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.991Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/debug-api.spec/returns_false_when_module_is_not_enabled.jsonl"
+        "caseFile": "reports/trends.spec/calculates_failure_rate_from_history.jsonl"
       }
     },
     {
-      "testName": "returns consistent value for same module",
+      "testName": "identifies first and last seen timestamps",
       "status": "pass",
       "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.587Z",
+      "location": "/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.991Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/debug-api.spec/returns_consistent_value_for_same_module.jsonl"
+        "caseFile": "reports/trends.spec/identifies_first_and_last_seen_timestamps.jsonl"
       }
     },
     {
-      "testName": "returns false when config is disabled",
+      "testName": "tracks trend over time windows",
       "status": "pass",
-      "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.587Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.991Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/debug-api.spec/returns_false_when_config_is_disabled.jsonl"
+        "caseFile": "reports/trends.spec/tracks_trend_over_time_windows.jsonl"
       }
     },
     {
-      "testName": "checks module against config.modules when enabled",
+      "testName": "ranks failures by frequency",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.587Z",
+      "location": "/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.991Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/debug-api.spec/checks_module_against_config_modules_when_enabled.jsonl"
+        "caseFile": "reports/trends.spec/ranks_failures_by_frequency.jsonl"
       }
     },
     {
-      "testName": "does not emit when on() returns false",
+      "testName": "ranks by failure rate when frequency is similar",
       "status": "pass",
       "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.587Z",
+      "location": "/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.991Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/debug-api.spec/does_not_emit_when_on___returns_false.jsonl"
+        "caseFile": "reports/trends.spec/ranks_by_failure_rate_when_frequency_is_similar.jsonl"
       }
     },
     {
-      "testName": "emit returns immediately when module is disabled",
+      "testName": "combines frequency and rate for top offender score",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.587Z",
+      "location": "/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.992Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/debug-api.spec/emit_returns_immediately_when_module_is_disabled.jsonl"
+        "caseFile": "reports/trends.spec/combines_frequency_and_rate_for_top_offender_score.jsonl"
       }
     },
     {
-      "testName": "shouldEmit returns false when module is disabled",
+      "testName": "filters history by date range",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.588Z",
+      "location": "/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.992Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/debug-api.spec/shouldEmit_returns_false_when_module_is_disabled.jsonl"
+        "caseFile": "reports/trends.spec/filters_history_by_date_range.jsonl"
       }
     },
     {
-      "testName": "emits to console when module is enabled",
+      "testName": "filters last N runs",
       "status": "pass",
-      "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.588Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.992Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/debug-api.spec/emits_to_console_when_module_is_enabled.jsonl"
+        "caseFile": "reports/trends.spec/filters_last_N_runs.jsonl"
       }
     },
     {
-      "testName": "respects debug level filtering",
+      "testName": "filters by rolling time window",
       "status": "pass",
-      "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.588Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.992Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/debug-api.spec/respects_debug_level_filtering.jsonl"
+        "caseFile": "reports/trends.spec/filters_by_rolling_time_window.jsonl"
       }
     },
     {
-      "testName": "emits formatted output to console",
+      "testName": "generates fingerprints for Node.js test failures",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.588Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.992Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/debug-api.spec/emits_formatted_output_to_console.jsonl"
+        "caseFile": "reports/trends.spec/generates_fingerprints_for_Node_js_test_failures.jsonl"
       }
     },
     {
-      "testName": "handles emit without payload",
+      "testName": "creates history from Node.js test runs",
       "status": "pass",
-      "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.588Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.993Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/debug-api.spec/handles_emit_without_payload.jsonl"
+        "caseFile": "reports/trends.spec/creates_history_from_Node_js_test_runs.jsonl"
       }
     },
     {
-      "testName": "shouldEmit respects level hierarchy",
+      "testName": "generates fingerprints for Go test failures",
       "status": "pass",
-      "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.588Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.993Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/debug-api.spec/shouldEmit_respects_level_hierarchy.jsonl"
+        "caseFile": "reports/trends.spec/generates_fingerprints_for_Go_test_failures.jsonl"
       }
     },
     {
-      "testName": "generates digest from synthetic logs with failures",
+      "testName": "creates history from Go test runs",
       "status": "pass",
-      "duration": 9,
-      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.614Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.993Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/digest.spec/generates_digest_from_synthetic_logs_with_failures.jsonl"
+        "caseFile": "reports/trends.spec/creates_history_from_Go_test_runs.jsonl"
       }
     },
     {
-      "testName": "returns null for passing tests",
+      "testName": "handles Go panic failures",
       "status": "pass",
-      "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.614Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.993Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/digest.spec/returns_null_for_passing_tests.jsonl"
+        "caseFile": "reports/trends.spec/handles_Go_panic_failures.jsonl"
       }
     },
     {
-      "testName": "returns null when disabled",
+      "testName": "detects new regression from passing to failing",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.614Z",
+      "location": "/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.993Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/digest.spec/returns_null_when_disabled.jsonl"
+        "caseFile": "reports/trends.spec/detects_new_regression_from_passing_to_failing.jsonl"
       }
     },
     {
-      "testName": "includes correct summary statistics",
+      "testName": "identifies flaky tests with intermittent failures",
       "status": "pass",
-      "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.614Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.993Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/digest.spec/includes_correct_summary_statistics.jsonl"
+        "caseFile": "reports/trends.spec/identifies_flaky_tests_with_intermittent_failures.jsonl"
       }
     },
     {
-      "testName": "writes valid JSON file",
+      "testName": "tracks recovery from failures",
       "status": "pass",
-      "duration": 4,
-      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.614Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.994Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/digest.spec/writes_valid_JSON_file.jsonl"
+        "caseFile": "reports/trends.spec/tracks_recovery_from_failures.jsonl"
       }
     },
     {
-      "testName": "writes valid markdown file",
+      "testName": "analyzes complex multi-test multi-run scenario",
       "status": "pass",
-      "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.614Z",
+      "duration": 3,
+      "location": "/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:49.994Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/digest.spec/writes_valid_markdown_file.jsonl"
+        "caseFile": "reports/trends.spec/analyzes_complex_multi-test_multi-run_scenario.jsonl"
       }
     },
     {
-      "testName": "includes events matching error level",
+      "testName": "should parse regular characters",
       "status": "pass",
-      "duration": 4,
-      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.615Z",
+      "duration": 6,
+      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.009Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/digest.spec/includes_events_matching_error_level.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_parse_regular_characters.jsonl"
       }
     },
     {
-      "testName": "includes events matching specific event name",
+      "testName": "should handle newlines",
       "status": "pass",
-      "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.615Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.009Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/digest.spec/includes_events_matching_specific_event_name.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_newlines.jsonl"
       }
     },
     {
-      "testName": "applies slice action with window",
+      "testName": "should handle carriage return",
       "status": "pass",
-      "duration": 3,
-      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.615Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.009Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/digest.spec/applies_slice_action_with_window.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_carriage_return.jsonl"
       }
     },
     {
-      "testName": "applies redact action to fields",
+      "testName": "should parse ANSI cursor movement (CUP)",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.615Z",
+      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.009Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/digest.spec/applies_redact_action_to_fields.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_parse_ANSI_cursor_movement__CUP_.jsonl"
       }
     },
     {
-      "testName": "respects priority order",
+      "testName": "should handle color codes (SGR)",
       "status": "pass",
-      "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.615Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.010Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/digest.spec/respects_priority_order.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_color_codes__SGR_.jsonl"
       }
     },
     {
-      "testName": "supports wildcard patterns in event matching",
+      "testName": "should handle color reset",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.615Z",
+      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.010Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/digest.spec/supports_wildcard_patterns_in_event_matching.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_color_reset.jsonl"
       }
     },
     {
-      "testName": "supports multiple match criteria",
+      "testName": "should handle screen clearing (ED)",
       "status": "pass",
-      "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.615Z",
+      "duration": 41,
+      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.010Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/digest.spec/supports_multiple_match_criteria.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_screen_clearing__ED_.jsonl"
       }
     },
     {
-      "testName": "enforces byte budget",
+      "testName": "should handle line clearing (EL)",
       "status": "pass",
-      "duration": 9,
-      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.615Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.010Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/digest.spec/enforces_byte_budget.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_line_clearing__EL_.jsonl"
       }
     },
     {
-      "testName": "enforces line budget",
+      "testName": "should handle cursor up (CUU)",
       "status": "pass",
-      "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.616Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.010Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/digest.spec/enforces_line_budget.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_cursor_up__CUU_.jsonl"
       }
     },
     {
-      "testName": "keeps all events when within budget",
+      "testName": "should handle cursor down (CUD)",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.616Z",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.010Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/digest.spec/keeps_all_events_when_within_budget.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_cursor_down__CUD_.jsonl"
       }
     },
     {
-      "testName": "identifies error-level events as suspects",
+      "testName": "should handle cursor forward (CUF)",
       "status": "pass",
-      "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.616Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.011Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/digest.spec/identifies_error-level_events_as_suspects.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_cursor_forward__CUF_.jsonl"
       }
     },
     {
-      "testName": "scores failure events",
+      "testName": "should handle cursor back (CUB)",
       "status": "pass",
-      "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.616Z",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.011Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/digest.spec/scores_failure_events.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_cursor_back__CUB_.jsonl"
       }
     },
     {
-      "testName": "scores correlated events",
+      "testName": "should handle line wrapping",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.616Z",
+      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.011Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/digest.spec/scores_correlated_events.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_line_wrapping.jsonl"
       }
     },
     {
-      "testName": "scores events close to failure time",
+      "testName": "should handle scrolling",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.616Z",
+      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.011Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/digest.spec/scores_events_close_to_failure_time.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_scrolling.jsonl"
       }
     },
     {
-      "testName": "limits suspects to top 5",
+      "testName": "should handle tabs",
       "status": "pass",
-      "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.616Z",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.011Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/digest.spec/limits_suspects_to_top_5.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_tabs.jsonl"
       }
     },
     {
-      "testName": "returns empty suspects for no failure events",
+      "testName": "should handle backspace",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.617Z",
+      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.011Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/digest.spec/returns_empty_suspects_for_no_failure_events.jsonl"
+        "caseFile": "reports/ansiParser.spec/should_handle_backspace.jsonl"
       }
     },
     {
-      "testName": "handles empty log file",
-      "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.617Z",
+      "testName": "redacts JWT tokens in payload",
+      "status": "fail",
+      "duration": 26,
+      "location": "/srv/repos0/mkolbol/tests/digest/redaction.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.012Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/digest.spec/handles_empty_log_file.jsonl"
+        "caseFile": "reports/redaction.spec/redacts_JWT_tokens_in_payload.jsonl"
       }
     },
     {
-      "testName": "handles missing log file",
-      "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.617Z",
+      "testName": "redacts JWT tokens in string fields",
+      "status": "fail",
+      "duration": 3,
+      "location": "/srv/repos0/mkolbol/tests/digest/redaction.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.012Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/digest.spec/handles_missing_log_file.jsonl"
+        "caseFile": "reports/redaction.spec/redacts_JWT_tokens_in_string_fields.jsonl"
       }
     },
     {
-      "testName": "skips malformed JSON lines",
-      "status": "pass",
+      "testName": "redacts AWS access keys",
+      "status": "fail",
       "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.617Z",
+      "location": "/srv/repos0/mkolbol/tests/digest/redaction.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.012Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/digest.spec/skips_malformed_JSON_lines.jsonl"
+        "caseFile": "reports/redaction.spec/redacts_AWS_access_keys.jsonl"
       }
     },
     {
-      "testName": "handles events without optional fields",
-      "status": "pass",
-      "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.617Z",
+      "testName": "redacts AWS secret keys",
+      "status": "fail",
+      "duration": 3,
+      "location": "/srv/repos0/mkolbol/tests/digest/redaction.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.012Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/digest.spec/handles_events_without_optional_fields.jsonl"
+        "caseFile": "reports/redaction.spec/redacts_AWS_secret_keys.jsonl"
       }
     },
     {
-      "testName": "processes ingested Go test failures transparently",
-      "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.617Z",
+      "testName": "redacts API keys",
+      "status": "fail",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/redaction.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.012Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/digest.spec/processes_ingested_Go_test_failures_transparently.jsonl"
+        "caseFile": "reports/redaction.spec/redacts_API_keys.jsonl"
       }
     },
     {
-      "testName": "recognizes Go test.fail events in rules",
-      "status": "pass",
+      "testName": "redacts credentials from URLs",
+      "status": "fail",
       "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.617Z",
+      "location": "/srv/repos0/mkolbol/tests/digest/redaction.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.012Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/digest.spec/recognizes_Go_test_fail_events_in_rules.jsonl"
+        "caseFile": "reports/redaction.spec/redacts_credentials_from_URLs.jsonl"
       }
     },
     {
-      "testName": "calculates 100% stability for always-passing tests",
-      "status": "pass",
-      "duration": 4,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.618Z",
+      "testName": "redacts RSA private keys",
+      "status": "fail",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/redaction.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.013Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/calculates_100__stability_for_always-passing_tests.jsonl"
+        "caseFile": "reports/redaction.spec/redacts_RSA_private_keys.jsonl"
       }
     },
     {
-      "testName": "calculates 0% stability for always-failing tests",
+      "testName": "respects optOut flag",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.618Z",
+      "duration": 3,
+      "location": "/srv/repos0/mkolbol/tests/digest/redaction.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.013Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/calculates_0__stability_for_always-failing_tests.jsonl"
+        "caseFile": "reports/redaction.spec/respects_optOut_flag.jsonl"
       }
     },
     {
-      "testName": "calculates partial stability for flaky tests",
+      "testName": "respects secrets=false flag",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.618Z",
+      "location": "/srv/repos0/mkolbol/tests/digest/redaction.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.013Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/calculates_partial_stability_for_flaky_tests.jsonl"
+        "caseFile": "reports/redaction.spec/respects_secrets_false_flag.jsonl"
       }
     },
     {
-      "testName": "classifies test as stable when score is 100",
+      "testName": "respects enabled=false flag",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.618Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/redaction.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.013Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/classifies_test_as_stable_when_score_is_100.jsonl"
+        "caseFile": "reports/redaction.spec/respects_enabled_false_flag.jsonl"
       }
     },
     {
-      "testName": "classifies test as flaky when score is between 0 and 100",
-      "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.618Z",
+      "testName": "redacts secrets in nested objects",
+      "status": "fail",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/redaction.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.013Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/classifies_test_as_flaky_when_score_is_between_0_and_100.jsonl"
+        "caseFile": "reports/redaction.spec/redacts_secrets_in_nested_objects.jsonl"
       }
     },
     {
-      "testName": "classifies test as always-fail when score is 0",
-      "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.618Z",
+      "testName": "redacts secrets in arrays",
+      "status": "fail",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/redaction.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.013Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/classifies_test_as_always-fail_when_score_is_0.jsonl"
+        "caseFile": "reports/redaction.spec/redacts_secrets_in_arrays.jsonl"
       }
     },
     {
-      "testName": "handles edge case of single run passing",
+      "testName": "round-trip a control frame",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.618Z",
+      "duration": 14,
+      "location": "/srv/repos0/mkolbol/tests/worker/workerAdapters.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.014Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/handles_edge_case_of_single_run_passing.jsonl"
+        "caseFile": "reports/workerAdapters.spec/round-trip_a_control_frame.jsonl"
       }
     },
     {
-      "testName": "handles edge case of single run failing",
+      "testName": "round-trip a Buffer",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.619Z",
+      "duration": 5,
+      "location": "/srv/repos0/mkolbol/tests/worker/workerAdapters.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.014Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/handles_edge_case_of_single_run_failing.jsonl"
+        "caseFile": "reports/workerAdapters.spec/round-trip_a_Buffer.jsonl"
       }
     },
     {
-      "testName": "calculates correct score for 1 pass out of 10 runs",
+      "testName": "assert handshake event structure",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.619Z",
+      "duration": 3,
+      "location": "/srv/repos0/mkolbol/tests/worker/workerAdapters.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.014Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/calculates_correct_score_for_1_pass_out_of_10_runs.jsonl"
+        "caseFile": "reports/workerAdapters.spec/assert_handshake_event_structure.jsonl"
       }
     },
     {
-      "testName": "calculates correct score for 9 passes out of 10 runs",
+      "testName": "detects identical digests (no diff)",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.619Z",
+      "duration": 12,
+      "location": "/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.042Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/calculates_correct_score_for_9_passes_out_of_10_runs.jsonl"
+        "caseFile": "reports/diff.spec/detects_identical_digests__no_diff_.jsonl"
       }
     },
     {
-      "testName": "tracks multiple tests independently",
+      "testName": "detects added events in new digest",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.619Z",
+      "duration": 4,
+      "location": "/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.042Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/tracks_multiple_tests_independently.jsonl"
+        "caseFile": "reports/diff.spec/detects_added_events_in_new_digest.jsonl"
       }
     },
     {
-      "testName": "increments run counts correctly",
+      "testName": "detects removed events from old digest",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.619Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.042Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/increments_run_counts_correctly.jsonl"
+        "caseFile": "reports/diff.spec/detects_removed_events_from_old_digest.jsonl"
       }
     },
     {
-      "testName": "sorts tests by score ascending (flakiest first)",
+      "testName": "detects changed suspects (score changes)",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.619Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.043Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/sorts_tests_by_score_ascending__flakiest_first_.jsonl"
+        "caseFile": "reports/diff.spec/detects_changed_suspects__score_changes_.jsonl"
       }
     },
     {
-      "testName": "filters stable tests correctly",
+      "testName": "detects changed codeframes",
       "status": "pass",
-      "duration": 4,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.619Z",
+      "duration": 3,
+      "location": "/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.043Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/filters_stable_tests_correctly.jsonl"
+        "caseFile": "reports/diff.spec/detects_changed_codeframes.jsonl"
       }
     },
     {
-      "testName": "filters flaky tests correctly",
+      "testName": "detects mixed changes (events, suspects, codeframes)",
       "status": "pass",
       "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.620Z",
+      "location": "/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.043Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/filters_flaky_tests_correctly.jsonl"
+        "caseFile": "reports/diff.spec/detects_mixed_changes__events__suspects__codeframes_.jsonl"
       }
     },
     {
-      "testName": "filters always-fail tests correctly",
+      "testName": "tracks metadata changes (duration, location, error)",
       "status": "pass",
       "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.620Z",
+      "location": "/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.043Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/filters_always-fail_tests_correctly.jsonl"
+        "caseFile": "reports/diff.spec/tracks_metadata_changes__duration__location__error_.jsonl"
       }
     },
     {
-      "testName": "captures test seed in artifact",
+      "testName": "calculates duration delta correctly",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.620Z",
+      "location": "/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.043Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/captures_test_seed_in_artifact.jsonl"
+        "caseFile": "reports/diff.spec/calculates_duration_delta_correctly.jsonl"
       }
     },
     {
-      "testName": "captures environment variables in artifact",
+      "testName": "diffs Go test digests correctly",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.620Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.043Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/captures_environment_variables_in_artifact.jsonl"
+        "caseFile": "reports/diff.spec/diffs_Go_test_digests_correctly.jsonl"
       }
     },
     {
-      "testName": "stores platform information in artifact",
+      "testName": "handles Go test event structure",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.620Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.044Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/stores_platform_information_in_artifact.jsonl"
+        "caseFile": "reports/diff.spec/handles_Go_test_event_structure.jsonl"
       }
     },
     {
-      "testName": "uses fixed seed for deterministic flake detection",
+      "testName": "generates valid JSON output",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.637Z",
+      "duration": 4,
+      "location": "/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.044Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/uses_fixed_seed_for_deterministic_flake_detection.jsonl"
+        "caseFile": "reports/diff.spec/generates_valid_JSON_output.jsonl"
       }
     },
     {
-      "testName": "includes seed in multiple runs for reproducibility",
+      "testName": "generates readable markdown output",
       "status": "pass",
       "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.638Z",
+      "location": "/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.044Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/includes_seed_in_multiple_runs_for_reproducibility.jsonl"
+        "caseFile": "reports/diff.spec/generates_readable_markdown_output.jsonl"
       }
     },
     {
-      "testName": "captures relevant environment variables only",
+      "testName": "writes diff to file in JSON format",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.638Z",
+      "location": "/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.044Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/captures_relevant_environment_variables_only.jsonl"
+        "caseFile": "reports/diff.spec/writes_diff_to_file_in_JSON_format.jsonl"
       }
     },
     {
-      "testName": "parses Node.js stack trace format",
+      "testName": "writes diff to file in markdown format",
       "status": "pass",
-      "duration": 3,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.639Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.044Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/parses_Node_js_stack_trace_format.jsonl"
+        "caseFile": "reports/diff.spec/writes_diff_to_file_in_markdown_format.jsonl"
       }
     },
     {
-      "testName": "parses V8 stack trace without function names",
+      "testName": "performs diff and writes output",
       "status": "pass",
       "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.639Z",
-      "artifacts": {
-        "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/parses_V8_stack_trace_without_function_names.jsonl"
-      }
-    },
-    {
-      "testName": "parses Firefox-style stack traces",
-      "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.639Z",
+      "location": "/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.045Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/parses_Firefox-style_stack_traces.jsonl"
+        "caseFile": "reports/diff.spec/performs_diff_and_writes_output.jsonl"
       }
     },
     {
-      "testName": "handles empty stack traces",
+      "testName": "works without output file",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.639Z",
+      "location": "/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.045Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/handles_empty_stack_traces.jsonl"
+        "caseFile": "reports/diff.spec/works_without_output_file.jsonl"
       }
     },
     {
-      "testName": "skips unparseable lines",
+      "testName": "handles digests with no suspects",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.640Z",
+      "location": "/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.045Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/skips_unparseable_lines.jsonl"
+        "caseFile": "reports/diff.spec/handles_digests_with_no_suspects.jsonl"
       }
     },
     {
-      "testName": "extracts file path correctly",
+      "testName": "handles digests with no codeframes",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.640Z",
+      "location": "/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.045Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/extracts_file_path_correctly.jsonl"
+        "caseFile": "reports/diff.spec/handles_digests_with_no_codeframes.jsonl"
       }
     },
     {
-      "testName": "extracts line and column numbers as integers",
-      "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.640Z",
+      "testName": "includes seed and environment information",
+      "status": "fail",
+      "duration": 13,
+      "location": "/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.045Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/extracts_line_and_column_numbers_as_integers.jsonl"
+        "caseFile": "reports/diff.spec/includes_seed_and_environment_information.jsonl"
       }
     },
     {
-      "testName": "extracts code frame with context lines",
-      "status": "pass",
+      "testName": "includes minimal logs (not full logs)",
+      "status": "fail",
       "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.640Z",
+      "location": "/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.046Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/extracts_code_frame_with_context_lines.jsonl"
+        "caseFile": "reports/diff.spec/includes_minimal_logs__not_full_logs_.jsonl"
       }
     },
     {
-      "testName": "handles first line of file",
-      "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.640Z",
+      "testName": "includes valid reproduction commands",
+      "status": "fail",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.046Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/handles_first_line_of_file.jsonl"
+        "caseFile": "reports/diff.spec/includes_valid_reproduction_commands.jsonl"
       }
     },
     {
-      "testName": "handles last line of file",
-      "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.641Z",
+      "testName": "includes complete metadata",
+      "status": "fail",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.046Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/handles_last_line_of_file.jsonl"
+        "caseFile": "reports/diff.spec/includes_complete_metadata.jsonl"
       }
     },
     {
-      "testName": "returns null for non-existent file",
-      "status": "pass",
+      "testName": "creates both JSON and markdown outputs",
+      "status": "fail",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.641Z",
+      "location": "/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.046Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/returns_null_for_non-existent_file.jsonl"
+        "caseFile": "reports/diff.spec/creates_both_JSON_and_markdown_outputs.jsonl"
       }
     },
     {
-      "testName": "returns null for line number out of range",
-      "status": "pass",
-      "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.641Z",
+      "testName": "handles Go test case bundles",
+      "status": "fail",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.046Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/returns_null_for_line_number_out_of_range.jsonl"
+        "caseFile": "reports/diff.spec/handles_Go_test_case_bundles.jsonl"
       }
     },
     {
-      "testName": "includes correct line numbers in source array",
-      "status": "pass",
+      "testName": "extracts Go test phase information",
+      "status": "fail",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.641Z",
+      "location": "/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.047Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/includes_correct_line_numbers_in_source_array.jsonl"
+        "caseFile": "reports/diff.spec/extracts_Go_test_phase_information.jsonl"
       }
     },
     {
-      "testName": "resolves .ts file when .js.map exists",
-      "status": "pass",
+      "testName": "handles missing artifact file gracefully",
+      "status": "fail",
       "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.641Z",
+      "location": "/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.047Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/resolves__ts_file_when__js_map_exists.jsonl"
+        "caseFile": "reports/diff.spec/handles_missing_artifact_file_gracefully.jsonl"
       }
     },
     {
-      "testName": "falls back to .ts file if sourcemap does not exist",
-      "status": "pass",
+      "testName": "handles case with no seed in events",
+      "status": "fail",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.642Z",
+      "location": "/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.047Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/falls_back_to__ts_file_if_sourcemap_does_not_exist.jsonl"
+        "caseFile": "reports/diff.spec/handles_case_with_no_seed_in_events.jsonl"
       }
     },
     {
-      "testName": "returns original file if neither sourcemap nor .ts exists",
+      "testName": "generates digest from synthetic logs with failures",
       "status": "pass",
-      "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.642Z",
+      "duration": 9,
+      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.047Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/returns_original_file_if_neither_sourcemap_nor__ts_exists.jsonl"
+        "caseFile": "reports/digest.spec/generates_digest_from_synthetic_logs_with_failures.jsonl"
       }
     },
     {
-      "testName": "caches sourcemap for repeated access",
+      "testName": "returns null for passing tests",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.651Z",
+      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.047Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/caches_sourcemap_for_repeated_access.jsonl"
+        "caseFile": "reports/digest.spec/returns_null_for_passing_tests.jsonl"
       }
     },
     {
-      "testName": "formats code frame with line numbers",
+      "testName": "returns null when disabled",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.651Z",
+      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.048Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/formats_code_frame_with_line_numbers.jsonl"
+        "caseFile": "reports/digest.spec/returns_null_when_disabled.jsonl"
       }
     },
     {
-      "testName": "includes column indicator when column is specified",
+      "testName": "includes correct summary statistics",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.652Z",
+      "duration": 3,
+      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.048Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/includes_column_indicator_when_column_is_specified.jsonl"
+        "caseFile": "reports/digest.spec/includes_correct_summary_statistics.jsonl"
       }
     },
     {
-      "testName": "omits column indicator when column is not specified",
+      "testName": "writes valid JSON file",
       "status": "pass",
-      "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.652Z",
+      "duration": 3,
+      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.048Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/omits_column_indicator_when_column_is_not_specified.jsonl"
+        "caseFile": "reports/digest.spec/writes_valid_JSON_file.jsonl"
       }
     },
     {
-      "testName": "pads line numbers correctly",
+      "testName": "writes valid markdown file",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.652Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.048Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/pads_line_numbers_correctly.jsonl"
+        "caseFile": "reports/digest.spec/writes_valid_markdown_file.jsonl"
       }
     },
     {
-      "testName": "extracts code frames from stack trace",
+      "testName": "includes events matching error level",
       "status": "pass",
-      "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.652Z",
+      "duration": 4,
+      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.048Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/extracts_code_frames_from_stack_trace.jsonl"
+        "caseFile": "reports/digest.spec/includes_events_matching_error_level.jsonl"
       }
     },
     {
-      "testName": "limits to maximum 3 code frames",
+      "testName": "includes events matching specific event name",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.653Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.048Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/limits_to_maximum_3_code_frames.jsonl"
+        "caseFile": "reports/digest.spec/includes_events_matching_specific_event_name.jsonl"
       }
     },
     {
-      "testName": "skips frames without file or line information",
+      "testName": "applies slice action with window",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.653Z",
+      "duration": 4,
+      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.049Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/skips_frames_without_file_or_line_information.jsonl"
+        "caseFile": "reports/digest.spec/applies_slice_action_with_window.jsonl"
       }
     },
     {
-      "testName": "limits number of code frames to 5",
+      "testName": "applies redact action to fields",
       "status": "pass",
-      "duration": 3,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.653Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.049Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/limits_number_of_code_frames_to_5.jsonl"
+        "caseFile": "reports/digest.spec/applies_redact_action_to_fields.jsonl"
       }
     },
     {
-      "testName": "includes code frames in budget calculation",
+      "testName": "respects priority order",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.653Z",
+      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.049Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/includes_code_frames_in_budget_calculation.jsonl"
+        "caseFile": "reports/digest.spec/respects_priority_order.jsonl"
       }
     },
     {
-      "testName": "extracts code frames only when configured",
+      "testName": "supports wildcard patterns in event matching",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.653Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.049Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/extracts_code_frames_only_when_configured.jsonl"
+        "caseFile": "reports/digest.spec/supports_wildcard_patterns_in_event_matching.jsonl"
       }
     },
     {
-      "testName": "extracts code frames only from error events with stack",
+      "testName": "supports multiple match criteria",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.654Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.065Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/extracts_code_frames_only_from_error_events_with_stack.jsonl"
+        "caseFile": "reports/digest.spec/supports_multiple_match_criteria.jsonl"
       }
     },
     {
-      "testName": "respects context lines configuration in codeframe action",
+      "testName": "enforces byte budget",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.654Z",
+      "duration": 8,
+      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.066Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/flakeAndFrames.spec/respects_context_lines_configuration_in_codeframe_action.jsonl"
+        "caseFile": "reports/digest.spec/enforces_byte_budget.jsonl"
       }
     },
     {
-      "testName": "should parse regular characters",
+      "testName": "enforces line budget",
       "status": "pass",
-      "duration": 4,
-      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.654Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.067Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_parse_regular_characters.jsonl"
+        "caseFile": "reports/digest.spec/enforces_line_budget.jsonl"
       }
     },
     {
-      "testName": "should handle newlines",
+      "testName": "keeps all events when within budget",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.654Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.067Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_newlines.jsonl"
+        "caseFile": "reports/digest.spec/keeps_all_events_when_within_budget.jsonl"
       }
     },
     {
-      "testName": "should handle carriage return",
+      "testName": "identifies error-level events as suspects",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.655Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.067Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_carriage_return.jsonl"
+        "caseFile": "reports/digest.spec/identifies_error-level_events_as_suspects.jsonl"
       }
     },
     {
-      "testName": "should parse ANSI cursor movement (CUP)",
+      "testName": "scores failure events",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.655Z",
+      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.068Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_parse_ANSI_cursor_movement__CUP_.jsonl"
+        "caseFile": "reports/digest.spec/scores_failure_events.jsonl"
       }
     },
     {
-      "testName": "should handle color codes (SGR)",
+      "testName": "scores correlated events",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.655Z",
+      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.068Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_color_codes__SGR_.jsonl"
+        "caseFile": "reports/digest.spec/scores_correlated_events.jsonl"
       }
     },
     {
-      "testName": "should handle color reset",
+      "testName": "scores events close to failure time",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.655Z",
+      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.068Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_color_reset.jsonl"
+        "caseFile": "reports/digest.spec/scores_events_close_to_failure_time.jsonl"
       }
     },
     {
-      "testName": "should handle screen clearing (ED)",
+      "testName": "limits suspects to top 5",
       "status": "pass",
-      "duration": 45,
-      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.655Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.069Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_screen_clearing__ED_.jsonl"
+        "caseFile": "reports/digest.spec/limits_suspects_to_top_5.jsonl"
       }
     },
     {
-      "testName": "should handle line clearing (EL)",
+      "testName": "returns empty suspects for no failure events",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.655Z",
+      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.069Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_line_clearing__EL_.jsonl"
+        "caseFile": "reports/digest.spec/returns_empty_suspects_for_no_failure_events.jsonl"
       }
     },
     {
-      "testName": "should handle cursor up (CUU)",
+      "testName": "handles empty log file",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.655Z",
+      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.070Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_cursor_up__CUU_.jsonl"
+        "caseFile": "reports/digest.spec/handles_empty_log_file.jsonl"
       }
     },
     {
-      "testName": "should handle cursor down (CUD)",
+      "testName": "handles missing log file",
       "status": "pass",
       "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.656Z",
+      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.070Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_cursor_down__CUD_.jsonl"
+        "caseFile": "reports/digest.spec/handles_missing_log_file.jsonl"
       }
     },
     {
-      "testName": "should handle cursor forward (CUF)",
+      "testName": "skips malformed JSON lines",
       "status": "pass",
-      "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.664Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.070Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_cursor_forward__CUF_.jsonl"
+        "caseFile": "reports/digest.spec/skips_malformed_JSON_lines.jsonl"
       }
     },
     {
-      "testName": "should handle cursor back (CUB)",
+      "testName": "handles events without optional fields",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.665Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.071Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_cursor_back__CUB_.jsonl"
+        "caseFile": "reports/digest.spec/handles_events_without_optional_fields.jsonl"
       }
     },
     {
-      "testName": "should handle line wrapping",
+      "testName": "processes ingested Go test failures transparently",
       "status": "pass",
-      "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.665Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.071Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_line_wrapping.jsonl"
+        "caseFile": "reports/digest.spec/processes_ingested_Go_test_failures_transparently.jsonl"
       }
     },
     {
-      "testName": "should handle scrolling",
+      "testName": "recognizes Go test.fail events in rules",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.665Z",
+      "location": "/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.071Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_scrolling.jsonl"
+        "caseFile": "reports/digest.spec/recognizes_Go_test_fail_events_in_rules.jsonl"
       }
     },
     {
-      "testName": "should handle tabs",
+      "testName": "captures error events",
       "status": "pass",
-      "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.666Z",
+      "duration": 10,
+      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.072Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_tabs.jsonl"
+        "caseFile": "reports/rulepacks.spec/captures_error_events.jsonl"
       }
     },
     {
-      "testName": "should handle backspace",
+      "testName": "captures assertion failures",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.666Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.072Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/ansiParser.spec/should_handle_backspace.jsonl"
+        "caseFile": "reports/rulepacks.spec/captures_assertion_failures.jsonl"
       }
     },
     {
-      "testName": "round-trip a control frame",
+      "testName": "captures console output",
       "status": "pass",
-      "duration": 17,
-      "location": "/srv/repos0/mkolbol/tests/worker/workerAdapters.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.666Z",
+      "duration": 3,
+      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.072Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/workerAdapters.spec/round-trip_a_control_frame.jsonl"
+        "caseFile": "reports/rulepacks.spec/captures_console_output.jsonl"
       }
     },
     {
-      "testName": "round-trip a Buffer",
+      "testName": "captures test errors",
       "status": "pass",
-      "duration": 5,
-      "location": "/srv/repos0/mkolbol/tests/worker/workerAdapters.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.666Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.073Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/workerAdapters.spec/round-trip_a_Buffer.jsonl"
+        "caseFile": "reports/rulepacks.spec/captures_test_errors.jsonl"
       }
     },
     {
-      "testName": "assert handshake event structure",
+      "testName": "captures test failures and panics",
       "status": "pass",
-      "duration": 4,
-      "location": "/srv/repos0/mkolbol/tests/worker/workerAdapters.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.667Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.073Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/workerAdapters.spec/assert_handshake_event_structure.jsonl"
+        "caseFile": "reports/rulepacks.spec/captures_test_failures_and_panics.jsonl"
       }
     },
     {
-      "testName": "should render raw ANSI to stdout",
+      "testName": "captures race conditions",
       "status": "pass",
-      "duration": 6,
-      "location": "/srv/repos0/mkolbol/tests/renderers/passthroughRenderer.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.675Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.073Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/passthroughRenderer.spec/should_render_raw_ANSI_to_stdout.jsonl"
+        "caseFile": "reports/rulepacks.spec/captures_race_conditions.jsonl"
       }
     },
     {
-      "testName": "should handle ANSI escape sequences",
+      "testName": "captures test timeouts",
       "status": "pass",
-      "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/renderers/passthroughRenderer.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.675Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.073Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/passthroughRenderer.spec/should_handle_ANSI_escape_sequences.jsonl"
+        "caseFile": "reports/rulepacks.spec/captures_test_timeouts.jsonl"
       }
     },
     {
-      "testName": "adds nodes and emits events",
+      "testName": "merges multiple rules from different sources",
       "status": "pass",
-      "duration": 3,
-      "location": "/srv/repos0/mkolbol/test/state/stateManager.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.676Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.074Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/stateManager.spec/adds_nodes_and_emits_events.jsonl"
+        "caseFile": "reports/rulepacks.spec/merges_multiple_rules_from_different_sources.jsonl"
       }
     },
     {
-      "testName": "connects and emits connected",
+      "testName": "applies higher priority rules first",
       "status": "pass",
-      "duration": 3,
-      "location": "/srv/repos0/mkolbol/test/state/stateManager.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.676Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.074Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/stateManager.spec/connects_and_emits_connected.jsonl"
+        "caseFile": "reports/rulepacks.spec/applies_higher_priority_rules_first.jsonl"
       }
     },
     {
-      "testName": "split and merge emit events",
+      "testName": "overrides pack rules with local high-priority rules",
       "status": "pass",
       "duration": 2,
-      "location": "/srv/repos0/mkolbol/test/state/stateManager.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.676Z",
+      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.074Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/stateManager.spec/split_and_merge_emit_events.jsonl"
+        "caseFile": "reports/rulepacks.spec/overrides_pack_rules_with_local_high-priority_rules.jsonl"
       }
     },
     {
-      "testName": "validator enforces directionality when set",
-      "status": "pass",
+      "testName": "redacts JWT tokens in Node.js test events",
+      "status": "fail",
+      "duration": 15,
+      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.075Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/rulepacks.spec/redacts_JWT_tokens_in_Node_js_test_events.jsonl"
+      }
+    },
+    {
+      "testName": "redacts AWS credentials in test events",
+      "status": "fail",
       "duration": 2,
-      "location": "/srv/repos0/mkolbol/test/state/stateManager.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.676Z",
+      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.075Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/stateManager.spec/validator_enforces_directionality_when_set.jsonl"
+        "caseFile": "reports/rulepacks.spec/redacts_AWS_credentials_in_test_events.jsonl"
       }
     },
     {
-      "testName": "exporters produce strings",
-      "status": "pass",
+      "testName": "redacts API keys in test events",
+      "status": "fail",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.075Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/rulepacks.spec/redacts_API_keys_in_test_events.jsonl"
+      }
+    },
+    {
+      "testName": "redacts URL credentials in test events",
+      "status": "fail",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/test/state/stateManager.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.677Z",
+      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.075Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/stateManager.spec/exporters_produce_strings.jsonl"
+        "caseFile": "reports/rulepacks.spec/redacts_URL_credentials_in_test_events.jsonl"
       }
     },
     {
-      "testName": "should write all data to log file",
-      "status": "pass",
-      "duration": 7,
-      "location": "/srv/repos0/mkolbol/tests/renderers/loggerRenderer.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.685Z",
+      "testName": "redacts private keys in test events",
+      "status": "fail",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.076Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/loggerRenderer.spec/should_write_all_data_to_log_file.jsonl"
+        "caseFile": "reports/rulepacks.spec/redacts_private_keys_in_test_events.jsonl"
       }
     },
     {
-      "testName": "should append to existing log file",
-      "status": "pass",
+      "testName": "redacts secrets in Go test output",
+      "status": "fail",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.076Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/rulepacks.spec/redacts_secrets_in_Go_test_output.jsonl"
+      }
+    },
+    {
+      "testName": "redacts AWS credentials in Go test logs",
+      "status": "fail",
       "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/renderers/loggerRenderer.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.686Z",
+      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.076Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/loggerRenderer.spec/should_append_to_existing_log_file.jsonl"
+        "caseFile": "reports/rulepacks.spec/redacts_AWS_credentials_in_Go_test_logs.jsonl"
       }
     },
     {
-      "testName": "gets rules from existing config",
-      "status": "pass",
-      "duration": 8,
-      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.749Z",
+      "testName": "redacts database URLs in Go test failures",
+      "status": "fail",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.076Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/laminarMcp.spec/gets_rules_from_existing_config.jsonl"
+        "caseFile": "reports/rulepacks.spec/redacts_database_URLs_in_Go_test_failures.jsonl"
       }
     },
     {
-      "testName": "returns empty config when file does not exist",
+      "testName": "respects global optOut flag",
       "status": "pass",
-      "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.750Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.076Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/laminarMcp.spec/returns_empty_config_when_file_does_not_exist.jsonl"
+        "caseFile": "reports/rulepacks.spec/respects_global_optOut_flag.jsonl"
       }
     },
     {
-      "testName": "sets digest rules successfully",
+      "testName": "respects secrets=false flag",
       "status": "pass",
-      "duration": 3,
-      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.750Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.077Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/laminarMcp.spec/sets_digest_rules_successfully.jsonl"
+        "caseFile": "reports/rulepacks.spec/respects_secrets_false_flag.jsonl"
       }
     },
     {
-      "testName": "handles write errors gracefully",
+      "testName": "respects enabled=false flag",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.750Z",
+      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.077Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/laminarMcp.spec/handles_write_errors_gracefully.jsonl"
+        "caseFile": "reports/rulepacks.spec/respects_enabled_false_flag.jsonl"
+      }
+    },
+    {
+      "testName": "detects and redacts all secret types in one event",
+      "status": "fail",
+      "duration": 6,
+      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.077Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/rulepacks.spec/detects_and_redacts_all_secret_types_in_one_event.jsonl"
+      }
+    },
+    {
+      "testName": "redacts multiple occurrences of the same secret type",
+      "status": "fail",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.077Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/rulepacks.spec/redacts_multiple_occurrences_of_the_same_secret_type.jsonl"
+      }
+    },
+    {
+      "testName": "handles nested secrets in complex objects",
+      "status": "fail",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.078Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/rulepacks.spec/handles_nested_secrets_in_complex_objects.jsonl"
+      }
+    },
+    {
+      "testName": "combines rules from node-defaults and custom rules",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.078Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/rulepacks.spec/combines_rules_from_node-defaults_and_custom_rules.jsonl"
+      }
+    },
+    {
+      "testName": "combines rules from go-defaults and custom rules",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.078Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/rulepacks.spec/combines_rules_from_go-defaults_and_custom_rules.jsonl"
+      }
+    },
+    {
+      "testName": "enforces budget after redaction",
+      "status": "fail",
+      "duration": 8,
+      "location": "/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.078Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/rulepacks.spec/enforces_budget_after_redaction.jsonl"
+      }
+    },
+    {
+      "testName": "calculates 100% stability for always-passing tests",
+      "status": "pass",
+      "duration": 5,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.079Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/calculates_100__stability_for_always-passing_tests.jsonl"
+      }
+    },
+    {
+      "testName": "calculates 0% stability for always-failing tests",
+      "status": "pass",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.079Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/calculates_0__stability_for_always-failing_tests.jsonl"
+      }
+    },
+    {
+      "testName": "calculates partial stability for flaky tests",
+      "status": "pass",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.079Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/calculates_partial_stability_for_flaky_tests.jsonl"
+      }
+    },
+    {
+      "testName": "classifies test as stable when score is 100",
+      "status": "pass",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.079Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/classifies_test_as_stable_when_score_is_100.jsonl"
+      }
+    },
+    {
+      "testName": "classifies test as flaky when score is between 0 and 100",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.079Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/classifies_test_as_flaky_when_score_is_between_0_and_100.jsonl"
+      }
+    },
+    {
+      "testName": "classifies test as always-fail when score is 0",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.079Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/classifies_test_as_always-fail_when_score_is_0.jsonl"
+      }
+    },
+    {
+      "testName": "handles edge case of single run passing",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.080Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/handles_edge_case_of_single_run_passing.jsonl"
+      }
+    },
+    {
+      "testName": "handles edge case of single run failing",
+      "status": "pass",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.080Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/handles_edge_case_of_single_run_failing.jsonl"
+      }
+    },
+    {
+      "testName": "calculates correct score for 1 pass out of 10 runs",
+      "status": "pass",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.080Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/calculates_correct_score_for_1_pass_out_of_10_runs.jsonl"
+      }
+    },
+    {
+      "testName": "calculates correct score for 9 passes out of 10 runs",
+      "status": "pass",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.080Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/calculates_correct_score_for_9_passes_out_of_10_runs.jsonl"
+      }
+    },
+    {
+      "testName": "tracks multiple tests independently",
+      "status": "pass",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.080Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/tracks_multiple_tests_independently.jsonl"
+      }
+    },
+    {
+      "testName": "increments run counts correctly",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.081Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/increments_run_counts_correctly.jsonl"
+      }
+    },
+    {
+      "testName": "sorts tests by score ascending (flakiest first)",
+      "status": "pass",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.081Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/sorts_tests_by_score_ascending__flakiest_first_.jsonl"
+      }
+    },
+    {
+      "testName": "filters stable tests correctly",
+      "status": "pass",
+      "duration": 4,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.081Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/filters_stable_tests_correctly.jsonl"
+      }
+    },
+    {
+      "testName": "filters flaky tests correctly",
+      "status": "pass",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.081Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/filters_flaky_tests_correctly.jsonl"
+      }
+    },
+    {
+      "testName": "filters always-fail tests correctly",
+      "status": "pass",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.081Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/filters_always-fail_tests_correctly.jsonl"
+      }
+    },
+    {
+      "testName": "captures test seed in artifact",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.081Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/captures_test_seed_in_artifact.jsonl"
+      }
+    },
+    {
+      "testName": "captures environment variables in artifact",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.082Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/captures_environment_variables_in_artifact.jsonl"
+      }
+    },
+    {
+      "testName": "stores platform information in artifact",
+      "status": "pass",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.082Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/stores_platform_information_in_artifact.jsonl"
+      }
+    },
+    {
+      "testName": "uses fixed seed for deterministic flake detection",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.082Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/uses_fixed_seed_for_deterministic_flake_detection.jsonl"
+      }
+    },
+    {
+      "testName": "includes seed in multiple runs for reproducibility",
+      "status": "pass",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.082Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/includes_seed_in_multiple_runs_for_reproducibility.jsonl"
+      }
+    },
+    {
+      "testName": "captures relevant environment variables only",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.082Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/captures_relevant_environment_variables_only.jsonl"
+      }
+    },
+    {
+      "testName": "parses Node.js stack trace format",
+      "status": "pass",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.098Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/parses_Node_js_stack_trace_format.jsonl"
+      }
+    },
+    {
+      "testName": "parses V8 stack trace without function names",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.111Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/parses_V8_stack_trace_without_function_names.jsonl"
+      }
+    },
+    {
+      "testName": "parses Firefox-style stack traces",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.111Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/parses_Firefox-style_stack_traces.jsonl"
+      }
+    },
+    {
+      "testName": "handles empty stack traces",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.111Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/handles_empty_stack_traces.jsonl"
+      }
+    },
+    {
+      "testName": "skips unparseable lines",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.112Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/skips_unparseable_lines.jsonl"
+      }
+    },
+    {
+      "testName": "extracts file path correctly",
+      "status": "pass",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.112Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/extracts_file_path_correctly.jsonl"
+      }
+    },
+    {
+      "testName": "extracts line and column numbers as integers",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.113Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/extracts_line_and_column_numbers_as_integers.jsonl"
+      }
+    },
+    {
+      "testName": "extracts code frame with context lines",
+      "status": "pass",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.113Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/extracts_code_frame_with_context_lines.jsonl"
+      }
+    },
+    {
+      "testName": "handles first line of file",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.113Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/handles_first_line_of_file.jsonl"
+      }
+    },
+    {
+      "testName": "handles last line of file",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.114Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/handles_last_line_of_file.jsonl"
+      }
+    },
+    {
+      "testName": "returns null for non-existent file",
+      "status": "pass",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.114Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/returns_null_for_non-existent_file.jsonl"
+      }
+    },
+    {
+      "testName": "returns null for line number out of range",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.114Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/returns_null_for_line_number_out_of_range.jsonl"
+      }
+    },
+    {
+      "testName": "includes correct line numbers in source array",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.114Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/includes_correct_line_numbers_in_source_array.jsonl"
+      }
+    },
+    {
+      "testName": "resolves .ts file when .js.map exists",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.115Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/resolves__ts_file_when__js_map_exists.jsonl"
+      }
+    },
+    {
+      "testName": "falls back to .ts file if sourcemap does not exist",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.115Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/falls_back_to__ts_file_if_sourcemap_does_not_exist.jsonl"
+      }
+    },
+    {
+      "testName": "returns original file if neither sourcemap nor .ts exists",
+      "status": "pass",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.115Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/returns_original_file_if_neither_sourcemap_nor__ts_exists.jsonl"
+      }
+    },
+    {
+      "testName": "caches sourcemap for repeated access",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.115Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/caches_sourcemap_for_repeated_access.jsonl"
+      }
+    },
+    {
+      "testName": "formats code frame with line numbers",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.129Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/formats_code_frame_with_line_numbers.jsonl"
+      }
+    },
+    {
+      "testName": "includes column indicator when column is specified",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.130Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/includes_column_indicator_when_column_is_specified.jsonl"
+      }
+    },
+    {
+      "testName": "omits column indicator when column is not specified",
+      "status": "pass",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.130Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/omits_column_indicator_when_column_is_not_specified.jsonl"
+      }
+    },
+    {
+      "testName": "pads line numbers correctly",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.130Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/pads_line_numbers_correctly.jsonl"
+      }
+    },
+    {
+      "testName": "extracts code frames from stack trace",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.131Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/extracts_code_frames_from_stack_trace.jsonl"
+      }
+    },
+    {
+      "testName": "limits to maximum 3 code frames",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.131Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/limits_to_maximum_3_code_frames.jsonl"
+      }
+    },
+    {
+      "testName": "skips frames without file or line information",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.132Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/skips_frames_without_file_or_line_information.jsonl"
+      }
+    },
+    {
+      "testName": "limits number of code frames to 5",
+      "status": "pass",
+      "duration": 3,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.132Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/limits_number_of_code_frames_to_5.jsonl"
+      }
+    },
+    {
+      "testName": "includes code frames in budget calculation",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.132Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/includes_code_frames_in_budget_calculation.jsonl"
+      }
+    },
+    {
+      "testName": "extracts code frames only when configured",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.132Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/extracts_code_frames_only_when_configured.jsonl"
+      }
+    },
+    {
+      "testName": "extracts code frames only from error events with stack",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.133Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/extracts_code_frames_only_from_error_events_with_stack.jsonl"
+      }
+    },
+    {
+      "testName": "respects context lines configuration in codeframe action",
+      "status": "pass",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.133Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/flakeAndFrames.spec/respects_context_lines_configuration_in_codeframe_action.jsonl"
+      }
+    },
+    {
+      "testName": "parses go test -json fixture data",
+      "status": "pass",
+      "duration": 7,
+      "location": "/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.133Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/goIngest.spec/parses_go_test_-json_fixture_data.jsonl"
+      }
+    },
+    {
+      "testName": "parses individual event fields correctly",
+      "status": "pass",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.134Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/goIngest.spec/parses_individual_event_fields_correctly.jsonl"
+      }
+    },
+    {
+      "testName": "handles empty input",
+      "status": "pass",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.134Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/goIngest.spec/handles_empty_input.jsonl"
+      }
+    },
+    {
+      "testName": "handles malformed JSON lines",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.134Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/goIngest.spec/handles_malformed_JSON_lines.jsonl"
+      }
+    },
+    {
+      "testName": "converts Go events to Laminar format",
+      "status": "pass",
+      "duration": 3,
+      "location": "/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.134Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/goIngest.spec/converts_Go_events_to_Laminar_format.jsonl"
+      }
+    },
+    {
+      "testName": "creates test.start events for run actions",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.135Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/goIngest.spec/creates_test_start_events_for_run_actions.jsonl"
+      }
+    },
+    {
+      "testName": "creates test.output events for output actions",
+      "status": "pass",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.135Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/goIngest.spec/creates_test_output_events_for_output_actions.jsonl"
+      }
+    },
+    {
+      "testName": "creates test.pass events with correct status",
+      "status": "pass",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.135Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/goIngest.spec/creates_test_pass_events_with_correct_status.jsonl"
+      }
+    },
+    {
+      "testName": "creates test.fail events with error level",
+      "status": "pass",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.135Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/goIngest.spec/creates_test_fail_events_with_error_level.jsonl"
+      }
+    },
+    {
+      "testName": "creates test.skip events for skipped tests",
+      "status": "pass",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.136Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/goIngest.spec/creates_test_skip_events_for_skipped_tests.jsonl"
+      }
+    },
+    {
+      "testName": "generates summary with correct test results",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.136Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/goIngest.spec/generates_summary_with_correct_test_results.jsonl"
+      }
+    },
+    {
+      "testName": "includes duration in summary",
+      "status": "pass",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.136Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/goIngest.spec/includes_duration_in_summary.jsonl"
+      }
+    },
+    {
+      "testName": "includes location in summary",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.136Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/goIngest.spec/includes_location_in_summary.jsonl"
+      }
+    },
+    {
+      "testName": "includes artifactURI in summary",
+      "status": "pass",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.136Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/goIngest.spec/includes_artifactURI_in_summary.jsonl"
+      }
+    },
+    {
+      "testName": "validates Laminar event structure",
+      "status": "pass",
+      "duration": 9,
+      "location": "/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.136Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/goIngest.spec/validates_Laminar_event_structure.jsonl"
+      }
+    },
+    {
+      "testName": "preserves timestamp ordering",
+      "status": "pass",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.137Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/goIngest.spec/preserves_timestamp_ordering.jsonl"
+      }
+    },
+    {
+      "testName": "writes JSONL files per test case",
+      "status": "pass",
+      "duration": 3,
+      "location": "/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.137Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/goIngest.spec/writes_JSONL_files_per_test_case.jsonl"
+      }
+    },
+    {
+      "testName": "writes summary.jsonl file",
+      "status": "pass",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.137Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/goIngest.spec/writes_summary_jsonl_file.jsonl"
+      }
+    },
+    {
+      "testName": "groups events by test case correctly",
+      "status": "pass",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.137Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/goIngest.spec/groups_events_by_test_case_correctly.jsonl"
+      }
+    },
+    {
+      "testName": "writes valid JSONL format",
+      "status": "pass",
+      "duration": 6,
+      "location": "/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.137Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/goIngest.spec/writes_valid_JSONL_format.jsonl"
+      }
+    },
+    {
+      "testName": "processes fixture data from parsing to output",
+      "status": "pass",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.138Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/goIngest.spec/processes_fixture_data_from_parsing_to_output.jsonl"
+      }
+    },
+    {
+      "testName": "connect moves data 1:1",
+      "status": "pass",
+      "duration": 15,
+      "location": "/srv/repos0/mkolbol/tests/kernel/kernel.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.138Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/kernel.spec/connect_moves_data_1_1.jsonl"
+      }
+    },
+    {
+      "testName": "split fans out to multiple destinations",
+      "status": "pass",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/kernel/kernel.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.138Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/kernel.spec/split_fans_out_to_multiple_destinations.jsonl"
+      }
+    },
+    {
+      "testName": "merge combines multiple sources into one destination",
+      "status": "pass",
+      "duration": 3,
+      "location": "/srv/repos0/mkolbol/tests/kernel/kernel.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.138Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/kernel.spec/merge_combines_multiple_sources_into_one_destination.jsonl"
+      }
+    },
+    {
+      "testName": "register/lookup filters by capabilities",
+      "status": "pass",
+      "duration": 3,
+      "location": "/srv/repos0/mkolbol/tests/kernel/kernel.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.138Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/kernel.spec/register_lookup_filters_by_capabilities.jsonl"
+      }
+    },
+    {
+      "testName": "returns false when module is not enabled",
+      "status": "pass",
+      "duration": 4,
+      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.139Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/debug-api.spec/returns_false_when_module_is_not_enabled.jsonl"
+      }
+    },
+    {
+      "testName": "returns consistent value for same module",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.152Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/debug-api.spec/returns_consistent_value_for_same_module.jsonl"
+      }
+    },
+    {
+      "testName": "returns false when config is disabled",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.153Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/debug-api.spec/returns_false_when_config_is_disabled.jsonl"
+      }
+    },
+    {
+      "testName": "checks module against config.modules when enabled",
+      "status": "pass",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.154Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/debug-api.spec/checks_module_against_config_modules_when_enabled.jsonl"
+      }
+    },
+    {
+      "testName": "does not emit when on() returns false",
+      "status": "pass",
+      "duration": 3,
+      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.154Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/debug-api.spec/does_not_emit_when_on___returns_false.jsonl"
+      }
+    },
+    {
+      "testName": "emit returns immediately when module is disabled",
+      "status": "pass",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.154Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/debug-api.spec/emit_returns_immediately_when_module_is_disabled.jsonl"
+      }
+    },
+    {
+      "testName": "shouldEmit returns false when module is disabled",
+      "status": "pass",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.155Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/debug-api.spec/shouldEmit_returns_false_when_module_is_disabled.jsonl"
+      }
+    },
+    {
+      "testName": "emits to console when module is enabled",
+      "status": "pass",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.155Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/debug-api.spec/emits_to_console_when_module_is_enabled.jsonl"
+      }
+    },
+    {
+      "testName": "respects debug level filtering",
+      "status": "pass",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.155Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/debug-api.spec/respects_debug_level_filtering.jsonl"
+      }
+    },
+    {
+      "testName": "emits formatted output to console",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.169Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/debug-api.spec/emits_formatted_output_to_console.jsonl"
+      }
+    },
+    {
+      "testName": "handles emit without payload",
+      "status": "pass",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.169Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/debug-api.spec/handles_emit_without_payload.jsonl"
+      }
+    },
+    {
+      "testName": "shouldEmit respects level hierarchy",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.170Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/debug-api.spec/shouldEmit_respects_level_hierarchy.jsonl"
+      }
+    },
+    {
+      "testName": "registers and queries by capabilities",
+      "status": "pass",
+      "duration": 6,
+      "location": "/srv/repos0/mkolbol/test/hostess.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.170Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/hostess.spec/registers_and_queries_by_capabilities.jsonl"
+      }
+    },
+    {
+      "testName": "marks in-use and back to available",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/test/hostess.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.170Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/hostess.spec/marks_in-use_and_back_to_available.jsonl"
+      }
+    },
+    {
+      "testName": "evicts after missed heartbeats",
+      "status": "pass",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/test/hostess.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.171Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/hostess.spec/evicts_after_missed_heartbeats.jsonl"
+      }
+    },
+    {
+      "testName": "heartbeat maintains liveness",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/test/hostess.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.171Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/hostess.spec/heartbeat_maintains_liveness.jsonl"
+      }
+    },
+    {
+      "testName": "should render raw ANSI to stdout",
+      "status": "pass",
+      "duration": 8,
+      "location": "/srv/repos0/mkolbol/tests/renderers/passthroughRenderer.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.172Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/passthroughRenderer.spec/should_render_raw_ANSI_to_stdout.jsonl"
+      }
+    },
+    {
+      "testName": "should handle ANSI escape sequences",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/renderers/passthroughRenderer.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.172Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/passthroughRenderer.spec/should_handle_ANSI_escape_sequences.jsonl"
+      }
+    },
+    {
+      "testName": "should write all data to log file",
+      "status": "pass",
+      "duration": 6,
+      "location": "/srv/repos0/mkolbol/tests/renderers/loggerRenderer.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.172Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/loggerRenderer.spec/should_write_all_data_to_log_file.jsonl"
+      }
+    },
+    {
+      "testName": "should append to existing log file",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/renderers/loggerRenderer.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.173Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/loggerRenderer.spec/should_append_to_existing_log_file.jsonl"
+      }
+    },
+    {
+      "testName": "should generate index.json with valid structure",
+      "status": "pass",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.381Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/coreReporter.spec/should_generate_index_json_with_valid_structure.jsonl"
+      }
+    },
+    {
+      "testName": "should have valid timestamp format",
+      "status": "pass",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.381Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/coreReporter.spec/should_have_valid_timestamp_format.jsonl"
+      }
+    },
+    {
+      "testName": "should have totalTests matching artifacts length",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.382Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/coreReporter.spec/should_have_totalTests_matching_artifacts_length.jsonl"
+      }
+    },
+    {
+      "testName": "should have at least one artifact entry",
+      "status": "pass",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.382Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/coreReporter.spec/should_have_at_least_one_artifact_entry.jsonl"
+      }
+    },
+    {
+      "testName": "should have valid structure for each artifact entry",
+      "status": "pass",
+      "duration": 86,
+      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.383Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/coreReporter.spec/should_have_valid_structure_for_each_artifact_entry.jsonl"
+      }
+    },
+    {
+      "testName": "should have valid timestamps for each entry",
+      "status": "pass",
+      "duration": 6,
+      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.383Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/coreReporter.spec/should_have_valid_timestamps_for_each_entry.jsonl"
+      }
+    },
+    {
+      "testName": "should reference summary.jsonl in artifacts",
+      "status": "pass",
+      "duration": 3,
+      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.384Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/coreReporter.spec/should_reference_summary_jsonl_in_artifacts.jsonl"
+      }
+    },
+    {
+      "testName": "should have caseFile path for each entry",
+      "status": "pass",
+      "duration": 8,
+      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.384Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/coreReporter.spec/should_have_caseFile_path_for_each_entry.jsonl"
+      }
+    },
+    {
+      "testName": "should have valid location paths",
+      "status": "pass",
+      "duration": 3,
+      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.385Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/coreReporter.spec/should_have_valid_location_paths.jsonl"
+      }
+    },
+    {
+      "testName": "should create JSONL file for each test case",
+      "status": "pass",
+      "duration": 8,
+      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.385Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/coreReporter.spec/should_create_JSONL_file_for_each_test_case.jsonl"
+      }
+    },
+    {
+      "testName": "should organize case files in suite directories",
+      "status": "pass",
+      "duration": 8,
+      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.386Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/coreReporter.spec/should_organize_case_files_in_suite_directories.jsonl"
+      }
+    },
+    {
+      "testName": "should contain valid JSONL format",
+      "status": "pass",
+      "duration": 23,
+      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.386Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/coreReporter.spec/should_contain_valid_JSONL_format.jsonl"
+      }
+    },
+    {
+      "testName": "should include case.begin event",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.387Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/coreReporter.spec/should_include_case_begin_event.jsonl"
+      }
+    },
+    {
+      "testName": "should include test.run event",
+      "status": "pass",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.387Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/coreReporter.spec/should_include_test_run_event.jsonl"
+      }
+    },
+    {
+      "testName": "should include case.end event with payload",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.388Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/coreReporter.spec/should_include_case_end_event_with_payload.jsonl"
+      }
+    },
+    {
+      "testName": "should have timestamps for all events",
+      "status": "pass",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.388Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/coreReporter.spec/should_have_timestamps_for_all_events.jsonl"
+      }
+    },
+    {
+      "testName": "should have chronological timestamps",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.388Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/coreReporter.spec/should_have_chronological_timestamps.jsonl"
+      }
+    },
+    {
+      "testName": "should include test.error events for failed tests",
+      "status": "pass",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.389Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/coreReporter.spec/should_include_test_error_events_for_failed_tests.jsonl"
+      }
+    },
+    {
+      "testName": "should have error-level log for case.end of failed tests",
+      "status": "pass",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.389Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/coreReporter.spec/should_have_error-level_log_for_case_end_of_failed_tests.jsonl"
+      }
+    },
+    {
+      "testName": "should have summary.jsonl file",
+      "status": "pass",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.390Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/coreReporter.spec/should_have_summary_jsonl_file.jsonl"
+      }
+    },
+    {
+      "testName": "should have matching test count between index and summary",
+      "status": "fail",
+      "duration": 37,
+      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.390Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/coreReporter.spec/should_have_matching_test_count_between_index_and_summary.jsonl"
+      }
+    },
+    {
+      "testName": "should have valid JSONL in summary file",
+      "status": "pass",
+      "duration": 23,
+      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.390Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/coreReporter.spec/should_have_valid_JSONL_in_summary_file.jsonl"
+      }
+    },
+    {
+      "testName": "should cross-reference between index and case files",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.391Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/coreReporter.spec/should_cross-reference_between_index_and_case_files.jsonl"
+      }
+    },
+    {
+      "testName": "should have case name in JSONL events matching test name",
+      "status": "pass",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.391Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/coreReporter.spec/should_have_case_name_in_JSONL_events_matching_test_name.jsonl"
+      }
+    },
+    {
+      "testName": "should handle test names with special characters",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.392Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/coreReporter.spec/should_handle_test_names_with_special_characters.jsonl"
+      }
+    },
+    {
+      "testName": "should have unique case file paths",
+      "status": "pass",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.392Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/coreReporter.spec/should_have_unique_case_file_paths.jsonl"
+      }
+    },
+    {
+      "testName": "should have all case files in reports directory",
+      "status": "pass",
+      "duration": 19,
+      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.392Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/coreReporter.spec/should_have_all_case_files_in_reports_directory.jsonl"
+      }
+    },
+    {
+      "testName": "should have consistent status values",
+      "status": "pass",
+      "duration": 55,
+      "location": "/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.393Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/coreReporter.spec/should_have_consistent_status_values.jsonl"
+      }
+    },
+    {
+      "testName": "gets rules from existing config",
+      "status": "pass",
+      "duration": 9,
+      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.393Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/laminarMcp.spec/gets_rules_from_existing_config.jsonl"
+      }
+    },
+    {
+      "testName": "returns empty config when file does not exist",
+      "status": "pass",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.393Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/laminarMcp.spec/returns_empty_config_when_file_does_not_exist.jsonl"
+      }
+    },
+    {
+      "testName": "sets digest rules successfully",
+      "status": "pass",
+      "duration": 4,
+      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.394Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/laminarMcp.spec/sets_digest_rules_successfully.jsonl"
+      }
+    },
+    {
+      "testName": "handles write errors gracefully",
+      "status": "pass",
+      "duration": 3,
+      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.394Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/laminarMcp.spec/handles_write_errors_gracefully.jsonl"
+      }
+    },
+    {
+      "testName": "generates digests for specific cases",
+      "status": "pass",
+      "duration": 6,
+      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.394Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/laminarMcp.spec/generates_digests_for_specific_cases.jsonl"
+      }
+    },
+    {
+      "testName": "generates digests for all failing cases",
+      "status": "pass",
+      "duration": 3,
+      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.394Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/laminarMcp.spec/generates_digests_for_all_failing_cases.jsonl"
+      }
+    },
+    {
+      "testName": "handles no failures gracefully",
+      "status": "pass",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.394Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/laminarMcp.spec/handles_no_failures_gracefully.jsonl"
+      }
+    },
+    {
+      "testName": "retrieves logs for a specific case",
+      "status": "pass",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.395Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/laminarMcp.spec/retrieves_logs_for_a_specific_case.jsonl"
+      }
+    },
+    {
+      "testName": "returns empty string when logs do not exist",
+      "status": "pass",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.395Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/laminarMcp.spec/returns_empty_string_when_logs_do_not_exist.jsonl"
+      }
+    },
+    {
+      "testName": "handles missing caseName parameter",
+      "status": "pass",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.395Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/laminarMcp.spec/handles_missing_caseName_parameter.jsonl"
+      }
+    },
+    {
+      "testName": "queries logs for a specific case",
+      "status": "pass",
+      "duration": 3,
+      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.395Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/laminarMcp.spec/queries_logs_for_a_specific_case.jsonl"
+      }
+    },
+    {
+      "testName": "filters by log level",
+      "status": "pass",
+      "duration": 4,
+      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.395Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/laminarMcp.spec/filters_by_log_level.jsonl"
+      }
+    },
+    {
+      "testName": "filters by event type",
+      "status": "pass",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.396Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/laminarMcp.spec/filters_by_event_type.jsonl"
+      }
+    },
+    {
+      "testName": "respects limit parameter",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.396Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/laminarMcp.spec/respects_limit_parameter.jsonl"
+      }
+    },
+    {
+      "testName": "validates limit range",
+      "status": "pass",
+      "duration": 3,
+      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.396Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/laminarMcp.spec/validates_limit_range.jsonl"
+      }
+    },
+    {
+      "testName": "returns empty when caseName is not provided",
+      "status": "pass",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.396Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/laminarMcp.spec/returns_empty_when_caseName_is_not_provided.jsonl"
+      }
+    },
+    {
+      "testName": "returns repro commands for all failures",
+      "status": "pass",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.396Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/laminarMcp.spec/returns_repro_commands_for_all_failures.jsonl"
+      }
+    },
+    {
+      "testName": "filters repro commands by caseName",
+      "status": "pass",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.397Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/laminarMcp.spec/filters_repro_commands_by_caseName.jsonl"
+      }
+    },
+    {
+      "testName": "returns empty array when summary does not exist",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.397Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/laminarMcp.spec/returns_empty_array_when_summary_does_not_exist.jsonl"
+      }
+    },
+    {
+      "testName": "sets overlay rules successfully",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.397Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/laminarMcp.spec/sets_overlay_rules_successfully.jsonl"
+      }
+    },
+    {
+      "testName": "handles multiple overlay rules",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.397Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/laminarMcp.spec/handles_multiple_overlay_rules.jsonl"
+      }
+    },
+    {
+      "testName": "handles missing rules parameter gracefully",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.397Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/laminarMcp.spec/handles_missing_rules_parameter_gracefully.jsonl"
+      }
+    },
+    {
+      "testName": "clears overlay rules successfully",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.398Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/laminarMcp.spec/clears_overlay_rules_successfully.jsonl"
+      }
+    },
+    {
+      "testName": "works when no rules are set",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.398Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/laminarMcp.spec/works_when_no_rules_are_set.jsonl"
+      }
+    },
+    {
+      "testName": "returns current overlay rules",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.398Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/laminarMcp.spec/returns_current_overlay_rules.jsonl"
+      }
+    },
+    {
+      "testName": "returns empty array when no rules are set",
+      "status": "pass",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.398Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/laminarMcp.spec/returns_empty_array_when_no_rules_are_set.jsonl"
+      }
+    },
+    {
+      "testName": "reflects changes after clear",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.399Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/laminarMcp.spec/reflects_changes_after_clear.jsonl"
+      }
+    },
+    {
+      "testName": "throws McpError for unknown tool",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.399Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/laminarMcp.spec/throws_McpError_for_unknown_tool.jsonl"
+      }
+    },
+    {
+      "testName": "validates input types",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.399Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/laminarMcp.spec/validates_input_types.jsonl"
+      }
+    },
+    {
+      "testName": "validates required parameters",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.399Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/laminarMcp.spec/validates_required_parameters.jsonl"
+      }
+    },
+    {
+      "testName": "handles concurrent query calls",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.399Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/laminarMcp.spec/handles_concurrent_query_calls.jsonl"
+      }
+    },
+    {
+      "testName": "handles concurrent overlay operations",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.400Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/laminarMcp.spec/handles_concurrent_overlay_operations.jsonl"
+      }
+    },
+    {
+      "testName": "handles concurrent rules get/set",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.400Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/laminarMcp.spec/handles_concurrent_rules_get_set.jsonl"
+      }
+    },
+    {
+      "testName": "handles mixed tool calls concurrently",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.400Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/laminarMcp.spec/handles_mixed_tool_calls_concurrently.jsonl"
+      }
+    },
+    {
+      "testName": "handles missing reports directory",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.400Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/laminarMcp.spec/handles_missing_reports_directory.jsonl"
+      }
+    },
+    {
+      "testName": "handles malformed summary file",
+      "status": "pass",
+      "duration": 0,
+      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.400Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/laminarMcp.spec/handles_malformed_summary_file.jsonl"
+      }
+    },
+    {
+      "testName": "handles empty case name",
+      "status": "pass",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.401Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/laminarMcp.spec/handles_empty_case_name.jsonl"
       }
     },
     {
-      "testName": "generates digests for specific cases",
+      "testName": "handles special characters in case names",
       "status": "pass",
-      "duration": 5,
+      "duration": 0,
       "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.750Z",
+      "timestamp": "2025-10-12T21:07:50.401Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/laminarMcp.spec/generates_digests_for_specific_cases.jsonl"
+        "caseFile": "reports/laminarMcp.spec/handles_special_characters_in_case_names.jsonl"
       }
     },
     {
-      "testName": "generates digests for all failing cases",
+      "testName": "handles nested reports directories",
       "status": "pass",
-      "duration": 2,
+      "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.751Z",
+      "timestamp": "2025-10-12T21:07:50.401Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/laminarMcp.spec/generates_digests_for_all_failing_cases.jsonl"
+        "caseFile": "reports/laminarMcp.spec/handles_nested_reports_directories.jsonl"
       }
     },
     {
-      "testName": "handles no failures gracefully",
+      "testName": "handles very large log files",
       "status": "pass",
-      "duration": 2,
+      "duration": 5,
       "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.751Z",
+      "timestamp": "2025-10-12T21:07:50.401Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/laminarMcp.spec/handles_no_failures_gracefully.jsonl"
+        "caseFile": "reports/laminarMcp.spec/handles_very_large_log_files.jsonl"
       }
     },
     {
-      "testName": "retrieves logs for a specific case",
+      "testName": "supports complete overlay workflow",
       "status": "pass",
-      "duration": 2,
+      "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.751Z",
+      "timestamp": "2025-10-12T21:07:50.402Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/laminarMcp.spec/retrieves_logs_for_a_specific_case.jsonl"
+        "caseFile": "reports/laminarMcp.spec/supports_complete_overlay_workflow.jsonl"
       }
     },
     {
-      "testName": "returns empty string when logs do not exist",
+      "testName": "allows overlay rules to be overwritten",
       "status": "pass",
       "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.751Z",
+      "timestamp": "2025-10-12T21:07:50.402Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/laminarMcp.spec/returns_empty_string_when_logs_do_not_exist.jsonl"
+        "caseFile": "reports/laminarMcp.spec/allows_overlay_rules_to_be_overwritten.jsonl"
       }
     },
     {
-      "testName": "handles missing caseName parameter",
+      "testName": "maintains overlay independence from persistent rules",
       "status": "pass",
-      "duration": 2,
+      "duration": 1,
       "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.751Z",
+      "timestamp": "2025-10-12T21:07:50.402Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/laminarMcp.spec/handles_missing_caseName_parameter.jsonl"
+        "caseFile": "reports/laminarMcp.spec/maintains_overlay_independence_from_persistent_rules.jsonl"
       }
     },
     {
-      "testName": "queries logs for a specific case",
+      "testName": "parses simple passing test fixture",
       "status": "pass",
-      "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.752Z",
+      "duration": 5,
+      "location": "/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.402Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/laminarMcp.spec/queries_logs_for_a_specific_case.jsonl"
+        "caseFile": "reports/pytestIngest.spec/parses_simple_passing_test_fixture.jsonl"
       }
     },
     {
-      "testName": "filters by log level",
+      "testName": "parses complex multi-test fixture",
       "status": "pass",
       "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.752Z",
+      "location": "/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.403Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/laminarMcp.spec/filters_by_log_level.jsonl"
+        "caseFile": "reports/pytestIngest.spec/parses_complex_multi-test_fixture.jsonl"
       }
     },
     {
-      "testName": "filters by event type",
+      "testName": "parses report metadata correctly",
       "status": "pass",
-      "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.752Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.403Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/laminarMcp.spec/filters_by_event_type.jsonl"
+        "caseFile": "reports/pytestIngest.spec/parses_report_metadata_correctly.jsonl"
       }
     },
     {
-      "testName": "respects limit parameter",
+      "testName": "parses test node IDs correctly",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.752Z",
+      "location": "/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.403Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/laminarMcp.spec/respects_limit_parameter.jsonl"
+        "caseFile": "reports/pytestIngest.spec/parses_test_node_IDs_correctly.jsonl"
       }
     },
     {
-      "testName": "validates limit range",
+      "testName": "throws error on invalid JSON",
       "status": "pass",
-      "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.752Z",
+      "duration": 3,
+      "location": "/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.403Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/laminarMcp.spec/validates_limit_range.jsonl"
+        "caseFile": "reports/pytestIngest.spec/throws_error_on_invalid_JSON.jsonl"
       }
     },
     {
-      "testName": "returns empty when caseName is not provided",
+      "testName": "handles empty test array",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.753Z",
+      "location": "/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.403Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/laminarMcp.spec/returns_empty_when_caseName_is_not_provided.jsonl"
+        "caseFile": "reports/pytestIngest.spec/handles_empty_test_array.jsonl"
       }
     },
     {
-      "testName": "returns repro commands for all failures",
+      "testName": "converts passing tests to Laminar format",
       "status": "pass",
-      "duration": 3,
-      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.753Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.404Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/laminarMcp.spec/returns_repro_commands_for_all_failures.jsonl"
+        "caseFile": "reports/pytestIngest.spec/converts_passing_tests_to_Laminar_format.jsonl"
       }
     },
     {
-      "testName": "filters repro commands by caseName",
+      "testName": "creates case.begin events for test start",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.753Z",
+      "location": "/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.404Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/laminarMcp.spec/filters_repro_commands_by_caseName.jsonl"
+        "caseFile": "reports/pytestIngest.spec/creates_case_begin_events_for_test_start.jsonl"
       }
     },
     {
-      "testName": "returns empty array when summary does not exist",
+      "testName": "creates setup events for test setup phase",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.753Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.404Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/laminarMcp.spec/returns_empty_array_when_summary_does_not_exist.jsonl"
+        "caseFile": "reports/pytestIngest.spec/creates_setup_events_for_test_setup_phase.jsonl"
       }
     },
     {
-      "testName": "sets overlay rules successfully",
+      "testName": "creates test.run and test.call.passed events for test execution",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.753Z",
+      "location": "/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.404Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/laminarMcp.spec/sets_overlay_rules_successfully.jsonl"
+        "caseFile": "reports/pytestIngest.spec/creates_test_run_and_test_call_passed_events_for_test_execution.jsonl"
       }
     },
     {
-      "testName": "handles multiple overlay rules",
+      "testName": "creates case.end events for test completion",
       "status": "pass",
-      "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.753Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.404Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/laminarMcp.spec/handles_multiple_overlay_rules.jsonl"
+        "caseFile": "reports/pytestIngest.spec/creates_case_end_events_for_test_completion.jsonl"
       }
     },
     {
-      "testName": "handles missing rules parameter gracefully",
+      "testName": "handles failed tests with error messages",
       "status": "pass",
-      "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.754Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.405Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/laminarMcp.spec/handles_missing_rules_parameter_gracefully.jsonl"
+        "caseFile": "reports/pytestIngest.spec/handles_failed_tests_with_error_messages.jsonl"
       }
     },
     {
-      "testName": "clears overlay rules successfully",
+      "testName": "extracts stack traces from failed tests",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.754Z",
+      "location": "/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.405Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/laminarMcp.spec/clears_overlay_rules_successfully.jsonl"
+        "caseFile": "reports/pytestIngest.spec/extracts_stack_traces_from_failed_tests.jsonl"
       }
     },
     {
-      "testName": "works when no rules are set",
+      "testName": "handles error during setup phase",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.754Z",
+      "location": "/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.405Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/laminarMcp.spec/works_when_no_rules_are_set.jsonl"
+        "caseFile": "reports/pytestIngest.spec/handles_error_during_setup_phase.jsonl"
       }
     },
     {
-      "testName": "returns current overlay rules",
+      "testName": "handles skipped tests correctly",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.754Z",
+      "location": "/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.405Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/laminarMcp.spec/returns_current_overlay_rules.jsonl"
+        "caseFile": "reports/pytestIngest.spec/handles_skipped_tests_correctly.jsonl"
       }
     },
     {
-      "testName": "returns empty array when no rules are set",
+      "testName": "captures stdout from test execution",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.754Z",
+      "location": "/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.406Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/laminarMcp.spec/returns_empty_array_when_no_rules_are_set.jsonl"
+        "caseFile": "reports/pytestIngest.spec/captures_stdout_from_test_execution.jsonl"
       }
     },
     {
-      "testName": "reflects changes after clear",
+      "testName": "generates correct summary for all test outcomes",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.755Z",
+      "location": "/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.406Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/laminarMcp.spec/reflects_changes_after_clear.jsonl"
+        "caseFile": "reports/pytestIngest.spec/generates_correct_summary_for_all_test_outcomes.jsonl"
       }
     },
     {
-      "testName": "throws McpError for unknown tool",
+      "testName": "includes duration in summary entries",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.755Z",
+      "location": "/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.406Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/laminarMcp.spec/throws_McpError_for_unknown_tool.jsonl"
+        "caseFile": "reports/pytestIngest.spec/includes_duration_in_summary_entries.jsonl"
       }
     },
     {
-      "testName": "validates input types",
+      "testName": "includes location in summary entries",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.755Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.406Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/laminarMcp.spec/validates_input_types.jsonl"
+        "caseFile": "reports/pytestIngest.spec/includes_location_in_summary_entries.jsonl"
       }
     },
     {
-      "testName": "validates required parameters",
+      "testName": "includes artifactURI in summary entries",
       "status": "pass",
-      "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.755Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.406Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/laminarMcp.spec/validates_required_parameters.jsonl"
+        "caseFile": "reports/pytestIngest.spec/includes_artifactURI_in_summary_entries.jsonl"
       }
     },
     {
-      "testName": "handles concurrent query calls",
+      "testName": "validates Laminar event structure",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.755Z",
+      "duration": 13,
+      "location": "/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.422Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/laminarMcp.spec/handles_concurrent_query_calls.jsonl"
+        "caseFile": "reports/pytestIngest.spec/validates_Laminar_event_structure.jsonl"
       }
     },
     {
-      "testName": "handles concurrent overlay operations",
+      "testName": "preserves timestamp ordering",
       "status": "pass",
       "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.755Z",
+      "location": "/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.423Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/laminarMcp.spec/handles_concurrent_overlay_operations.jsonl"
+        "caseFile": "reports/pytestIngest.spec/preserves_timestamp_ordering.jsonl"
       }
     },
     {
-      "testName": "handles concurrent rules get/set",
+      "testName": "handles tests without lineno",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.756Z",
+      "location": "/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.424Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/laminarMcp.spec/handles_concurrent_rules_get_set.jsonl"
+        "caseFile": "reports/pytestIngest.spec/handles_tests_without_lineno.jsonl"
       }
     },
     {
-      "testName": "handles mixed tool calls concurrently",
+      "testName": "handles empty report with no tests",
       "status": "pass",
-      "duration": 20,
-      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.756Z",
+      "duration": 1,
+      "location": "/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.424Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/laminarMcp.spec/handles_mixed_tool_calls_concurrently.jsonl"
+        "caseFile": "reports/pytestIngest.spec/handles_empty_report_with_no_tests.jsonl"
       }
     },
     {
-      "testName": "handles missing reports directory",
+      "testName": "writes JSONL files per test case",
       "status": "pass",
       "duration": 2,
-      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.756Z",
-      "artifacts": {
-        "summary": "reports/summary.jsonl",
-        "caseFile": "reports/laminarMcp.spec/handles_missing_reports_directory.jsonl"
-      }
-    },
-    {
-      "testName": "handles malformed summary file",
-      "status": "pass",
-      "duration": 11,
-      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.756Z",
+      "location": "/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.425Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/laminarMcp.spec/handles_malformed_summary_file.jsonl"
+        "caseFile": "reports/pytestIngest.spec/writes_JSONL_files_per_test_case.jsonl"
       }
     },
     {
-      "testName": "handles empty case name",
+      "testName": "writes summary.jsonl file",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.756Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.425Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/laminarMcp.spec/handles_empty_case_name.jsonl"
+        "caseFile": "reports/pytestIngest.spec/writes_summary_jsonl_file.jsonl"
       }
     },
     {
-      "testName": "handles special characters in case names",
+      "testName": "groups events by test case correctly",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.756Z",
+      "duration": 3,
+      "location": "/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.426Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/laminarMcp.spec/handles_special_characters_in_case_names.jsonl"
+        "caseFile": "reports/pytestIngest.spec/groups_events_by_test_case_correctly.jsonl"
       }
     },
     {
-      "testName": "handles nested reports directories",
+      "testName": "writes valid JSONL format",
       "status": "pass",
-      "duration": 20,
-      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.757Z",
+      "duration": 9,
+      "location": "/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.426Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/laminarMcp.spec/handles_nested_reports_directories.jsonl"
+        "caseFile": "reports/pytestIngest.spec/writes_valid_JSONL_format.jsonl"
       }
     },
     {
-      "testName": "handles very large log files",
+      "testName": "processes fixture data from parsing to output",
       "status": "pass",
-      "duration": 24,
-      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.757Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.426Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/laminarMcp.spec/handles_very_large_log_files.jsonl"
+        "caseFile": "reports/pytestIngest.spec/processes_fixture_data_from_parsing_to_output.jsonl"
       }
     },
     {
-      "testName": "supports complete overlay workflow",
+      "testName": "processes simple passing test correctly",
       "status": "pass",
       "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.757Z",
+      "location": "/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.427Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/laminarMcp.spec/supports_complete_overlay_workflow.jsonl"
+        "caseFile": "reports/pytestIngest.spec/processes_simple_passing_test_correctly.jsonl"
       }
     },
     {
-      "testName": "allows overlay rules to be overwritten",
+      "testName": "adds nodes and emits events",
       "status": "pass",
-      "duration": 0,
-      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.757Z",
+      "duration": 5,
+      "location": "/srv/repos0/mkolbol/test/state/stateManager.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.427Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/laminarMcp.spec/allows_overlay_rules_to_be_overwritten.jsonl"
+        "caseFile": "reports/stateManager.spec/adds_nodes_and_emits_events.jsonl"
       }
     },
     {
-      "testName": "maintains overlay independence from persistent rules",
+      "testName": "connects and emits connected",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.757Z",
+      "duration": 4,
+      "location": "/srv/repos0/mkolbol/test/state/stateManager.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.427Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/laminarMcp.spec/maintains_overlay_independence_from_persistent_rules.jsonl"
+        "caseFile": "reports/stateManager.spec/connects_and_emits_connected.jsonl"
       }
     },
     {
-      "testName": "registers and queries by capabilities",
+      "testName": "split and merge emit events",
       "status": "pass",
-      "duration": 10,
-      "location": "/srv/repos0/mkolbol/test/hostess.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.758Z",
+      "duration": 3,
+      "location": "/srv/repos0/mkolbol/test/state/stateManager.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.427Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/hostess.spec/registers_and_queries_by_capabilities.jsonl"
+        "caseFile": "reports/stateManager.spec/split_and_merge_emit_events.jsonl"
       }
     },
     {
-      "testName": "marks in-use and back to available",
+      "testName": "validator enforces directionality when set",
       "status": "pass",
-      "duration": 2,
-      "location": "/srv/repos0/mkolbol/test/hostess.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.758Z",
+      "duration": 4,
+      "location": "/srv/repos0/mkolbol/test/state/stateManager.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.428Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/hostess.spec/marks_in-use_and_back_to_available.jsonl"
+        "caseFile": "reports/stateManager.spec/validator_enforces_directionality_when_set.jsonl"
       }
     },
     {
-      "testName": "evicts after missed heartbeats",
+      "testName": "exporters produce strings",
       "status": "pass",
-      "duration": 3,
-      "location": "/srv/repos0/mkolbol/test/hostess.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.758Z",
+      "duration": 2,
+      "location": "/srv/repos0/mkolbol/test/state/stateManager.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.428Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/hostess.spec/evicts_after_missed_heartbeats.jsonl"
+        "caseFile": "reports/stateManager.spec/exporters_produce_strings.jsonl"
       }
     },
     {
-      "testName": "heartbeat maintains liveness",
+      "testName": "should spawn a simple process",
       "status": "pass",
-      "duration": 1,
-      "location": "/srv/repos0/mkolbol/test/hostess.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:54.758Z",
+      "duration": 48,
+      "location": "/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:50.428Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
-        "caseFile": "reports/hostess.spec/heartbeat_maintains_liveness.jsonl"
+        "caseFile": "reports/externalServerWrapper.spec/should_spawn_a_simple_process.jsonl"
       }
     },
     {
       "testName": "should load configuration",
       "status": "pass",
-      "duration": 3,
+      "duration": 59,
       "location": "/srv/repos0/mkolbol/tests/executor/executor.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:56.892Z",
+      "timestamp": "2025-10-12T21:07:52.602Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/executor.spec/should_load_configuration.jsonl"
@@ -2480,9 +4306,9 @@
     {
       "testName": "should throw if up() called without load()",
       "status": "pass",
-      "duration": 2,
+      "duration": 4,
       "location": "/srv/repos0/mkolbol/tests/executor/executor.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:56.892Z",
+      "timestamp": "2025-10-12T21:07:52.602Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/executor.spec/should_throw_if_up___called_without_load__.jsonl"
@@ -2491,9 +4317,9 @@
     {
       "testName": "should instantiate modules and register with hostess",
       "status": "pass",
-      "duration": 4,
+      "duration": 37,
       "location": "/srv/repos0/mkolbol/tests/executor/executor.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:56.893Z",
+      "timestamp": "2025-10-12T21:07:52.603Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/executor.spec/should_instantiate_modules_and_register_with_hostess.jsonl"
@@ -2502,9 +4328,9 @@
     {
       "testName": "should wire connections via StateManager",
       "status": "pass",
-      "duration": 2,
+      "duration": 85,
       "location": "/srv/repos0/mkolbol/tests/executor/executor.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:56.893Z",
+      "timestamp": "2025-10-12T21:07:52.603Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/executor.spec/should_wire_connections_via_StateManager.jsonl"
@@ -2513,9 +4339,9 @@
     {
       "testName": "should support restartNode",
       "status": "pass",
-      "duration": 1,
+      "duration": 36,
       "location": "/srv/repos0/mkolbol/tests/executor/executor.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:56.893Z",
+      "timestamp": "2025-10-12T21:07:52.603Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/executor.spec/should_support_restartNode.jsonl"
@@ -2524,20 +4350,31 @@
     {
       "testName": "should throw on restartNode for non-existent node",
       "status": "pass",
-      "duration": 1,
+      "duration": 3,
       "location": "/srv/repos0/mkolbol/tests/executor/executor.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:56.894Z",
+      "timestamp": "2025-10-12T21:07:52.604Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/executor.spec/should_throw_on_restartNode_for_non-existent_node.jsonl"
       }
     },
+    {
+      "testName": "split: all destinations receive identical data",
+      "status": "pass",
+      "duration": 461,
+      "location": "/srv/repos0/mkolbol/tests/property/invariants.spec.ts:0",
+      "timestamp": "2025-10-12T21:07:52.604Z",
+      "artifacts": {
+        "summary": "reports/summary.jsonl",
+        "caseFile": "reports/invariants.spec/split__all_destinations_receive_identical_data.jsonl"
+      }
+    },
     {
       "testName": "split: order preservation across destinations",
       "status": "pass",
-      "duration": 446,
+      "duration": 303,
       "location": "/srv/repos0/mkolbol/tests/property/invariants.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:56.895Z",
+      "timestamp": "2025-10-12T21:07:52.605Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/invariants.spec/split__order_preservation_across_destinations.jsonl"
@@ -2546,9 +4383,9 @@
     {
       "testName": "merge: all source data reaches destination",
       "status": "pass",
-      "duration": 112,
+      "duration": 106,
       "location": "/srv/repos0/mkolbol/tests/property/invariants.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:56.895Z",
+      "timestamp": "2025-10-12T21:07:52.605Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/invariants.spec/merge__all_source_data_reaches_destination.jsonl"
@@ -2557,9 +4394,9 @@
     {
       "testName": "merge: no data loss with concurrent writes",
       "status": "pass",
-      "duration": 150,
+      "duration": 127,
       "location": "/srv/repos0/mkolbol/tests/property/invariants.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:56.895Z",
+      "timestamp": "2025-10-12T21:07:52.605Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/invariants.spec/merge__no_data_loss_with_concurrent_writes.jsonl"
@@ -2568,9 +4405,9 @@
     {
       "testName": "split-then-merge: roundtrip preserves all data",
       "status": "pass",
-      "duration": 1114,
+      "duration": 1103,
       "location": "/srv/repos0/mkolbol/tests/property/invariants.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:56.896Z",
+      "timestamp": "2025-10-12T21:07:52.606Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/invariants.spec/split-then-merge__roundtrip_preserves_all_data.jsonl"
@@ -2579,9 +4416,9 @@
     {
       "testName": "empty split: source with zero destinations completes",
       "status": "pass",
-      "duration": 22,
+      "duration": 6,
       "location": "/srv/repos0/mkolbol/tests/property/invariants.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:56.896Z",
+      "timestamp": "2025-10-12T21:07:52.606Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/invariants.spec/empty_split__source_with_zero_destinations_completes.jsonl"
@@ -2590,53 +4427,20 @@
     {
       "testName": "empty merge: destination with zero sources completes",
       "status": "pass",
-      "duration": 4,
+      "duration": 3,
       "location": "/srv/repos0/mkolbol/tests/property/invariants.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:56.896Z",
+      "timestamp": "2025-10-12T21:07:52.606Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/invariants.spec/empty_merge__destination_with_zero_sources_completes.jsonl"
       }
     },
-    {
-      "testName": "should spawn a simple process",
-      "status": "pass",
-      "duration": 93,
-      "location": "/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:56.897Z",
-      "artifacts": {
-        "summary": "reports/summary.jsonl",
-        "caseFile": "reports/externalServerWrapper.spec/should_spawn_a_simple_process.jsonl"
-      }
-    },
-    {
-      "testName": "should pipe data bidirectionally",
-      "status": "pass",
-      "duration": 160,
-      "location": "/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:56.897Z",
-      "artifacts": {
-        "summary": "reports/summary.jsonl",
-        "caseFile": "reports/externalServerWrapper.spec/should_pipe_data_bidirectionally.jsonl"
-      }
-    },
-    {
-      "testName": "should handle environment variables",
-      "status": "pass",
-      "duration": 261,
-      "location": "/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:56.897Z",
-      "artifacts": {
-        "summary": "reports/summary.jsonl",
-        "caseFile": "reports/externalServerWrapper.spec/should_handle_environment_variables.jsonl"
-      }
-    },
     {
       "testName": "should register with Hostess on spawn",
       "status": "pass",
-      "duration": 139,
+      "duration": 32,
       "location": "/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:56.898Z",
+      "timestamp": "2025-10-12T21:07:52.606Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/externalServerWrapper.spec/should_register_with_Hostess_on_spawn.jsonl"
@@ -2645,9 +4449,9 @@
     {
       "testName": "should gracefully shutdown with SIGTERM",
       "status": "pass",
-      "duration": 51,
+      "duration": 36,
       "location": "/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:56.898Z",
+      "timestamp": "2025-10-12T21:07:52.607Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/externalServerWrapper.spec/should_gracefully_shutdown_with_SIGTERM.jsonl"
@@ -2656,9 +4460,9 @@
     {
       "testName": "should restart on failure with \"on-failure\" policy",
       "status": "pass",
-      "duration": 547,
+      "duration": 529,
       "location": "/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:56.898Z",
+      "timestamp": "2025-10-12T21:07:52.607Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/externalServerWrapper.spec/should_restart_on_failure_with__on-failure__policy.jsonl"
@@ -2667,9 +4471,9 @@
     {
       "testName": "should not restart with \"never\" policy",
       "status": "pass",
-      "duration": 337,
+      "duration": 353,
       "location": "/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:56.898Z",
+      "timestamp": "2025-10-12T21:07:52.608Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/externalServerWrapper.spec/should_not_restart_with__never__policy.jsonl"
@@ -2678,9 +4482,9 @@
     {
       "testName": "should respect maxRestarts limit",
       "status": "pass",
-      "duration": 531,
+      "duration": 541,
       "location": "/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:56.899Z",
+      "timestamp": "2025-10-12T21:07:52.608Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/externalServerWrapper.spec/should_respect_maxRestarts_limit.jsonl"
@@ -2689,9 +4493,9 @@
     {
       "testName": "should provide process info",
       "status": "pass",
-      "duration": 41,
+      "duration": 40,
       "location": "/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0",
-      "timestamp": "2025-10-12T19:27:56.899Z",
+      "timestamp": "2025-10-12T21:07:52.608Z",
       "artifacts": {
         "summary": "reports/summary.jsonl",
         "caseFile": "reports/externalServerWrapper.spec/should_provide_process_info.jsonl"
diff --git a/reports/invariants.spec/empty_merge__destination_with_zero_sources_completes.jsonl b/reports/invariants.spec/empty_merge__destination_with_zero_sources_completes.jsonl
index 6f90c76..3f14529 100644
--- a/reports/invariants.spec/empty_merge__destination_with_zero_sources_completes.jsonl
+++ b/reports/invariants.spec/empty_merge__destination_with_zero_sources_completes.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297276896,"lvl":"info","case":"empty merge: destination with zero sources completes","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297276897,"lvl":"info","case":"empty merge: destination with zero sources completes","phase":"execution","evt":"test.run"}
-{"ts":1760297276898,"lvl":"info","case":"empty merge: destination with zero sources completes","phase":"teardown","evt":"case.end","payload":{"duration":4,"status":"passed"}}
+{"ts":1760303272606,"lvl":"info","case":"empty merge: destination with zero sources completes","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303272607,"lvl":"info","case":"empty merge: destination with zero sources completes","phase":"execution","evt":"test.run"}
+{"ts":1760303272608,"lvl":"info","case":"empty merge: destination with zero sources completes","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
diff --git a/reports/invariants.spec/empty_split__source_with_zero_destinations_completes.jsonl b/reports/invariants.spec/empty_split__source_with_zero_destinations_completes.jsonl
index dbdb6f8..7bfc83f 100644
--- a/reports/invariants.spec/empty_split__source_with_zero_destinations_completes.jsonl
+++ b/reports/invariants.spec/empty_split__source_with_zero_destinations_completes.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297276896,"lvl":"info","case":"empty split: source with zero destinations completes","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297276897,"lvl":"info","case":"empty split: source with zero destinations completes","phase":"execution","evt":"test.run"}
-{"ts":1760297276898,"lvl":"info","case":"empty split: source with zero destinations completes","phase":"teardown","evt":"case.end","payload":{"duration":22,"status":"passed"}}
+{"ts":1760303272606,"lvl":"info","case":"empty split: source with zero destinations completes","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303272607,"lvl":"info","case":"empty split: source with zero destinations completes","phase":"execution","evt":"test.run"}
+{"ts":1760303272608,"lvl":"info","case":"empty split: source with zero destinations completes","phase":"teardown","evt":"case.end","payload":{"duration":6,"status":"passed"}}
diff --git a/reports/invariants.spec/merge__all_source_data_reaches_destination.jsonl b/reports/invariants.spec/merge__all_source_data_reaches_destination.jsonl
index 14ef015..f303b66 100644
--- a/reports/invariants.spec/merge__all_source_data_reaches_destination.jsonl
+++ b/reports/invariants.spec/merge__all_source_data_reaches_destination.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297276895,"lvl":"info","case":"merge: all source data reaches destination","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297276896,"lvl":"info","case":"merge: all source data reaches destination","phase":"execution","evt":"test.run"}
-{"ts":1760297276897,"lvl":"info","case":"merge: all source data reaches destination","phase":"teardown","evt":"case.end","payload":{"duration":112,"status":"passed"}}
+{"ts":1760303272605,"lvl":"info","case":"merge: all source data reaches destination","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303272606,"lvl":"info","case":"merge: all source data reaches destination","phase":"execution","evt":"test.run"}
+{"ts":1760303272607,"lvl":"info","case":"merge: all source data reaches destination","phase":"teardown","evt":"case.end","payload":{"duration":106,"status":"passed"}}
diff --git a/reports/invariants.spec/merge__no_data_loss_with_concurrent_writes.jsonl b/reports/invariants.spec/merge__no_data_loss_with_concurrent_writes.jsonl
index a0ff075..6ccac04 100644
--- a/reports/invariants.spec/merge__no_data_loss_with_concurrent_writes.jsonl
+++ b/reports/invariants.spec/merge__no_data_loss_with_concurrent_writes.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297276895,"lvl":"info","case":"merge: no data loss with concurrent writes","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297276896,"lvl":"info","case":"merge: no data loss with concurrent writes","phase":"execution","evt":"test.run"}
-{"ts":1760297276897,"lvl":"info","case":"merge: no data loss with concurrent writes","phase":"teardown","evt":"case.end","payload":{"duration":150,"status":"passed"}}
+{"ts":1760303272605,"lvl":"info","case":"merge: no data loss with concurrent writes","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303272606,"lvl":"info","case":"merge: no data loss with concurrent writes","phase":"execution","evt":"test.run"}
+{"ts":1760303272607,"lvl":"info","case":"merge: no data loss with concurrent writes","phase":"teardown","evt":"case.end","payload":{"duration":127,"status":"passed"}}
diff --git a/reports/invariants.spec/split-then-merge__roundtrip_preserves_all_data.jsonl b/reports/invariants.spec/split-then-merge__roundtrip_preserves_all_data.jsonl
index bfecae7..b16c959 100644
--- a/reports/invariants.spec/split-then-merge__roundtrip_preserves_all_data.jsonl
+++ b/reports/invariants.spec/split-then-merge__roundtrip_preserves_all_data.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297276896,"lvl":"info","case":"split-then-merge: roundtrip preserves all data","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297276897,"lvl":"info","case":"split-then-merge: roundtrip preserves all data","phase":"execution","evt":"test.run"}
-{"ts":1760297276898,"lvl":"info","case":"split-then-merge: roundtrip preserves all data","phase":"teardown","evt":"case.end","payload":{"duration":1114,"status":"passed"}}
+{"ts":1760303272606,"lvl":"info","case":"split-then-merge: roundtrip preserves all data","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303272607,"lvl":"info","case":"split-then-merge: roundtrip preserves all data","phase":"execution","evt":"test.run"}
+{"ts":1760303272608,"lvl":"info","case":"split-then-merge: roundtrip preserves all data","phase":"teardown","evt":"case.end","payload":{"duration":1103,"status":"passed"}}
diff --git a/reports/invariants.spec/split__all_destinations_receive_identical_data.jsonl b/reports/invariants.spec/split__all_destinations_receive_identical_data.jsonl
index 74db42f..6483a5b 100644
--- a/reports/invariants.spec/split__all_destinations_receive_identical_data.jsonl
+++ b/reports/invariants.spec/split__all_destinations_receive_identical_data.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760295609457,"lvl":"info","case":"split: all destinations receive identical data","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test","TEST_SEED":"42"}},"seed":42}
-{"ts":1760295609458,"lvl":"info","case":"split: all destinations receive identical data","phase":"execution","evt":"test.run"}
-{"ts":1760295609459,"lvl":"info","case":"split: all destinations receive identical data","phase":"teardown","evt":"case.end","payload":{"duration":86,"status":"passed"}}
+{"ts":1760303272604,"lvl":"info","case":"split: all destinations receive identical data","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303272605,"lvl":"info","case":"split: all destinations receive identical data","phase":"execution","evt":"test.run"}
+{"ts":1760303272606,"lvl":"info","case":"split: all destinations receive identical data","phase":"teardown","evt":"case.end","payload":{"duration":461,"status":"passed"}}
diff --git a/reports/invariants.spec/split__order_preservation_across_destinations.jsonl b/reports/invariants.spec/split__order_preservation_across_destinations.jsonl
index 3c1652b..7cc080d 100644
--- a/reports/invariants.spec/split__order_preservation_across_destinations.jsonl
+++ b/reports/invariants.spec/split__order_preservation_across_destinations.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297276895,"lvl":"info","case":"split: order preservation across destinations","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297276896,"lvl":"info","case":"split: order preservation across destinations","phase":"execution","evt":"test.run"}
-{"ts":1760297276897,"lvl":"info","case":"split: order preservation across destinations","phase":"teardown","evt":"case.end","payload":{"duration":446,"status":"passed"}}
+{"ts":1760303272605,"lvl":"info","case":"split: order preservation across destinations","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303272606,"lvl":"info","case":"split: order preservation across destinations","phase":"execution","evt":"test.run"}
+{"ts":1760303272607,"lvl":"info","case":"split: order preservation across destinations","phase":"teardown","evt":"case.end","payload":{"duration":303,"status":"passed"}}
diff --git a/reports/junitIngest.spec/converts_passing_tests_to_Laminar_format.jsonl b/reports/junitIngest.spec/converts_passing_tests_to_Laminar_format.jsonl
new file mode 100644
index 0000000..8a27495
--- /dev/null
+++ b/reports/junitIngest.spec/converts_passing_tests_to_Laminar_format.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303269958,"lvl":"info","case":"converts passing tests to Laminar format","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269959,"lvl":"info","case":"converts passing tests to Laminar format","phase":"execution","evt":"test.run"}
+{"ts":1760303269960,"lvl":"info","case":"converts passing tests to Laminar format","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/junitIngest.spec/creates_case_begin_events_for_test_start.jsonl b/reports/junitIngest.spec/creates_case_begin_events_for_test_start.jsonl
new file mode 100644
index 0000000..e1b3d85
--- /dev/null
+++ b/reports/junitIngest.spec/creates_case_begin_events_for_test_start.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303269958,"lvl":"info","case":"creates case.begin events for test start","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269959,"lvl":"info","case":"creates case.begin events for test start","phase":"execution","evt":"test.run"}
+{"ts":1760303269960,"lvl":"info","case":"creates case.begin events for test start","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/junitIngest.spec/creates_case_end_events_for_test_completion.jsonl b/reports/junitIngest.spec/creates_case_end_events_for_test_completion.jsonl
new file mode 100644
index 0000000..890826e
--- /dev/null
+++ b/reports/junitIngest.spec/creates_case_end_events_for_test_completion.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303269959,"lvl":"info","case":"creates case.end events for test completion","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269960,"lvl":"info","case":"creates case.end events for test completion","phase":"execution","evt":"test.run"}
+{"ts":1760303269961,"lvl":"info","case":"creates case.end events for test completion","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/junitIngest.spec/creates_test_run_events_for_test_execution.jsonl b/reports/junitIngest.spec/creates_test_run_events_for_test_execution.jsonl
new file mode 100644
index 0000000..9060764
--- /dev/null
+++ b/reports/junitIngest.spec/creates_test_run_events_for_test_execution.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303269959,"lvl":"info","case":"creates test.run events for test execution","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269960,"lvl":"info","case":"creates test.run events for test execution","phase":"execution","evt":"test.run"}
+{"ts":1760303269961,"lvl":"info","case":"creates test.run events for test execution","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/junitIngest.spec/decodes_XML_entities_in_error_messages.jsonl b/reports/junitIngest.spec/decodes_XML_entities_in_error_messages.jsonl
new file mode 100644
index 0000000..165e0b2
--- /dev/null
+++ b/reports/junitIngest.spec/decodes_XML_entities_in_error_messages.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303269958,"lvl":"info","case":"decodes XML entities in error messages","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269959,"lvl":"info","case":"decodes XML entities in error messages","phase":"execution","evt":"test.run"}
+{"ts":1760303269960,"lvl":"info","case":"decodes XML entities in error messages","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/junitIngest.spec/extracts_error_messages_and_stack_traces.jsonl b/reports/junitIngest.spec/extracts_error_messages_and_stack_traces.jsonl
new file mode 100644
index 0000000..6fefc36
--- /dev/null
+++ b/reports/junitIngest.spec/extracts_error_messages_and_stack_traces.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303269957,"lvl":"info","case":"extracts error messages and stack traces","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269958,"lvl":"info","case":"extracts error messages and stack traces","phase":"execution","evt":"test.run"}
+{"ts":1760303269959,"lvl":"info","case":"extracts error messages and stack traces","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/junitIngest.spec/extracts_error_messages_from_failures.jsonl b/reports/junitIngest.spec/extracts_error_messages_from_failures.jsonl
new file mode 100644
index 0000000..b39f384
--- /dev/null
+++ b/reports/junitIngest.spec/extracts_error_messages_from_failures.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303269959,"lvl":"info","case":"extracts error messages from failures","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269960,"lvl":"info","case":"extracts error messages from failures","phase":"execution","evt":"test.run"}
+{"ts":1760303269961,"lvl":"info","case":"extracts error messages from failures","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/junitIngest.spec/extracts_failure_messages_and_stack_traces.jsonl b/reports/junitIngest.spec/extracts_failure_messages_and_stack_traces.jsonl
new file mode 100644
index 0000000..2fcf9f1
--- /dev/null
+++ b/reports/junitIngest.spec/extracts_failure_messages_and_stack_traces.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303269956,"lvl":"info","case":"extracts failure messages and stack traces","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269957,"lvl":"info","case":"extracts failure messages and stack traces","phase":"execution","evt":"test.run"}
+{"ts":1760303269958,"lvl":"info","case":"extracts failure messages and stack traces","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/junitIngest.spec/extracts_skipped_test_messages.jsonl b/reports/junitIngest.spec/extracts_skipped_test_messages.jsonl
new file mode 100644
index 0000000..38d12c6
--- /dev/null
+++ b/reports/junitIngest.spec/extracts_skipped_test_messages.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303269957,"lvl":"info","case":"extracts skipped test messages","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269958,"lvl":"info","case":"extracts skipped test messages","phase":"execution","evt":"test.run"}
+{"ts":1760303269959,"lvl":"info","case":"extracts skipped test messages","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/junitIngest.spec/extracts_stack_traces_from_errors.jsonl b/reports/junitIngest.spec/extracts_stack_traces_from_errors.jsonl
new file mode 100644
index 0000000..4c26043
--- /dev/null
+++ b/reports/junitIngest.spec/extracts_stack_traces_from_errors.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303269959,"lvl":"info","case":"extracts stack traces from errors","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269960,"lvl":"info","case":"extracts stack traces from errors","phase":"execution","evt":"test.run"}
+{"ts":1760303269961,"lvl":"info","case":"extracts stack traces from errors","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/junitIngest.spec/generates_correct_summary_for_all_test_outcomes.jsonl b/reports/junitIngest.spec/generates_correct_summary_for_all_test_outcomes.jsonl
new file mode 100644
index 0000000..00e71dd
--- /dev/null
+++ b/reports/junitIngest.spec/generates_correct_summary_for_all_test_outcomes.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303269959,"lvl":"info","case":"generates correct summary for all test outcomes","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269960,"lvl":"info","case":"generates correct summary for all test outcomes","phase":"execution","evt":"test.run"}
+{"ts":1760303269961,"lvl":"info","case":"generates correct summary for all test outcomes","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/junitIngest.spec/groups_events_by_test_case_correctly.jsonl b/reports/junitIngest.spec/groups_events_by_test_case_correctly.jsonl
new file mode 100644
index 0000000..7e57f3b
--- /dev/null
+++ b/reports/junitIngest.spec/groups_events_by_test_case_correctly.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303269961,"lvl":"info","case":"groups events by test case correctly","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269962,"lvl":"info","case":"groups events by test case correctly","phase":"execution","evt":"test.run"}
+{"ts":1760303269963,"lvl":"info","case":"groups events by test case correctly","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/junitIngest.spec/handles_empty_XML.jsonl b/reports/junitIngest.spec/handles_empty_XML.jsonl
new file mode 100644
index 0000000..33b9ab1
--- /dev/null
+++ b/reports/junitIngest.spec/handles_empty_XML.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303269958,"lvl":"info","case":"handles empty XML","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269959,"lvl":"info","case":"handles empty XML","phase":"execution","evt":"test.run"}
+{"ts":1760303269960,"lvl":"info","case":"handles empty XML","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/junitIngest.spec/handles_empty_test_suites.jsonl b/reports/junitIngest.spec/handles_empty_test_suites.jsonl
new file mode 100644
index 0000000..370240b
--- /dev/null
+++ b/reports/junitIngest.spec/handles_empty_test_suites.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303269960,"lvl":"info","case":"handles empty test suites","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269961,"lvl":"info","case":"handles empty test suites","phase":"execution","evt":"test.run"}
+{"ts":1760303269962,"lvl":"info","case":"handles empty test suites","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/junitIngest.spec/handles_failed_tests_with_error_events.jsonl b/reports/junitIngest.spec/handles_failed_tests_with_error_events.jsonl
new file mode 100644
index 0000000..f113c46
--- /dev/null
+++ b/reports/junitIngest.spec/handles_failed_tests_with_error_events.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303269959,"lvl":"info","case":"handles failed tests with error events","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269960,"lvl":"info","case":"handles failed tests with error events","phase":"execution","evt":"test.run"}
+{"ts":1760303269961,"lvl":"info","case":"handles failed tests with error events","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/junitIngest.spec/handles_multiple_test_suites.jsonl b/reports/junitIngest.spec/handles_multiple_test_suites.jsonl
new file mode 100644
index 0000000..9f069f3
--- /dev/null
+++ b/reports/junitIngest.spec/handles_multiple_test_suites.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303269960,"lvl":"info","case":"handles multiple test suites","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269961,"lvl":"info","case":"handles multiple test suites","phase":"execution","evt":"test.run"}
+{"ts":1760303269962,"lvl":"info","case":"handles multiple test suites","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/junitIngest.spec/handles_skipped_tests_correctly.jsonl b/reports/junitIngest.spec/handles_skipped_tests_correctly.jsonl
new file mode 100644
index 0000000..6f156a2
--- /dev/null
+++ b/reports/junitIngest.spec/handles_skipped_tests_correctly.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303269959,"lvl":"info","case":"handles skipped tests correctly","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269960,"lvl":"info","case":"handles skipped tests correctly","phase":"execution","evt":"test.run"}
+{"ts":1760303269961,"lvl":"info","case":"handles skipped tests correctly","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/junitIngest.spec/handles_skipped_tests_without_messages.jsonl b/reports/junitIngest.spec/handles_skipped_tests_without_messages.jsonl
new file mode 100644
index 0000000..a2a7b02
--- /dev/null
+++ b/reports/junitIngest.spec/handles_skipped_tests_without_messages.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303269957,"lvl":"info","case":"handles skipped tests without messages","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269958,"lvl":"info","case":"handles skipped tests without messages","phase":"execution","evt":"test.run"}
+{"ts":1760303269959,"lvl":"info","case":"handles skipped tests without messages","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/junitIngest.spec/includes_artifactURI_in_summary_entries.jsonl b/reports/junitIngest.spec/includes_artifactURI_in_summary_entries.jsonl
new file mode 100644
index 0000000..2d253e1
--- /dev/null
+++ b/reports/junitIngest.spec/includes_artifactURI_in_summary_entries.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303269960,"lvl":"info","case":"includes artifactURI in summary entries","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269961,"lvl":"info","case":"includes artifactURI in summary entries","phase":"execution","evt":"test.run"}
+{"ts":1760303269962,"lvl":"info","case":"includes artifactURI in summary entries","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/junitIngest.spec/includes_duration_in_summary_entries.jsonl b/reports/junitIngest.spec/includes_duration_in_summary_entries.jsonl
new file mode 100644
index 0000000..447e963
--- /dev/null
+++ b/reports/junitIngest.spec/includes_duration_in_summary_entries.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303269959,"lvl":"info","case":"includes duration in summary entries","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269960,"lvl":"info","case":"includes duration in summary entries","phase":"execution","evt":"test.run"}
+{"ts":1760303269961,"lvl":"info","case":"includes duration in summary entries","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/junitIngest.spec/includes_errorMessage_for_failed_tests_in_summary.jsonl b/reports/junitIngest.spec/includes_errorMessage_for_failed_tests_in_summary.jsonl
new file mode 100644
index 0000000..682c1cd
--- /dev/null
+++ b/reports/junitIngest.spec/includes_errorMessage_for_failed_tests_in_summary.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303269960,"lvl":"info","case":"includes errorMessage for failed tests in summary","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269961,"lvl":"info","case":"includes errorMessage for failed tests in summary","phase":"execution","evt":"test.run"}
+{"ts":1760303269962,"lvl":"info","case":"includes errorMessage for failed tests in summary","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/junitIngest.spec/includes_location_in_summary_entries.jsonl b/reports/junitIngest.spec/includes_location_in_summary_entries.jsonl
new file mode 100644
index 0000000..67f3477
--- /dev/null
+++ b/reports/junitIngest.spec/includes_location_in_summary_entries.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303269960,"lvl":"info","case":"includes location in summary entries","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269961,"lvl":"info","case":"includes location in summary entries","phase":"execution","evt":"test.run"}
+{"ts":1760303269962,"lvl":"info","case":"includes location in summary entries","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/junitIngest.spec/includes_testName_in_summary_entries.jsonl b/reports/junitIngest.spec/includes_testName_in_summary_entries.jsonl
new file mode 100644
index 0000000..7b5e419
--- /dev/null
+++ b/reports/junitIngest.spec/includes_testName_in_summary_entries.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303269960,"lvl":"info","case":"includes testName in summary entries","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269961,"lvl":"info","case":"includes testName in summary entries","phase":"execution","evt":"test.run"}
+{"ts":1760303269962,"lvl":"info","case":"includes testName in summary entries","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/junitIngest.spec/parses_fixtures_with_failures.jsonl b/reports/junitIngest.spec/parses_fixtures_with_failures.jsonl
new file mode 100644
index 0000000..4df5b63
--- /dev/null
+++ b/reports/junitIngest.spec/parses_fixtures_with_failures.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303269956,"lvl":"info","case":"parses fixtures with failures","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269957,"lvl":"info","case":"parses fixtures with failures","phase":"execution","evt":"test.run"}
+{"ts":1760303269958,"lvl":"info","case":"parses fixtures with failures","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/junitIngest.spec/parses_fixtures_with_skipped_tests.jsonl b/reports/junitIngest.spec/parses_fixtures_with_skipped_tests.jsonl
new file mode 100644
index 0000000..c6dfa08
--- /dev/null
+++ b/reports/junitIngest.spec/parses_fixtures_with_skipped_tests.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303269957,"lvl":"info","case":"parses fixtures with skipped tests","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269958,"lvl":"info","case":"parses fixtures with skipped tests","phase":"execution","evt":"test.run"}
+{"ts":1760303269959,"lvl":"info","case":"parses fixtures with skipped tests","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/junitIngest.spec/parses_nested_test_suites.jsonl b/reports/junitIngest.spec/parses_nested_test_suites.jsonl
new file mode 100644
index 0000000..1ce77ba
--- /dev/null
+++ b/reports/junitIngest.spec/parses_nested_test_suites.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303269957,"lvl":"info","case":"parses nested test suites","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269958,"lvl":"info","case":"parses nested test suites","phase":"execution","evt":"test.run"}
+{"ts":1760303269959,"lvl":"info","case":"parses nested test suites","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/junitIngest.spec/parses_simple_passing_test_fixture.jsonl b/reports/junitIngest.spec/parses_simple_passing_test_fixture.jsonl
new file mode 100644
index 0000000..6b52f5a
--- /dev/null
+++ b/reports/junitIngest.spec/parses_simple_passing_test_fixture.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303269955,"lvl":"info","case":"parses simple passing test fixture","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269956,"lvl":"info","case":"parses simple passing test fixture","phase":"execution","evt":"test.run"}
+{"ts":1760303269957,"lvl":"info","case":"parses simple passing test fixture","phase":"teardown","evt":"case.end","payload":{"duration":4,"status":"passed"}}
diff --git a/reports/junitIngest.spec/parses_test_cases_across_multiple_suites.jsonl b/reports/junitIngest.spec/parses_test_cases_across_multiple_suites.jsonl
new file mode 100644
index 0000000..b90942d
--- /dev/null
+++ b/reports/junitIngest.spec/parses_test_cases_across_multiple_suites.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303269958,"lvl":"info","case":"parses test cases across multiple suites","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269959,"lvl":"info","case":"parses test cases across multiple suites","phase":"execution","evt":"test.run"}
+{"ts":1760303269960,"lvl":"info","case":"parses test cases across multiple suites","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/junitIngest.spec/parses_test_cases_correctly.jsonl b/reports/junitIngest.spec/parses_test_cases_correctly.jsonl
new file mode 100644
index 0000000..83e4fdd
--- /dev/null
+++ b/reports/junitIngest.spec/parses_test_cases_correctly.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303269956,"lvl":"info","case":"parses test cases correctly","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269957,"lvl":"info","case":"parses test cases correctly","phase":"execution","evt":"test.run"}
+{"ts":1760303269958,"lvl":"info","case":"parses test cases correctly","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/junitIngest.spec/parses_time_attributes_correctly.jsonl b/reports/junitIngest.spec/parses_time_attributes_correctly.jsonl
new file mode 100644
index 0000000..5983620
--- /dev/null
+++ b/reports/junitIngest.spec/parses_time_attributes_correctly.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303269958,"lvl":"info","case":"parses time attributes correctly","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269959,"lvl":"info","case":"parses time attributes correctly","phase":"execution","evt":"test.run"}
+{"ts":1760303269960,"lvl":"info","case":"parses time attributes correctly","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/junitIngest.spec/preserves_timestamp_ordering.jsonl b/reports/junitIngest.spec/preserves_timestamp_ordering.jsonl
new file mode 100644
index 0000000..57a21ff
--- /dev/null
+++ b/reports/junitIngest.spec/preserves_timestamp_ordering.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303269960,"lvl":"info","case":"preserves timestamp ordering","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269961,"lvl":"info","case":"preserves timestamp ordering","phase":"execution","evt":"test.run"}
+{"ts":1760303269962,"lvl":"info","case":"preserves timestamp ordering","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/junitIngest.spec/processes_nested_test_suites_correctly.jsonl b/reports/junitIngest.spec/processes_nested_test_suites_correctly.jsonl
new file mode 100644
index 0000000..09ade85
--- /dev/null
+++ b/reports/junitIngest.spec/processes_nested_test_suites_correctly.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303269961,"lvl":"info","case":"processes nested test suites correctly","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269962,"lvl":"info","case":"processes nested test suites correctly","phase":"execution","evt":"test.run"}
+{"ts":1760303269963,"lvl":"info","case":"processes nested test suites correctly","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/junitIngest.spec/processes_simple_passing_tests_from_parsing_to_output.jsonl b/reports/junitIngest.spec/processes_simple_passing_tests_from_parsing_to_output.jsonl
new file mode 100644
index 0000000..c9a46f1
--- /dev/null
+++ b/reports/junitIngest.spec/processes_simple_passing_tests_from_parsing_to_output.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303269961,"lvl":"info","case":"processes simple passing tests from parsing to output","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269962,"lvl":"info","case":"processes simple passing tests from parsing to output","phase":"execution","evt":"test.run"}
+{"ts":1760303269963,"lvl":"info","case":"processes simple passing tests from parsing to output","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/junitIngest.spec/processes_tests_with_failures_and_errors.jsonl b/reports/junitIngest.spec/processes_tests_with_failures_and_errors.jsonl
new file mode 100644
index 0000000..db5ac84
--- /dev/null
+++ b/reports/junitIngest.spec/processes_tests_with_failures_and_errors.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303269961,"lvl":"info","case":"processes tests with failures and errors","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269962,"lvl":"info","case":"processes tests with failures and errors","phase":"execution","evt":"test.run"}
+{"ts":1760303269963,"lvl":"info","case":"processes tests with failures and errors","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/junitIngest.spec/processes_tests_with_skipped_tests.jsonl b/reports/junitIngest.spec/processes_tests_with_skipped_tests.jsonl
new file mode 100644
index 0000000..9444f35
--- /dev/null
+++ b/reports/junitIngest.spec/processes_tests_with_skipped_tests.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303269961,"lvl":"info","case":"processes tests with skipped tests","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269962,"lvl":"info","case":"processes tests with skipped tests","phase":"execution","evt":"test.run"}
+{"ts":1760303269963,"lvl":"info","case":"processes tests with skipped tests","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/junitIngest.spec/validates_Laminar_event_structure.jsonl b/reports/junitIngest.spec/validates_Laminar_event_structure.jsonl
new file mode 100644
index 0000000..9b92dbf
--- /dev/null
+++ b/reports/junitIngest.spec/validates_Laminar_event_structure.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303269960,"lvl":"info","case":"validates Laminar event structure","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269961,"lvl":"info","case":"validates Laminar event structure","phase":"execution","evt":"test.run"}
+{"ts":1760303269962,"lvl":"info","case":"validates Laminar event structure","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
diff --git a/reports/junitIngest.spec/writes_JSONL_files_per_test_case_in_suite_directories.jsonl b/reports/junitIngest.spec/writes_JSONL_files_per_test_case_in_suite_directories.jsonl
new file mode 100644
index 0000000..3ebaa96
--- /dev/null
+++ b/reports/junitIngest.spec/writes_JSONL_files_per_test_case_in_suite_directories.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303269961,"lvl":"info","case":"writes JSONL files per test case in suite directories","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269962,"lvl":"info","case":"writes JSONL files per test case in suite directories","phase":"execution","evt":"test.run"}
+{"ts":1760303269963,"lvl":"info","case":"writes JSONL files per test case in suite directories","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/junitIngest.spec/writes_summary_jsonl_file.jsonl b/reports/junitIngest.spec/writes_summary_jsonl_file.jsonl
new file mode 100644
index 0000000..806afd2
--- /dev/null
+++ b/reports/junitIngest.spec/writes_summary_jsonl_file.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303269961,"lvl":"info","case":"writes summary.jsonl file","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269962,"lvl":"info","case":"writes summary.jsonl file","phase":"execution","evt":"test.run"}
+{"ts":1760303269963,"lvl":"info","case":"writes summary.jsonl file","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/junitIngest.spec/writes_valid_JSONL_format.jsonl b/reports/junitIngest.spec/writes_valid_JSONL_format.jsonl
new file mode 100644
index 0000000..6bc9a26
--- /dev/null
+++ b/reports/junitIngest.spec/writes_valid_JSONL_format.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303269961,"lvl":"info","case":"writes valid JSONL format","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269962,"lvl":"info","case":"writes valid JSONL format","phase":"execution","evt":"test.run"}
+{"ts":1760303269963,"lvl":"info","case":"writes valid JSONL format","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
diff --git a/reports/kernel.spec/connect_moves_data_1_1.jsonl b/reports/kernel.spec/connect_moves_data_1_1.jsonl
index 8f7f242..9488bb8 100644
--- a/reports/kernel.spec/connect_moves_data_1_1.jsonl
+++ b/reports/kernel.spec/connect_moves_data_1_1.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274586,"lvl":"info","case":"connect moves data 1:1","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274587,"lvl":"info","case":"connect moves data 1:1","phase":"execution","evt":"test.run"}
-{"ts":1760297274588,"lvl":"info","case":"connect moves data 1:1","phase":"teardown","evt":"case.end","payload":{"duration":5,"status":"passed"}}
+{"ts":1760303270138,"lvl":"info","case":"connect moves data 1:1","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270139,"lvl":"info","case":"connect moves data 1:1","phase":"execution","evt":"test.run"}
+{"ts":1760303270140,"lvl":"info","case":"connect moves data 1:1","phase":"teardown","evt":"case.end","payload":{"duration":15,"status":"passed"}}
diff --git a/reports/kernel.spec/merge_combines_multiple_sources_into_one_destination.jsonl b/reports/kernel.spec/merge_combines_multiple_sources_into_one_destination.jsonl
index 9705d92..187afda 100644
--- a/reports/kernel.spec/merge_combines_multiple_sources_into_one_destination.jsonl
+++ b/reports/kernel.spec/merge_combines_multiple_sources_into_one_destination.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274586,"lvl":"info","case":"merge combines multiple sources into one destination","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274587,"lvl":"info","case":"merge combines multiple sources into one destination","phase":"execution","evt":"test.run"}
-{"ts":1760297274588,"lvl":"info","case":"merge combines multiple sources into one destination","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270138,"lvl":"info","case":"merge combines multiple sources into one destination","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270139,"lvl":"info","case":"merge combines multiple sources into one destination","phase":"execution","evt":"test.run"}
+{"ts":1760303270140,"lvl":"info","case":"merge combines multiple sources into one destination","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
diff --git a/reports/kernel.spec/register_lookup_filters_by_capabilities.jsonl b/reports/kernel.spec/register_lookup_filters_by_capabilities.jsonl
index 7e66c2d..7f54f45 100644
--- a/reports/kernel.spec/register_lookup_filters_by_capabilities.jsonl
+++ b/reports/kernel.spec/register_lookup_filters_by_capabilities.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274587,"lvl":"info","case":"register/lookup filters by capabilities","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274588,"lvl":"info","case":"register/lookup filters by capabilities","phase":"execution","evt":"test.run"}
-{"ts":1760297274589,"lvl":"info","case":"register/lookup filters by capabilities","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270138,"lvl":"info","case":"register/lookup filters by capabilities","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270139,"lvl":"info","case":"register/lookup filters by capabilities","phase":"execution","evt":"test.run"}
+{"ts":1760303270140,"lvl":"info","case":"register/lookup filters by capabilities","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
diff --git a/reports/kernel.spec/split_fans_out_to_multiple_destinations.jsonl b/reports/kernel.spec/split_fans_out_to_multiple_destinations.jsonl
index b84f7a5..06fbea5 100644
--- a/reports/kernel.spec/split_fans_out_to_multiple_destinations.jsonl
+++ b/reports/kernel.spec/split_fans_out_to_multiple_destinations.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274586,"lvl":"info","case":"split fans out to multiple destinations","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274587,"lvl":"info","case":"split fans out to multiple destinations","phase":"execution","evt":"test.run"}
-{"ts":1760297274588,"lvl":"info","case":"split fans out to multiple destinations","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270138,"lvl":"info","case":"split fans out to multiple destinations","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270139,"lvl":"info","case":"split fans out to multiple destinations","phase":"execution","evt":"test.run"}
+{"ts":1760303270140,"lvl":"info","case":"split fans out to multiple destinations","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/allows_overlay_rules_to_be_overwritten.jsonl b/reports/laminarMcp.spec/allows_overlay_rules_to_be_overwritten.jsonl
index 9eaf5cc..e51ac48 100644
--- a/reports/laminarMcp.spec/allows_overlay_rules_to_be_overwritten.jsonl
+++ b/reports/laminarMcp.spec/allows_overlay_rules_to_be_overwritten.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274757,"lvl":"info","case":"allows overlay rules to be overwritten","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274758,"lvl":"info","case":"allows overlay rules to be overwritten","phase":"execution","evt":"test.run"}
-{"ts":1760297274759,"lvl":"info","case":"allows overlay rules to be overwritten","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
+{"ts":1760303270402,"lvl":"info","case":"allows overlay rules to be overwritten","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270403,"lvl":"info","case":"allows overlay rules to be overwritten","phase":"execution","evt":"test.run"}
+{"ts":1760303270404,"lvl":"info","case":"allows overlay rules to be overwritten","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/clears_overlay_rules_successfully.jsonl b/reports/laminarMcp.spec/clears_overlay_rules_successfully.jsonl
index 26d04dd..daa8e96 100644
--- a/reports/laminarMcp.spec/clears_overlay_rules_successfully.jsonl
+++ b/reports/laminarMcp.spec/clears_overlay_rules_successfully.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274754,"lvl":"info","case":"clears overlay rules successfully","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274755,"lvl":"info","case":"clears overlay rules successfully","phase":"execution","evt":"test.run"}
-{"ts":1760297274756,"lvl":"info","case":"clears overlay rules successfully","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270398,"lvl":"info","case":"clears overlay rules successfully","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270399,"lvl":"info","case":"clears overlay rules successfully","phase":"execution","evt":"test.run"}
+{"ts":1760303270400,"lvl":"info","case":"clears overlay rules successfully","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/executes_test_run_with_case_filter.jsonl b/reports/laminarMcp.spec/executes_test_run_with_case_filter.jsonl
deleted file mode 100644
index 9e49de2..0000000
--- a/reports/laminarMcp.spec/executes_test_run_with_case_filter.jsonl
+++ /dev/null
@@ -1,3 +0,0 @@
-{"ts":1760295631126,"lvl":"info","case":"executes test run with case filter","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760295631127,"lvl":"info","case":"executes test run with case filter","phase":"execution","evt":"test.run"}
-{"ts":1760295631128,"lvl":"info","case":"executes test run with case filter","phase":"teardown","evt":"case.end","payload":{"duration":7498,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/executes_test_run_with_default_options.jsonl b/reports/laminarMcp.spec/executes_test_run_with_default_options.jsonl
deleted file mode 100644
index d0fc6ff..0000000
--- a/reports/laminarMcp.spec/executes_test_run_with_default_options.jsonl
+++ /dev/null
@@ -1,3 +0,0 @@
-{"ts":1760295631123,"lvl":"info","case":"executes test run with default options","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760295631124,"lvl":"info","case":"executes test run with default options","phase":"execution","evt":"test.run"}
-{"ts":1760295631125,"lvl":"info","case":"executes test run with default options","phase":"teardown","evt":"case.end","payload":{"duration":203010,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/executes_test_run_with_flake_detection.jsonl b/reports/laminarMcp.spec/executes_test_run_with_flake_detection.jsonl
deleted file mode 100644
index 650f0bd..0000000
--- a/reports/laminarMcp.spec/executes_test_run_with_flake_detection.jsonl
+++ /dev/null
@@ -1,3 +0,0 @@
-{"ts":1760295631126,"lvl":"info","case":"executes test run with flake detection","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760295631127,"lvl":"info","case":"executes test run with flake detection","phase":"execution","evt":"test.run"}
-{"ts":1760295631128,"lvl":"info","case":"executes test run with flake detection","phase":"teardown","evt":"case.end","payload":{"duration":4896,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/executes_test_run_with_suite_filter.jsonl b/reports/laminarMcp.spec/executes_test_run_with_suite_filter.jsonl
deleted file mode 100644
index 8f4b6ea..0000000
--- a/reports/laminarMcp.spec/executes_test_run_with_suite_filter.jsonl
+++ /dev/null
@@ -1,3 +0,0 @@
-{"ts":1760295631125,"lvl":"info","case":"executes test run with suite filter","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760295631126,"lvl":"info","case":"executes test run with suite filter","phase":"execution","evt":"test.run"}
-{"ts":1760295631127,"lvl":"info","case":"executes test run with suite filter","phase":"teardown","evt":"case.end","payload":{"duration":7617,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/filters_by_event_type.jsonl b/reports/laminarMcp.spec/filters_by_event_type.jsonl
index 750876a..cfa265d 100644
--- a/reports/laminarMcp.spec/filters_by_event_type.jsonl
+++ b/reports/laminarMcp.spec/filters_by_event_type.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274752,"lvl":"info","case":"filters by event type","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274753,"lvl":"info","case":"filters by event type","phase":"execution","evt":"test.run"}
-{"ts":1760297274754,"lvl":"info","case":"filters by event type","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270396,"lvl":"info","case":"filters by event type","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270397,"lvl":"info","case":"filters by event type","phase":"execution","evt":"test.run"}
+{"ts":1760303270398,"lvl":"info","case":"filters by event type","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/filters_by_log_level.jsonl b/reports/laminarMcp.spec/filters_by_log_level.jsonl
index 45373c7..c784741 100644
--- a/reports/laminarMcp.spec/filters_by_log_level.jsonl
+++ b/reports/laminarMcp.spec/filters_by_log_level.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274752,"lvl":"info","case":"filters by log level","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274753,"lvl":"info","case":"filters by log level","phase":"execution","evt":"test.run"}
-{"ts":1760297274754,"lvl":"info","case":"filters by log level","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270395,"lvl":"info","case":"filters by log level","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270396,"lvl":"info","case":"filters by log level","phase":"execution","evt":"test.run"}
+{"ts":1760303270397,"lvl":"info","case":"filters by log level","phase":"teardown","evt":"case.end","payload":{"duration":4,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/filters_repro_commands_by_caseName.jsonl b/reports/laminarMcp.spec/filters_repro_commands_by_caseName.jsonl
index 87eb96c..36e1de7 100644
--- a/reports/laminarMcp.spec/filters_repro_commands_by_caseName.jsonl
+++ b/reports/laminarMcp.spec/filters_repro_commands_by_caseName.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274753,"lvl":"info","case":"filters repro commands by caseName","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274754,"lvl":"info","case":"filters repro commands by caseName","phase":"execution","evt":"test.run"}
-{"ts":1760297274755,"lvl":"info","case":"filters repro commands by caseName","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270397,"lvl":"info","case":"filters repro commands by caseName","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270398,"lvl":"info","case":"filters repro commands by caseName","phase":"execution","evt":"test.run"}
+{"ts":1760303270399,"lvl":"info","case":"filters repro commands by caseName","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/generates_digests_for_all_failing_cases.jsonl b/reports/laminarMcp.spec/generates_digests_for_all_failing_cases.jsonl
index 3e82e84..5bcd757 100644
--- a/reports/laminarMcp.spec/generates_digests_for_all_failing_cases.jsonl
+++ b/reports/laminarMcp.spec/generates_digests_for_all_failing_cases.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274751,"lvl":"info","case":"generates digests for all failing cases","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274752,"lvl":"info","case":"generates digests for all failing cases","phase":"execution","evt":"test.run"}
-{"ts":1760297274753,"lvl":"info","case":"generates digests for all failing cases","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270394,"lvl":"info","case":"generates digests for all failing cases","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270395,"lvl":"info","case":"generates digests for all failing cases","phase":"execution","evt":"test.run"}
+{"ts":1760303270396,"lvl":"info","case":"generates digests for all failing cases","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/generates_digests_for_specific_cases.jsonl b/reports/laminarMcp.spec/generates_digests_for_specific_cases.jsonl
index 7856815..1c596ab 100644
--- a/reports/laminarMcp.spec/generates_digests_for_specific_cases.jsonl
+++ b/reports/laminarMcp.spec/generates_digests_for_specific_cases.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274750,"lvl":"info","case":"generates digests for specific cases","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274751,"lvl":"info","case":"generates digests for specific cases","phase":"execution","evt":"test.run"}
-{"ts":1760297274752,"lvl":"info","case":"generates digests for specific cases","phase":"teardown","evt":"case.end","payload":{"duration":5,"status":"passed"}}
+{"ts":1760303270394,"lvl":"info","case":"generates digests for specific cases","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270395,"lvl":"info","case":"generates digests for specific cases","phase":"execution","evt":"test.run"}
+{"ts":1760303270396,"lvl":"info","case":"generates digests for specific cases","phase":"teardown","evt":"case.end","payload":{"duration":6,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/gets_rules_from_existing_config.jsonl b/reports/laminarMcp.spec/gets_rules_from_existing_config.jsonl
index 9b70ec2..4f58403 100644
--- a/reports/laminarMcp.spec/gets_rules_from_existing_config.jsonl
+++ b/reports/laminarMcp.spec/gets_rules_from_existing_config.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274749,"lvl":"info","case":"gets rules from existing config","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274750,"lvl":"info","case":"gets rules from existing config","phase":"execution","evt":"test.run"}
-{"ts":1760297274751,"lvl":"info","case":"gets rules from existing config","phase":"teardown","evt":"case.end","payload":{"duration":8,"status":"passed"}}
+{"ts":1760303270393,"lvl":"info","case":"gets rules from existing config","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270394,"lvl":"info","case":"gets rules from existing config","phase":"execution","evt":"test.run"}
+{"ts":1760303270395,"lvl":"info","case":"gets rules from existing config","phase":"teardown","evt":"case.end","payload":{"duration":9,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/handles_concurrent_overlay_operations.jsonl b/reports/laminarMcp.spec/handles_concurrent_overlay_operations.jsonl
index 9dadd13..722f57e 100644
--- a/reports/laminarMcp.spec/handles_concurrent_overlay_operations.jsonl
+++ b/reports/laminarMcp.spec/handles_concurrent_overlay_operations.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274755,"lvl":"info","case":"handles concurrent overlay operations","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274756,"lvl":"info","case":"handles concurrent overlay operations","phase":"execution","evt":"test.run"}
-{"ts":1760297274757,"lvl":"info","case":"handles concurrent overlay operations","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270400,"lvl":"info","case":"handles concurrent overlay operations","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270401,"lvl":"info","case":"handles concurrent overlay operations","phase":"execution","evt":"test.run"}
+{"ts":1760303270402,"lvl":"info","case":"handles concurrent overlay operations","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/handles_concurrent_query_calls.jsonl b/reports/laminarMcp.spec/handles_concurrent_query_calls.jsonl
index 32d42c8..30ef23f 100644
--- a/reports/laminarMcp.spec/handles_concurrent_query_calls.jsonl
+++ b/reports/laminarMcp.spec/handles_concurrent_query_calls.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274755,"lvl":"info","case":"handles concurrent query calls","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274756,"lvl":"info","case":"handles concurrent query calls","phase":"execution","evt":"test.run"}
-{"ts":1760297274757,"lvl":"info","case":"handles concurrent query calls","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270399,"lvl":"info","case":"handles concurrent query calls","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270400,"lvl":"info","case":"handles concurrent query calls","phase":"execution","evt":"test.run"}
+{"ts":1760303270401,"lvl":"info","case":"handles concurrent query calls","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/handles_concurrent_rules_get_set.jsonl b/reports/laminarMcp.spec/handles_concurrent_rules_get_set.jsonl
index c4a959a..fcf787b 100644
--- a/reports/laminarMcp.spec/handles_concurrent_rules_get_set.jsonl
+++ b/reports/laminarMcp.spec/handles_concurrent_rules_get_set.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274756,"lvl":"info","case":"handles concurrent rules get/set","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274757,"lvl":"info","case":"handles concurrent rules get/set","phase":"execution","evt":"test.run"}
-{"ts":1760297274758,"lvl":"info","case":"handles concurrent rules get/set","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270400,"lvl":"info","case":"handles concurrent rules get/set","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270401,"lvl":"info","case":"handles concurrent rules get/set","phase":"execution","evt":"test.run"}
+{"ts":1760303270402,"lvl":"info","case":"handles concurrent rules get/set","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/handles_empty_case_name.jsonl b/reports/laminarMcp.spec/handles_empty_case_name.jsonl
index b5540c8..812cc84 100644
--- a/reports/laminarMcp.spec/handles_empty_case_name.jsonl
+++ b/reports/laminarMcp.spec/handles_empty_case_name.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274756,"lvl":"info","case":"handles empty case name","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274757,"lvl":"info","case":"handles empty case name","phase":"execution","evt":"test.run"}
-{"ts":1760297274758,"lvl":"info","case":"handles empty case name","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270401,"lvl":"info","case":"handles empty case name","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270402,"lvl":"info","case":"handles empty case name","phase":"execution","evt":"test.run"}
+{"ts":1760303270403,"lvl":"info","case":"handles empty case name","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/handles_malformed_summary_file.digest.json b/reports/laminarMcp.spec/handles_malformed_summary_file.digest.json
deleted file mode 100644
index 257e077..0000000
--- a/reports/laminarMcp.spec/handles_malformed_summary_file.digest.json
+++ /dev/null
@@ -1,157 +0,0 @@
-{
-  "case": "handles_malformed_summary_file",
-  "status": "fail",
-  "duration": 4,
-  "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
-  "error": "Tool execution failed: Unexpected token 'i', \"invalid json\" is not valid JSON",
-  "summary": {
-    "totalEvents": 4,
-    "includedEvents": 2,
-    "redactedFields": 0,
-    "budgetUsed": 2412,
-    "budgetLimit": 10240
-  },
-  "suspects": [
-    {
-      "ts": 1760295438770,
-      "lvl": "error",
-      "case": "handles malformed summary file",
-      "phase": "teardown",
-      "evt": "case.end",
-      "payload": {
-        "duration": 4,
-        "status": "failed"
-      },
-      "score": 80,
-      "reasons": [
-        "error level",
-        "close proximity to failure"
-      ]
-    },
-    {
-      "ts": 1760295438769,
-      "lvl": "error",
-      "case": "handles malformed summary file",
-      "phase": "execution",
-      "evt": "test.error",
-      "payload": {
-        "message": "Tool execution failed: Unexpected token 'i', \"invalid json\" is not valid JSON",
-        "stack": "McpError: Tool execution failed: Unexpected token 'i', \"invalid json\" is not valid JSON\n    at LaminarMcpServer.callTool (/srv/repos0/mkolbol/src/mcp/laminar/server.ts:610:13)\n    at /srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:566:22\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)"
-      },
-      "score": 79.99,
-      "reasons": [
-        "error level",
-        "close proximity to failure"
-      ]
-    },
-    {
-      "ts": 1760295438768,
-      "lvl": "info",
-      "case": "handles malformed summary file",
-      "phase": "execution",
-      "evt": "test.run",
-      "score": 29.98,
-      "reasons": [
-        "close proximity to failure"
-      ]
-    },
-    {
-      "ts": 1760295438767,
-      "lvl": "info",
-      "case": "handles malformed summary file",
-      "phase": "setup",
-      "evt": "case.begin",
-      "env": {
-        "nodeVersion": "v24.9.0",
-        "platform": "linux",
-        "arch": "x64",
-        "os": "Linux 6.8.0-85-generic",
-        "seed": 42,
-        "envVars": {
-          "NODE_ENV": "test",
-          "TEST_SEED": "42",
-          "LAMINAR_DEBUG": "1",
-          "LAMINAR_SUITE": "laminarMcp.spec",
-          "LAMINAR_CASE": "handles_malformed_summary_file"
-        }
-      },
-      "seed": 42,
-      "score": 29.97,
-      "reasons": [
-        "close proximity to failure"
-      ]
-    }
-  ],
-  "codeframes": [
-    {
-      "file": "/srv/repos0/mkolbol/src/mcp/laminar/server.ts",
-      "line": 610,
-      "column": 13,
-      "source": [
-        "        throw error;",
-        "      }",
-        "      throw new McpError(",
-        "        McpErrorCode.INTERNAL_ERROR,",
-        "        `Tool execution failed: ${error instanceof Error ? error.message : String(error)}`,"
-      ],
-      "context": {
-        "before": [
-          "        throw error;",
-          "      }"
-        ],
-        "focus": "      throw new McpError(",
-        "after": [
-          "        McpErrorCode.INTERNAL_ERROR,",
-          "        `Tool execution failed: ${error instanceof Error ? error.message : String(error)}`,"
-        ]
-      }
-    },
-    {
-      "file": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts",
-      "line": 566,
-      "column": 22,
-      "source": [
-        "      fs.writeFileSync(summaryFile, 'invalid json');",
-        "",
-        "      const result = await server.callTool('repro', {});",
-        "      ",
-        "      expect(() => result).not.toThrow();"
-      ],
-      "context": {
-        "before": [
-          "      fs.writeFileSync(summaryFile, 'invalid json');",
-          ""
-        ],
-        "focus": "      const result = await server.callTool('repro', {});",
-        "after": [
-          "      ",
-          "      expect(() => result).not.toThrow();"
-        ]
-      }
-    }
-  ],
-  "events": [
-    {
-      "ts": 1760295438769,
-      "lvl": "error",
-      "case": "handles malformed summary file",
-      "phase": "execution",
-      "evt": "test.error",
-      "payload": {
-        "message": "Tool execution failed: Unexpected token 'i', \"invalid json\" is not valid JSON",
-        "stack": "McpError: Tool execution failed: Unexpected token 'i', \"invalid json\" is not valid JSON\n    at LaminarMcpServer.callTool (/srv/repos0/mkolbol/src/mcp/laminar/server.ts:610:13)\n    at /srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:566:22\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)"
-      }
-    },
-    {
-      "ts": 1760295438770,
-      "lvl": "error",
-      "case": "handles malformed summary file",
-      "phase": "teardown",
-      "evt": "case.end",
-      "payload": {
-        "duration": 4,
-        "status": "failed"
-      }
-    }
-  ]
-}
\ No newline at end of file
diff --git a/reports/laminarMcp.spec/handles_malformed_summary_file.digest.md b/reports/laminarMcp.spec/handles_malformed_summary_file.digest.md
deleted file mode 100644
index bd54ad8..0000000
--- a/reports/laminarMcp.spec/handles_malformed_summary_file.digest.md
+++ /dev/null
@@ -1,52 +0,0 @@
-# Digest: handles_malformed_summary_file
-
-**Status**: fail
-**Duration**: 4ms
-**Location**: /srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0
-**Error**: Tool execution failed: Unexpected token 'i', "invalid json" is not valid JSON
-
-## Summary
-- Total Events: 4
-- Included Events: 2
-- Budget Used: 2412 / 10240 bytes
-
-## Suspects
-- **Score: 80.0** - case.end (error)
-  - Reasons: error level, close proximity to failure
-  - Time: 2025-10-12T18:57:18.770Z
-- **Score: 80.0** - test.error (error)
-  - Reasons: error level, close proximity to failure
-  - Time: 2025-10-12T18:57:18.769Z
-- **Score: 30.0** - test.run (info)
-  - Reasons: close proximity to failure
-  - Time: 2025-10-12T18:57:18.768Z
-- **Score: 30.0** - case.begin (info)
-  - Reasons: close proximity to failure
-  - Time: 2025-10-12T18:57:18.767Z
-
-## Code Frames
-```
-  at /srv/repos0/mkolbol/src/mcp/laminar/server.ts:610:13
-  608 |         throw error;
-  609 |       }
-> 610 |       throw new McpError(
-                  ^
-  611 |         McpErrorCode.INTERNAL_ERROR,
-  612 |         `Tool execution failed: ${error instanceof Error ? error.message : String(error)}`,
-```
-
-```
-  at /srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:566:22
-  564 |       fs.writeFileSync(summaryFile, 'invalid json');
-  565 | 
-> 566 |       const result = await server.callTool('repro', {});
-                           ^
-  567 |       
-  568 |       expect(() => result).not.toThrow();
-```
-
-## Events
-```json
-{"ts":1760295438769,"lvl":"error","case":"handles malformed summary file","phase":"execution","evt":"test.error","payload":{"message":"Tool execution failed: Unexpected token 'i', \"invalid json\" is not valid JSON","stack":"McpError: Tool execution failed: Unexpected token 'i', \"invalid json\" is not valid JSON\n    at LaminarMcpServer.callTool (/srv/repos0/mkolbol/src/mcp/laminar/server.ts:610:13)\n    at /srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:566:22\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)"}}
-{"ts":1760295438770,"lvl":"error","case":"handles malformed summary file","phase":"teardown","evt":"case.end","payload":{"duration":4,"status":"failed"}}
-```
\ No newline at end of file
diff --git a/reports/laminarMcp.spec/handles_malformed_summary_file.jsonl b/reports/laminarMcp.spec/handles_malformed_summary_file.jsonl
index 28d93a8..c6c6b11 100644
--- a/reports/laminarMcp.spec/handles_malformed_summary_file.jsonl
+++ b/reports/laminarMcp.spec/handles_malformed_summary_file.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274756,"lvl":"info","case":"handles malformed summary file","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274757,"lvl":"info","case":"handles malformed summary file","phase":"execution","evt":"test.run"}
-{"ts":1760297274758,"lvl":"info","case":"handles malformed summary file","phase":"teardown","evt":"case.end","payload":{"duration":11,"status":"passed"}}
+{"ts":1760303270400,"lvl":"info","case":"handles malformed summary file","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270401,"lvl":"info","case":"handles malformed summary file","phase":"execution","evt":"test.run"}
+{"ts":1760303270402,"lvl":"info","case":"handles malformed summary file","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/handles_missing_caseName_parameter.jsonl b/reports/laminarMcp.spec/handles_missing_caseName_parameter.jsonl
index 8a2b1c6..487a6b5 100644
--- a/reports/laminarMcp.spec/handles_missing_caseName_parameter.jsonl
+++ b/reports/laminarMcp.spec/handles_missing_caseName_parameter.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274751,"lvl":"info","case":"handles missing caseName parameter","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274752,"lvl":"info","case":"handles missing caseName parameter","phase":"execution","evt":"test.run"}
-{"ts":1760297274753,"lvl":"info","case":"handles missing caseName parameter","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270395,"lvl":"info","case":"handles missing caseName parameter","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270396,"lvl":"info","case":"handles missing caseName parameter","phase":"execution","evt":"test.run"}
+{"ts":1760303270397,"lvl":"info","case":"handles missing caseName parameter","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/handles_missing_reports_directory.jsonl b/reports/laminarMcp.spec/handles_missing_reports_directory.jsonl
index a69ba2b..1e047b1 100644
--- a/reports/laminarMcp.spec/handles_missing_reports_directory.jsonl
+++ b/reports/laminarMcp.spec/handles_missing_reports_directory.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274756,"lvl":"info","case":"handles missing reports directory","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274757,"lvl":"info","case":"handles missing reports directory","phase":"execution","evt":"test.run"}
-{"ts":1760297274758,"lvl":"info","case":"handles missing reports directory","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270400,"lvl":"info","case":"handles missing reports directory","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270401,"lvl":"info","case":"handles missing reports directory","phase":"execution","evt":"test.run"}
+{"ts":1760303270402,"lvl":"info","case":"handles missing reports directory","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/handles_missing_rules_parameter_gracefully.jsonl b/reports/laminarMcp.spec/handles_missing_rules_parameter_gracefully.jsonl
index 108ab20..8027128 100644
--- a/reports/laminarMcp.spec/handles_missing_rules_parameter_gracefully.jsonl
+++ b/reports/laminarMcp.spec/handles_missing_rules_parameter_gracefully.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274754,"lvl":"info","case":"handles missing rules parameter gracefully","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274755,"lvl":"info","case":"handles missing rules parameter gracefully","phase":"execution","evt":"test.run"}
-{"ts":1760297274756,"lvl":"info","case":"handles missing rules parameter gracefully","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
+{"ts":1760303270397,"lvl":"info","case":"handles missing rules parameter gracefully","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270398,"lvl":"info","case":"handles missing rules parameter gracefully","phase":"execution","evt":"test.run"}
+{"ts":1760303270399,"lvl":"info","case":"handles missing rules parameter gracefully","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/handles_mixed_tool_calls_concurrently.jsonl b/reports/laminarMcp.spec/handles_mixed_tool_calls_concurrently.jsonl
index 462fe37..506d959 100644
--- a/reports/laminarMcp.spec/handles_mixed_tool_calls_concurrently.jsonl
+++ b/reports/laminarMcp.spec/handles_mixed_tool_calls_concurrently.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274756,"lvl":"info","case":"handles mixed tool calls concurrently","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274757,"lvl":"info","case":"handles mixed tool calls concurrently","phase":"execution","evt":"test.run"}
-{"ts":1760297274758,"lvl":"info","case":"handles mixed tool calls concurrently","phase":"teardown","evt":"case.end","payload":{"duration":20,"status":"passed"}}
+{"ts":1760303270400,"lvl":"info","case":"handles mixed tool calls concurrently","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270401,"lvl":"info","case":"handles mixed tool calls concurrently","phase":"execution","evt":"test.run"}
+{"ts":1760303270402,"lvl":"info","case":"handles mixed tool calls concurrently","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/handles_multiple_overlay_rules.jsonl b/reports/laminarMcp.spec/handles_multiple_overlay_rules.jsonl
index 71a1bf2..c4a0e0c 100644
--- a/reports/laminarMcp.spec/handles_multiple_overlay_rules.jsonl
+++ b/reports/laminarMcp.spec/handles_multiple_overlay_rules.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274753,"lvl":"info","case":"handles multiple overlay rules","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274754,"lvl":"info","case":"handles multiple overlay rules","phase":"execution","evt":"test.run"}
-{"ts":1760297274755,"lvl":"info","case":"handles multiple overlay rules","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
+{"ts":1760303270397,"lvl":"info","case":"handles multiple overlay rules","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270398,"lvl":"info","case":"handles multiple overlay rules","phase":"execution","evt":"test.run"}
+{"ts":1760303270399,"lvl":"info","case":"handles multiple overlay rules","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/handles_nested_reports_directories.jsonl b/reports/laminarMcp.spec/handles_nested_reports_directories.jsonl
index a97e93f..9305fad 100644
--- a/reports/laminarMcp.spec/handles_nested_reports_directories.jsonl
+++ b/reports/laminarMcp.spec/handles_nested_reports_directories.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274757,"lvl":"info","case":"handles nested reports directories","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274758,"lvl":"info","case":"handles nested reports directories","phase":"execution","evt":"test.run"}
-{"ts":1760297274759,"lvl":"info","case":"handles nested reports directories","phase":"teardown","evt":"case.end","payload":{"duration":20,"status":"passed"}}
+{"ts":1760303270401,"lvl":"info","case":"handles nested reports directories","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270402,"lvl":"info","case":"handles nested reports directories","phase":"execution","evt":"test.run"}
+{"ts":1760303270403,"lvl":"info","case":"handles nested reports directories","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/handles_no_failures_gracefully.jsonl b/reports/laminarMcp.spec/handles_no_failures_gracefully.jsonl
index da4941b..5e60efa 100644
--- a/reports/laminarMcp.spec/handles_no_failures_gracefully.jsonl
+++ b/reports/laminarMcp.spec/handles_no_failures_gracefully.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274751,"lvl":"info","case":"handles no failures gracefully","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274752,"lvl":"info","case":"handles no failures gracefully","phase":"execution","evt":"test.run"}
-{"ts":1760297274753,"lvl":"info","case":"handles no failures gracefully","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270394,"lvl":"info","case":"handles no failures gracefully","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270395,"lvl":"info","case":"handles no failures gracefully","phase":"execution","evt":"test.run"}
+{"ts":1760303270396,"lvl":"info","case":"handles no failures gracefully","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/handles_special_characters_in_case_names.jsonl b/reports/laminarMcp.spec/handles_special_characters_in_case_names.jsonl
index 67b7c60..a4cbe77 100644
--- a/reports/laminarMcp.spec/handles_special_characters_in_case_names.jsonl
+++ b/reports/laminarMcp.spec/handles_special_characters_in_case_names.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274756,"lvl":"info","case":"handles special characters in case names","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274757,"lvl":"info","case":"handles special characters in case names","phase":"execution","evt":"test.run"}
-{"ts":1760297274758,"lvl":"info","case":"handles special characters in case names","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270401,"lvl":"info","case":"handles special characters in case names","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270402,"lvl":"info","case":"handles special characters in case names","phase":"execution","evt":"test.run"}
+{"ts":1760303270403,"lvl":"info","case":"handles special characters in case names","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/handles_very_large_log_files.jsonl b/reports/laminarMcp.spec/handles_very_large_log_files.jsonl
index 9f213b6..2c46232 100644
--- a/reports/laminarMcp.spec/handles_very_large_log_files.jsonl
+++ b/reports/laminarMcp.spec/handles_very_large_log_files.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274757,"lvl":"info","case":"handles very large log files","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274758,"lvl":"info","case":"handles very large log files","phase":"execution","evt":"test.run"}
-{"ts":1760297274759,"lvl":"info","case":"handles very large log files","phase":"teardown","evt":"case.end","payload":{"duration":24,"status":"passed"}}
+{"ts":1760303270401,"lvl":"info","case":"handles very large log files","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270402,"lvl":"info","case":"handles very large log files","phase":"execution","evt":"test.run"}
+{"ts":1760303270403,"lvl":"info","case":"handles very large log files","phase":"teardown","evt":"case.end","payload":{"duration":5,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/handles_write_errors_gracefully.jsonl b/reports/laminarMcp.spec/handles_write_errors_gracefully.jsonl
index 332d517..a3f8bc7 100644
--- a/reports/laminarMcp.spec/handles_write_errors_gracefully.jsonl
+++ b/reports/laminarMcp.spec/handles_write_errors_gracefully.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274750,"lvl":"info","case":"handles write errors gracefully","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274751,"lvl":"info","case":"handles write errors gracefully","phase":"execution","evt":"test.run"}
-{"ts":1760297274752,"lvl":"info","case":"handles write errors gracefully","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270394,"lvl":"info","case":"handles write errors gracefully","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270395,"lvl":"info","case":"handles write errors gracefully","phase":"execution","evt":"test.run"}
+{"ts":1760303270396,"lvl":"info","case":"handles write errors gracefully","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/maintains_overlay_independence_from_persistent_rules.jsonl b/reports/laminarMcp.spec/maintains_overlay_independence_from_persistent_rules.jsonl
index 0ee900b..4e21a3a 100644
--- a/reports/laminarMcp.spec/maintains_overlay_independence_from_persistent_rules.jsonl
+++ b/reports/laminarMcp.spec/maintains_overlay_independence_from_persistent_rules.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274757,"lvl":"info","case":"maintains overlay independence from persistent rules","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274758,"lvl":"info","case":"maintains overlay independence from persistent rules","phase":"execution","evt":"test.run"}
-{"ts":1760297274759,"lvl":"info","case":"maintains overlay independence from persistent rules","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270402,"lvl":"info","case":"maintains overlay independence from persistent rules","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270403,"lvl":"info","case":"maintains overlay independence from persistent rules","phase":"execution","evt":"test.run"}
+{"ts":1760303270404,"lvl":"info","case":"maintains overlay independence from persistent rules","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/queries_logs_for_a_specific_case.jsonl b/reports/laminarMcp.spec/queries_logs_for_a_specific_case.jsonl
index 935bb6e..d20f2f3 100644
--- a/reports/laminarMcp.spec/queries_logs_for_a_specific_case.jsonl
+++ b/reports/laminarMcp.spec/queries_logs_for_a_specific_case.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274752,"lvl":"info","case":"queries logs for a specific case","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274753,"lvl":"info","case":"queries logs for a specific case","phase":"execution","evt":"test.run"}
-{"ts":1760297274754,"lvl":"info","case":"queries logs for a specific case","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270395,"lvl":"info","case":"queries logs for a specific case","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270396,"lvl":"info","case":"queries logs for a specific case","phase":"execution","evt":"test.run"}
+{"ts":1760303270397,"lvl":"info","case":"queries logs for a specific case","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/reflects_changes_after_clear.jsonl b/reports/laminarMcp.spec/reflects_changes_after_clear.jsonl
index acf9731..829b5b8 100644
--- a/reports/laminarMcp.spec/reflects_changes_after_clear.jsonl
+++ b/reports/laminarMcp.spec/reflects_changes_after_clear.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274755,"lvl":"info","case":"reflects changes after clear","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274756,"lvl":"info","case":"reflects changes after clear","phase":"execution","evt":"test.run"}
-{"ts":1760297274757,"lvl":"info","case":"reflects changes after clear","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270398,"lvl":"info","case":"reflects changes after clear","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270399,"lvl":"info","case":"reflects changes after clear","phase":"execution","evt":"test.run"}
+{"ts":1760303270400,"lvl":"info","case":"reflects changes after clear","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/requires_caseName_parameter.jsonl b/reports/laminarMcp.spec/requires_caseName_parameter.jsonl
deleted file mode 100644
index b9af223..0000000
--- a/reports/laminarMcp.spec/requires_caseName_parameter.jsonl
+++ /dev/null
@@ -1,4 +0,0 @@
-{"ts":1760295631132,"lvl":"info","case":"requires caseName parameter","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760295631133,"lvl":"info","case":"requires caseName parameter","phase":"execution","evt":"test.run"}
-{"ts":1760295631134,"lvl":"error","case":"requires caseName parameter","phase":"execution","evt":"test.error","payload":{"message":"promise resolved \"{ logs: '' }\" instead of rejecting","stack":"Error: promise resolved \"{ logs: '' }\" instead of rejecting\n    at Assertion.__VITEST_REJECTS__ (file:///srv/repos0/mkolbol/node_modules/@vitest/expect/dist/index.js:1500:19)\n    at Assertion.propertyGetter (/srv/repos0/mkolbol/node_modules/chai/lib/chai/utils/addProperty.js:62:29)\n    at Reflect.get (<anonymous>)\n    at Object.proxyGetter [as get] (/srv/repos0/mkolbol/node_modules/chai/lib/chai/utils/proxify.js:98:22)\n    at /srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:213:7\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:135:14\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:60:26\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:17)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)"}}
-{"ts":1760295631135,"lvl":"error","case":"requires caseName parameter","phase":"teardown","evt":"case.end","payload":{"duration":27,"status":"failed"}}
diff --git a/reports/laminarMcp.spec/requires_rules_parameter.jsonl b/reports/laminarMcp.spec/requires_rules_parameter.jsonl
deleted file mode 100644
index d7b77e7..0000000
--- a/reports/laminarMcp.spec/requires_rules_parameter.jsonl
+++ /dev/null
@@ -1,4 +0,0 @@
-{"ts":1760295631136,"lvl":"info","case":"requires rules parameter","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760295631137,"lvl":"info","case":"requires rules parameter","phase":"execution","evt":"test.run"}
-{"ts":1760295631138,"lvl":"error","case":"requires rules parameter","phase":"execution","evt":"test.error","payload":{"message":"promise resolved \"{ success: false, …(1) }\" instead of rejecting","stack":"Error: promise resolved \"{ success: false, …(1) }\" instead of rejecting\n    at Assertion.__VITEST_REJECTS__ (file:///srv/repos0/mkolbol/node_modules/@vitest/expect/dist/index.js:1500:19)\n    at Assertion.propertyGetter (/srv/repos0/mkolbol/node_modules/chai/lib/chai/utils/addProperty.js:62:29)\n    at Reflect.get (<anonymous>)\n    at Object.proxyGetter [as get] (/srv/repos0/mkolbol/node_modules/chai/lib/chai/utils/proxify.js:98:22)\n    at /srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:370:7\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:135:14\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:60:26\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:17)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)"}}
-{"ts":1760295631139,"lvl":"error","case":"requires rules parameter","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"failed"}}
diff --git a/reports/laminarMcp.spec/respects_limit_parameter.jsonl b/reports/laminarMcp.spec/respects_limit_parameter.jsonl
index a979eaa..9476763 100644
--- a/reports/laminarMcp.spec/respects_limit_parameter.jsonl
+++ b/reports/laminarMcp.spec/respects_limit_parameter.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274752,"lvl":"info","case":"respects limit parameter","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274753,"lvl":"info","case":"respects limit parameter","phase":"execution","evt":"test.run"}
-{"ts":1760297274754,"lvl":"info","case":"respects limit parameter","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270396,"lvl":"info","case":"respects limit parameter","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270397,"lvl":"info","case":"respects limit parameter","phase":"execution","evt":"test.run"}
+{"ts":1760303270398,"lvl":"info","case":"respects limit parameter","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/retrieves_logs_for_a_specific_case.jsonl b/reports/laminarMcp.spec/retrieves_logs_for_a_specific_case.jsonl
index 033081c..ec3dc4e 100644
--- a/reports/laminarMcp.spec/retrieves_logs_for_a_specific_case.jsonl
+++ b/reports/laminarMcp.spec/retrieves_logs_for_a_specific_case.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274751,"lvl":"info","case":"retrieves logs for a specific case","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274752,"lvl":"info","case":"retrieves logs for a specific case","phase":"execution","evt":"test.run"}
-{"ts":1760297274753,"lvl":"info","case":"retrieves logs for a specific case","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270395,"lvl":"info","case":"retrieves logs for a specific case","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270396,"lvl":"info","case":"retrieves logs for a specific case","phase":"execution","evt":"test.run"}
+{"ts":1760303270397,"lvl":"info","case":"retrieves logs for a specific case","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/returns_current_overlay_rules.jsonl b/reports/laminarMcp.spec/returns_current_overlay_rules.jsonl
index 16678ba..0c5d678 100644
--- a/reports/laminarMcp.spec/returns_current_overlay_rules.jsonl
+++ b/reports/laminarMcp.spec/returns_current_overlay_rules.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274754,"lvl":"info","case":"returns current overlay rules","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274755,"lvl":"info","case":"returns current overlay rules","phase":"execution","evt":"test.run"}
-{"ts":1760297274756,"lvl":"info","case":"returns current overlay rules","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270398,"lvl":"info","case":"returns current overlay rules","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270399,"lvl":"info","case":"returns current overlay rules","phase":"execution","evt":"test.run"}
+{"ts":1760303270400,"lvl":"info","case":"returns current overlay rules","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/returns_empty_array_when_no_rules_are_set.jsonl b/reports/laminarMcp.spec/returns_empty_array_when_no_rules_are_set.jsonl
index 07f107b..b3d1c3e 100644
--- a/reports/laminarMcp.spec/returns_empty_array_when_no_rules_are_set.jsonl
+++ b/reports/laminarMcp.spec/returns_empty_array_when_no_rules_are_set.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274754,"lvl":"info","case":"returns empty array when no rules are set","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274755,"lvl":"info","case":"returns empty array when no rules are set","phase":"execution","evt":"test.run"}
-{"ts":1760297274756,"lvl":"info","case":"returns empty array when no rules are set","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270398,"lvl":"info","case":"returns empty array when no rules are set","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270399,"lvl":"info","case":"returns empty array when no rules are set","phase":"execution","evt":"test.run"}
+{"ts":1760303270400,"lvl":"info","case":"returns empty array when no rules are set","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/returns_empty_array_when_summary_does_not_exist.jsonl b/reports/laminarMcp.spec/returns_empty_array_when_summary_does_not_exist.jsonl
index 6409d0f..231f42c 100644
--- a/reports/laminarMcp.spec/returns_empty_array_when_summary_does_not_exist.jsonl
+++ b/reports/laminarMcp.spec/returns_empty_array_when_summary_does_not_exist.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274753,"lvl":"info","case":"returns empty array when summary does not exist","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274754,"lvl":"info","case":"returns empty array when summary does not exist","phase":"execution","evt":"test.run"}
-{"ts":1760297274755,"lvl":"info","case":"returns empty array when summary does not exist","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270397,"lvl":"info","case":"returns empty array when summary does not exist","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270398,"lvl":"info","case":"returns empty array when summary does not exist","phase":"execution","evt":"test.run"}
+{"ts":1760303270399,"lvl":"info","case":"returns empty array when summary does not exist","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/returns_empty_config_when_file_does_not_exist.jsonl b/reports/laminarMcp.spec/returns_empty_config_when_file_does_not_exist.jsonl
index 62c177d..a53c782 100644
--- a/reports/laminarMcp.spec/returns_empty_config_when_file_does_not_exist.jsonl
+++ b/reports/laminarMcp.spec/returns_empty_config_when_file_does_not_exist.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274749,"lvl":"info","case":"returns empty config when file does not exist","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274750,"lvl":"info","case":"returns empty config when file does not exist","phase":"execution","evt":"test.run"}
-{"ts":1760297274751,"lvl":"info","case":"returns empty config when file does not exist","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270393,"lvl":"info","case":"returns empty config when file does not exist","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270394,"lvl":"info","case":"returns empty config when file does not exist","phase":"execution","evt":"test.run"}
+{"ts":1760303270395,"lvl":"info","case":"returns empty config when file does not exist","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/returns_empty_string_when_logs_do_not_exist.jsonl b/reports/laminarMcp.spec/returns_empty_string_when_logs_do_not_exist.jsonl
index c96f2ca..df01f95 100644
--- a/reports/laminarMcp.spec/returns_empty_string_when_logs_do_not_exist.jsonl
+++ b/reports/laminarMcp.spec/returns_empty_string_when_logs_do_not_exist.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274751,"lvl":"info","case":"returns empty string when logs do not exist","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274752,"lvl":"info","case":"returns empty string when logs do not exist","phase":"execution","evt":"test.run"}
-{"ts":1760297274753,"lvl":"info","case":"returns empty string when logs do not exist","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270395,"lvl":"info","case":"returns empty string when logs do not exist","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270396,"lvl":"info","case":"returns empty string when logs do not exist","phase":"execution","evt":"test.run"}
+{"ts":1760303270397,"lvl":"info","case":"returns empty string when logs do not exist","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/returns_empty_when_caseName_is_not_provided.jsonl b/reports/laminarMcp.spec/returns_empty_when_caseName_is_not_provided.jsonl
index 5e62921..ae5f0a6 100644
--- a/reports/laminarMcp.spec/returns_empty_when_caseName_is_not_provided.jsonl
+++ b/reports/laminarMcp.spec/returns_empty_when_caseName_is_not_provided.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274753,"lvl":"info","case":"returns empty when caseName is not provided","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274754,"lvl":"info","case":"returns empty when caseName is not provided","phase":"execution","evt":"test.run"}
-{"ts":1760297274755,"lvl":"info","case":"returns empty when caseName is not provided","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270396,"lvl":"info","case":"returns empty when caseName is not provided","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270397,"lvl":"info","case":"returns empty when caseName is not provided","phase":"execution","evt":"test.run"}
+{"ts":1760303270398,"lvl":"info","case":"returns empty when caseName is not provided","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/returns_repro_commands_for_all_failures.jsonl b/reports/laminarMcp.spec/returns_repro_commands_for_all_failures.jsonl
index 20210c7..81c4260 100644
--- a/reports/laminarMcp.spec/returns_repro_commands_for_all_failures.jsonl
+++ b/reports/laminarMcp.spec/returns_repro_commands_for_all_failures.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274753,"lvl":"info","case":"returns repro commands for all failures","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274754,"lvl":"info","case":"returns repro commands for all failures","phase":"execution","evt":"test.run"}
-{"ts":1760297274755,"lvl":"info","case":"returns repro commands for all failures","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
+{"ts":1760303270396,"lvl":"info","case":"returns repro commands for all failures","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270397,"lvl":"info","case":"returns repro commands for all failures","phase":"execution","evt":"test.run"}
+{"ts":1760303270398,"lvl":"info","case":"returns repro commands for all failures","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/sets_digest_rules_successfully.jsonl b/reports/laminarMcp.spec/sets_digest_rules_successfully.jsonl
index d4f65fa..d7023dd 100644
--- a/reports/laminarMcp.spec/sets_digest_rules_successfully.jsonl
+++ b/reports/laminarMcp.spec/sets_digest_rules_successfully.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274750,"lvl":"info","case":"sets digest rules successfully","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274751,"lvl":"info","case":"sets digest rules successfully","phase":"execution","evt":"test.run"}
-{"ts":1760297274752,"lvl":"info","case":"sets digest rules successfully","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
+{"ts":1760303270393,"lvl":"info","case":"sets digest rules successfully","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270394,"lvl":"info","case":"sets digest rules successfully","phase":"execution","evt":"test.run"}
+{"ts":1760303270395,"lvl":"info","case":"sets digest rules successfully","phase":"teardown","evt":"case.end","payload":{"duration":4,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/sets_overlay_rules_successfully.jsonl b/reports/laminarMcp.spec/sets_overlay_rules_successfully.jsonl
index c58276b..29bc7cd 100644
--- a/reports/laminarMcp.spec/sets_overlay_rules_successfully.jsonl
+++ b/reports/laminarMcp.spec/sets_overlay_rules_successfully.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274753,"lvl":"info","case":"sets overlay rules successfully","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274754,"lvl":"info","case":"sets overlay rules successfully","phase":"execution","evt":"test.run"}
-{"ts":1760297274755,"lvl":"info","case":"sets overlay rules successfully","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270397,"lvl":"info","case":"sets overlay rules successfully","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270398,"lvl":"info","case":"sets overlay rules successfully","phase":"execution","evt":"test.run"}
+{"ts":1760303270399,"lvl":"info","case":"sets overlay rules successfully","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/supports_complete_overlay_workflow.jsonl b/reports/laminarMcp.spec/supports_complete_overlay_workflow.jsonl
index bbcb851..4cd5a6f 100644
--- a/reports/laminarMcp.spec/supports_complete_overlay_workflow.jsonl
+++ b/reports/laminarMcp.spec/supports_complete_overlay_workflow.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274757,"lvl":"info","case":"supports complete overlay workflow","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274758,"lvl":"info","case":"supports complete overlay workflow","phase":"execution","evt":"test.run"}
-{"ts":1760297274759,"lvl":"info","case":"supports complete overlay workflow","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270401,"lvl":"info","case":"supports complete overlay workflow","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270402,"lvl":"info","case":"supports complete overlay workflow","phase":"execution","evt":"test.run"}
+{"ts":1760303270403,"lvl":"info","case":"supports complete overlay workflow","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/throws_McpError_for_unknown_tool.jsonl b/reports/laminarMcp.spec/throws_McpError_for_unknown_tool.jsonl
index 7c59fe0..db9834a 100644
--- a/reports/laminarMcp.spec/throws_McpError_for_unknown_tool.jsonl
+++ b/reports/laminarMcp.spec/throws_McpError_for_unknown_tool.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274755,"lvl":"info","case":"throws McpError for unknown tool","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274756,"lvl":"info","case":"throws McpError for unknown tool","phase":"execution","evt":"test.run"}
-{"ts":1760297274757,"lvl":"info","case":"throws McpError for unknown tool","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270399,"lvl":"info","case":"throws McpError for unknown tool","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270400,"lvl":"info","case":"throws McpError for unknown tool","phase":"execution","evt":"test.run"}
+{"ts":1760303270401,"lvl":"info","case":"throws McpError for unknown tool","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/uses_default_flakeRuns_value.jsonl b/reports/laminarMcp.spec/uses_default_flakeRuns_value.jsonl
deleted file mode 100644
index de82165..0000000
--- a/reports/laminarMcp.spec/uses_default_flakeRuns_value.jsonl
+++ /dev/null
@@ -1,3 +0,0 @@
-{"ts":1760295631127,"lvl":"info","case":"uses default flakeRuns value","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760295631128,"lvl":"info","case":"uses default flakeRuns value","phase":"execution","evt":"test.run"}
-{"ts":1760295631129,"lvl":"info","case":"uses default flakeRuns value","phase":"teardown","evt":"case.end","payload":{"duration":4838,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/validates_input_types.jsonl b/reports/laminarMcp.spec/validates_input_types.jsonl
index 68dc324..f1ea63f 100644
--- a/reports/laminarMcp.spec/validates_input_types.jsonl
+++ b/reports/laminarMcp.spec/validates_input_types.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274755,"lvl":"info","case":"validates input types","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274756,"lvl":"info","case":"validates input types","phase":"execution","evt":"test.run"}
-{"ts":1760297274757,"lvl":"info","case":"validates input types","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270399,"lvl":"info","case":"validates input types","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270400,"lvl":"info","case":"validates input types","phase":"execution","evt":"test.run"}
+{"ts":1760303270401,"lvl":"info","case":"validates input types","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/validates_limit_range.jsonl b/reports/laminarMcp.spec/validates_limit_range.jsonl
index 4cfac83..c432a03 100644
--- a/reports/laminarMcp.spec/validates_limit_range.jsonl
+++ b/reports/laminarMcp.spec/validates_limit_range.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274752,"lvl":"info","case":"validates limit range","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274753,"lvl":"info","case":"validates limit range","phase":"execution","evt":"test.run"}
-{"ts":1760297274754,"lvl":"info","case":"validates limit range","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270396,"lvl":"info","case":"validates limit range","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270397,"lvl":"info","case":"validates limit range","phase":"execution","evt":"test.run"}
+{"ts":1760303270398,"lvl":"info","case":"validates limit range","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/validates_required_parameters.digest.json b/reports/laminarMcp.spec/validates_required_parameters.digest.json
deleted file mode 100644
index 3231041..0000000
--- a/reports/laminarMcp.spec/validates_required_parameters.digest.json
+++ /dev/null
@@ -1,180 +0,0 @@
-{
-  "case": "validates_required_parameters",
-  "status": "fail",
-  "duration": 16,
-  "location": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0",
-  "error": "promise resolved \"{ logs: '' }\" instead of rejecting",
-  "summary": {
-    "totalEvents": 4,
-    "includedEvents": 2,
-    "redactedFields": 0,
-    "budgetUsed": 2389,
-    "budgetLimit": 10240
-  },
-  "suspects": [
-    {
-      "ts": 1760295438768,
-      "lvl": "error",
-      "case": "validates required parameters",
-      "phase": "teardown",
-      "evt": "case.end",
-      "payload": {
-        "duration": 16,
-        "status": "failed"
-      },
-      "score": 80,
-      "reasons": [
-        "error level",
-        "close proximity to failure"
-      ]
-    },
-    {
-      "ts": 1760295438767,
-      "lvl": "error",
-      "case": "validates required parameters",
-      "phase": "execution",
-      "evt": "test.error",
-      "payload": {
-        "message": "promise resolved \"{ logs: '' }\" instead of rejecting",
-        "stack": "Error: promise resolved \"{ logs: '' }\" instead of rejecting\n    at Assertion.__VITEST_REJECTS__ (file:///srv/repos0/mkolbol/node_modules/@vitest/expect/dist/index.js:1500:19)\n    at Assertion.propertyGetter (/srv/repos0/mkolbol/node_modules/chai/lib/chai/utils/addProperty.js:62:29)\n    at Reflect.get (<anonymous>)\n    at Object.proxyGetter [as get] (/srv/repos0/mkolbol/node_modules/chai/lib/chai/utils/proxify.js:98:22)\n    at /srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:455:7\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:135:14\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:60:26\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:17)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)"
-      },
-      "score": 79.99,
-      "reasons": [
-        "error level",
-        "close proximity to failure"
-      ]
-    },
-    {
-      "ts": 1760295438766,
-      "lvl": "info",
-      "case": "validates required parameters",
-      "phase": "execution",
-      "evt": "test.run",
-      "score": 29.98,
-      "reasons": [
-        "close proximity to failure"
-      ]
-    },
-    {
-      "ts": 1760295438765,
-      "lvl": "info",
-      "case": "validates required parameters",
-      "phase": "setup",
-      "evt": "case.begin",
-      "env": {
-        "nodeVersion": "v24.9.0",
-        "platform": "linux",
-        "arch": "x64",
-        "os": "Linux 6.8.0-85-generic",
-        "seed": 42,
-        "envVars": {
-          "NODE_ENV": "test",
-          "TEST_SEED": "42",
-          "LAMINAR_DEBUG": "1",
-          "LAMINAR_SUITE": "laminarMcp.spec",
-          "LAMINAR_CASE": "handles_malformed_summary_file"
-        }
-      },
-      "seed": 42,
-      "score": 29.97,
-      "reasons": [
-        "close proximity to failure"
-      ]
-    }
-  ],
-  "codeframes": [
-    {
-      "file": "/srv/repos0/mkolbol/node_modules/chai/lib/chai/utils/addProperty.js",
-      "line": 62,
-      "column": 29,
-      "source": [
-        "        }",
-        "",
-        "        var result = getter.call(this);",
-        "        if (result !== undefined)",
-        "          return result;"
-      ],
-      "context": {
-        "before": [
-          "        }",
-          ""
-        ],
-        "focus": "        var result = getter.call(this);",
-        "after": [
-          "        if (result !== undefined)",
-          "          return result;"
-        ]
-      }
-    },
-    {
-      "file": "/srv/repos0/mkolbol/node_modules/chai/lib/chai/utils/proxify.js",
-      "line": 98,
-      "column": 22,
-      "source": [
-        "      }",
-        "",
-        "      return Reflect.get(target, property);",
-        "    }",
-        "  });"
-      ],
-      "context": {
-        "before": [
-          "      }",
-          ""
-        ],
-        "focus": "      return Reflect.get(target, property);",
-        "after": [
-          "    }",
-          "  });"
-        ]
-      }
-    },
-    {
-      "file": "/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts",
-      "line": 455,
-      "column": 7,
-      "source": [
-        "      await expect(",
-        "        server.callTool('logs.case.get', {})",
-        "      ).rejects.toThrow(McpError);",
-        "",
-        "      await expect("
-      ],
-      "context": {
-        "before": [
-          "      await expect(",
-          "        server.callTool('logs.case.get', {})"
-        ],
-        "focus": "      ).rejects.toThrow(McpError);",
-        "after": [
-          "",
-          "      await expect("
-        ]
-      }
-    }
-  ],
-  "events": [
-    {
-      "ts": 1760295438767,
-      "lvl": "error",
-      "case": "validates required parameters",
-      "phase": "execution",
-      "evt": "test.error",
-      "payload": {
-        "message": "promise resolved \"{ logs: '' }\" instead of rejecting",
-        "stack": "Error: promise resolved \"{ logs: '' }\" instead of rejecting\n    at Assertion.__VITEST_REJECTS__ (file:///srv/repos0/mkolbol/node_modules/@vitest/expect/dist/index.js:1500:19)\n    at Assertion.propertyGetter (/srv/repos0/mkolbol/node_modules/chai/lib/chai/utils/addProperty.js:62:29)\n    at Reflect.get (<anonymous>)\n    at Object.proxyGetter [as get] (/srv/repos0/mkolbol/node_modules/chai/lib/chai/utils/proxify.js:98:22)\n    at /srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:455:7\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:135:14\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:60:26\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:17)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)"
-      }
-    },
-    {
-      "ts": 1760295438768,
-      "lvl": "error",
-      "case": "validates required parameters",
-      "phase": "teardown",
-      "evt": "case.end",
-      "payload": {
-        "duration": 16,
-        "status": "failed"
-      }
-    }
-  ]
-}
\ No newline at end of file
diff --git a/reports/laminarMcp.spec/validates_required_parameters.digest.md b/reports/laminarMcp.spec/validates_required_parameters.digest.md
deleted file mode 100644
index 0f3cd32..0000000
--- a/reports/laminarMcp.spec/validates_required_parameters.digest.md
+++ /dev/null
@@ -1,62 +0,0 @@
-# Digest: validates_required_parameters
-
-**Status**: fail
-**Duration**: 16ms
-**Location**: /srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0
-**Error**: promise resolved "{ logs: '' }" instead of rejecting
-
-## Summary
-- Total Events: 4
-- Included Events: 2
-- Budget Used: 2389 / 10240 bytes
-
-## Suspects
-- **Score: 80.0** - case.end (error)
-  - Reasons: error level, close proximity to failure
-  - Time: 2025-10-12T18:57:18.768Z
-- **Score: 80.0** - test.error (error)
-  - Reasons: error level, close proximity to failure
-  - Time: 2025-10-12T18:57:18.767Z
-- **Score: 30.0** - test.run (info)
-  - Reasons: close proximity to failure
-  - Time: 2025-10-12T18:57:18.766Z
-- **Score: 30.0** - case.begin (info)
-  - Reasons: close proximity to failure
-  - Time: 2025-10-12T18:57:18.765Z
-
-## Code Frames
-```
-  at /srv/repos0/mkolbol/node_modules/chai/lib/chai/utils/addProperty.js:62:29
-  60 |         }
-  61 | 
-> 62 |         var result = getter.call(this);
-                                 ^
-  63 |         if (result !== undefined)
-  64 |           return result;
-```
-
-```
-  at /srv/repos0/mkolbol/node_modules/chai/lib/chai/utils/proxify.js:98:22
-   96 |       }
-   97 | 
->  98 |       return Reflect.get(target, property);
-                           ^
-   99 |     }
-  100 |   });
-```
-
-```
-  at /srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:455:7
-  453 |       await expect(
-  454 |         server.callTool('logs.case.get', {})
-> 455 |       ).rejects.toThrow(McpError);
-            ^
-  456 | 
-  457 |       await expect(
-```
-
-## Events
-```json
-{"ts":1760295438767,"lvl":"error","case":"validates required parameters","phase":"execution","evt":"test.error","payload":{"message":"promise resolved \"{ logs: '' }\" instead of rejecting","stack":"Error: promise resolved \"{ logs: '' }\" instead of rejecting\n    at Assertion.__VITEST_REJECTS__ (file:///srv/repos0/mkolbol/node_modules/@vitest/expect/dist/index.js:1500:19)\n    at Assertion.propertyGetter (/srv/repos0/mkolbol/node_modules/chai/lib/chai/utils/addProperty.js:62:29)\n    at Reflect.get (<anonymous>)\n    at Object.proxyGetter [as get] (/srv/repos0/mkolbol/node_modules/chai/lib/chai/utils/proxify.js:98:22)\n    at /srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:455:7\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:135:14\n    at file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:60:26\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:17)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)"}}
-{"ts":1760295438768,"lvl":"error","case":"validates required parameters","phase":"teardown","evt":"case.end","payload":{"duration":16,"status":"failed"}}
-```
\ No newline at end of file
diff --git a/reports/laminarMcp.spec/validates_required_parameters.jsonl b/reports/laminarMcp.spec/validates_required_parameters.jsonl
index 032c50a..e2078bd 100644
--- a/reports/laminarMcp.spec/validates_required_parameters.jsonl
+++ b/reports/laminarMcp.spec/validates_required_parameters.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274755,"lvl":"info","case":"validates required parameters","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274756,"lvl":"info","case":"validates required parameters","phase":"execution","evt":"test.run"}
-{"ts":1760297274757,"lvl":"info","case":"validates required parameters","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
+{"ts":1760303270399,"lvl":"info","case":"validates required parameters","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270400,"lvl":"info","case":"validates required parameters","phase":"execution","evt":"test.run"}
+{"ts":1760303270401,"lvl":"info","case":"validates required parameters","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/laminarMcp.spec/works_when_no_rules_are_set.jsonl b/reports/laminarMcp.spec/works_when_no_rules_are_set.jsonl
index ba7871a..07799b4 100644
--- a/reports/laminarMcp.spec/works_when_no_rules_are_set.jsonl
+++ b/reports/laminarMcp.spec/works_when_no_rules_are_set.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274754,"lvl":"info","case":"works when no rules are set","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274755,"lvl":"info","case":"works when no rules are set","phase":"execution","evt":"test.run"}
-{"ts":1760297274756,"lvl":"info","case":"works when no rules are set","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270398,"lvl":"info","case":"works when no rules are set","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270399,"lvl":"info","case":"works when no rules are set","phase":"execution","evt":"test.run"}
+{"ts":1760303270400,"lvl":"info","case":"works when no rules are set","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/loggerRenderer.spec/should_append_to_existing_log_file.jsonl b/reports/loggerRenderer.spec/should_append_to_existing_log_file.jsonl
index e6a7453..443ae31 100644
--- a/reports/loggerRenderer.spec/should_append_to_existing_log_file.jsonl
+++ b/reports/loggerRenderer.spec/should_append_to_existing_log_file.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274686,"lvl":"info","case":"should append to existing log file","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274687,"lvl":"info","case":"should append to existing log file","phase":"execution","evt":"test.run"}
-{"ts":1760297274688,"lvl":"info","case":"should append to existing log file","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270173,"lvl":"info","case":"should append to existing log file","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270174,"lvl":"info","case":"should append to existing log file","phase":"execution","evt":"test.run"}
+{"ts":1760303270175,"lvl":"info","case":"should append to existing log file","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/loggerRenderer.spec/should_write_all_data_to_log_file.jsonl b/reports/loggerRenderer.spec/should_write_all_data_to_log_file.jsonl
index db59f07..57623ea 100644
--- a/reports/loggerRenderer.spec/should_write_all_data_to_log_file.jsonl
+++ b/reports/loggerRenderer.spec/should_write_all_data_to_log_file.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274685,"lvl":"info","case":"should write all data to log file","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274686,"lvl":"info","case":"should write all data to log file","phase":"execution","evt":"test.run"}
-{"ts":1760297274687,"lvl":"info","case":"should write all data to log file","phase":"teardown","evt":"case.end","payload":{"duration":7,"status":"passed"}}
+{"ts":1760303270172,"lvl":"info","case":"should write all data to log file","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270173,"lvl":"info","case":"should write all data to log file","phase":"execution","evt":"test.run"}
+{"ts":1760303270174,"lvl":"info","case":"should write all data to log file","phase":"teardown","evt":"case.end","payload":{"duration":6,"status":"passed"}}
diff --git a/reports/passthroughRenderer.spec/should_handle_ANSI_escape_sequences.jsonl b/reports/passthroughRenderer.spec/should_handle_ANSI_escape_sequences.jsonl
index dd17940..4081ebe 100644
--- a/reports/passthroughRenderer.spec/should_handle_ANSI_escape_sequences.jsonl
+++ b/reports/passthroughRenderer.spec/should_handle_ANSI_escape_sequences.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274675,"lvl":"info","case":"should handle ANSI escape sequences","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274676,"lvl":"info","case":"should handle ANSI escape sequences","phase":"execution","evt":"test.run"}
-{"ts":1760297274677,"lvl":"info","case":"should handle ANSI escape sequences","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
+{"ts":1760303270172,"lvl":"info","case":"should handle ANSI escape sequences","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270173,"lvl":"info","case":"should handle ANSI escape sequences","phase":"execution","evt":"test.run"}
+{"ts":1760303270174,"lvl":"info","case":"should handle ANSI escape sequences","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/passthroughRenderer.spec/should_render_raw_ANSI_to_stdout.jsonl b/reports/passthroughRenderer.spec/should_render_raw_ANSI_to_stdout.jsonl
index 07a5741..c6100f5 100644
--- a/reports/passthroughRenderer.spec/should_render_raw_ANSI_to_stdout.jsonl
+++ b/reports/passthroughRenderer.spec/should_render_raw_ANSI_to_stdout.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274675,"lvl":"info","case":"should render raw ANSI to stdout","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274676,"lvl":"info","case":"should render raw ANSI to stdout","phase":"execution","evt":"test.run"}
-{"ts":1760297274677,"lvl":"info","case":"should render raw ANSI to stdout","phase":"teardown","evt":"case.end","payload":{"duration":6,"status":"passed"}}
+{"ts":1760303270172,"lvl":"info","case":"should render raw ANSI to stdout","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270173,"lvl":"info","case":"should render raw ANSI to stdout","phase":"execution","evt":"test.run"}
+{"ts":1760303270174,"lvl":"info","case":"should render raw ANSI to stdout","phase":"teardown","evt":"case.end","payload":{"duration":8,"status":"passed"}}
diff --git a/reports/pytestIngest.spec/captures_stdout_from_test_execution.jsonl b/reports/pytestIngest.spec/captures_stdout_from_test_execution.jsonl
new file mode 100644
index 0000000..058c1f3
--- /dev/null
+++ b/reports/pytestIngest.spec/captures_stdout_from_test_execution.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303270405,"lvl":"info","case":"captures stdout from test execution","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270406,"lvl":"info","case":"captures stdout from test execution","phase":"execution","evt":"test.run"}
+{"ts":1760303270407,"lvl":"info","case":"captures stdout from test execution","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/pytestIngest.spec/converts_passing_tests_to_Laminar_format.jsonl b/reports/pytestIngest.spec/converts_passing_tests_to_Laminar_format.jsonl
new file mode 100644
index 0000000..252307d
--- /dev/null
+++ b/reports/pytestIngest.spec/converts_passing_tests_to_Laminar_format.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303270404,"lvl":"info","case":"converts passing tests to Laminar format","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270405,"lvl":"info","case":"converts passing tests to Laminar format","phase":"execution","evt":"test.run"}
+{"ts":1760303270406,"lvl":"info","case":"converts passing tests to Laminar format","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/pytestIngest.spec/creates_case_begin_events_for_test_start.jsonl b/reports/pytestIngest.spec/creates_case_begin_events_for_test_start.jsonl
new file mode 100644
index 0000000..df2c8fc
--- /dev/null
+++ b/reports/pytestIngest.spec/creates_case_begin_events_for_test_start.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303270404,"lvl":"info","case":"creates case.begin events for test start","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270405,"lvl":"info","case":"creates case.begin events for test start","phase":"execution","evt":"test.run"}
+{"ts":1760303270406,"lvl":"info","case":"creates case.begin events for test start","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/pytestIngest.spec/creates_case_end_events_for_test_completion.jsonl b/reports/pytestIngest.spec/creates_case_end_events_for_test_completion.jsonl
new file mode 100644
index 0000000..6dbcdcb
--- /dev/null
+++ b/reports/pytestIngest.spec/creates_case_end_events_for_test_completion.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303270404,"lvl":"info","case":"creates case.end events for test completion","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270405,"lvl":"info","case":"creates case.end events for test completion","phase":"execution","evt":"test.run"}
+{"ts":1760303270406,"lvl":"info","case":"creates case.end events for test completion","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/pytestIngest.spec/creates_setup_events_for_test_setup_phase.jsonl b/reports/pytestIngest.spec/creates_setup_events_for_test_setup_phase.jsonl
new file mode 100644
index 0000000..58fedad
--- /dev/null
+++ b/reports/pytestIngest.spec/creates_setup_events_for_test_setup_phase.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303270404,"lvl":"info","case":"creates setup events for test setup phase","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270405,"lvl":"info","case":"creates setup events for test setup phase","phase":"execution","evt":"test.run"}
+{"ts":1760303270406,"lvl":"info","case":"creates setup events for test setup phase","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/pytestIngest.spec/creates_test_run_and_test_call_passed_events_for_test_execution.jsonl b/reports/pytestIngest.spec/creates_test_run_and_test_call_passed_events_for_test_execution.jsonl
new file mode 100644
index 0000000..44c7d1b
--- /dev/null
+++ b/reports/pytestIngest.spec/creates_test_run_and_test_call_passed_events_for_test_execution.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303270404,"lvl":"info","case":"creates test.run and test.call.passed events for test execution","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270405,"lvl":"info","case":"creates test.run and test.call.passed events for test execution","phase":"execution","evt":"test.run"}
+{"ts":1760303270406,"lvl":"info","case":"creates test.run and test.call.passed events for test execution","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/pytestIngest.spec/extracts_stack_traces_from_failed_tests.jsonl b/reports/pytestIngest.spec/extracts_stack_traces_from_failed_tests.jsonl
new file mode 100644
index 0000000..a532960
--- /dev/null
+++ b/reports/pytestIngest.spec/extracts_stack_traces_from_failed_tests.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303270405,"lvl":"info","case":"extracts stack traces from failed tests","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270406,"lvl":"info","case":"extracts stack traces from failed tests","phase":"execution","evt":"test.run"}
+{"ts":1760303270407,"lvl":"info","case":"extracts stack traces from failed tests","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/pytestIngest.spec/generates_correct_summary_for_all_test_outcomes.jsonl b/reports/pytestIngest.spec/generates_correct_summary_for_all_test_outcomes.jsonl
new file mode 100644
index 0000000..af19708
--- /dev/null
+++ b/reports/pytestIngest.spec/generates_correct_summary_for_all_test_outcomes.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303270406,"lvl":"info","case":"generates correct summary for all test outcomes","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270407,"lvl":"info","case":"generates correct summary for all test outcomes","phase":"execution","evt":"test.run"}
+{"ts":1760303270408,"lvl":"info","case":"generates correct summary for all test outcomes","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/pytestIngest.spec/groups_events_by_test_case_correctly.jsonl b/reports/pytestIngest.spec/groups_events_by_test_case_correctly.jsonl
new file mode 100644
index 0000000..ef6c6ca
--- /dev/null
+++ b/reports/pytestIngest.spec/groups_events_by_test_case_correctly.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303270426,"lvl":"info","case":"groups events by test case correctly","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270427,"lvl":"info","case":"groups events by test case correctly","phase":"execution","evt":"test.run"}
+{"ts":1760303270428,"lvl":"info","case":"groups events by test case correctly","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
diff --git a/reports/pytestIngest.spec/handles_empty_report_with_no_tests.jsonl b/reports/pytestIngest.spec/handles_empty_report_with_no_tests.jsonl
new file mode 100644
index 0000000..a7a243e
--- /dev/null
+++ b/reports/pytestIngest.spec/handles_empty_report_with_no_tests.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303270424,"lvl":"info","case":"handles empty report with no tests","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270425,"lvl":"info","case":"handles empty report with no tests","phase":"execution","evt":"test.run"}
+{"ts":1760303270426,"lvl":"info","case":"handles empty report with no tests","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/pytestIngest.spec/handles_empty_test_array.jsonl b/reports/pytestIngest.spec/handles_empty_test_array.jsonl
new file mode 100644
index 0000000..7d0c1fb
--- /dev/null
+++ b/reports/pytestIngest.spec/handles_empty_test_array.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303270403,"lvl":"info","case":"handles empty test array","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270404,"lvl":"info","case":"handles empty test array","phase":"execution","evt":"test.run"}
+{"ts":1760303270405,"lvl":"info","case":"handles empty test array","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/pytestIngest.spec/handles_error_during_setup_phase.jsonl b/reports/pytestIngest.spec/handles_error_during_setup_phase.jsonl
new file mode 100644
index 0000000..7020cec
--- /dev/null
+++ b/reports/pytestIngest.spec/handles_error_during_setup_phase.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303270405,"lvl":"info","case":"handles error during setup phase","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270406,"lvl":"info","case":"handles error during setup phase","phase":"execution","evt":"test.run"}
+{"ts":1760303270407,"lvl":"info","case":"handles error during setup phase","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/pytestIngest.spec/handles_failed_tests_with_error_messages.jsonl b/reports/pytestIngest.spec/handles_failed_tests_with_error_messages.jsonl
new file mode 100644
index 0000000..747cc3a
--- /dev/null
+++ b/reports/pytestIngest.spec/handles_failed_tests_with_error_messages.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303270405,"lvl":"info","case":"handles failed tests with error messages","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270406,"lvl":"info","case":"handles failed tests with error messages","phase":"execution","evt":"test.run"}
+{"ts":1760303270407,"lvl":"info","case":"handles failed tests with error messages","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/pytestIngest.spec/handles_skipped_tests_correctly.jsonl b/reports/pytestIngest.spec/handles_skipped_tests_correctly.jsonl
new file mode 100644
index 0000000..6cb719c
--- /dev/null
+++ b/reports/pytestIngest.spec/handles_skipped_tests_correctly.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303270405,"lvl":"info","case":"handles skipped tests correctly","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270406,"lvl":"info","case":"handles skipped tests correctly","phase":"execution","evt":"test.run"}
+{"ts":1760303270407,"lvl":"info","case":"handles skipped tests correctly","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/pytestIngest.spec/handles_tests_without_lineno.jsonl b/reports/pytestIngest.spec/handles_tests_without_lineno.jsonl
new file mode 100644
index 0000000..0d24030
--- /dev/null
+++ b/reports/pytestIngest.spec/handles_tests_without_lineno.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303270423,"lvl":"info","case":"handles tests without lineno","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270424,"lvl":"info","case":"handles tests without lineno","phase":"execution","evt":"test.run"}
+{"ts":1760303270425,"lvl":"info","case":"handles tests without lineno","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/pytestIngest.spec/includes_artifactURI_in_summary_entries.jsonl b/reports/pytestIngest.spec/includes_artifactURI_in_summary_entries.jsonl
new file mode 100644
index 0000000..babb4df
--- /dev/null
+++ b/reports/pytestIngest.spec/includes_artifactURI_in_summary_entries.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303270406,"lvl":"info","case":"includes artifactURI in summary entries","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270407,"lvl":"info","case":"includes artifactURI in summary entries","phase":"execution","evt":"test.run"}
+{"ts":1760303270408,"lvl":"info","case":"includes artifactURI in summary entries","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/pytestIngest.spec/includes_duration_in_summary_entries.jsonl b/reports/pytestIngest.spec/includes_duration_in_summary_entries.jsonl
new file mode 100644
index 0000000..56d857f
--- /dev/null
+++ b/reports/pytestIngest.spec/includes_duration_in_summary_entries.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303270406,"lvl":"info","case":"includes duration in summary entries","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270407,"lvl":"info","case":"includes duration in summary entries","phase":"execution","evt":"test.run"}
+{"ts":1760303270408,"lvl":"info","case":"includes duration in summary entries","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/pytestIngest.spec/includes_location_in_summary_entries.jsonl b/reports/pytestIngest.spec/includes_location_in_summary_entries.jsonl
new file mode 100644
index 0000000..6a45717
--- /dev/null
+++ b/reports/pytestIngest.spec/includes_location_in_summary_entries.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303270406,"lvl":"info","case":"includes location in summary entries","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270407,"lvl":"info","case":"includes location in summary entries","phase":"execution","evt":"test.run"}
+{"ts":1760303270408,"lvl":"info","case":"includes location in summary entries","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/pytestIngest.spec/parses_complex_multi-test_fixture.jsonl b/reports/pytestIngest.spec/parses_complex_multi-test_fixture.jsonl
new file mode 100644
index 0000000..c845baf
--- /dev/null
+++ b/reports/pytestIngest.spec/parses_complex_multi-test_fixture.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303270402,"lvl":"info","case":"parses complex multi-test fixture","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270403,"lvl":"info","case":"parses complex multi-test fixture","phase":"execution","evt":"test.run"}
+{"ts":1760303270404,"lvl":"info","case":"parses complex multi-test fixture","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/pytestIngest.spec/parses_report_metadata_correctly.jsonl b/reports/pytestIngest.spec/parses_report_metadata_correctly.jsonl
new file mode 100644
index 0000000..8c8af56
--- /dev/null
+++ b/reports/pytestIngest.spec/parses_report_metadata_correctly.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303270403,"lvl":"info","case":"parses report metadata correctly","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270404,"lvl":"info","case":"parses report metadata correctly","phase":"execution","evt":"test.run"}
+{"ts":1760303270405,"lvl":"info","case":"parses report metadata correctly","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/pytestIngest.spec/parses_simple_passing_test_fixture.jsonl b/reports/pytestIngest.spec/parses_simple_passing_test_fixture.jsonl
new file mode 100644
index 0000000..34ffb51
--- /dev/null
+++ b/reports/pytestIngest.spec/parses_simple_passing_test_fixture.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303270402,"lvl":"info","case":"parses simple passing test fixture","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270403,"lvl":"info","case":"parses simple passing test fixture","phase":"execution","evt":"test.run"}
+{"ts":1760303270404,"lvl":"info","case":"parses simple passing test fixture","phase":"teardown","evt":"case.end","payload":{"duration":5,"status":"passed"}}
diff --git a/reports/pytestIngest.spec/parses_test_node_IDs_correctly.jsonl b/reports/pytestIngest.spec/parses_test_node_IDs_correctly.jsonl
new file mode 100644
index 0000000..ef337a6
--- /dev/null
+++ b/reports/pytestIngest.spec/parses_test_node_IDs_correctly.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303270403,"lvl":"info","case":"parses test node IDs correctly","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270404,"lvl":"info","case":"parses test node IDs correctly","phase":"execution","evt":"test.run"}
+{"ts":1760303270405,"lvl":"info","case":"parses test node IDs correctly","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/pytestIngest.spec/preserves_timestamp_ordering.jsonl b/reports/pytestIngest.spec/preserves_timestamp_ordering.jsonl
new file mode 100644
index 0000000..fd40275
--- /dev/null
+++ b/reports/pytestIngest.spec/preserves_timestamp_ordering.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303270423,"lvl":"info","case":"preserves timestamp ordering","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270424,"lvl":"info","case":"preserves timestamp ordering","phase":"execution","evt":"test.run"}
+{"ts":1760303270425,"lvl":"info","case":"preserves timestamp ordering","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/pytestIngest.spec/processes_fixture_data_from_parsing_to_output.jsonl b/reports/pytestIngest.spec/processes_fixture_data_from_parsing_to_output.jsonl
new file mode 100644
index 0000000..99431e0
--- /dev/null
+++ b/reports/pytestIngest.spec/processes_fixture_data_from_parsing_to_output.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303270426,"lvl":"info","case":"processes fixture data from parsing to output","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270427,"lvl":"info","case":"processes fixture data from parsing to output","phase":"execution","evt":"test.run"}
+{"ts":1760303270428,"lvl":"info","case":"processes fixture data from parsing to output","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/pytestIngest.spec/processes_simple_passing_test_correctly.jsonl b/reports/pytestIngest.spec/processes_simple_passing_test_correctly.jsonl
new file mode 100644
index 0000000..c8ec940
--- /dev/null
+++ b/reports/pytestIngest.spec/processes_simple_passing_test_correctly.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303270426,"lvl":"info","case":"processes simple passing test correctly","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270427,"lvl":"info","case":"processes simple passing test correctly","phase":"execution","evt":"test.run"}
+{"ts":1760303270428,"lvl":"info","case":"processes simple passing test correctly","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/pytestIngest.spec/throws_error_on_invalid_JSON.jsonl b/reports/pytestIngest.spec/throws_error_on_invalid_JSON.jsonl
new file mode 100644
index 0000000..21b9d9c
--- /dev/null
+++ b/reports/pytestIngest.spec/throws_error_on_invalid_JSON.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303270403,"lvl":"info","case":"throws error on invalid JSON","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270404,"lvl":"info","case":"throws error on invalid JSON","phase":"execution","evt":"test.run"}
+{"ts":1760303270405,"lvl":"info","case":"throws error on invalid JSON","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
diff --git a/reports/pytestIngest.spec/validates_Laminar_event_structure.jsonl b/reports/pytestIngest.spec/validates_Laminar_event_structure.jsonl
new file mode 100644
index 0000000..73b8937
--- /dev/null
+++ b/reports/pytestIngest.spec/validates_Laminar_event_structure.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303270406,"lvl":"info","case":"validates Laminar event structure","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270407,"lvl":"info","case":"validates Laminar event structure","phase":"execution","evt":"test.run"}
+{"ts":1760303270408,"lvl":"info","case":"validates Laminar event structure","phase":"teardown","evt":"case.end","payload":{"duration":13,"status":"passed"}}
diff --git a/reports/pytestIngest.spec/writes_JSONL_files_per_test_case.jsonl b/reports/pytestIngest.spec/writes_JSONL_files_per_test_case.jsonl
new file mode 100644
index 0000000..578d682
--- /dev/null
+++ b/reports/pytestIngest.spec/writes_JSONL_files_per_test_case.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303270425,"lvl":"info","case":"writes JSONL files per test case","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270426,"lvl":"info","case":"writes JSONL files per test case","phase":"execution","evt":"test.run"}
+{"ts":1760303270427,"lvl":"info","case":"writes JSONL files per test case","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/pytestIngest.spec/writes_summary_jsonl_file.jsonl b/reports/pytestIngest.spec/writes_summary_jsonl_file.jsonl
new file mode 100644
index 0000000..d0deea0
--- /dev/null
+++ b/reports/pytestIngest.spec/writes_summary_jsonl_file.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303270425,"lvl":"info","case":"writes summary.jsonl file","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270426,"lvl":"info","case":"writes summary.jsonl file","phase":"execution","evt":"test.run"}
+{"ts":1760303270427,"lvl":"info","case":"writes summary.jsonl file","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/pytestIngest.spec/writes_valid_JSONL_format.jsonl b/reports/pytestIngest.spec/writes_valid_JSONL_format.jsonl
new file mode 100644
index 0000000..430b963
--- /dev/null
+++ b/reports/pytestIngest.spec/writes_valid_JSONL_format.jsonl
@@ -0,0 +1,3 @@
+{"ts":1760303270426,"lvl":"info","case":"writes valid JSONL format","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270427,"lvl":"info","case":"writes valid JSONL format","phase":"execution","evt":"test.run"}
+{"ts":1760303270428,"lvl":"info","case":"writes valid JSONL format","phase":"teardown","evt":"case.end","payload":{"duration":9,"status":"passed"}}
diff --git a/reports/redaction.spec/redacts_API_keys.jsonl b/reports/redaction.spec/redacts_API_keys.jsonl
index 80e84ec..775f22d 100644
--- a/reports/redaction.spec/redacts_API_keys.jsonl
+++ b/reports/redaction.spec/redacts_API_keys.jsonl
@@ -1,3 +1,4 @@
-{"ts":1760298829141,"lvl":"info","case":"redacts API keys","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760298829142,"lvl":"info","case":"redacts API keys","phase":"execution","evt":"test.run"}
-{"ts":1760298829143,"lvl":"info","case":"redacts API keys","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
+{"ts":1760303270012,"lvl":"info","case":"redacts API keys","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270013,"lvl":"info","case":"redacts API keys","phase":"execution","evt":"test.run"}
+{"ts":1760303270014,"lvl":"error","case":"redacts API keys","phase":"execution","evt":"test.error","payload":{"message":"expected 0 to be greater than 0","stack":"AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/redaction.spec.ts:171:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"}}
+{"ts":1760303270015,"lvl":"error","case":"redacts API keys","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"failed"}}
diff --git a/reports/redaction.spec/redacts_AWS_access_keys.jsonl b/reports/redaction.spec/redacts_AWS_access_keys.jsonl
index 5203ad7..034c8c0 100644
--- a/reports/redaction.spec/redacts_AWS_access_keys.jsonl
+++ b/reports/redaction.spec/redacts_AWS_access_keys.jsonl
@@ -1,3 +1,4 @@
-{"ts":1760298829141,"lvl":"info","case":"redacts AWS access keys","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760298829142,"lvl":"info","case":"redacts AWS access keys","phase":"execution","evt":"test.run"}
-{"ts":1760298829143,"lvl":"info","case":"redacts AWS access keys","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270012,"lvl":"info","case":"redacts AWS access keys","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270013,"lvl":"info","case":"redacts AWS access keys","phase":"execution","evt":"test.run"}
+{"ts":1760303270014,"lvl":"error","case":"redacts AWS access keys","phase":"execution","evt":"test.error","payload":{"message":"expected 0 to be greater than 0","stack":"AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/redaction.spec.ts:112:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"}}
+{"ts":1760303270015,"lvl":"error","case":"redacts AWS access keys","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"failed"}}
diff --git a/reports/redaction.spec/redacts_AWS_secret_keys.jsonl b/reports/redaction.spec/redacts_AWS_secret_keys.jsonl
index d71263d..5d65e93 100644
--- a/reports/redaction.spec/redacts_AWS_secret_keys.jsonl
+++ b/reports/redaction.spec/redacts_AWS_secret_keys.jsonl
@@ -1,3 +1,4 @@
-{"ts":1760298829141,"lvl":"info","case":"redacts AWS secret keys","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760298829142,"lvl":"info","case":"redacts AWS secret keys","phase":"execution","evt":"test.run"}
-{"ts":1760298829143,"lvl":"info","case":"redacts AWS secret keys","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
+{"ts":1760303270012,"lvl":"info","case":"redacts AWS secret keys","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270013,"lvl":"info","case":"redacts AWS secret keys","phase":"execution","evt":"test.run"}
+{"ts":1760303270014,"lvl":"error","case":"redacts AWS secret keys","phase":"execution","evt":"test.error","payload":{"message":"expected 0 to be greater than 0","stack":"AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/redaction.spec.ts:140:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"}}
+{"ts":1760303270015,"lvl":"error","case":"redacts AWS secret keys","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"failed"}}
diff --git a/reports/redaction.spec/redacts_JWT_tokens_in_payload.jsonl b/reports/redaction.spec/redacts_JWT_tokens_in_payload.jsonl
index 598d319..05d6333 100644
--- a/reports/redaction.spec/redacts_JWT_tokens_in_payload.jsonl
+++ b/reports/redaction.spec/redacts_JWT_tokens_in_payload.jsonl
@@ -1,3 +1,4 @@
-{"ts":1760298829140,"lvl":"info","case":"redacts JWT tokens in payload","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760298829141,"lvl":"info","case":"redacts JWT tokens in payload","phase":"execution","evt":"test.run"}
-{"ts":1760298829142,"lvl":"info","case":"redacts JWT tokens in payload","phase":"teardown","evt":"case.end","payload":{"duration":5,"status":"passed"}}
+{"ts":1760303270011,"lvl":"info","case":"redacts JWT tokens in payload","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270012,"lvl":"info","case":"redacts JWT tokens in payload","phase":"execution","evt":"test.run"}
+{"ts":1760303270013,"lvl":"error","case":"redacts JWT tokens in payload","phase":"execution","evt":"test.error","payload":{"message":"expected 0 to be greater than 0","stack":"AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/redaction.spec.ts:52:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"}}
+{"ts":1760303270014,"lvl":"error","case":"redacts JWT tokens in payload","phase":"teardown","evt":"case.end","payload":{"duration":26,"status":"failed"}}
diff --git a/reports/redaction.spec/redacts_JWT_tokens_in_string_fields.jsonl b/reports/redaction.spec/redacts_JWT_tokens_in_string_fields.jsonl
index b4c374e..b37e68e 100644
--- a/reports/redaction.spec/redacts_JWT_tokens_in_string_fields.jsonl
+++ b/reports/redaction.spec/redacts_JWT_tokens_in_string_fields.jsonl
@@ -1,3 +1,4 @@
-{"ts":1760298829140,"lvl":"info","case":"redacts JWT tokens in string fields","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760298829141,"lvl":"info","case":"redacts JWT tokens in string fields","phase":"execution","evt":"test.run"}
-{"ts":1760298829142,"lvl":"info","case":"redacts JWT tokens in string fields","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270012,"lvl":"info","case":"redacts JWT tokens in string fields","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270013,"lvl":"info","case":"redacts JWT tokens in string fields","phase":"execution","evt":"test.run"}
+{"ts":1760303270014,"lvl":"error","case":"redacts JWT tokens in string fields","phase":"execution","evt":"test.error","payload":{"message":"expected 0 to be greater than 0","stack":"AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/redaction.spec.ts:80:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"}}
+{"ts":1760303270015,"lvl":"error","case":"redacts JWT tokens in string fields","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"failed"}}
diff --git a/reports/redaction.spec/redacts_RSA_private_keys.jsonl b/reports/redaction.spec/redacts_RSA_private_keys.jsonl
index e5ad6e8..8a0279f 100644
--- a/reports/redaction.spec/redacts_RSA_private_keys.jsonl
+++ b/reports/redaction.spec/redacts_RSA_private_keys.jsonl
@@ -1,3 +1,4 @@
-{"ts":1760298829141,"lvl":"info","case":"redacts RSA private keys","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760298829142,"lvl":"info","case":"redacts RSA private keys","phase":"execution","evt":"test.run"}
-{"ts":1760298829143,"lvl":"info","case":"redacts RSA private keys","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270012,"lvl":"info","case":"redacts RSA private keys","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270013,"lvl":"info","case":"redacts RSA private keys","phase":"execution","evt":"test.run"}
+{"ts":1760303270014,"lvl":"error","case":"redacts RSA private keys","phase":"execution","evt":"test.error","payload":{"message":"expected 0 to be greater than 0","stack":"AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/redaction.spec.ts:239:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"}}
+{"ts":1760303270015,"lvl":"error","case":"redacts RSA private keys","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"failed"}}
diff --git a/reports/redaction.spec/redacts_credentials_from_URLs.jsonl b/reports/redaction.spec/redacts_credentials_from_URLs.jsonl
index 2420d42..9e30832 100644
--- a/reports/redaction.spec/redacts_credentials_from_URLs.jsonl
+++ b/reports/redaction.spec/redacts_credentials_from_URLs.jsonl
@@ -1,3 +1,4 @@
-{"ts":1760298829141,"lvl":"info","case":"redacts credentials from URLs","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760298829142,"lvl":"info","case":"redacts credentials from URLs","phase":"execution","evt":"test.run"}
-{"ts":1760298829143,"lvl":"info","case":"redacts credentials from URLs","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270012,"lvl":"info","case":"redacts credentials from URLs","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270013,"lvl":"info","case":"redacts credentials from URLs","phase":"execution","evt":"test.run"}
+{"ts":1760303270014,"lvl":"error","case":"redacts credentials from URLs","phase":"execution","evt":"test.error","payload":{"message":"expected 0 to be greater than 0","stack":"AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/redaction.spec.ts:202:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"}}
+{"ts":1760303270015,"lvl":"error","case":"redacts credentials from URLs","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"failed"}}
diff --git a/reports/redaction.spec/redacts_secrets_in_arrays.jsonl b/reports/redaction.spec/redacts_secrets_in_arrays.jsonl
index 42f2a02..36ece38 100644
--- a/reports/redaction.spec/redacts_secrets_in_arrays.jsonl
+++ b/reports/redaction.spec/redacts_secrets_in_arrays.jsonl
@@ -1,3 +1,4 @@
-{"ts":1760298829142,"lvl":"info","case":"redacts secrets in arrays","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760298829143,"lvl":"info","case":"redacts secrets in arrays","phase":"execution","evt":"test.run"}
-{"ts":1760298829144,"lvl":"info","case":"redacts secrets in arrays","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270013,"lvl":"info","case":"redacts secrets in arrays","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270014,"lvl":"info","case":"redacts secrets in arrays","phase":"execution","evt":"test.run"}
+{"ts":1760303270015,"lvl":"error","case":"redacts secrets in arrays","phase":"execution","evt":"test.error","payload":{"message":"expected 0 to be greater than 0","stack":"AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/redaction.spec.ts:423:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"}}
+{"ts":1760303270016,"lvl":"error","case":"redacts secrets in arrays","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"failed"}}
diff --git a/reports/redaction.spec/redacts_secrets_in_nested_objects.jsonl b/reports/redaction.spec/redacts_secrets_in_nested_objects.jsonl
index e9f84de..2e121f3 100644
--- a/reports/redaction.spec/redacts_secrets_in_nested_objects.jsonl
+++ b/reports/redaction.spec/redacts_secrets_in_nested_objects.jsonl
@@ -1,3 +1,4 @@
-{"ts":1760298829142,"lvl":"info","case":"redacts secrets in nested objects","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760298829143,"lvl":"info","case":"redacts secrets in nested objects","phase":"execution","evt":"test.run"}
-{"ts":1760298829144,"lvl":"info","case":"redacts secrets in nested objects","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
+{"ts":1760303270013,"lvl":"info","case":"redacts secrets in nested objects","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270014,"lvl":"info","case":"redacts secrets in nested objects","phase":"execution","evt":"test.run"}
+{"ts":1760303270015,"lvl":"error","case":"redacts secrets in nested objects","phase":"execution","evt":"test.error","payload":{"message":"expected 0 to be greater than 0","stack":"AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/redaction.spec.ts:389:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"}}
+{"ts":1760303270016,"lvl":"error","case":"redacts secrets in nested objects","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"failed"}}
diff --git a/reports/redaction.spec/respects_enabled_false_flag.jsonl b/reports/redaction.spec/respects_enabled_false_flag.jsonl
index 7b49949..8a22afc 100644
--- a/reports/redaction.spec/respects_enabled_false_flag.jsonl
+++ b/reports/redaction.spec/respects_enabled_false_flag.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760298829142,"lvl":"info","case":"respects enabled=false flag","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760298829143,"lvl":"info","case":"respects enabled=false flag","phase":"execution","evt":"test.run"}
-{"ts":1760298829144,"lvl":"info","case":"respects enabled=false flag","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
+{"ts":1760303270013,"lvl":"info","case":"respects enabled=false flag","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270014,"lvl":"info","case":"respects enabled=false flag","phase":"execution","evt":"test.run"}
+{"ts":1760303270015,"lvl":"info","case":"respects enabled=false flag","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/redaction.spec/respects_optOut_flag.jsonl b/reports/redaction.spec/respects_optOut_flag.jsonl
index 392a9de..4028b35 100644
--- a/reports/redaction.spec/respects_optOut_flag.jsonl
+++ b/reports/redaction.spec/respects_optOut_flag.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760298829142,"lvl":"info","case":"respects optOut flag","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760298829143,"lvl":"info","case":"respects optOut flag","phase":"execution","evt":"test.run"}
-{"ts":1760298829144,"lvl":"info","case":"respects optOut flag","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270013,"lvl":"info","case":"respects optOut flag","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270014,"lvl":"info","case":"respects optOut flag","phase":"execution","evt":"test.run"}
+{"ts":1760303270015,"lvl":"info","case":"respects optOut flag","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
diff --git a/reports/redaction.spec/respects_secrets_false_flag.jsonl b/reports/redaction.spec/respects_secrets_false_flag.jsonl
index 7fdbfd6..9b6ccbf 100644
--- a/reports/redaction.spec/respects_secrets_false_flag.jsonl
+++ b/reports/redaction.spec/respects_secrets_false_flag.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760298829142,"lvl":"info","case":"respects secrets=false flag","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760298829143,"lvl":"info","case":"respects secrets=false flag","phase":"execution","evt":"test.run"}
-{"ts":1760298829144,"lvl":"info","case":"respects secrets=false flag","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270013,"lvl":"info","case":"respects secrets=false flag","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270014,"lvl":"info","case":"respects secrets=false flag","phase":"execution","evt":"test.run"}
+{"ts":1760303270015,"lvl":"info","case":"respects secrets=false flag","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/router.test/initialize.jsonl b/reports/router.test/initialize.jsonl
index 170e4a4..c91115a 100644
--- a/reports/router.test/initialize.jsonl
+++ b/reports/router.test/initialize.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274555,"lvl":"info","case":"initialize","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274556,"lvl":"info","case":"initialize","phase":"execution","evt":"test.run"}
-{"ts":1760297274557,"lvl":"info","case":"initialize","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303269977,"lvl":"info","case":"initialize","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269978,"lvl":"info","case":"initialize","phase":"execution","evt":"test.run"}
+{"ts":1760303269979,"lvl":"info","case":"initialize","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
diff --git a/reports/router.test/tools_resources_list_read.jsonl b/reports/router.test/tools_resources_list_read.jsonl
index 21709e1..e6e52d7 100644
--- a/reports/router.test/tools_resources_list_read.jsonl
+++ b/reports/router.test/tools_resources_list_read.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274555,"lvl":"info","case":"tools/resources list read","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274556,"lvl":"info","case":"tools/resources list read","phase":"execution","evt":"test.run"}
-{"ts":1760297274557,"lvl":"info","case":"tools/resources list read","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303269977,"lvl":"info","case":"tools/resources list read","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269978,"lvl":"info","case":"tools/resources list read","phase":"execution","evt":"test.run"}
+{"ts":1760303269979,"lvl":"info","case":"tools/resources list read","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/rulepacks.spec/applies_higher_priority_rules_first.jsonl b/reports/rulepacks.spec/applies_higher_priority_rules_first.jsonl
index a84f02a..2fafb4b 100644
--- a/reports/rulepacks.spec/applies_higher_priority_rules_first.jsonl
+++ b/reports/rulepacks.spec/applies_higher_priority_rules_first.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760298829193,"lvl":"info","case":"applies higher priority rules first","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760298829194,"lvl":"info","case":"applies higher priority rules first","phase":"execution","evt":"test.run"}
-{"ts":1760298829195,"lvl":"info","case":"applies higher priority rules first","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270074,"lvl":"info","case":"applies higher priority rules first","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270075,"lvl":"info","case":"applies higher priority rules first","phase":"execution","evt":"test.run"}
+{"ts":1760303270076,"lvl":"info","case":"applies higher priority rules first","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/rulepacks.spec/captures_assertion_failures.jsonl b/reports/rulepacks.spec/captures_assertion_failures.jsonl
index 04893cf..b249d1a 100644
--- a/reports/rulepacks.spec/captures_assertion_failures.jsonl
+++ b/reports/rulepacks.spec/captures_assertion_failures.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760298829192,"lvl":"info","case":"captures assertion failures","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760298829193,"lvl":"info","case":"captures assertion failures","phase":"execution","evt":"test.run"}
-{"ts":1760298829194,"lvl":"info","case":"captures assertion failures","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270072,"lvl":"info","case":"captures assertion failures","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270073,"lvl":"info","case":"captures assertion failures","phase":"execution","evt":"test.run"}
+{"ts":1760303270074,"lvl":"info","case":"captures assertion failures","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/rulepacks.spec/captures_console_output.jsonl b/reports/rulepacks.spec/captures_console_output.jsonl
index 8b2c638..bf026d7 100644
--- a/reports/rulepacks.spec/captures_console_output.jsonl
+++ b/reports/rulepacks.spec/captures_console_output.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760298829192,"lvl":"info","case":"captures console output","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760298829193,"lvl":"info","case":"captures console output","phase":"execution","evt":"test.run"}
-{"ts":1760298829194,"lvl":"info","case":"captures console output","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270072,"lvl":"info","case":"captures console output","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270073,"lvl":"info","case":"captures console output","phase":"execution","evt":"test.run"}
+{"ts":1760303270074,"lvl":"info","case":"captures console output","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
diff --git a/reports/rulepacks.spec/captures_error_events.jsonl b/reports/rulepacks.spec/captures_error_events.jsonl
index 827c214..c1016ae 100644
--- a/reports/rulepacks.spec/captures_error_events.jsonl
+++ b/reports/rulepacks.spec/captures_error_events.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760298829192,"lvl":"info","case":"captures error events","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760298829193,"lvl":"info","case":"captures error events","phase":"execution","evt":"test.run"}
-{"ts":1760298829194,"lvl":"info","case":"captures error events","phase":"teardown","evt":"case.end","payload":{"duration":6,"status":"passed"}}
+{"ts":1760303270072,"lvl":"info","case":"captures error events","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270073,"lvl":"info","case":"captures error events","phase":"execution","evt":"test.run"}
+{"ts":1760303270074,"lvl":"info","case":"captures error events","phase":"teardown","evt":"case.end","payload":{"duration":10,"status":"passed"}}
diff --git a/reports/rulepacks.spec/captures_race_conditions.jsonl b/reports/rulepacks.spec/captures_race_conditions.jsonl
index e7f355e..42655b5 100644
--- a/reports/rulepacks.spec/captures_race_conditions.jsonl
+++ b/reports/rulepacks.spec/captures_race_conditions.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760298829193,"lvl":"info","case":"captures race conditions","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760298829194,"lvl":"info","case":"captures race conditions","phase":"execution","evt":"test.run"}
-{"ts":1760298829195,"lvl":"info","case":"captures race conditions","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270073,"lvl":"info","case":"captures race conditions","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270074,"lvl":"info","case":"captures race conditions","phase":"execution","evt":"test.run"}
+{"ts":1760303270075,"lvl":"info","case":"captures race conditions","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/rulepacks.spec/captures_test_errors.jsonl b/reports/rulepacks.spec/captures_test_errors.jsonl
index 6bd51c5..bcf0dd3 100644
--- a/reports/rulepacks.spec/captures_test_errors.jsonl
+++ b/reports/rulepacks.spec/captures_test_errors.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760298829192,"lvl":"info","case":"captures test errors","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760298829193,"lvl":"info","case":"captures test errors","phase":"execution","evt":"test.run"}
-{"ts":1760298829194,"lvl":"info","case":"captures test errors","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270073,"lvl":"info","case":"captures test errors","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270074,"lvl":"info","case":"captures test errors","phase":"execution","evt":"test.run"}
+{"ts":1760303270075,"lvl":"info","case":"captures test errors","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/rulepacks.spec/captures_test_failures_and_panics.jsonl b/reports/rulepacks.spec/captures_test_failures_and_panics.jsonl
index 1cf4205..c80e25b 100644
--- a/reports/rulepacks.spec/captures_test_failures_and_panics.jsonl
+++ b/reports/rulepacks.spec/captures_test_failures_and_panics.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760298829193,"lvl":"info","case":"captures test failures and panics","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760298829194,"lvl":"info","case":"captures test failures and panics","phase":"execution","evt":"test.run"}
-{"ts":1760298829195,"lvl":"info","case":"captures test failures and panics","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270073,"lvl":"info","case":"captures test failures and panics","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270074,"lvl":"info","case":"captures test failures and panics","phase":"execution","evt":"test.run"}
+{"ts":1760303270075,"lvl":"info","case":"captures test failures and panics","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/rulepacks.spec/captures_test_timeouts.jsonl b/reports/rulepacks.spec/captures_test_timeouts.jsonl
index ededc57..ff7ff0d 100644
--- a/reports/rulepacks.spec/captures_test_timeouts.jsonl
+++ b/reports/rulepacks.spec/captures_test_timeouts.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760298829193,"lvl":"info","case":"captures test timeouts","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760298829194,"lvl":"info","case":"captures test timeouts","phase":"execution","evt":"test.run"}
-{"ts":1760298829195,"lvl":"info","case":"captures test timeouts","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270073,"lvl":"info","case":"captures test timeouts","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270074,"lvl":"info","case":"captures test timeouts","phase":"execution","evt":"test.run"}
+{"ts":1760303270075,"lvl":"info","case":"captures test timeouts","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/rulepacks.spec/combines_rules_from_go-defaults_and_custom_rules.jsonl b/reports/rulepacks.spec/combines_rules_from_go-defaults_and_custom_rules.jsonl
index 6ac0490..fef839f 100644
--- a/reports/rulepacks.spec/combines_rules_from_go-defaults_and_custom_rules.jsonl
+++ b/reports/rulepacks.spec/combines_rules_from_go-defaults_and_custom_rules.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760298829195,"lvl":"info","case":"combines rules from go-defaults and custom rules","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760298829196,"lvl":"info","case":"combines rules from go-defaults and custom rules","phase":"execution","evt":"test.run"}
-{"ts":1760298829197,"lvl":"info","case":"combines rules from go-defaults and custom rules","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270078,"lvl":"info","case":"combines rules from go-defaults and custom rules","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270079,"lvl":"info","case":"combines rules from go-defaults and custom rules","phase":"execution","evt":"test.run"}
+{"ts":1760303270080,"lvl":"info","case":"combines rules from go-defaults and custom rules","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/rulepacks.spec/combines_rules_from_node-defaults_and_custom_rules.jsonl b/reports/rulepacks.spec/combines_rules_from_node-defaults_and_custom_rules.jsonl
index 12f4e31..8d3011e 100644
--- a/reports/rulepacks.spec/combines_rules_from_node-defaults_and_custom_rules.jsonl
+++ b/reports/rulepacks.spec/combines_rules_from_node-defaults_and_custom_rules.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760298829195,"lvl":"info","case":"combines rules from node-defaults and custom rules","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760298829196,"lvl":"info","case":"combines rules from node-defaults and custom rules","phase":"execution","evt":"test.run"}
-{"ts":1760298829197,"lvl":"info","case":"combines rules from node-defaults and custom rules","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270078,"lvl":"info","case":"combines rules from node-defaults and custom rules","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270079,"lvl":"info","case":"combines rules from node-defaults and custom rules","phase":"execution","evt":"test.run"}
+{"ts":1760303270080,"lvl":"info","case":"combines rules from node-defaults and custom rules","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/rulepacks.spec/detects_and_redacts_all_secret_types_in_one_event.jsonl b/reports/rulepacks.spec/detects_and_redacts_all_secret_types_in_one_event.jsonl
index 2d0c61c..35c68cb 100644
--- a/reports/rulepacks.spec/detects_and_redacts_all_secret_types_in_one_event.jsonl
+++ b/reports/rulepacks.spec/detects_and_redacts_all_secret_types_in_one_event.jsonl
@@ -1,3 +1,4 @@
-{"ts":1760298829195,"lvl":"info","case":"detects and redacts all secret types in one event","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760298829196,"lvl":"info","case":"detects and redacts all secret types in one event","phase":"execution","evt":"test.run"}
-{"ts":1760298829197,"lvl":"info","case":"detects and redacts all secret types in one event","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270077,"lvl":"info","case":"detects and redacts all secret types in one event","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270078,"lvl":"info","case":"detects and redacts all secret types in one event","phase":"execution","evt":"test.run"}
+{"ts":1760303270079,"lvl":"error","case":"detects and redacts all secret types in one event","phase":"execution","evt":"test.error","payload":{"message":"expected +0 to be 6 // Object.is equality","stack":"AssertionError: expected +0 to be 6 // Object.is equality\n    at /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:717:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"}}
+{"ts":1760303270080,"lvl":"error","case":"detects and redacts all secret types in one event","phase":"teardown","evt":"case.end","payload":{"duration":6,"status":"failed"}}
diff --git a/reports/rulepacks.spec/enforces_budget_after_redaction.jsonl b/reports/rulepacks.spec/enforces_budget_after_redaction.jsonl
index 0eafdcd..c2aa221 100644
--- a/reports/rulepacks.spec/enforces_budget_after_redaction.jsonl
+++ b/reports/rulepacks.spec/enforces_budget_after_redaction.jsonl
@@ -1,3 +1,4 @@
-{"ts":1760298829195,"lvl":"info","case":"enforces budget after redaction","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760298829196,"lvl":"info","case":"enforces budget after redaction","phase":"execution","evt":"test.run"}
-{"ts":1760298829197,"lvl":"info","case":"enforces budget after redaction","phase":"teardown","evt":"case.end","payload":{"duration":8,"status":"passed"}}
+{"ts":1760303270078,"lvl":"info","case":"enforces budget after redaction","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270079,"lvl":"info","case":"enforces budget after redaction","phase":"execution","evt":"test.run"}
+{"ts":1760303270080,"lvl":"error","case":"enforces budget after redaction","phase":"execution","evt":"test.error","payload":{"message":"expected 0 to be greater than 0","stack":"AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:928:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"}}
+{"ts":1760303270081,"lvl":"error","case":"enforces budget after redaction","phase":"teardown","evt":"case.end","payload":{"duration":8,"status":"failed"}}
diff --git a/reports/rulepacks.spec/handles_nested_secrets_in_complex_objects.jsonl b/reports/rulepacks.spec/handles_nested_secrets_in_complex_objects.jsonl
index c1b53b4..e1b5015 100644
--- a/reports/rulepacks.spec/handles_nested_secrets_in_complex_objects.jsonl
+++ b/reports/rulepacks.spec/handles_nested_secrets_in_complex_objects.jsonl
@@ -1,3 +1,4 @@
-{"ts":1760298829195,"lvl":"info","case":"handles nested secrets in complex objects","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760298829196,"lvl":"info","case":"handles nested secrets in complex objects","phase":"execution","evt":"test.run"}
-{"ts":1760298829197,"lvl":"info","case":"handles nested secrets in complex objects","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270078,"lvl":"info","case":"handles nested secrets in complex objects","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270079,"lvl":"info","case":"handles nested secrets in complex objects","phase":"execution","evt":"test.run"}
+{"ts":1760303270080,"lvl":"error","case":"handles nested secrets in complex objects","phase":"execution","evt":"test.error","payload":{"message":"expected +0 to be 4 // Object.is equality","stack":"AssertionError: expected +0 to be 4 // Object.is equality\n    at /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:811:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"}}
+{"ts":1760303270081,"lvl":"error","case":"handles nested secrets in complex objects","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"failed"}}
diff --git a/reports/rulepacks.spec/merges_multiple_rules_from_different_sources.jsonl b/reports/rulepacks.spec/merges_multiple_rules_from_different_sources.jsonl
index 4907bf2..49b1c83 100644
--- a/reports/rulepacks.spec/merges_multiple_rules_from_different_sources.jsonl
+++ b/reports/rulepacks.spec/merges_multiple_rules_from_different_sources.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760298829193,"lvl":"info","case":"merges multiple rules from different sources","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760298829194,"lvl":"info","case":"merges multiple rules from different sources","phase":"execution","evt":"test.run"}
-{"ts":1760298829195,"lvl":"info","case":"merges multiple rules from different sources","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270074,"lvl":"info","case":"merges multiple rules from different sources","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270075,"lvl":"info","case":"merges multiple rules from different sources","phase":"execution","evt":"test.run"}
+{"ts":1760303270076,"lvl":"info","case":"merges multiple rules from different sources","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/rulepacks.spec/overrides_pack_rules_with_local_high-priority_rules.jsonl b/reports/rulepacks.spec/overrides_pack_rules_with_local_high-priority_rules.jsonl
index bb6ddb3..45fa1a1 100644
--- a/reports/rulepacks.spec/overrides_pack_rules_with_local_high-priority_rules.jsonl
+++ b/reports/rulepacks.spec/overrides_pack_rules_with_local_high-priority_rules.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760298829193,"lvl":"info","case":"overrides pack rules with local high-priority rules","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760298829194,"lvl":"info","case":"overrides pack rules with local high-priority rules","phase":"execution","evt":"test.run"}
-{"ts":1760298829195,"lvl":"info","case":"overrides pack rules with local high-priority rules","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270074,"lvl":"info","case":"overrides pack rules with local high-priority rules","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270075,"lvl":"info","case":"overrides pack rules with local high-priority rules","phase":"execution","evt":"test.run"}
+{"ts":1760303270076,"lvl":"info","case":"overrides pack rules with local high-priority rules","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/rulepacks.spec/redacts_API_keys_in_test_events.jsonl b/reports/rulepacks.spec/redacts_API_keys_in_test_events.jsonl
index 7284c75..16677fa 100644
--- a/reports/rulepacks.spec/redacts_API_keys_in_test_events.jsonl
+++ b/reports/rulepacks.spec/redacts_API_keys_in_test_events.jsonl
@@ -1,3 +1,4 @@
-{"ts":1760298829193,"lvl":"info","case":"redacts API keys in test events","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760298829194,"lvl":"info","case":"redacts API keys in test events","phase":"execution","evt":"test.run"}
-{"ts":1760298829195,"lvl":"info","case":"redacts API keys in test events","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270075,"lvl":"info","case":"redacts API keys in test events","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270076,"lvl":"info","case":"redacts API keys in test events","phase":"execution","evt":"test.run"}
+{"ts":1760303270077,"lvl":"error","case":"redacts API keys in test events","phase":"execution","evt":"test.error","payload":{"message":"expected 0 to be greater than 0","stack":"AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:408:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"}}
+{"ts":1760303270078,"lvl":"error","case":"redacts API keys in test events","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"failed"}}
diff --git a/reports/rulepacks.spec/redacts_AWS_credentials_in_Go_test_logs.jsonl b/reports/rulepacks.spec/redacts_AWS_credentials_in_Go_test_logs.jsonl
index dfd0101..be640ce 100644
--- a/reports/rulepacks.spec/redacts_AWS_credentials_in_Go_test_logs.jsonl
+++ b/reports/rulepacks.spec/redacts_AWS_credentials_in_Go_test_logs.jsonl
@@ -1,3 +1,4 @@
-{"ts":1760298829194,"lvl":"info","case":"redacts AWS credentials in Go test logs","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760298829195,"lvl":"info","case":"redacts AWS credentials in Go test logs","phase":"execution","evt":"test.run"}
-{"ts":1760298829196,"lvl":"info","case":"redacts AWS credentials in Go test logs","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270076,"lvl":"info","case":"redacts AWS credentials in Go test logs","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270077,"lvl":"info","case":"redacts AWS credentials in Go test logs","phase":"execution","evt":"test.run"}
+{"ts":1760303270078,"lvl":"error","case":"redacts AWS credentials in Go test logs","phase":"execution","evt":"test.error","payload":{"message":"expected 0 to be greater than 0","stack":"AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:543:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"}}
+{"ts":1760303270079,"lvl":"error","case":"redacts AWS credentials in Go test logs","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"failed"}}
diff --git a/reports/rulepacks.spec/redacts_AWS_credentials_in_test_events.jsonl b/reports/rulepacks.spec/redacts_AWS_credentials_in_test_events.jsonl
index eb35f8a..34ea220 100644
--- a/reports/rulepacks.spec/redacts_AWS_credentials_in_test_events.jsonl
+++ b/reports/rulepacks.spec/redacts_AWS_credentials_in_test_events.jsonl
@@ -1,3 +1,4 @@
-{"ts":1760298829193,"lvl":"info","case":"redacts AWS credentials in test events","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760298829194,"lvl":"info","case":"redacts AWS credentials in test events","phase":"execution","evt":"test.run"}
-{"ts":1760298829195,"lvl":"info","case":"redacts AWS credentials in test events","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270075,"lvl":"info","case":"redacts AWS credentials in test events","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270076,"lvl":"info","case":"redacts AWS credentials in test events","phase":"execution","evt":"test.run"}
+{"ts":1760303270077,"lvl":"error","case":"redacts AWS credentials in test events","phase":"execution","evt":"test.error","payload":{"message":"expected 0 to be greater than 0","stack":"AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:376:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"}}
+{"ts":1760303270078,"lvl":"error","case":"redacts AWS credentials in test events","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"failed"}}
diff --git a/reports/rulepacks.spec/redacts_JWT_tokens_in_Node_js_test_events.jsonl b/reports/rulepacks.spec/redacts_JWT_tokens_in_Node_js_test_events.jsonl
index 9b1c1fa..1aed3c9 100644
--- a/reports/rulepacks.spec/redacts_JWT_tokens_in_Node_js_test_events.jsonl
+++ b/reports/rulepacks.spec/redacts_JWT_tokens_in_Node_js_test_events.jsonl
@@ -1,3 +1,4 @@
-{"ts":1760298829193,"lvl":"info","case":"redacts JWT tokens in Node.js test events","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760298829194,"lvl":"info","case":"redacts JWT tokens in Node.js test events","phase":"execution","evt":"test.run"}
-{"ts":1760298829195,"lvl":"info","case":"redacts JWT tokens in Node.js test events","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270074,"lvl":"info","case":"redacts JWT tokens in Node.js test events","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270075,"lvl":"info","case":"redacts JWT tokens in Node.js test events","phase":"execution","evt":"test.run"}
+{"ts":1760303270076,"lvl":"error","case":"redacts JWT tokens in Node.js test events","phase":"execution","evt":"test.error","payload":{"message":"expected 0 to be greater than 0","stack":"AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:344:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"}}
+{"ts":1760303270077,"lvl":"error","case":"redacts JWT tokens in Node.js test events","phase":"teardown","evt":"case.end","payload":{"duration":15,"status":"failed"}}
diff --git a/reports/rulepacks.spec/redacts_URL_credentials_in_test_events.jsonl b/reports/rulepacks.spec/redacts_URL_credentials_in_test_events.jsonl
index 4e398a7..231b6be 100644
--- a/reports/rulepacks.spec/redacts_URL_credentials_in_test_events.jsonl
+++ b/reports/rulepacks.spec/redacts_URL_credentials_in_test_events.jsonl
@@ -1,3 +1,4 @@
-{"ts":1760298829194,"lvl":"info","case":"redacts URL credentials in test events","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760298829195,"lvl":"info","case":"redacts URL credentials in test events","phase":"execution","evt":"test.run"}
-{"ts":1760298829196,"lvl":"info","case":"redacts URL credentials in test events","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270075,"lvl":"info","case":"redacts URL credentials in test events","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270076,"lvl":"info","case":"redacts URL credentials in test events","phase":"execution","evt":"test.run"}
+{"ts":1760303270077,"lvl":"error","case":"redacts URL credentials in test events","phase":"execution","evt":"test.error","payload":{"message":"expected 0 to be greater than 0","stack":"AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:440:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"}}
+{"ts":1760303270078,"lvl":"error","case":"redacts URL credentials in test events","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"failed"}}
diff --git a/reports/rulepacks.spec/redacts_database_URLs_in_Go_test_failures.jsonl b/reports/rulepacks.spec/redacts_database_URLs_in_Go_test_failures.jsonl
index 920b5db..9202efa 100644
--- a/reports/rulepacks.spec/redacts_database_URLs_in_Go_test_failures.jsonl
+++ b/reports/rulepacks.spec/redacts_database_URLs_in_Go_test_failures.jsonl
@@ -1,3 +1,4 @@
-{"ts":1760298829194,"lvl":"info","case":"redacts database URLs in Go test failures","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760298829195,"lvl":"info","case":"redacts database URLs in Go test failures","phase":"execution","evt":"test.run"}
-{"ts":1760298829196,"lvl":"info","case":"redacts database URLs in Go test failures","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270076,"lvl":"info","case":"redacts database URLs in Go test failures","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270077,"lvl":"info","case":"redacts database URLs in Go test failures","phase":"execution","evt":"test.run"}
+{"ts":1760303270078,"lvl":"error","case":"redacts database URLs in Go test failures","phase":"execution","evt":"test.error","payload":{"message":"expected 0 to be greater than 0","stack":"AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:574:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"}}
+{"ts":1760303270079,"lvl":"error","case":"redacts database URLs in Go test failures","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"failed"}}
diff --git a/reports/rulepacks.spec/redacts_multiple_occurrences_of_the_same_secret_type.jsonl b/reports/rulepacks.spec/redacts_multiple_occurrences_of_the_same_secret_type.jsonl
index dc440db..5f09e48 100644
--- a/reports/rulepacks.spec/redacts_multiple_occurrences_of_the_same_secret_type.jsonl
+++ b/reports/rulepacks.spec/redacts_multiple_occurrences_of_the_same_secret_type.jsonl
@@ -1,3 +1,4 @@
-{"ts":1760298829195,"lvl":"info","case":"redacts multiple occurrences of the same secret type","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760298829196,"lvl":"info","case":"redacts multiple occurrences of the same secret type","phase":"execution","evt":"test.run"}
-{"ts":1760298829197,"lvl":"info","case":"redacts multiple occurrences of the same secret type","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270077,"lvl":"info","case":"redacts multiple occurrences of the same secret type","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270078,"lvl":"info","case":"redacts multiple occurrences of the same secret type","phase":"execution","evt":"test.run"}
+{"ts":1760303270079,"lvl":"error","case":"redacts multiple occurrences of the same secret type","phase":"execution","evt":"test.error","payload":{"message":"expected +0 to be 3 // Object.is equality","stack":"AssertionError: expected +0 to be 3 // Object.is equality\n    at /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:757:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"}}
+{"ts":1760303270080,"lvl":"error","case":"redacts multiple occurrences of the same secret type","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"failed"}}
diff --git a/reports/rulepacks.spec/redacts_private_keys_in_test_events.jsonl b/reports/rulepacks.spec/redacts_private_keys_in_test_events.jsonl
index d6ae0d1..3b7fb85 100644
--- a/reports/rulepacks.spec/redacts_private_keys_in_test_events.jsonl
+++ b/reports/rulepacks.spec/redacts_private_keys_in_test_events.jsonl
@@ -1,3 +1,4 @@
-{"ts":1760298829194,"lvl":"info","case":"redacts private keys in test events","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760298829195,"lvl":"info","case":"redacts private keys in test events","phase":"execution","evt":"test.run"}
-{"ts":1760298829196,"lvl":"info","case":"redacts private keys in test events","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270075,"lvl":"info","case":"redacts private keys in test events","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270076,"lvl":"info","case":"redacts private keys in test events","phase":"execution","evt":"test.run"}
+{"ts":1760303270077,"lvl":"error","case":"redacts private keys in test events","phase":"execution","evt":"test.error","payload":{"message":"expected 0 to be greater than 0","stack":"AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:478:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"}}
+{"ts":1760303270078,"lvl":"error","case":"redacts private keys in test events","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"failed"}}
diff --git a/reports/rulepacks.spec/redacts_secrets_in_Go_test_output.jsonl b/reports/rulepacks.spec/redacts_secrets_in_Go_test_output.jsonl
index e80e701..84ee2d9 100644
--- a/reports/rulepacks.spec/redacts_secrets_in_Go_test_output.jsonl
+++ b/reports/rulepacks.spec/redacts_secrets_in_Go_test_output.jsonl
@@ -1,3 +1,4 @@
-{"ts":1760298829194,"lvl":"info","case":"redacts secrets in Go test output","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760298829195,"lvl":"info","case":"redacts secrets in Go test output","phase":"execution","evt":"test.run"}
-{"ts":1760298829196,"lvl":"info","case":"redacts secrets in Go test output","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270076,"lvl":"info","case":"redacts secrets in Go test output","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270077,"lvl":"info","case":"redacts secrets in Go test output","phase":"execution","evt":"test.run"}
+{"ts":1760303270078,"lvl":"error","case":"redacts secrets in Go test output","phase":"execution","evt":"test.error","payload":{"message":"expected 0 to be greater than 0","stack":"AssertionError: expected 0 to be greater than 0\n    at /srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:511:46\n    at runTest (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:781:11)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///srv/repos0/mkolbol/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n    at withEnv (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)\n    at run (file:///srv/repos0/mkolbol/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:105:3)"}}
+{"ts":1760303270079,"lvl":"error","case":"redacts secrets in Go test output","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"failed"}}
diff --git a/reports/rulepacks.spec/respects_enabled_false_flag.jsonl b/reports/rulepacks.spec/respects_enabled_false_flag.jsonl
index f85097d..0b6f784 100644
--- a/reports/rulepacks.spec/respects_enabled_false_flag.jsonl
+++ b/reports/rulepacks.spec/respects_enabled_false_flag.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760298829194,"lvl":"info","case":"respects enabled=false flag","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760298829195,"lvl":"info","case":"respects enabled=false flag","phase":"execution","evt":"test.run"}
-{"ts":1760298829196,"lvl":"info","case":"respects enabled=false flag","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270077,"lvl":"info","case":"respects enabled=false flag","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270078,"lvl":"info","case":"respects enabled=false flag","phase":"execution","evt":"test.run"}
+{"ts":1760303270079,"lvl":"info","case":"respects enabled=false flag","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/rulepacks.spec/respects_global_optOut_flag.jsonl b/reports/rulepacks.spec/respects_global_optOut_flag.jsonl
index 7020797..2394b68 100644
--- a/reports/rulepacks.spec/respects_global_optOut_flag.jsonl
+++ b/reports/rulepacks.spec/respects_global_optOut_flag.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760298829194,"lvl":"info","case":"respects global optOut flag","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760298829195,"lvl":"info","case":"respects global optOut flag","phase":"execution","evt":"test.run"}
-{"ts":1760298829196,"lvl":"info","case":"respects global optOut flag","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270076,"lvl":"info","case":"respects global optOut flag","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270077,"lvl":"info","case":"respects global optOut flag","phase":"execution","evt":"test.run"}
+{"ts":1760303270078,"lvl":"info","case":"respects global optOut flag","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/rulepacks.spec/respects_secrets_false_flag.jsonl b/reports/rulepacks.spec/respects_secrets_false_flag.jsonl
index 5095b45..12e2415 100644
--- a/reports/rulepacks.spec/respects_secrets_false_flag.jsonl
+++ b/reports/rulepacks.spec/respects_secrets_false_flag.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760298829194,"lvl":"info","case":"respects secrets=false flag","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760298829195,"lvl":"info","case":"respects secrets=false flag","phase":"execution","evt":"test.run"}
-{"ts":1760298829196,"lvl":"info","case":"respects secrets=false flag","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270077,"lvl":"info","case":"respects secrets=false flag","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270078,"lvl":"info","case":"respects secrets=false flag","phase":"execution","evt":"test.run"}
+{"ts":1760303270079,"lvl":"info","case":"respects secrets=false flag","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/sample.spec/should_create_and_compare_snapshots_with_masking.jsonl b/reports/sample.spec/should_create_and_compare_snapshots_with_masking.jsonl
index 0deff4e..f3116ff 100644
--- a/reports/sample.spec/should_create_and_compare_snapshots_with_masking.jsonl
+++ b/reports/sample.spec/should_create_and_compare_snapshots_with_masking.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274554,"lvl":"info","case":"should create and compare snapshots with masking","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274555,"lvl":"info","case":"should create and compare snapshots with masking","phase":"execution","evt":"test.run"}
-{"ts":1760297274556,"lvl":"info","case":"should create and compare snapshots with masking","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
+{"ts":1760303269976,"lvl":"info","case":"should create and compare snapshots with masking","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269977,"lvl":"info","case":"should create and compare snapshots with masking","phase":"execution","evt":"test.run"}
+{"ts":1760303269978,"lvl":"info","case":"should create and compare snapshots with masking","phase":"teardown","evt":"case.end","payload":{"duration":6,"status":"passed"}}
diff --git a/reports/sample.spec/should_detect_mismatches.jsonl b/reports/sample.spec/should_detect_mismatches.jsonl
index 4db3cd0..e534f26 100644
--- a/reports/sample.spec/should_detect_mismatches.jsonl
+++ b/reports/sample.spec/should_detect_mismatches.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274554,"lvl":"info","case":"should detect mismatches","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274555,"lvl":"info","case":"should detect mismatches","phase":"execution","evt":"test.run"}
-{"ts":1760297274556,"lvl":"info","case":"should detect mismatches","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303269976,"lvl":"info","case":"should detect mismatches","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269977,"lvl":"info","case":"should detect mismatches","phase":"execution","evt":"test.run"}
+{"ts":1760303269978,"lvl":"info","case":"should detect mismatches","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
diff --git a/reports/sample.spec/should_support_custom_mask_rules.jsonl b/reports/sample.spec/should_support_custom_mask_rules.jsonl
index 644987c..1ee660a 100644
--- a/reports/sample.spec/should_support_custom_mask_rules.jsonl
+++ b/reports/sample.spec/should_support_custom_mask_rules.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274555,"lvl":"info","case":"should support custom mask rules","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274556,"lvl":"info","case":"should support custom mask rules","phase":"execution","evt":"test.run"}
-{"ts":1760297274557,"lvl":"info","case":"should support custom mask rules","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303269976,"lvl":"info","case":"should support custom mask rules","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269977,"lvl":"info","case":"should support custom mask rules","phase":"execution","evt":"test.run"}
+{"ts":1760303269978,"lvl":"info","case":"should support custom mask rules","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/stateManager.spec/adds_nodes_and_emits_events.jsonl b/reports/stateManager.spec/adds_nodes_and_emits_events.jsonl
index 44ddb60..cb0fcce 100644
--- a/reports/stateManager.spec/adds_nodes_and_emits_events.jsonl
+++ b/reports/stateManager.spec/adds_nodes_and_emits_events.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274676,"lvl":"info","case":"adds nodes and emits events","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274677,"lvl":"info","case":"adds nodes and emits events","phase":"execution","evt":"test.run"}
-{"ts":1760297274678,"lvl":"info","case":"adds nodes and emits events","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
+{"ts":1760303270427,"lvl":"info","case":"adds nodes and emits events","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270428,"lvl":"info","case":"adds nodes and emits events","phase":"execution","evt":"test.run"}
+{"ts":1760303270429,"lvl":"info","case":"adds nodes and emits events","phase":"teardown","evt":"case.end","payload":{"duration":5,"status":"passed"}}
diff --git a/reports/stateManager.spec/connects_and_emits_connected.jsonl b/reports/stateManager.spec/connects_and_emits_connected.jsonl
index 182fcd8..e9e25ba 100644
--- a/reports/stateManager.spec/connects_and_emits_connected.jsonl
+++ b/reports/stateManager.spec/connects_and_emits_connected.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274676,"lvl":"info","case":"connects and emits connected","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274677,"lvl":"info","case":"connects and emits connected","phase":"execution","evt":"test.run"}
-{"ts":1760297274678,"lvl":"info","case":"connects and emits connected","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
+{"ts":1760303270427,"lvl":"info","case":"connects and emits connected","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270428,"lvl":"info","case":"connects and emits connected","phase":"execution","evt":"test.run"}
+{"ts":1760303270429,"lvl":"info","case":"connects and emits connected","phase":"teardown","evt":"case.end","payload":{"duration":4,"status":"passed"}}
diff --git a/reports/stateManager.spec/exporters_produce_strings.jsonl b/reports/stateManager.spec/exporters_produce_strings.jsonl
index 5129a04..2ea0ab3 100644
--- a/reports/stateManager.spec/exporters_produce_strings.jsonl
+++ b/reports/stateManager.spec/exporters_produce_strings.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274677,"lvl":"info","case":"exporters produce strings","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274678,"lvl":"info","case":"exporters produce strings","phase":"execution","evt":"test.run"}
-{"ts":1760297274679,"lvl":"info","case":"exporters produce strings","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303270428,"lvl":"info","case":"exporters produce strings","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270429,"lvl":"info","case":"exporters produce strings","phase":"execution","evt":"test.run"}
+{"ts":1760303270430,"lvl":"info","case":"exporters produce strings","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/stateManager.spec/split_and_merge_emit_events.jsonl b/reports/stateManager.spec/split_and_merge_emit_events.jsonl
index e516a77..86ceb83 100644
--- a/reports/stateManager.spec/split_and_merge_emit_events.jsonl
+++ b/reports/stateManager.spec/split_and_merge_emit_events.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274676,"lvl":"info","case":"split and merge emit events","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274677,"lvl":"info","case":"split and merge emit events","phase":"execution","evt":"test.run"}
-{"ts":1760297274678,"lvl":"info","case":"split and merge emit events","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270427,"lvl":"info","case":"split and merge emit events","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270428,"lvl":"info","case":"split and merge emit events","phase":"execution","evt":"test.run"}
+{"ts":1760303270429,"lvl":"info","case":"split and merge emit events","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
diff --git a/reports/stateManager.spec/validator_enforces_directionality_when_set.jsonl b/reports/stateManager.spec/validator_enforces_directionality_when_set.jsonl
index 069547e..f91d008 100644
--- a/reports/stateManager.spec/validator_enforces_directionality_when_set.jsonl
+++ b/reports/stateManager.spec/validator_enforces_directionality_when_set.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274676,"lvl":"info","case":"validator enforces directionality when set","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274677,"lvl":"info","case":"validator enforces directionality when set","phase":"execution","evt":"test.run"}
-{"ts":1760297274678,"lvl":"info","case":"validator enforces directionality when set","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303270427,"lvl":"info","case":"validator enforces directionality when set","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270428,"lvl":"info","case":"validator enforces directionality when set","phase":"execution","evt":"test.run"}
+{"ts":1760303270429,"lvl":"info","case":"validator enforces directionality when set","phase":"teardown","evt":"case.end","payload":{"duration":4,"status":"passed"}}
diff --git a/reports/summary.jsonl b/reports/summary.jsonl
index 3108512..7c5ae8c 100644
--- a/reports/summary.jsonl
+++ b/reports/summary.jsonl
@@ -1,138 +1,227 @@
 {"type":"environment","nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}}
-{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0","artifactURI":"reports/goIngest.spec/parses_go_test_-json_fixture_data.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0","artifactURI":"reports/goIngest.spec/parses_individual_event_fields_correctly.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0","artifactURI":"reports/goIngest.spec/handles_empty_input.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0","artifactURI":"reports/goIngest.spec/handles_malformed_JSON_lines.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0","artifactURI":"reports/goIngest.spec/converts_Go_events_to_Laminar_format.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0","artifactURI":"reports/goIngest.spec/creates_test_start_events_for_run_actions.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0","artifactURI":"reports/goIngest.spec/creates_test_output_events_for_output_actions.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0","artifactURI":"reports/goIngest.spec/creates_test_pass_events_with_correct_status.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0","artifactURI":"reports/goIngest.spec/creates_test_fail_events_with_error_level.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0","artifactURI":"reports/goIngest.spec/creates_test_skip_events_for_skipped_tests.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0","artifactURI":"reports/goIngest.spec/generates_summary_with_correct_test_results.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0","artifactURI":"reports/goIngest.spec/includes_duration_in_summary.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0","artifactURI":"reports/goIngest.spec/includes_location_in_summary.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0","artifactURI":"reports/goIngest.spec/includes_artifactURI_in_summary.jsonl","seed":42}
-{"status":"pass","duration":6,"location":"/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0","artifactURI":"reports/goIngest.spec/validates_Laminar_event_structure.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0","artifactURI":"reports/goIngest.spec/preserves_timestamp_ordering.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0","artifactURI":"reports/goIngest.spec/writes_JSONL_files_per_test_case.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0","artifactURI":"reports/goIngest.spec/writes_summary_jsonl_file.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0","artifactURI":"reports/goIngest.spec/groups_events_by_test_case_correctly.jsonl","seed":42}
-{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0","artifactURI":"reports/goIngest.spec/writes_valid_JSONL_format.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0","artifactURI":"reports/goIngest.spec/processes_fixture_data_from_parsing_to_output.jsonl","seed":42}
-{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/golden/sample.spec.ts:0","artifactURI":"reports/sample.spec/should_create_and_compare_snapshots_with_masking.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/golden/sample.spec.ts:0","artifactURI":"reports/sample.spec/should_detect_mismatches.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/golden/sample.spec.ts:0","artifactURI":"reports/sample.spec/should_support_custom_mask_rules.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/archived/mcp-kernel/tests/router.test.ts:0","artifactURI":"reports/router.test/initialize.jsonl","seed":42}
+{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0","artifactURI":"reports/junitIngest.spec/parses_simple_passing_test_fixture.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0","artifactURI":"reports/junitIngest.spec/parses_test_cases_correctly.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0","artifactURI":"reports/junitIngest.spec/parses_fixtures_with_failures.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0","artifactURI":"reports/junitIngest.spec/extracts_failure_messages_and_stack_traces.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0","artifactURI":"reports/junitIngest.spec/extracts_error_messages_and_stack_traces.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0","artifactURI":"reports/junitIngest.spec/parses_fixtures_with_skipped_tests.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0","artifactURI":"reports/junitIngest.spec/extracts_skipped_test_messages.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0","artifactURI":"reports/junitIngest.spec/handles_skipped_tests_without_messages.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0","artifactURI":"reports/junitIngest.spec/parses_nested_test_suites.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0","artifactURI":"reports/junitIngest.spec/parses_test_cases_across_multiple_suites.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0","artifactURI":"reports/junitIngest.spec/decodes_XML_entities_in_error_messages.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0","artifactURI":"reports/junitIngest.spec/handles_empty_XML.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0","artifactURI":"reports/junitIngest.spec/parses_time_attributes_correctly.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0","artifactURI":"reports/junitIngest.spec/converts_passing_tests_to_Laminar_format.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0","artifactURI":"reports/junitIngest.spec/creates_case_begin_events_for_test_start.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0","artifactURI":"reports/junitIngest.spec/creates_test_run_events_for_test_execution.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0","artifactURI":"reports/junitIngest.spec/creates_case_end_events_for_test_completion.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0","artifactURI":"reports/junitIngest.spec/handles_failed_tests_with_error_events.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0","artifactURI":"reports/junitIngest.spec/extracts_error_messages_from_failures.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0","artifactURI":"reports/junitIngest.spec/extracts_stack_traces_from_errors.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0","artifactURI":"reports/junitIngest.spec/handles_skipped_tests_correctly.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0","artifactURI":"reports/junitIngest.spec/generates_correct_summary_for_all_test_outcomes.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0","artifactURI":"reports/junitIngest.spec/includes_duration_in_summary_entries.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0","artifactURI":"reports/junitIngest.spec/includes_location_in_summary_entries.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0","artifactURI":"reports/junitIngest.spec/includes_artifactURI_in_summary_entries.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0","artifactURI":"reports/junitIngest.spec/includes_testName_in_summary_entries.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0","artifactURI":"reports/junitIngest.spec/includes_errorMessage_for_failed_tests_in_summary.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0","artifactURI":"reports/junitIngest.spec/validates_Laminar_event_structure.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0","artifactURI":"reports/junitIngest.spec/preserves_timestamp_ordering.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0","artifactURI":"reports/junitIngest.spec/handles_multiple_test_suites.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0","artifactURI":"reports/junitIngest.spec/handles_empty_test_suites.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0","artifactURI":"reports/junitIngest.spec/writes_JSONL_files_per_test_case_in_suite_directories.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0","artifactURI":"reports/junitIngest.spec/writes_summary_jsonl_file.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0","artifactURI":"reports/junitIngest.spec/groups_events_by_test_case_correctly.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0","artifactURI":"reports/junitIngest.spec/writes_valid_JSONL_format.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0","artifactURI":"reports/junitIngest.spec/processes_simple_passing_tests_from_parsing_to_output.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0","artifactURI":"reports/junitIngest.spec/processes_tests_with_failures_and_errors.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0","artifactURI":"reports/junitIngest.spec/processes_tests_with_skipped_tests.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/junitIngest.spec.ts:0","artifactURI":"reports/junitIngest.spec/processes_nested_test_suites_correctly.jsonl","seed":42}
+{"status":"pass","duration":6,"location":"/srv/repos0/mkolbol/tests/golden/sample.spec.ts:0","artifactURI":"reports/sample.spec/should_create_and_compare_snapshots_with_masking.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/golden/sample.spec.ts:0","artifactURI":"reports/sample.spec/should_detect_mismatches.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/golden/sample.spec.ts:0","artifactURI":"reports/sample.spec/should_support_custom_mask_rules.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/archived/mcp-kernel/tests/router.test.ts:0","artifactURI":"reports/router.test/initialize.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/archived/mcp-kernel/tests/router.test.ts:0","artifactURI":"reports/router.test/tools_resources_list_read.jsonl","seed":42}
-{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_generate_index_json_with_valid_structure.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_have_valid_timestamp_format.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_have_totalTests_matching_artifacts_length.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_have_at_least_one_artifact_entry.jsonl","seed":42}
-{"status":"pass","duration":11,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_have_valid_structure_for_each_artifact_entry.jsonl","seed":42}
-{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_have_valid_timestamps_for_each_entry.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_reference_summary_jsonl_in_artifacts.jsonl","seed":42}
-{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_have_caseFile_path_for_each_entry.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_have_valid_location_paths.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_create_JSONL_file_for_each_test_case.jsonl","seed":42}
-{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_organize_case_files_in_suite_directories.jsonl","seed":42}
-{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_contain_valid_JSONL_format.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_include_case_begin_event.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_include_test_run_event.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_include_case_end_event_with_payload.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_have_timestamps_for_all_events.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_have_chronological_timestamps.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_include_test_error_events_for_failed_tests.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_have_error-level_log_for_case_end_of_failed_tests.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_have_summary_jsonl_file.jsonl","seed":42}
-{"status":"fail","duration":9,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_have_matching_test_count_between_index_and_summary.jsonl","seed":42,"error":"expected 1 to be greater than or equal to 48"}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_have_valid_JSONL_in_summary_file.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_cross-reference_between_index_and_case_files.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_have_case_name_in_JSONL_events_matching_test_name.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_handle_test_names_with_special_characters.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_have_unique_case_file_paths.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_have_all_case_files_in_reports_directory.jsonl","seed":42}
-{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_have_consistent_status_values.jsonl","seed":42}
-{"status":"pass","duration":5,"location":"/srv/repos0/mkolbol/tests/kernel/kernel.spec.ts:0","artifactURI":"reports/kernel.spec/connect_moves_data_1_1.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/kernel/kernel.spec.ts:0","artifactURI":"reports/kernel.spec/split_fans_out_to_multiple_destinations.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/kernel/kernel.spec.ts:0","artifactURI":"reports/kernel.spec/merge_combines_multiple_sources_into_one_destination.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/kernel/kernel.spec.ts:0","artifactURI":"reports/kernel.spec/register_lookup_filters_by_capabilities.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/returns_false_when_module_is_not_enabled.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/returns_consistent_value_for_same_module.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/returns_false_when_config_is_disabled.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/checks_module_against_config_modules_when_enabled.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/does_not_emit_when_on___returns_false.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/emit_returns_immediately_when_module_is_disabled.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/shouldEmit_returns_false_when_module_is_disabled.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/emits_to_console_when_module_is_enabled.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/respects_debug_level_filtering.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/emits_formatted_output_to_console.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/handles_emit_without_payload.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/shouldEmit_respects_level_hierarchy.jsonl","seed":42}
+{"status":"pass","duration":8,"location":"/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0","artifactURI":"reports/trends.spec/generates_consistent_fingerprint_for_same_failures.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0","artifactURI":"reports/trends.spec/generates_different_fingerprints_for_different_test_names.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0","artifactURI":"reports/trends.spec/generates_different_fingerprints_for_different_error_types.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0","artifactURI":"reports/trends.spec/generates_different_fingerprints_for_different_stack_locations.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0","artifactURI":"reports/trends.spec/generates_fingerprint_from_test_name_only_when_no_error_details.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0","artifactURI":"reports/trends.spec/extracts_error_type_from_error_message.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0","artifactURI":"reports/trends.spec/extracts_stack_location_from_payload.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0","artifactURI":"reports/trends.spec/extracts_error_name_from_payload.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0","artifactURI":"reports/trends.spec/handles_payload_with_parenthesis-style_stack_format.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0","artifactURI":"reports/trends.spec/handles_missing_error_details_gracefully.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0","artifactURI":"reports/trends.spec/creates_valid_history_entry_from_test_result.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0","artifactURI":"reports/trends.spec/appends_entries_to_history.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0","artifactURI":"reports/trends.spec/calculates_failure_rate_from_history.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0","artifactURI":"reports/trends.spec/identifies_first_and_last_seen_timestamps.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0","artifactURI":"reports/trends.spec/tracks_trend_over_time_windows.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0","artifactURI":"reports/trends.spec/ranks_failures_by_frequency.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0","artifactURI":"reports/trends.spec/ranks_by_failure_rate_when_frequency_is_similar.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0","artifactURI":"reports/trends.spec/combines_frequency_and_rate_for_top_offender_score.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0","artifactURI":"reports/trends.spec/filters_history_by_date_range.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0","artifactURI":"reports/trends.spec/filters_last_N_runs.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0","artifactURI":"reports/trends.spec/filters_by_rolling_time_window.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0","artifactURI":"reports/trends.spec/generates_fingerprints_for_Node_js_test_failures.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0","artifactURI":"reports/trends.spec/creates_history_from_Node_js_test_runs.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0","artifactURI":"reports/trends.spec/generates_fingerprints_for_Go_test_failures.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0","artifactURI":"reports/trends.spec/creates_history_from_Go_test_runs.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0","artifactURI":"reports/trends.spec/handles_Go_panic_failures.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0","artifactURI":"reports/trends.spec/detects_new_regression_from_passing_to_failing.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0","artifactURI":"reports/trends.spec/identifies_flaky_tests_with_intermittent_failures.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0","artifactURI":"reports/trends.spec/tracks_recovery_from_failures.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/laminar/trends.spec.ts:0","artifactURI":"reports/trends.spec/analyzes_complex_multi-test_multi-run_scenario.jsonl","seed":42}
+{"status":"pass","duration":6,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_regular_characters.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_newlines.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_carriage_return.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_ANSI_cursor_movement__CUP_.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_color_codes__SGR_.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_color_reset.jsonl","seed":42}
+{"status":"pass","duration":41,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_screen_clearing__ED_.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_line_clearing__EL_.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_cursor_up__CUU_.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_cursor_down__CUD_.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_cursor_forward__CUF_.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_cursor_back__CUB_.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_line_wrapping.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_scrolling.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_tabs.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_backspace.jsonl","seed":42}
+{"status":"fail","duration":26,"location":"/srv/repos0/mkolbol/tests/digest/redaction.spec.ts:0","artifactURI":"reports/redaction.spec/redacts_JWT_tokens_in_payload.jsonl","seed":42,"error":"expected 0 to be greater than 0"}
+{"status":"fail","duration":3,"location":"/srv/repos0/mkolbol/tests/digest/redaction.spec.ts:0","artifactURI":"reports/redaction.spec/redacts_JWT_tokens_in_string_fields.jsonl","seed":42,"error":"expected 0 to be greater than 0"}
+{"status":"fail","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/redaction.spec.ts:0","artifactURI":"reports/redaction.spec/redacts_AWS_access_keys.jsonl","seed":42,"error":"expected 0 to be greater than 0"}
+{"status":"fail","duration":3,"location":"/srv/repos0/mkolbol/tests/digest/redaction.spec.ts:0","artifactURI":"reports/redaction.spec/redacts_AWS_secret_keys.jsonl","seed":42,"error":"expected 0 to be greater than 0"}
+{"status":"fail","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/redaction.spec.ts:0","artifactURI":"reports/redaction.spec/redacts_API_keys.jsonl","seed":42,"error":"expected 0 to be greater than 0"}
+{"status":"fail","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/redaction.spec.ts:0","artifactURI":"reports/redaction.spec/redacts_credentials_from_URLs.jsonl","seed":42,"error":"expected 0 to be greater than 0"}
+{"status":"fail","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/redaction.spec.ts:0","artifactURI":"reports/redaction.spec/redacts_RSA_private_keys.jsonl","seed":42,"error":"expected 0 to be greater than 0"}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/digest/redaction.spec.ts:0","artifactURI":"reports/redaction.spec/respects_optOut_flag.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/redaction.spec.ts:0","artifactURI":"reports/redaction.spec/respects_secrets_false_flag.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/redaction.spec.ts:0","artifactURI":"reports/redaction.spec/respects_enabled_false_flag.jsonl","seed":42}
+{"status":"fail","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/redaction.spec.ts:0","artifactURI":"reports/redaction.spec/redacts_secrets_in_nested_objects.jsonl","seed":42,"error":"expected 0 to be greater than 0"}
+{"status":"fail","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/redaction.spec.ts:0","artifactURI":"reports/redaction.spec/redacts_secrets_in_arrays.jsonl","seed":42,"error":"expected 0 to be greater than 0"}
+{"status":"pass","duration":14,"location":"/srv/repos0/mkolbol/tests/worker/workerAdapters.spec.ts:0","artifactURI":"reports/workerAdapters.spec/round-trip_a_control_frame.jsonl","seed":42}
+{"status":"pass","duration":5,"location":"/srv/repos0/mkolbol/tests/worker/workerAdapters.spec.ts:0","artifactURI":"reports/workerAdapters.spec/round-trip_a_Buffer.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/worker/workerAdapters.spec.ts:0","artifactURI":"reports/workerAdapters.spec/assert_handshake_event_structure.jsonl","seed":42}
+{"status":"pass","duration":12,"location":"/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0","artifactURI":"reports/diff.spec/detects_identical_digests__no_diff_.jsonl","seed":42}
+{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0","artifactURI":"reports/diff.spec/detects_added_events_in_new_digest.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0","artifactURI":"reports/diff.spec/detects_removed_events_from_old_digest.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0","artifactURI":"reports/diff.spec/detects_changed_suspects__score_changes_.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0","artifactURI":"reports/diff.spec/detects_changed_codeframes.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0","artifactURI":"reports/diff.spec/detects_mixed_changes__events__suspects__codeframes_.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0","artifactURI":"reports/diff.spec/tracks_metadata_changes__duration__location__error_.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0","artifactURI":"reports/diff.spec/calculates_duration_delta_correctly.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0","artifactURI":"reports/diff.spec/diffs_Go_test_digests_correctly.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0","artifactURI":"reports/diff.spec/handles_Go_test_event_structure.jsonl","seed":42}
+{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0","artifactURI":"reports/diff.spec/generates_valid_JSON_output.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0","artifactURI":"reports/diff.spec/generates_readable_markdown_output.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0","artifactURI":"reports/diff.spec/writes_diff_to_file_in_JSON_format.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0","artifactURI":"reports/diff.spec/writes_diff_to_file_in_markdown_format.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0","artifactURI":"reports/diff.spec/performs_diff_and_writes_output.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0","artifactURI":"reports/diff.spec/works_without_output_file.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0","artifactURI":"reports/diff.spec/handles_digests_with_no_suspects.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0","artifactURI":"reports/diff.spec/handles_digests_with_no_codeframes.jsonl","seed":42}
+{"status":"fail","duration":13,"location":"/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0","artifactURI":"reports/diff.spec/includes_seed_and_environment_information.jsonl","seed":42,"error":"process.chdir() is not supported in workers"}
+{"status":"fail","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0","artifactURI":"reports/diff.spec/includes_minimal_logs__not_full_logs_.jsonl","seed":42,"error":"process.chdir() is not supported in workers"}
+{"status":"fail","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0","artifactURI":"reports/diff.spec/includes_valid_reproduction_commands.jsonl","seed":42,"error":"process.chdir() is not supported in workers"}
+{"status":"fail","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0","artifactURI":"reports/diff.spec/includes_complete_metadata.jsonl","seed":42,"error":"process.chdir() is not supported in workers"}
+{"status":"fail","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0","artifactURI":"reports/diff.spec/creates_both_JSON_and_markdown_outputs.jsonl","seed":42,"error":"process.chdir() is not supported in workers"}
+{"status":"fail","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0","artifactURI":"reports/diff.spec/handles_Go_test_case_bundles.jsonl","seed":42,"error":"process.chdir() is not supported in workers"}
+{"status":"fail","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0","artifactURI":"reports/diff.spec/extracts_Go_test_phase_information.jsonl","seed":42,"error":"process.chdir() is not supported in workers"}
+{"status":"fail","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0","artifactURI":"reports/diff.spec/handles_missing_artifact_file_gracefully.jsonl","seed":42,"error":"process.chdir() is not supported in workers"}
+{"status":"fail","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/diff.spec.ts:0","artifactURI":"reports/diff.spec/handles_case_with_no_seed_in_events.jsonl","seed":42,"error":"process.chdir() is not supported in workers"}
 {"status":"pass","duration":9,"location":"/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0","artifactURI":"reports/digest.spec/generates_digest_from_synthetic_logs_with_failures.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0","artifactURI":"reports/digest.spec/returns_null_for_passing_tests.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0","artifactURI":"reports/digest.spec/returns_null_for_passing_tests.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0","artifactURI":"reports/digest.spec/returns_null_when_disabled.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0","artifactURI":"reports/digest.spec/includes_correct_summary_statistics.jsonl","seed":42}
-{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0","artifactURI":"reports/digest.spec/writes_valid_JSON_file.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0","artifactURI":"reports/digest.spec/includes_correct_summary_statistics.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0","artifactURI":"reports/digest.spec/writes_valid_JSON_file.jsonl","seed":42}
 {"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0","artifactURI":"reports/digest.spec/writes_valid_markdown_file.jsonl","seed":42}
 {"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0","artifactURI":"reports/digest.spec/includes_events_matching_error_level.jsonl","seed":42}
 {"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0","artifactURI":"reports/digest.spec/includes_events_matching_specific_event_name.jsonl","seed":42}
-{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0","artifactURI":"reports/digest.spec/applies_slice_action_with_window.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0","artifactURI":"reports/digest.spec/applies_redact_action_to_fields.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0","artifactURI":"reports/digest.spec/respects_priority_order.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0","artifactURI":"reports/digest.spec/supports_wildcard_patterns_in_event_matching.jsonl","seed":42}
+{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0","artifactURI":"reports/digest.spec/applies_slice_action_with_window.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0","artifactURI":"reports/digest.spec/applies_redact_action_to_fields.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0","artifactURI":"reports/digest.spec/respects_priority_order.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0","artifactURI":"reports/digest.spec/supports_wildcard_patterns_in_event_matching.jsonl","seed":42}
 {"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0","artifactURI":"reports/digest.spec/supports_multiple_match_criteria.jsonl","seed":42}
-{"status":"pass","duration":9,"location":"/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0","artifactURI":"reports/digest.spec/enforces_byte_budget.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0","artifactURI":"reports/digest.spec/enforces_line_budget.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0","artifactURI":"reports/digest.spec/keeps_all_events_when_within_budget.jsonl","seed":42}
+{"status":"pass","duration":8,"location":"/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0","artifactURI":"reports/digest.spec/enforces_byte_budget.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0","artifactURI":"reports/digest.spec/enforces_line_budget.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0","artifactURI":"reports/digest.spec/keeps_all_events_when_within_budget.jsonl","seed":42}
 {"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0","artifactURI":"reports/digest.spec/identifies_error-level_events_as_suspects.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0","artifactURI":"reports/digest.spec/scores_failure_events.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0","artifactURI":"reports/digest.spec/scores_failure_events.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0","artifactURI":"reports/digest.spec/scores_correlated_events.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0","artifactURI":"reports/digest.spec/scores_events_close_to_failure_time.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0","artifactURI":"reports/digest.spec/limits_suspects_to_top_5.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0","artifactURI":"reports/digest.spec/limits_suspects_to_top_5.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0","artifactURI":"reports/digest.spec/returns_empty_suspects_for_no_failure_events.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0","artifactURI":"reports/digest.spec/handles_empty_log_file.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0","artifactURI":"reports/digest.spec/handles_missing_log_file.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0","artifactURI":"reports/digest.spec/handles_missing_log_file.jsonl","seed":42}
 {"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0","artifactURI":"reports/digest.spec/skips_malformed_JSON_lines.jsonl","seed":42}
 {"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0","artifactURI":"reports/digest.spec/handles_events_without_optional_fields.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0","artifactURI":"reports/digest.spec/processes_ingested_Go_test_failures_transparently.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0","artifactURI":"reports/digest.spec/recognizes_Go_test_fail_events_in_rules.jsonl","seed":42}
-{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/calculates_100__stability_for_always-passing_tests.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/calculates_0__stability_for_always-failing_tests.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/calculates_partial_stability_for_flaky_tests.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/classifies_test_as_stable_when_score_is_100.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0","artifactURI":"reports/digest.spec/processes_ingested_Go_test_failures_transparently.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/digest.spec.ts:0","artifactURI":"reports/digest.spec/recognizes_Go_test_fail_events_in_rules.jsonl","seed":42}
+{"status":"pass","duration":10,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/captures_error_events.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/captures_assertion_failures.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/captures_console_output.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/captures_test_errors.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/captures_test_failures_and_panics.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/captures_race_conditions.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/captures_test_timeouts.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/merges_multiple_rules_from_different_sources.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/applies_higher_priority_rules_first.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/overrides_pack_rules_with_local_high-priority_rules.jsonl","seed":42}
+{"status":"fail","duration":15,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/redacts_JWT_tokens_in_Node_js_test_events.jsonl","seed":42,"error":"expected 0 to be greater than 0"}
+{"status":"fail","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/redacts_AWS_credentials_in_test_events.jsonl","seed":42,"error":"expected 0 to be greater than 0"}
+{"status":"fail","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/redacts_API_keys_in_test_events.jsonl","seed":42,"error":"expected 0 to be greater than 0"}
+{"status":"fail","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/redacts_URL_credentials_in_test_events.jsonl","seed":42,"error":"expected 0 to be greater than 0"}
+{"status":"fail","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/redacts_private_keys_in_test_events.jsonl","seed":42,"error":"expected 0 to be greater than 0"}
+{"status":"fail","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/redacts_secrets_in_Go_test_output.jsonl","seed":42,"error":"expected 0 to be greater than 0"}
+{"status":"fail","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/redacts_AWS_credentials_in_Go_test_logs.jsonl","seed":42,"error":"expected 0 to be greater than 0"}
+{"status":"fail","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/redacts_database_URLs_in_Go_test_failures.jsonl","seed":42,"error":"expected 0 to be greater than 0"}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/respects_global_optOut_flag.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/respects_secrets_false_flag.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/respects_enabled_false_flag.jsonl","seed":42}
+{"status":"fail","duration":6,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/detects_and_redacts_all_secret_types_in_one_event.jsonl","seed":42,"error":"expected +0 to be 6 // Object.is equality"}
+{"status":"fail","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/redacts_multiple_occurrences_of_the_same_secret_type.jsonl","seed":42,"error":"expected +0 to be 3 // Object.is equality"}
+{"status":"fail","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/handles_nested_secrets_in_complex_objects.jsonl","seed":42,"error":"expected +0 to be 4 // Object.is equality"}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/combines_rules_from_node-defaults_and_custom_rules.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/combines_rules_from_go-defaults_and_custom_rules.jsonl","seed":42}
+{"status":"fail","duration":8,"location":"/srv/repos0/mkolbol/tests/digest/rulepacks.spec.ts:0","artifactURI":"reports/rulepacks.spec/enforces_budget_after_redaction.jsonl","seed":42,"error":"expected 0 to be greater than 0"}
+{"status":"pass","duration":5,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/calculates_100__stability_for_always-passing_tests.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/calculates_0__stability_for_always-failing_tests.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/calculates_partial_stability_for_flaky_tests.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/classifies_test_as_stable_when_score_is_100.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/classifies_test_as_flaky_when_score_is_between_0_and_100.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/classifies_test_as_always-fail_when_score_is_0.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/handles_edge_case_of_single_run_passing.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/handles_edge_case_of_single_run_failing.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/calculates_correct_score_for_1_pass_out_of_10_runs.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/calculates_correct_score_for_9_passes_out_of_10_runs.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/tracks_multiple_tests_independently.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/handles_edge_case_of_single_run_failing.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/calculates_correct_score_for_1_pass_out_of_10_runs.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/calculates_correct_score_for_9_passes_out_of_10_runs.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/tracks_multiple_tests_independently.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/increments_run_counts_correctly.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/sorts_tests_by_score_ascending__flakiest_first_.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/sorts_tests_by_score_ascending__flakiest_first_.jsonl","seed":42}
 {"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/filters_stable_tests_correctly.jsonl","seed":42}
 {"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/filters_flaky_tests_correctly.jsonl","seed":42}
 {"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/filters_always-fail_tests_correctly.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/captures_test_seed_in_artifact.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/captures_environment_variables_in_artifact.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/stores_platform_information_in_artifact.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/stores_platform_information_in_artifact.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/uses_fixed_seed_for_deterministic_flake_detection.jsonl","seed":42}
 {"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/includes_seed_in_multiple_runs_for_reproducibility.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/captures_relevant_environment_variables_only.jsonl","seed":42}
-{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/parses_Node_js_stack_trace_format.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/parses_V8_stack_trace_without_function_names.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/parses_Node_js_stack_trace_format.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/parses_V8_stack_trace_without_function_names.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/parses_Firefox-style_stack_traces.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/handles_empty_stack_traces.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/skips_unparseable_lines.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/extracts_file_path_correctly.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/extracts_file_path_correctly.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/extracts_line_and_column_numbers_as_integers.jsonl","seed":42}
 {"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/extracts_code_frame_with_context_lines.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/handles_first_line_of_file.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/handles_last_line_of_file.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/returns_null_for_non-existent_file.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/returns_null_for_line_number_out_of_range.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/returns_null_for_non-existent_file.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/returns_null_for_line_number_out_of_range.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/includes_correct_line_numbers_in_source_array.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/resolves__ts_file_when__js_map_exists.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/resolves__ts_file_when__js_map_exists.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/falls_back_to__ts_file_if_sourcemap_does_not_exist.jsonl","seed":42}
 {"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/returns_original_file_if_neither_sourcemap_nor__ts_exists.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/caches_sourcemap_for_repeated_access.jsonl","seed":42}
@@ -140,107 +229,182 @@
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/includes_column_indicator_when_column_is_specified.jsonl","seed":42}
 {"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/omits_column_indicator_when_column_is_not_specified.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/pads_line_numbers_correctly.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/extracts_code_frames_from_stack_trace.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/extracts_code_frames_from_stack_trace.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/limits_to_maximum_3_code_frames.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/skips_frames_without_file_or_line_information.jsonl","seed":42}
 {"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/limits_number_of_code_frames_to_5.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/includes_code_frames_in_budget_calculation.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/extracts_code_frames_only_when_configured.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/extracts_code_frames_only_from_error_events_with_stack.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/respects_context_lines_configuration_in_codeframe_action.jsonl","seed":42}
-{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_regular_characters.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_newlines.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_carriage_return.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_parse_ANSI_cursor_movement__CUP_.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_color_codes__SGR_.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_color_reset.jsonl","seed":42}
-{"status":"pass","duration":45,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_screen_clearing__ED_.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_line_clearing__EL_.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_cursor_up__CUU_.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_cursor_down__CUD_.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_cursor_forward__CUF_.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_cursor_back__CUB_.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_line_wrapping.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_scrolling.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_tabs.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/parsers/ansiParser.spec.ts:0","artifactURI":"reports/ansiParser.spec/should_handle_backspace.jsonl","seed":42}
-{"status":"pass","duration":17,"location":"/srv/repos0/mkolbol/tests/worker/workerAdapters.spec.ts:0","artifactURI":"reports/workerAdapters.spec/round-trip_a_control_frame.jsonl","seed":42}
-{"status":"pass","duration":5,"location":"/srv/repos0/mkolbol/tests/worker/workerAdapters.spec.ts:0","artifactURI":"reports/workerAdapters.spec/round-trip_a_Buffer.jsonl","seed":42}
-{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/worker/workerAdapters.spec.ts:0","artifactURI":"reports/workerAdapters.spec/assert_handshake_event_structure.jsonl","seed":42}
-{"status":"pass","duration":6,"location":"/srv/repos0/mkolbol/tests/renderers/passthroughRenderer.spec.ts:0","artifactURI":"reports/passthroughRenderer.spec/should_render_raw_ANSI_to_stdout.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/renderers/passthroughRenderer.spec.ts:0","artifactURI":"reports/passthroughRenderer.spec/should_handle_ANSI_escape_sequences.jsonl","seed":42}
-{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/test/state/stateManager.spec.ts:0","artifactURI":"reports/stateManager.spec/adds_nodes_and_emits_events.jsonl","seed":42}
-{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/test/state/stateManager.spec.ts:0","artifactURI":"reports/stateManager.spec/connects_and_emits_connected.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/test/state/stateManager.spec.ts:0","artifactURI":"reports/stateManager.spec/split_and_merge_emit_events.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/test/state/stateManager.spec.ts:0","artifactURI":"reports/stateManager.spec/validator_enforces_directionality_when_set.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/test/state/stateManager.spec.ts:0","artifactURI":"reports/stateManager.spec/exporters_produce_strings.jsonl","seed":42}
-{"status":"pass","duration":7,"location":"/srv/repos0/mkolbol/tests/renderers/loggerRenderer.spec.ts:0","artifactURI":"reports/loggerRenderer.spec/should_write_all_data_to_log_file.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/renderers/loggerRenderer.spec.ts:0","artifactURI":"reports/loggerRenderer.spec/should_append_to_existing_log_file.jsonl","seed":42}
-{"status":"pass","duration":8,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/gets_rules_from_existing_config.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/digest/flakeAndFrames.spec.ts:0","artifactURI":"reports/flakeAndFrames.spec/respects_context_lines_configuration_in_codeframe_action.jsonl","seed":42}
+{"status":"pass","duration":7,"location":"/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0","artifactURI":"reports/goIngest.spec/parses_go_test_-json_fixture_data.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0","artifactURI":"reports/goIngest.spec/parses_individual_event_fields_correctly.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0","artifactURI":"reports/goIngest.spec/handles_empty_input.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0","artifactURI":"reports/goIngest.spec/handles_malformed_JSON_lines.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0","artifactURI":"reports/goIngest.spec/converts_Go_events_to_Laminar_format.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0","artifactURI":"reports/goIngest.spec/creates_test_start_events_for_run_actions.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0","artifactURI":"reports/goIngest.spec/creates_test_output_events_for_output_actions.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0","artifactURI":"reports/goIngest.spec/creates_test_pass_events_with_correct_status.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0","artifactURI":"reports/goIngest.spec/creates_test_fail_events_with_error_level.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0","artifactURI":"reports/goIngest.spec/creates_test_skip_events_for_skipped_tests.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0","artifactURI":"reports/goIngest.spec/generates_summary_with_correct_test_results.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0","artifactURI":"reports/goIngest.spec/includes_duration_in_summary.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0","artifactURI":"reports/goIngest.spec/includes_location_in_summary.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0","artifactURI":"reports/goIngest.spec/includes_artifactURI_in_summary.jsonl","seed":42}
+{"status":"pass","duration":9,"location":"/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0","artifactURI":"reports/goIngest.spec/validates_Laminar_event_structure.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0","artifactURI":"reports/goIngest.spec/preserves_timestamp_ordering.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0","artifactURI":"reports/goIngest.spec/writes_JSONL_files_per_test_case.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0","artifactURI":"reports/goIngest.spec/writes_summary_jsonl_file.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0","artifactURI":"reports/goIngest.spec/groups_events_by_test_case_correctly.jsonl","seed":42}
+{"status":"pass","duration":6,"location":"/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0","artifactURI":"reports/goIngest.spec/writes_valid_JSONL_format.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/ingest/goIngest.spec.ts:0","artifactURI":"reports/goIngest.spec/processes_fixture_data_from_parsing_to_output.jsonl","seed":42}
+{"status":"pass","duration":15,"location":"/srv/repos0/mkolbol/tests/kernel/kernel.spec.ts:0","artifactURI":"reports/kernel.spec/connect_moves_data_1_1.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/kernel/kernel.spec.ts:0","artifactURI":"reports/kernel.spec/split_fans_out_to_multiple_destinations.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/kernel/kernel.spec.ts:0","artifactURI":"reports/kernel.spec/merge_combines_multiple_sources_into_one_destination.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/kernel/kernel.spec.ts:0","artifactURI":"reports/kernel.spec/register_lookup_filters_by_capabilities.jsonl","seed":42}
+{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/returns_false_when_module_is_not_enabled.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/returns_consistent_value_for_same_module.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/returns_false_when_config_is_disabled.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/checks_module_against_config_modules_when_enabled.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/does_not_emit_when_on___returns_false.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/emit_returns_immediately_when_module_is_disabled.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/shouldEmit_returns_false_when_module_is_disabled.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/emits_to_console_when_module_is_enabled.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/respects_debug_level_filtering.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/emits_formatted_output_to_console.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/handles_emit_without_payload.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/debug/debug-api.spec.ts:0","artifactURI":"reports/debug-api.spec/shouldEmit_respects_level_hierarchy.jsonl","seed":42}
+{"status":"pass","duration":6,"location":"/srv/repos0/mkolbol/test/hostess.spec.ts:0","artifactURI":"reports/hostess.spec/registers_and_queries_by_capabilities.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/test/hostess.spec.ts:0","artifactURI":"reports/hostess.spec/marks_in-use_and_back_to_available.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/test/hostess.spec.ts:0","artifactURI":"reports/hostess.spec/evicts_after_missed_heartbeats.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/test/hostess.spec.ts:0","artifactURI":"reports/hostess.spec/heartbeat_maintains_liveness.jsonl","seed":42}
+{"status":"pass","duration":8,"location":"/srv/repos0/mkolbol/tests/renderers/passthroughRenderer.spec.ts:0","artifactURI":"reports/passthroughRenderer.spec/should_render_raw_ANSI_to_stdout.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/renderers/passthroughRenderer.spec.ts:0","artifactURI":"reports/passthroughRenderer.spec/should_handle_ANSI_escape_sequences.jsonl","seed":42}
+{"status":"pass","duration":6,"location":"/srv/repos0/mkolbol/tests/renderers/loggerRenderer.spec.ts:0","artifactURI":"reports/loggerRenderer.spec/should_write_all_data_to_log_file.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/renderers/loggerRenderer.spec.ts:0","artifactURI":"reports/loggerRenderer.spec/should_append_to_existing_log_file.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_generate_index_json_with_valid_structure.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_have_valid_timestamp_format.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_have_totalTests_matching_artifacts_length.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_have_at_least_one_artifact_entry.jsonl","seed":42}
+{"status":"pass","duration":86,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_have_valid_structure_for_each_artifact_entry.jsonl","seed":42}
+{"status":"pass","duration":6,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_have_valid_timestamps_for_each_entry.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_reference_summary_jsonl_in_artifacts.jsonl","seed":42}
+{"status":"pass","duration":8,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_have_caseFile_path_for_each_entry.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_have_valid_location_paths.jsonl","seed":42}
+{"status":"pass","duration":8,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_create_JSONL_file_for_each_test_case.jsonl","seed":42}
+{"status":"pass","duration":8,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_organize_case_files_in_suite_directories.jsonl","seed":42}
+{"status":"pass","duration":23,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_contain_valid_JSONL_format.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_include_case_begin_event.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_include_test_run_event.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_include_case_end_event_with_payload.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_have_timestamps_for_all_events.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_have_chronological_timestamps.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_include_test_error_events_for_failed_tests.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_have_error-level_log_for_case_end_of_failed_tests.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_have_summary_jsonl_file.jsonl","seed":42}
+{"status":"fail","duration":37,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_have_matching_test_count_between_index_and_summary.jsonl","seed":42,"error":"expected 107 to be greater than or equal to 409"}
+{"status":"pass","duration":23,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_have_valid_JSONL_in_summary_file.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_cross-reference_between_index_and_case_files.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_have_case_name_in_JSONL_events_matching_test_name.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_handle_test_names_with_special_characters.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_have_unique_case_file_paths.jsonl","seed":42}
+{"status":"pass","duration":19,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_have_all_case_files_in_reports_directory.jsonl","seed":42}
+{"status":"pass","duration":55,"location":"/srv/repos0/mkolbol/tests/laminar/coreReporter.spec.ts:0","artifactURI":"reports/coreReporter.spec/should_have_consistent_status_values.jsonl","seed":42}
+{"status":"pass","duration":9,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/gets_rules_from_existing_config.jsonl","seed":42}
 {"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/returns_empty_config_when_file_does_not_exist.jsonl","seed":42}
-{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/sets_digest_rules_successfully.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/handles_write_errors_gracefully.jsonl","seed":42}
-{"status":"pass","duration":5,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/generates_digests_for_specific_cases.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/generates_digests_for_all_failing_cases.jsonl","seed":42}
+{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/sets_digest_rules_successfully.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/handles_write_errors_gracefully.jsonl","seed":42}
+{"status":"pass","duration":6,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/generates_digests_for_specific_cases.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/generates_digests_for_all_failing_cases.jsonl","seed":42}
 {"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/handles_no_failures_gracefully.jsonl","seed":42}
 {"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/retrieves_logs_for_a_specific_case.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/returns_empty_string_when_logs_do_not_exist.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/returns_empty_string_when_logs_do_not_exist.jsonl","seed":42}
 {"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/handles_missing_caseName_parameter.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/queries_logs_for_a_specific_case.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/filters_by_log_level.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/queries_logs_for_a_specific_case.jsonl","seed":42}
+{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/filters_by_log_level.jsonl","seed":42}
 {"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/filters_by_event_type.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/respects_limit_parameter.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/validates_limit_range.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/returns_empty_when_caseName_is_not_provided.jsonl","seed":42}
-{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/returns_repro_commands_for_all_failures.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/filters_repro_commands_by_caseName.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/validates_limit_range.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/returns_empty_when_caseName_is_not_provided.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/returns_repro_commands_for_all_failures.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/filters_repro_commands_by_caseName.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/returns_empty_array_when_summary_does_not_exist.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/sets_overlay_rules_successfully.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/handles_multiple_overlay_rules.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/handles_missing_rules_parameter_gracefully.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/handles_multiple_overlay_rules.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/handles_missing_rules_parameter_gracefully.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/clears_overlay_rules_successfully.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/works_when_no_rules_are_set.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/returns_current_overlay_rules.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/returns_empty_array_when_no_rules_are_set.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/returns_empty_array_when_no_rules_are_set.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/reflects_changes_after_clear.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/throws_McpError_for_unknown_tool.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/validates_input_types.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/validates_required_parameters.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/validates_required_parameters.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/handles_concurrent_query_calls.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/handles_concurrent_overlay_operations.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/handles_concurrent_overlay_operations.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/handles_concurrent_rules_get_set.jsonl","seed":42}
-{"status":"pass","duration":20,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/handles_mixed_tool_calls_concurrently.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/handles_missing_reports_directory.jsonl","seed":42}
-{"status":"pass","duration":11,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/handles_malformed_summary_file.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/handles_mixed_tool_calls_concurrently.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/handles_missing_reports_directory.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/handles_malformed_summary_file.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/handles_empty_case_name.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/handles_special_characters_in_case_names.jsonl","seed":42}
-{"status":"pass","duration":20,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/handles_nested_reports_directories.jsonl","seed":42}
-{"status":"pass","duration":24,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/handles_very_large_log_files.jsonl","seed":42}
+{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/handles_special_characters_in_case_names.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/handles_nested_reports_directories.jsonl","seed":42}
+{"status":"pass","duration":5,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/handles_very_large_log_files.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/supports_complete_overlay_workflow.jsonl","seed":42}
-{"status":"pass","duration":0,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/allows_overlay_rules_to_be_overwritten.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/allows_overlay_rules_to_be_overwritten.jsonl","seed":42}
 {"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/mcp/laminarMcp.spec.ts:0","artifactURI":"reports/laminarMcp.spec/maintains_overlay_independence_from_persistent_rules.jsonl","seed":42}
-{"status":"pass","duration":10,"location":"/srv/repos0/mkolbol/test/hostess.spec.ts:0","artifactURI":"reports/hostess.spec/registers_and_queries_by_capabilities.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/test/hostess.spec.ts:0","artifactURI":"reports/hostess.spec/marks_in-use_and_back_to_available.jsonl","seed":42}
-{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/test/hostess.spec.ts:0","artifactURI":"reports/hostess.spec/evicts_after_missed_heartbeats.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/test/hostess.spec.ts:0","artifactURI":"reports/hostess.spec/heartbeat_maintains_liveness.jsonl","seed":42}
-{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/executor/executor.spec.ts:0","artifactURI":"reports/executor.spec/should_load_configuration.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/executor/executor.spec.ts:0","artifactURI":"reports/executor.spec/should_throw_if_up___called_without_load__.jsonl","seed":42}
-{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/executor/executor.spec.ts:0","artifactURI":"reports/executor.spec/should_instantiate_modules_and_register_with_hostess.jsonl","seed":42}
-{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/executor/executor.spec.ts:0","artifactURI":"reports/executor.spec/should_wire_connections_via_StateManager.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/executor/executor.spec.ts:0","artifactURI":"reports/executor.spec/should_support_restartNode.jsonl","seed":42}
-{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/executor/executor.spec.ts:0","artifactURI":"reports/executor.spec/should_throw_on_restartNode_for_non-existent_node.jsonl","seed":42}
-{"status":"pass","duration":446,"location":"/srv/repos0/mkolbol/tests/property/invariants.spec.ts:0","artifactURI":"reports/invariants.spec/split__order_preservation_across_destinations.jsonl","seed":42}
-{"status":"pass","duration":112,"location":"/srv/repos0/mkolbol/tests/property/invariants.spec.ts:0","artifactURI":"reports/invariants.spec/merge__all_source_data_reaches_destination.jsonl","seed":42}
-{"status":"pass","duration":150,"location":"/srv/repos0/mkolbol/tests/property/invariants.spec.ts:0","artifactURI":"reports/invariants.spec/merge__no_data_loss_with_concurrent_writes.jsonl","seed":42}
-{"status":"pass","duration":1114,"location":"/srv/repos0/mkolbol/tests/property/invariants.spec.ts:0","artifactURI":"reports/invariants.spec/split-then-merge__roundtrip_preserves_all_data.jsonl","seed":42}
-{"status":"pass","duration":22,"location":"/srv/repos0/mkolbol/tests/property/invariants.spec.ts:0","artifactURI":"reports/invariants.spec/empty_split__source_with_zero_destinations_completes.jsonl","seed":42}
-{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/property/invariants.spec.ts:0","artifactURI":"reports/invariants.spec/empty_merge__destination_with_zero_sources_completes.jsonl","seed":42}
-{"status":"pass","duration":93,"location":"/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0","artifactURI":"reports/externalServerWrapper.spec/should_spawn_a_simple_process.jsonl","seed":42}
-{"status":"pass","duration":160,"location":"/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0","artifactURI":"reports/externalServerWrapper.spec/should_pipe_data_bidirectionally.jsonl","seed":42}
-{"status":"pass","duration":261,"location":"/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0","artifactURI":"reports/externalServerWrapper.spec/should_handle_environment_variables.jsonl","seed":42}
-{"status":"pass","duration":139,"location":"/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0","artifactURI":"reports/externalServerWrapper.spec/should_register_with_Hostess_on_spawn.jsonl","seed":42}
-{"status":"pass","duration":51,"location":"/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0","artifactURI":"reports/externalServerWrapper.spec/should_gracefully_shutdown_with_SIGTERM.jsonl","seed":42}
-{"status":"pass","duration":547,"location":"/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0","artifactURI":"reports/externalServerWrapper.spec/should_restart_on_failure_with__on-failure__policy.jsonl","seed":42}
-{"status":"pass","duration":337,"location":"/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0","artifactURI":"reports/externalServerWrapper.spec/should_not_restart_with__never__policy.jsonl","seed":42}
-{"status":"pass","duration":531,"location":"/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0","artifactURI":"reports/externalServerWrapper.spec/should_respect_maxRestarts_limit.jsonl","seed":42}
-{"status":"pass","duration":41,"location":"/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0","artifactURI":"reports/externalServerWrapper.spec/should_provide_process_info.jsonl","seed":42}
+{"status":"pass","duration":5,"location":"/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0","artifactURI":"reports/pytestIngest.spec/parses_simple_passing_test_fixture.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0","artifactURI":"reports/pytestIngest.spec/parses_complex_multi-test_fixture.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0","artifactURI":"reports/pytestIngest.spec/parses_report_metadata_correctly.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0","artifactURI":"reports/pytestIngest.spec/parses_test_node_IDs_correctly.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0","artifactURI":"reports/pytestIngest.spec/throws_error_on_invalid_JSON.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0","artifactURI":"reports/pytestIngest.spec/handles_empty_test_array.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0","artifactURI":"reports/pytestIngest.spec/converts_passing_tests_to_Laminar_format.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0","artifactURI":"reports/pytestIngest.spec/creates_case_begin_events_for_test_start.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0","artifactURI":"reports/pytestIngest.spec/creates_setup_events_for_test_setup_phase.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0","artifactURI":"reports/pytestIngest.spec/creates_test_run_and_test_call_passed_events_for_test_execution.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0","artifactURI":"reports/pytestIngest.spec/creates_case_end_events_for_test_completion.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0","artifactURI":"reports/pytestIngest.spec/handles_failed_tests_with_error_messages.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0","artifactURI":"reports/pytestIngest.spec/extracts_stack_traces_from_failed_tests.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0","artifactURI":"reports/pytestIngest.spec/handles_error_during_setup_phase.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0","artifactURI":"reports/pytestIngest.spec/handles_skipped_tests_correctly.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0","artifactURI":"reports/pytestIngest.spec/captures_stdout_from_test_execution.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0","artifactURI":"reports/pytestIngest.spec/generates_correct_summary_for_all_test_outcomes.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0","artifactURI":"reports/pytestIngest.spec/includes_duration_in_summary_entries.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0","artifactURI":"reports/pytestIngest.spec/includes_location_in_summary_entries.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0","artifactURI":"reports/pytestIngest.spec/includes_artifactURI_in_summary_entries.jsonl","seed":42}
+{"status":"pass","duration":13,"location":"/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0","artifactURI":"reports/pytestIngest.spec/validates_Laminar_event_structure.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0","artifactURI":"reports/pytestIngest.spec/preserves_timestamp_ordering.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0","artifactURI":"reports/pytestIngest.spec/handles_tests_without_lineno.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0","artifactURI":"reports/pytestIngest.spec/handles_empty_report_with_no_tests.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0","artifactURI":"reports/pytestIngest.spec/writes_JSONL_files_per_test_case.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0","artifactURI":"reports/pytestIngest.spec/writes_summary_jsonl_file.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0","artifactURI":"reports/pytestIngest.spec/groups_events_by_test_case_correctly.jsonl","seed":42}
+{"status":"pass","duration":9,"location":"/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0","artifactURI":"reports/pytestIngest.spec/writes_valid_JSONL_format.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0","artifactURI":"reports/pytestIngest.spec/processes_fixture_data_from_parsing_to_output.jsonl","seed":42}
+{"status":"pass","duration":1,"location":"/srv/repos0/mkolbol/tests/ingest/pytestIngest.spec.ts:0","artifactURI":"reports/pytestIngest.spec/processes_simple_passing_test_correctly.jsonl","seed":42}
+{"status":"pass","duration":5,"location":"/srv/repos0/mkolbol/test/state/stateManager.spec.ts:0","artifactURI":"reports/stateManager.spec/adds_nodes_and_emits_events.jsonl","seed":42}
+{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/test/state/stateManager.spec.ts:0","artifactURI":"reports/stateManager.spec/connects_and_emits_connected.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/test/state/stateManager.spec.ts:0","artifactURI":"reports/stateManager.spec/split_and_merge_emit_events.jsonl","seed":42}
+{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/test/state/stateManager.spec.ts:0","artifactURI":"reports/stateManager.spec/validator_enforces_directionality_when_set.jsonl","seed":42}
+{"status":"pass","duration":2,"location":"/srv/repos0/mkolbol/test/state/stateManager.spec.ts:0","artifactURI":"reports/stateManager.spec/exporters_produce_strings.jsonl","seed":42}
+{"status":"pass","duration":48,"location":"/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0","artifactURI":"reports/externalServerWrapper.spec/should_spawn_a_simple_process.jsonl","seed":42}
+{"status":"pass","duration":59,"location":"/srv/repos0/mkolbol/tests/executor/executor.spec.ts:0","artifactURI":"reports/executor.spec/should_load_configuration.jsonl","seed":42}
+{"status":"pass","duration":4,"location":"/srv/repos0/mkolbol/tests/executor/executor.spec.ts:0","artifactURI":"reports/executor.spec/should_throw_if_up___called_without_load__.jsonl","seed":42}
+{"status":"pass","duration":37,"location":"/srv/repos0/mkolbol/tests/executor/executor.spec.ts:0","artifactURI":"reports/executor.spec/should_instantiate_modules_and_register_with_hostess.jsonl","seed":42}
+{"status":"pass","duration":85,"location":"/srv/repos0/mkolbol/tests/executor/executor.spec.ts:0","artifactURI":"reports/executor.spec/should_wire_connections_via_StateManager.jsonl","seed":42}
+{"status":"pass","duration":36,"location":"/srv/repos0/mkolbol/tests/executor/executor.spec.ts:0","artifactURI":"reports/executor.spec/should_support_restartNode.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/executor/executor.spec.ts:0","artifactURI":"reports/executor.spec/should_throw_on_restartNode_for_non-existent_node.jsonl","seed":42}
+{"status":"pass","duration":461,"location":"/srv/repos0/mkolbol/tests/property/invariants.spec.ts:0","artifactURI":"reports/invariants.spec/split__all_destinations_receive_identical_data.jsonl","seed":42}
+{"status":"pass","duration":303,"location":"/srv/repos0/mkolbol/tests/property/invariants.spec.ts:0","artifactURI":"reports/invariants.spec/split__order_preservation_across_destinations.jsonl","seed":42}
+{"status":"pass","duration":106,"location":"/srv/repos0/mkolbol/tests/property/invariants.spec.ts:0","artifactURI":"reports/invariants.spec/merge__all_source_data_reaches_destination.jsonl","seed":42}
+{"status":"pass","duration":127,"location":"/srv/repos0/mkolbol/tests/property/invariants.spec.ts:0","artifactURI":"reports/invariants.spec/merge__no_data_loss_with_concurrent_writes.jsonl","seed":42}
+{"status":"pass","duration":1103,"location":"/srv/repos0/mkolbol/tests/property/invariants.spec.ts:0","artifactURI":"reports/invariants.spec/split-then-merge__roundtrip_preserves_all_data.jsonl","seed":42}
+{"status":"pass","duration":6,"location":"/srv/repos0/mkolbol/tests/property/invariants.spec.ts:0","artifactURI":"reports/invariants.spec/empty_split__source_with_zero_destinations_completes.jsonl","seed":42}
+{"status":"pass","duration":3,"location":"/srv/repos0/mkolbol/tests/property/invariants.spec.ts:0","artifactURI":"reports/invariants.spec/empty_merge__destination_with_zero_sources_completes.jsonl","seed":42}
+{"status":"pass","duration":32,"location":"/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0","artifactURI":"reports/externalServerWrapper.spec/should_register_with_Hostess_on_spawn.jsonl","seed":42}
+{"status":"pass","duration":36,"location":"/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0","artifactURI":"reports/externalServerWrapper.spec/should_gracefully_shutdown_with_SIGTERM.jsonl","seed":42}
+{"status":"pass","duration":529,"location":"/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0","artifactURI":"reports/externalServerWrapper.spec/should_restart_on_failure_with__on-failure__policy.jsonl","seed":42}
+{"status":"pass","duration":353,"location":"/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0","artifactURI":"reports/externalServerWrapper.spec/should_not_restart_with__never__policy.jsonl","seed":42}
+{"status":"pass","duration":541,"location":"/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0","artifactURI":"reports/externalServerWrapper.spec/should_respect_maxRestarts_limit.jsonl","seed":42}
+{"status":"pass","duration":40,"location":"/srv/repos0/mkolbol/tests/wrappers/externalServerWrapper.spec.ts:0","artifactURI":"reports/externalServerWrapper.spec/should_provide_process_info.jsonl","seed":42}
diff --git a/reports/trends.spec/analyzes_complex_multi-test_multi-run_scenario.jsonl b/reports/trends.spec/analyzes_complex_multi-test_multi-run_scenario.jsonl
index a1d9641..78f5809 100644
--- a/reports/trends.spec/analyzes_complex_multi-test_multi-run_scenario.jsonl
+++ b/reports/trends.spec/analyzes_complex_multi-test_multi-run_scenario.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760299847685,"lvl":"info","case":"analyzes complex multi-test multi-run scenario","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760299847686,"lvl":"info","case":"analyzes complex multi-test multi-run scenario","phase":"execution","evt":"test.run"}
-{"ts":1760299847687,"lvl":"info","case":"analyzes complex multi-test multi-run scenario","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
+{"ts":1760303269994,"lvl":"info","case":"analyzes complex multi-test multi-run scenario","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269995,"lvl":"info","case":"analyzes complex multi-test multi-run scenario","phase":"execution","evt":"test.run"}
+{"ts":1760303269996,"lvl":"info","case":"analyzes complex multi-test multi-run scenario","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
diff --git a/reports/trends.spec/appends_entries_to_history.jsonl b/reports/trends.spec/appends_entries_to_history.jsonl
index 15061a2..a03be4c 100644
--- a/reports/trends.spec/appends_entries_to_history.jsonl
+++ b/reports/trends.spec/appends_entries_to_history.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760299847681,"lvl":"info","case":"appends entries to history","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760299847682,"lvl":"info","case":"appends entries to history","phase":"execution","evt":"test.run"}
-{"ts":1760299847683,"lvl":"info","case":"appends entries to history","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303269991,"lvl":"info","case":"appends entries to history","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269992,"lvl":"info","case":"appends entries to history","phase":"execution","evt":"test.run"}
+{"ts":1760303269993,"lvl":"info","case":"appends entries to history","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/trends.spec/calculates_failure_rate_from_history.jsonl b/reports/trends.spec/calculates_failure_rate_from_history.jsonl
index 68cbd14..68f506c 100644
--- a/reports/trends.spec/calculates_failure_rate_from_history.jsonl
+++ b/reports/trends.spec/calculates_failure_rate_from_history.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760299847682,"lvl":"info","case":"calculates failure rate from history","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760299847683,"lvl":"info","case":"calculates failure rate from history","phase":"execution","evt":"test.run"}
-{"ts":1760299847684,"lvl":"info","case":"calculates failure rate from history","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303269991,"lvl":"info","case":"calculates failure rate from history","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269992,"lvl":"info","case":"calculates failure rate from history","phase":"execution","evt":"test.run"}
+{"ts":1760303269993,"lvl":"info","case":"calculates failure rate from history","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/trends.spec/combines_frequency_and_rate_for_top_offender_score.jsonl b/reports/trends.spec/combines_frequency_and_rate_for_top_offender_score.jsonl
index 0ce946c..8715961 100644
--- a/reports/trends.spec/combines_frequency_and_rate_for_top_offender_score.jsonl
+++ b/reports/trends.spec/combines_frequency_and_rate_for_top_offender_score.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760299847683,"lvl":"info","case":"combines frequency and rate for top offender score","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760299847684,"lvl":"info","case":"combines frequency and rate for top offender score","phase":"execution","evt":"test.run"}
-{"ts":1760299847685,"lvl":"info","case":"combines frequency and rate for top offender score","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303269992,"lvl":"info","case":"combines frequency and rate for top offender score","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269993,"lvl":"info","case":"combines frequency and rate for top offender score","phase":"execution","evt":"test.run"}
+{"ts":1760303269994,"lvl":"info","case":"combines frequency and rate for top offender score","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/trends.spec/creates_history_from_Go_test_runs.jsonl b/reports/trends.spec/creates_history_from_Go_test_runs.jsonl
index 4f986cd..febb1ae 100644
--- a/reports/trends.spec/creates_history_from_Go_test_runs.jsonl
+++ b/reports/trends.spec/creates_history_from_Go_test_runs.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760299847684,"lvl":"info","case":"creates history from Go test runs","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760299847685,"lvl":"info","case":"creates history from Go test runs","phase":"execution","evt":"test.run"}
-{"ts":1760299847686,"lvl":"info","case":"creates history from Go test runs","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303269993,"lvl":"info","case":"creates history from Go test runs","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269994,"lvl":"info","case":"creates history from Go test runs","phase":"execution","evt":"test.run"}
+{"ts":1760303269995,"lvl":"info","case":"creates history from Go test runs","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/trends.spec/creates_history_from_Node_js_test_runs.jsonl b/reports/trends.spec/creates_history_from_Node_js_test_runs.jsonl
index 0744082..2a739ef 100644
--- a/reports/trends.spec/creates_history_from_Node_js_test_runs.jsonl
+++ b/reports/trends.spec/creates_history_from_Node_js_test_runs.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760299847684,"lvl":"info","case":"creates history from Node.js test runs","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760299847685,"lvl":"info","case":"creates history from Node.js test runs","phase":"execution","evt":"test.run"}
-{"ts":1760299847686,"lvl":"info","case":"creates history from Node.js test runs","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303269993,"lvl":"info","case":"creates history from Node.js test runs","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269994,"lvl":"info","case":"creates history from Node.js test runs","phase":"execution","evt":"test.run"}
+{"ts":1760303269995,"lvl":"info","case":"creates history from Node.js test runs","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/trends.spec/creates_valid_history_entry_from_test_result.jsonl b/reports/trends.spec/creates_valid_history_entry_from_test_result.jsonl
index 933b15c..f2d7aee 100644
--- a/reports/trends.spec/creates_valid_history_entry_from_test_result.jsonl
+++ b/reports/trends.spec/creates_valid_history_entry_from_test_result.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760299847681,"lvl":"info","case":"creates valid history entry from test result","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760299847682,"lvl":"info","case":"creates valid history entry from test result","phase":"execution","evt":"test.run"}
-{"ts":1760299847683,"lvl":"info","case":"creates valid history entry from test result","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303269990,"lvl":"info","case":"creates valid history entry from test result","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269991,"lvl":"info","case":"creates valid history entry from test result","phase":"execution","evt":"test.run"}
+{"ts":1760303269992,"lvl":"info","case":"creates valid history entry from test result","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/trends.spec/detects_new_regression_from_passing_to_failing.jsonl b/reports/trends.spec/detects_new_regression_from_passing_to_failing.jsonl
index f1f5ffc..e3f822d 100644
--- a/reports/trends.spec/detects_new_regression_from_passing_to_failing.jsonl
+++ b/reports/trends.spec/detects_new_regression_from_passing_to_failing.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760299847685,"lvl":"info","case":"detects new regression from passing to failing","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760299847686,"lvl":"info","case":"detects new regression from passing to failing","phase":"execution","evt":"test.run"}
-{"ts":1760299847687,"lvl":"info","case":"detects new regression from passing to failing","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303269993,"lvl":"info","case":"detects new regression from passing to failing","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269994,"lvl":"info","case":"detects new regression from passing to failing","phase":"execution","evt":"test.run"}
+{"ts":1760303269995,"lvl":"info","case":"detects new regression from passing to failing","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/trends.spec/extracts_error_name_from_payload.jsonl b/reports/trends.spec/extracts_error_name_from_payload.jsonl
index db4f87c..f237009 100644
--- a/reports/trends.spec/extracts_error_name_from_payload.jsonl
+++ b/reports/trends.spec/extracts_error_name_from_payload.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760299847680,"lvl":"info","case":"extracts error name from payload","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760299847681,"lvl":"info","case":"extracts error name from payload","phase":"execution","evt":"test.run"}
-{"ts":1760299847682,"lvl":"info","case":"extracts error name from payload","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303269990,"lvl":"info","case":"extracts error name from payload","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269991,"lvl":"info","case":"extracts error name from payload","phase":"execution","evt":"test.run"}
+{"ts":1760303269992,"lvl":"info","case":"extracts error name from payload","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/trends.spec/extracts_error_type_from_error_message.jsonl b/reports/trends.spec/extracts_error_type_from_error_message.jsonl
index 6366275..8d5e2e1 100644
--- a/reports/trends.spec/extracts_error_type_from_error_message.jsonl
+++ b/reports/trends.spec/extracts_error_type_from_error_message.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760299847679,"lvl":"info","case":"extracts error type from error message","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760299847680,"lvl":"info","case":"extracts error type from error message","phase":"execution","evt":"test.run"}
-{"ts":1760299847681,"lvl":"info","case":"extracts error type from error message","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303269990,"lvl":"info","case":"extracts error type from error message","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269991,"lvl":"info","case":"extracts error type from error message","phase":"execution","evt":"test.run"}
+{"ts":1760303269992,"lvl":"info","case":"extracts error type from error message","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/trends.spec/extracts_stack_location_from_payload.jsonl b/reports/trends.spec/extracts_stack_location_from_payload.jsonl
index 8941c30..c65e9fe 100644
--- a/reports/trends.spec/extracts_stack_location_from_payload.jsonl
+++ b/reports/trends.spec/extracts_stack_location_from_payload.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760299847680,"lvl":"info","case":"extracts stack location from payload","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760299847681,"lvl":"info","case":"extracts stack location from payload","phase":"execution","evt":"test.run"}
-{"ts":1760299847682,"lvl":"info","case":"extracts stack location from payload","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
+{"ts":1760303269990,"lvl":"info","case":"extracts stack location from payload","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269991,"lvl":"info","case":"extracts stack location from payload","phase":"execution","evt":"test.run"}
+{"ts":1760303269992,"lvl":"info","case":"extracts stack location from payload","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/trends.spec/filters_by_rolling_time_window.jsonl b/reports/trends.spec/filters_by_rolling_time_window.jsonl
index 2b764c4..fe16399 100644
--- a/reports/trends.spec/filters_by_rolling_time_window.jsonl
+++ b/reports/trends.spec/filters_by_rolling_time_window.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760299847683,"lvl":"info","case":"filters by rolling time window","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760299847684,"lvl":"info","case":"filters by rolling time window","phase":"execution","evt":"test.run"}
-{"ts":1760299847685,"lvl":"info","case":"filters by rolling time window","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303269992,"lvl":"info","case":"filters by rolling time window","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269993,"lvl":"info","case":"filters by rolling time window","phase":"execution","evt":"test.run"}
+{"ts":1760303269994,"lvl":"info","case":"filters by rolling time window","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/trends.spec/filters_history_by_date_range.jsonl b/reports/trends.spec/filters_history_by_date_range.jsonl
index 4a0c61f..dff1146 100644
--- a/reports/trends.spec/filters_history_by_date_range.jsonl
+++ b/reports/trends.spec/filters_history_by_date_range.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760299847683,"lvl":"info","case":"filters history by date range","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760299847684,"lvl":"info","case":"filters history by date range","phase":"execution","evt":"test.run"}
-{"ts":1760299847685,"lvl":"info","case":"filters history by date range","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303269992,"lvl":"info","case":"filters history by date range","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269993,"lvl":"info","case":"filters history by date range","phase":"execution","evt":"test.run"}
+{"ts":1760303269994,"lvl":"info","case":"filters history by date range","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/trends.spec/filters_last_N_runs.jsonl b/reports/trends.spec/filters_last_N_runs.jsonl
index bf5b695..25cd8a8 100644
--- a/reports/trends.spec/filters_last_N_runs.jsonl
+++ b/reports/trends.spec/filters_last_N_runs.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760299847683,"lvl":"info","case":"filters last N runs","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760299847684,"lvl":"info","case":"filters last N runs","phase":"execution","evt":"test.run"}
-{"ts":1760299847685,"lvl":"info","case":"filters last N runs","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303269992,"lvl":"info","case":"filters last N runs","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269993,"lvl":"info","case":"filters last N runs","phase":"execution","evt":"test.run"}
+{"ts":1760303269994,"lvl":"info","case":"filters last N runs","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/trends.spec/generates_consistent_fingerprint_for_same_failures.jsonl b/reports/trends.spec/generates_consistent_fingerprint_for_same_failures.jsonl
index e12ee4f..f6e56f8 100644
--- a/reports/trends.spec/generates_consistent_fingerprint_for_same_failures.jsonl
+++ b/reports/trends.spec/generates_consistent_fingerprint_for_same_failures.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760299847678,"lvl":"info","case":"generates consistent fingerprint for same failures","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760299847679,"lvl":"info","case":"generates consistent fingerprint for same failures","phase":"execution","evt":"test.run"}
-{"ts":1760299847680,"lvl":"info","case":"generates consistent fingerprint for same failures","phase":"teardown","evt":"case.end","payload":{"duration":5,"status":"passed"}}
+{"ts":1760303269989,"lvl":"info","case":"generates consistent fingerprint for same failures","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269990,"lvl":"info","case":"generates consistent fingerprint for same failures","phase":"execution","evt":"test.run"}
+{"ts":1760303269991,"lvl":"info","case":"generates consistent fingerprint for same failures","phase":"teardown","evt":"case.end","payload":{"duration":8,"status":"passed"}}
diff --git a/reports/trends.spec/generates_different_fingerprints_for_different_error_types.jsonl b/reports/trends.spec/generates_different_fingerprints_for_different_error_types.jsonl
index e15916f..a7cd854 100644
--- a/reports/trends.spec/generates_different_fingerprints_for_different_error_types.jsonl
+++ b/reports/trends.spec/generates_different_fingerprints_for_different_error_types.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760299847678,"lvl":"info","case":"generates different fingerprints for different error types","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760299847679,"lvl":"info","case":"generates different fingerprints for different error types","phase":"execution","evt":"test.run"}
-{"ts":1760299847680,"lvl":"info","case":"generates different fingerprints for different error types","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303269989,"lvl":"info","case":"generates different fingerprints for different error types","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269990,"lvl":"info","case":"generates different fingerprints for different error types","phase":"execution","evt":"test.run"}
+{"ts":1760303269991,"lvl":"info","case":"generates different fingerprints for different error types","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/trends.spec/generates_different_fingerprints_for_different_stack_locations.jsonl b/reports/trends.spec/generates_different_fingerprints_for_different_stack_locations.jsonl
index 3c2161f..57b9ac4 100644
--- a/reports/trends.spec/generates_different_fingerprints_for_different_stack_locations.jsonl
+++ b/reports/trends.spec/generates_different_fingerprints_for_different_stack_locations.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760299847679,"lvl":"info","case":"generates different fingerprints for different stack locations","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760299847680,"lvl":"info","case":"generates different fingerprints for different stack locations","phase":"execution","evt":"test.run"}
-{"ts":1760299847681,"lvl":"info","case":"generates different fingerprints for different stack locations","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
+{"ts":1760303269989,"lvl":"info","case":"generates different fingerprints for different stack locations","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269990,"lvl":"info","case":"generates different fingerprints for different stack locations","phase":"execution","evt":"test.run"}
+{"ts":1760303269991,"lvl":"info","case":"generates different fingerprints for different stack locations","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/trends.spec/generates_different_fingerprints_for_different_test_names.jsonl b/reports/trends.spec/generates_different_fingerprints_for_different_test_names.jsonl
index 87a71a1..16d5df2 100644
--- a/reports/trends.spec/generates_different_fingerprints_for_different_test_names.jsonl
+++ b/reports/trends.spec/generates_different_fingerprints_for_different_test_names.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760299847678,"lvl":"info","case":"generates different fingerprints for different test names","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760299847679,"lvl":"info","case":"generates different fingerprints for different test names","phase":"execution","evt":"test.run"}
-{"ts":1760299847680,"lvl":"info","case":"generates different fingerprints for different test names","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
+{"ts":1760303269989,"lvl":"info","case":"generates different fingerprints for different test names","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269990,"lvl":"info","case":"generates different fingerprints for different test names","phase":"execution","evt":"test.run"}
+{"ts":1760303269991,"lvl":"info","case":"generates different fingerprints for different test names","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/trends.spec/generates_fingerprint_from_test_name_only_when_no_error_details.jsonl b/reports/trends.spec/generates_fingerprint_from_test_name_only_when_no_error_details.jsonl
index 8e8dcb5..b412e4b 100644
--- a/reports/trends.spec/generates_fingerprint_from_test_name_only_when_no_error_details.jsonl
+++ b/reports/trends.spec/generates_fingerprint_from_test_name_only_when_no_error_details.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760299847679,"lvl":"info","case":"generates fingerprint from test name only when no error details","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760299847680,"lvl":"info","case":"generates fingerprint from test name only when no error details","phase":"execution","evt":"test.run"}
-{"ts":1760299847681,"lvl":"info","case":"generates fingerprint from test name only when no error details","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303269989,"lvl":"info","case":"generates fingerprint from test name only when no error details","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269990,"lvl":"info","case":"generates fingerprint from test name only when no error details","phase":"execution","evt":"test.run"}
+{"ts":1760303269991,"lvl":"info","case":"generates fingerprint from test name only when no error details","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/trends.spec/generates_fingerprints_for_Go_test_failures.jsonl b/reports/trends.spec/generates_fingerprints_for_Go_test_failures.jsonl
index 3de1721..d13fc49 100644
--- a/reports/trends.spec/generates_fingerprints_for_Go_test_failures.jsonl
+++ b/reports/trends.spec/generates_fingerprints_for_Go_test_failures.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760299847684,"lvl":"info","case":"generates fingerprints for Go test failures","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760299847685,"lvl":"info","case":"generates fingerprints for Go test failures","phase":"execution","evt":"test.run"}
-{"ts":1760299847686,"lvl":"info","case":"generates fingerprints for Go test failures","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303269993,"lvl":"info","case":"generates fingerprints for Go test failures","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269994,"lvl":"info","case":"generates fingerprints for Go test failures","phase":"execution","evt":"test.run"}
+{"ts":1760303269995,"lvl":"info","case":"generates fingerprints for Go test failures","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/trends.spec/generates_fingerprints_for_Node_js_test_failures.jsonl b/reports/trends.spec/generates_fingerprints_for_Node_js_test_failures.jsonl
index e3b795c..50c23d4 100644
--- a/reports/trends.spec/generates_fingerprints_for_Node_js_test_failures.jsonl
+++ b/reports/trends.spec/generates_fingerprints_for_Node_js_test_failures.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760299847684,"lvl":"info","case":"generates fingerprints for Node.js test failures","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760299847685,"lvl":"info","case":"generates fingerprints for Node.js test failures","phase":"execution","evt":"test.run"}
-{"ts":1760299847686,"lvl":"info","case":"generates fingerprints for Node.js test failures","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303269992,"lvl":"info","case":"generates fingerprints for Node.js test failures","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269993,"lvl":"info","case":"generates fingerprints for Node.js test failures","phase":"execution","evt":"test.run"}
+{"ts":1760303269994,"lvl":"info","case":"generates fingerprints for Node.js test failures","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/trends.spec/handles_Go_panic_failures.jsonl b/reports/trends.spec/handles_Go_panic_failures.jsonl
index b74dbdc..1e1c5b2 100644
--- a/reports/trends.spec/handles_Go_panic_failures.jsonl
+++ b/reports/trends.spec/handles_Go_panic_failures.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760299847684,"lvl":"info","case":"handles Go panic failures","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760299847685,"lvl":"info","case":"handles Go panic failures","phase":"execution","evt":"test.run"}
-{"ts":1760299847686,"lvl":"info","case":"handles Go panic failures","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
+{"ts":1760303269993,"lvl":"info","case":"handles Go panic failures","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269994,"lvl":"info","case":"handles Go panic failures","phase":"execution","evt":"test.run"}
+{"ts":1760303269995,"lvl":"info","case":"handles Go panic failures","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/trends.spec/handles_missing_error_details_gracefully.jsonl b/reports/trends.spec/handles_missing_error_details_gracefully.jsonl
index 7fa969c..dd57e68 100644
--- a/reports/trends.spec/handles_missing_error_details_gracefully.jsonl
+++ b/reports/trends.spec/handles_missing_error_details_gracefully.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760299847681,"lvl":"info","case":"handles missing error details gracefully","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760299847682,"lvl":"info","case":"handles missing error details gracefully","phase":"execution","evt":"test.run"}
-{"ts":1760299847683,"lvl":"info","case":"handles missing error details gracefully","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303269990,"lvl":"info","case":"handles missing error details gracefully","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269991,"lvl":"info","case":"handles missing error details gracefully","phase":"execution","evt":"test.run"}
+{"ts":1760303269992,"lvl":"info","case":"handles missing error details gracefully","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/trends.spec/handles_payload_with_parenthesis-style_stack_format.jsonl b/reports/trends.spec/handles_payload_with_parenthesis-style_stack_format.jsonl
index a03f114..0a44f69 100644
--- a/reports/trends.spec/handles_payload_with_parenthesis-style_stack_format.jsonl
+++ b/reports/trends.spec/handles_payload_with_parenthesis-style_stack_format.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760299847681,"lvl":"info","case":"handles payload with parenthesis-style stack format","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760299847682,"lvl":"info","case":"handles payload with parenthesis-style stack format","phase":"execution","evt":"test.run"}
-{"ts":1760299847683,"lvl":"info","case":"handles payload with parenthesis-style stack format","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
+{"ts":1760303269990,"lvl":"info","case":"handles payload with parenthesis-style stack format","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269991,"lvl":"info","case":"handles payload with parenthesis-style stack format","phase":"execution","evt":"test.run"}
+{"ts":1760303269992,"lvl":"info","case":"handles payload with parenthesis-style stack format","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/trends.spec/identifies_first_and_last_seen_timestamps.jsonl b/reports/trends.spec/identifies_first_and_last_seen_timestamps.jsonl
index 3bfe389..45f6cec 100644
--- a/reports/trends.spec/identifies_first_and_last_seen_timestamps.jsonl
+++ b/reports/trends.spec/identifies_first_and_last_seen_timestamps.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760299847682,"lvl":"info","case":"identifies first and last seen timestamps","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760299847683,"lvl":"info","case":"identifies first and last seen timestamps","phase":"execution","evt":"test.run"}
-{"ts":1760299847684,"lvl":"info","case":"identifies first and last seen timestamps","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
+{"ts":1760303269991,"lvl":"info","case":"identifies first and last seen timestamps","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269992,"lvl":"info","case":"identifies first and last seen timestamps","phase":"execution","evt":"test.run"}
+{"ts":1760303269993,"lvl":"info","case":"identifies first and last seen timestamps","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
diff --git a/reports/trends.spec/identifies_flaky_tests_with_intermittent_failures.jsonl b/reports/trends.spec/identifies_flaky_tests_with_intermittent_failures.jsonl
index 333bd05..8b265e9 100644
--- a/reports/trends.spec/identifies_flaky_tests_with_intermittent_failures.jsonl
+++ b/reports/trends.spec/identifies_flaky_tests_with_intermittent_failures.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760299847685,"lvl":"info","case":"identifies flaky tests with intermittent failures","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760299847686,"lvl":"info","case":"identifies flaky tests with intermittent failures","phase":"execution","evt":"test.run"}
-{"ts":1760299847687,"lvl":"info","case":"identifies flaky tests with intermittent failures","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303269993,"lvl":"info","case":"identifies flaky tests with intermittent failures","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269994,"lvl":"info","case":"identifies flaky tests with intermittent failures","phase":"execution","evt":"test.run"}
+{"ts":1760303269995,"lvl":"info","case":"identifies flaky tests with intermittent failures","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/trends.spec/ranks_by_failure_rate_when_frequency_is_similar.jsonl b/reports/trends.spec/ranks_by_failure_rate_when_frequency_is_similar.jsonl
index b33af51..b542ad4 100644
--- a/reports/trends.spec/ranks_by_failure_rate_when_frequency_is_similar.jsonl
+++ b/reports/trends.spec/ranks_by_failure_rate_when_frequency_is_similar.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760299847682,"lvl":"info","case":"ranks by failure rate when frequency is similar","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760299847683,"lvl":"info","case":"ranks by failure rate when frequency is similar","phase":"execution","evt":"test.run"}
-{"ts":1760299847684,"lvl":"info","case":"ranks by failure rate when frequency is similar","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303269991,"lvl":"info","case":"ranks by failure rate when frequency is similar","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269992,"lvl":"info","case":"ranks by failure rate when frequency is similar","phase":"execution","evt":"test.run"}
+{"ts":1760303269993,"lvl":"info","case":"ranks by failure rate when frequency is similar","phase":"teardown","evt":"case.end","payload":{"duration":2,"status":"passed"}}
diff --git a/reports/trends.spec/ranks_failures_by_frequency.jsonl b/reports/trends.spec/ranks_failures_by_frequency.jsonl
index dcd6166..a69d00d 100644
--- a/reports/trends.spec/ranks_failures_by_frequency.jsonl
+++ b/reports/trends.spec/ranks_failures_by_frequency.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760299847682,"lvl":"info","case":"ranks failures by frequency","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760299847683,"lvl":"info","case":"ranks failures by frequency","phase":"execution","evt":"test.run"}
-{"ts":1760299847684,"lvl":"info","case":"ranks failures by frequency","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303269991,"lvl":"info","case":"ranks failures by frequency","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269992,"lvl":"info","case":"ranks failures by frequency","phase":"execution","evt":"test.run"}
+{"ts":1760303269993,"lvl":"info","case":"ranks failures by frequency","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/trends.spec/tracks_recovery_from_failures.jsonl b/reports/trends.spec/tracks_recovery_from_failures.jsonl
index 9daba71..0babe88 100644
--- a/reports/trends.spec/tracks_recovery_from_failures.jsonl
+++ b/reports/trends.spec/tracks_recovery_from_failures.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760299847685,"lvl":"info","case":"tracks recovery from failures","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760299847686,"lvl":"info","case":"tracks recovery from failures","phase":"execution","evt":"test.run"}
-{"ts":1760299847687,"lvl":"info","case":"tracks recovery from failures","phase":"teardown","evt":"case.end","payload":{"duration":0,"status":"passed"}}
+{"ts":1760303269994,"lvl":"info","case":"tracks recovery from failures","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269995,"lvl":"info","case":"tracks recovery from failures","phase":"execution","evt":"test.run"}
+{"ts":1760303269996,"lvl":"info","case":"tracks recovery from failures","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/trends.spec/tracks_trend_over_time_windows.jsonl b/reports/trends.spec/tracks_trend_over_time_windows.jsonl
index 3806d7d..2a2edb4 100644
--- a/reports/trends.spec/tracks_trend_over_time_windows.jsonl
+++ b/reports/trends.spec/tracks_trend_over_time_windows.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760299847682,"lvl":"info","case":"tracks trend over time windows","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760299847683,"lvl":"info","case":"tracks trend over time windows","phase":"execution","evt":"test.run"}
-{"ts":1760299847684,"lvl":"info","case":"tracks trend over time windows","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
+{"ts":1760303269991,"lvl":"info","case":"tracks trend over time windows","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303269992,"lvl":"info","case":"tracks trend over time windows","phase":"execution","evt":"test.run"}
+{"ts":1760303269993,"lvl":"info","case":"tracks trend over time windows","phase":"teardown","evt":"case.end","payload":{"duration":1,"status":"passed"}}
diff --git a/reports/unknown/basic-tests.jsonl b/reports/unknown/basic-tests.jsonl
new file mode 100644
index 0000000..ca9bb7c
--- /dev/null
+++ b/reports/unknown/basic-tests.jsonl
@@ -0,0 +1,6 @@
+{"ts":1760302765509,"lvl":"info","case":"unknown/basic-tests","phase":"setup","evt":"case.begin","payload":{"suite":"unknown","classname":"basic-tests","testName":"basic-tests"}}
+{"ts":1760302765510,"lvl":"info","case":"unknown/basic-tests","phase":"execution","evt":"test.run"}
+{"ts":1760302765516,"lvl":"info","case":"unknown/basic-tests","phase":"teardown","evt":"case.end","payload":{"duration":7,"status":"passed"}}
+{"ts":1760302765526,"lvl":"info","case":"unknown/basic-tests","phase":"setup","evt":"case.begin","payload":{"suite":"unknown","classname":"basic-tests","testName":"basic-tests"}}
+{"ts":1760302765527,"lvl":"info","case":"unknown/basic-tests","phase":"execution","evt":"test.run"}
+{"ts":1760302765534,"lvl":"info","case":"unknown/basic-tests","phase":"teardown","evt":"case.end","payload":{"duration":8,"status":"passed"}}
diff --git a/reports/unknown/math-tests.jsonl b/reports/unknown/math-tests.jsonl
new file mode 100644
index 0000000..d0daddf
--- /dev/null
+++ b/reports/unknown/math-tests.jsonl
@@ -0,0 +1,11 @@
+{"ts":1760302774789,"lvl":"info","case":"unknown/math-tests","phase":"setup","evt":"case.begin","payload":{"suite":"unknown","classname":"math-tests","testName":"math-tests"}}
+{"ts":1760302774790,"lvl":"info","case":"unknown/math-tests","phase":"execution","evt":"test.run"}
+{"ts":1760302774794,"lvl":"info","case":"unknown/math-tests","phase":"teardown","evt":"case.end","payload":{"duration":5,"status":"passed"}}
+{"ts":1760302774804,"lvl":"info","case":"unknown/math-tests","phase":"setup","evt":"case.begin","payload":{"suite":"unknown","classname":"math-tests","testName":"math-tests"}}
+{"ts":1760302774805,"lvl":"info","case":"unknown/math-tests","phase":"execution","evt":"test.run"}
+{"ts":1760302774814,"lvl":"error","case":"unknown/math-tests","phase":"execution","evt":"test.error","payload":{"message":"Expected 2 but got 3","type":"AssertionError","stack":"AssertionError: Expected 2 but got 3\n    at tests/math.spec.js:45:5\n    at Object.<anonymous> (tests/math.spec.js:44:3)"}}
+{"ts":1760302774816,"lvl":"error","case":"unknown/math-tests","phase":"teardown","evt":"case.end","payload":{"duration":12,"status":"failed"}}
+{"ts":1760302774826,"lvl":"info","case":"unknown/math-tests","phase":"setup","evt":"case.begin","payload":{"suite":"unknown","classname":"math-tests","testName":"math-tests"}}
+{"ts":1760302774827,"lvl":"info","case":"unknown/math-tests","phase":"execution","evt":"test.run"}
+{"ts":1760302774852,"lvl":"error","case":"unknown/math-tests","phase":"execution","evt":"test.error","payload":{"message":"Unexpected error","type":"TypeError","stack":"TypeError: Unexpected error\n    at calculator.divide (src/calc.js:12:11)\n    at tests/math.spec.js:52:7"}}
+{"ts":1760302774854,"lvl":"error","case":"unknown/math-tests","phase":"teardown","evt":"case.end","payload":{"duration":28,"status":"failed"}}
diff --git a/reports/workerAdapters.spec/assert_handshake_event_structure.jsonl b/reports/workerAdapters.spec/assert_handshake_event_structure.jsonl
index 12b847d..6c27e3a 100644
--- a/reports/workerAdapters.spec/assert_handshake_event_structure.jsonl
+++ b/reports/workerAdapters.spec/assert_handshake_event_structure.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274667,"lvl":"info","case":"assert handshake event structure","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274668,"lvl":"info","case":"assert handshake event structure","phase":"execution","evt":"test.run"}
-{"ts":1760297274669,"lvl":"info","case":"assert handshake event structure","phase":"teardown","evt":"case.end","payload":{"duration":4,"status":"passed"}}
+{"ts":1760303270014,"lvl":"info","case":"assert handshake event structure","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270015,"lvl":"info","case":"assert handshake event structure","phase":"execution","evt":"test.run"}
+{"ts":1760303270016,"lvl":"info","case":"assert handshake event structure","phase":"teardown","evt":"case.end","payload":{"duration":3,"status":"passed"}}
diff --git a/reports/workerAdapters.spec/round-trip_a_Buffer.jsonl b/reports/workerAdapters.spec/round-trip_a_Buffer.jsonl
index 9a2da77..2a01c7b 100644
--- a/reports/workerAdapters.spec/round-trip_a_Buffer.jsonl
+++ b/reports/workerAdapters.spec/round-trip_a_Buffer.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274666,"lvl":"info","case":"round-trip a Buffer","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274667,"lvl":"info","case":"round-trip a Buffer","phase":"execution","evt":"test.run"}
-{"ts":1760297274668,"lvl":"info","case":"round-trip a Buffer","phase":"teardown","evt":"case.end","payload":{"duration":5,"status":"passed"}}
+{"ts":1760303270014,"lvl":"info","case":"round-trip a Buffer","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270015,"lvl":"info","case":"round-trip a Buffer","phase":"execution","evt":"test.run"}
+{"ts":1760303270016,"lvl":"info","case":"round-trip a Buffer","phase":"teardown","evt":"case.end","payload":{"duration":5,"status":"passed"}}
diff --git a/reports/workerAdapters.spec/round-trip_a_control_frame.jsonl b/reports/workerAdapters.spec/round-trip_a_control_frame.jsonl
index 687ae65..ae20fe6 100644
--- a/reports/workerAdapters.spec/round-trip_a_control_frame.jsonl
+++ b/reports/workerAdapters.spec/round-trip_a_control_frame.jsonl
@@ -1,3 +1,3 @@
-{"ts":1760297274666,"lvl":"info","case":"round-trip a control frame","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
-{"ts":1760297274667,"lvl":"info","case":"round-trip a control frame","phase":"execution","evt":"test.run"}
-{"ts":1760297274668,"lvl":"info","case":"round-trip a control frame","phase":"teardown","evt":"case.end","payload":{"duration":17,"status":"passed"}}
+{"ts":1760303270014,"lvl":"info","case":"round-trip a control frame","phase":"setup","evt":"case.begin","env":{"nodeVersion":"v24.9.0","platform":"linux","arch":"x64","os":"Linux 6.8.0-85-generic","seed":42,"envVars":{"NODE_ENV":"test"}},"seed":42}
+{"ts":1760303270015,"lvl":"info","case":"round-trip a control frame","phase":"execution","evt":"test.run"}
+{"ts":1760303270016,"lvl":"info","case":"round-trip a control frame","phase":"teardown","evt":"case.end","payload":{"duration":14,"status":"passed"}}
diff --git a/scripts/ingest-junit.ts b/scripts/ingest-junit.ts
new file mode 100644
index 0000000..baa8b21
--- /dev/null
+++ b/scripts/ingest-junit.ts
@@ -0,0 +1,366 @@
+import * as fs from 'node:fs';
+import * as path from 'node:path';
+
+export interface JUnitTestCase {
+  name: string;
+  classname: string;
+  time: number;
+  failure?: {
+    message: string;
+    type: string;
+    content: string;
+  };
+  error?: {
+    message: string;
+    type: string;
+    content: string;
+  };
+  skipped?: {
+    message?: string;
+  };
+}
+
+export interface JUnitTestSuite {
+  name: string;
+  tests: number;
+  failures: number;
+  errors: number;
+  skipped: number;
+  time: number;
+  testcases: JUnitTestCase[];
+}
+
+export interface LaminarTestEvent {
+  ts: number;
+  lvl: string;
+  case?: string;
+  phase?: string;
+  evt: string;
+  payload?: any;
+}
+
+/**
+ * Parse JUnit XML format to structured test data.
+ * Uses basic regex parsing to avoid external XML dependencies.
+ */
+export function parseJUnitXML(xmlContent: string): JUnitTestSuite[] {
+  const suites: JUnitTestSuite[] = [];
+  
+  // Extract all <testsuite> elements (including nested)
+  const testsuiteRegex = /<testsuite\s([^>]*)>([\s\S]*?)<\/testsuite>/g;
+  let suiteMatch;
+  
+  while ((suiteMatch = testsuiteRegex.exec(xmlContent)) !== null) {
+    const suiteAttrs = suiteMatch[1];
+    const suiteContent = suiteMatch[2];
+    
+    const suite: JUnitTestSuite = {
+      name: extractAttr(suiteAttrs, 'name') || 'unknown',
+      tests: parseInt(extractAttr(suiteAttrs, 'tests') || '0', 10),
+      failures: parseInt(extractAttr(suiteAttrs, 'failures') || '0', 10),
+      errors: parseInt(extractAttr(suiteAttrs, 'errors') || '0', 10),
+      skipped: parseInt(extractAttr(suiteAttrs, 'skipped') || '0', 10),
+      time: parseFloat(extractAttr(suiteAttrs, 'time') || '0'),
+      testcases: []
+    };
+    
+    // Extract all <testcase> elements within this suite
+    const testcaseRegex = /<testcase([^>]*?)(?:\/>|>([\s\S]*?)<\/testcase>)/g;
+    let caseMatch;
+    
+    while ((caseMatch = testcaseRegex.exec(suiteContent)) !== null) {
+      const caseAttrs = caseMatch[1];
+      const caseContent = caseMatch[2] || '';
+      
+      const testcase: JUnitTestCase = {
+        name: extractAttr(caseAttrs, 'name') || 'unknown',
+        classname: extractAttr(caseAttrs, 'classname') || suite.name,
+        time: parseFloat(extractAttr(caseAttrs, 'time') || '0')
+      };
+      
+      // Check for failure
+      const failureMatch = /<failure([^>]*?)>([\s\S]*?)<\/failure>/.exec(caseContent);
+      if (failureMatch) {
+        testcase.failure = {
+          message: extractAttr(failureMatch[1], 'message') || 'Test failed',
+          type: extractAttr(failureMatch[1], 'type') || 'AssertionError',
+          content: decodeXmlEntities(failureMatch[2].trim())
+        };
+      }
+      
+      // Check for error
+      const errorMatch = /<error([^>]*?)>([\s\S]*?)<\/error>/.exec(caseContent);
+      if (errorMatch) {
+        testcase.error = {
+          message: extractAttr(errorMatch[1], 'message') || 'Test error',
+          type: extractAttr(errorMatch[1], 'type') || 'Error',
+          content: decodeXmlEntities(errorMatch[2].trim())
+        };
+      }
+      
+      // Check for skipped
+      const skippedMatch = /<skipped([^>]*?)(\/>|>([\s\S]*?)<\/skipped>)/.exec(caseContent);
+      if (skippedMatch) {
+        testcase.skipped = {
+          message: extractAttr(skippedMatch[1], 'message')
+        };
+      }
+      
+      suite.testcases.push(testcase);
+    }
+    
+    suites.push(suite);
+  }
+  
+  return suites;
+}
+
+/**
+ * Extract attribute value from XML attributes string
+ */
+function extractAttr(attrs: string, name: string): string | undefined {
+  const match = new RegExp(`\\b${name}=["']([^"']*)["']`).exec(attrs);
+  return match ? match[1] : undefined;
+}
+
+/**
+ * Decode basic XML entities
+ */
+function decodeXmlEntities(str: string): string {
+  return str
+    .replace(/&lt;/g, '<')
+    .replace(/&gt;/g, '>')
+    .replace(/&quot;/g, '"')
+    .replace(/&apos;/g, "'")
+    .replace(/&amp;/g, '&');
+}
+
+/**
+ * Convert JUnit test suites to Laminar format
+ */
+export function convertToLaminar(suites: JUnitTestSuite[]): {
+  events: LaminarTestEvent[];
+  summary: Array<{ status: string; duration: number; location: string; artifactURI: string; testName: string; errorMessage?: string }>;
+} {
+  const laminarEvents: LaminarTestEvent[] = [];
+  const summary: Array<{ status: string; duration: number; location: string; artifactURI: string; testName: string; errorMessage?: string }> = [];
+  
+  const baseTimestamp = Date.now();
+  let currentOffset = 0;
+  
+  for (const suite of suites) {
+    for (const testcase of suite.testcases) {
+      const caseId = `${suite.name}/${testcase.name}`;
+      const startTs = baseTimestamp + currentOffset;
+      const duration = Math.round(testcase.time * 1000); // Convert seconds to milliseconds
+      const endTs = startTs + duration;
+      
+      // Test begin event
+      laminarEvents.push({
+        ts: startTs,
+        lvl: 'info',
+        case: caseId,
+        phase: 'setup',
+        evt: 'case.begin',
+        payload: {
+          suite: suite.name,
+          classname: testcase.classname,
+          testName: testcase.name
+        }
+      });
+      
+      // Test run event
+      laminarEvents.push({
+        ts: startTs + 1,
+        lvl: 'info',
+        case: caseId,
+        phase: 'execution',
+        evt: 'test.run'
+      });
+      
+      // Determine status and add appropriate events
+      let status = 'pass';
+      let errorMessage: string | undefined;
+      
+      if (testcase.failure) {
+        status = 'fail';
+        errorMessage = testcase.failure.message;
+        laminarEvents.push({
+          ts: endTs - 2,
+          lvl: 'error',
+          case: caseId,
+          phase: 'execution',
+          evt: 'test.error',
+          payload: {
+            message: testcase.failure.message,
+            type: testcase.failure.type,
+            stack: testcase.failure.content
+          }
+        });
+      } else if (testcase.error) {
+        status = 'fail';
+        errorMessage = testcase.error.message;
+        laminarEvents.push({
+          ts: endTs - 2,
+          lvl: 'error',
+          case: caseId,
+          phase: 'execution',
+          evt: 'test.error',
+          payload: {
+            message: testcase.error.message,
+            type: testcase.error.type,
+            stack: testcase.error.content
+          }
+        });
+      } else if (testcase.skipped) {
+        status = 'skip';
+        errorMessage = testcase.skipped.message;
+        laminarEvents.push({
+          ts: endTs - 2,
+          lvl: 'info',
+          case: caseId,
+          phase: 'execution',
+          evt: 'test.skip',
+          payload: {
+            message: testcase.skipped.message || 'Test skipped'
+          }
+        });
+      }
+      
+      // Test end event
+      laminarEvents.push({
+        ts: endTs,
+        lvl: status === 'fail' ? 'error' : 'info',
+        case: caseId,
+        phase: 'teardown',
+        evt: 'case.end',
+        payload: {
+          duration,
+          status: status === 'pass' ? 'passed' : status === 'skip' ? 'skipped' : 'failed'
+        }
+      });
+      
+      // Add to summary
+      const location = testcase.classname;
+      const artifactURI = `reports/${suite.name}/${sanitizeFileName(testcase.name)}.jsonl`;
+      
+      summary.push({
+        status,
+        duration,
+        location,
+        artifactURI,
+        testName: caseId,
+        ...(errorMessage && { errorMessage })
+      });
+      
+      currentOffset = endTs - baseTimestamp + 10; // Add small gap between tests
+    }
+  }
+  
+  return { events: laminarEvents, summary };
+}
+
+/**
+ * Sanitize test name for use as filename
+ */
+function sanitizeFileName(name: string): string {
+  return name
+    .replace(/[^a-zA-Z0-9_-]/g, '_')
+    .replace(/_+/g, '_')
+    .toLowerCase();
+}
+
+/**
+ * Write Laminar output to reports directory
+ */
+export function writeOutput(
+  laminarEvents: LaminarTestEvent[],
+  summary: Array<{ status: string; duration: number; location: string; artifactURI: string; testName: string; errorMessage?: string }>
+): void {
+  fs.mkdirSync('reports', { recursive: true });
+  
+  // Group events by test case
+  const caseGroups = new Map<string, LaminarTestEvent[]>();
+  for (const evt of laminarEvents) {
+    if (evt.case) {
+      if (!caseGroups.has(evt.case)) {
+        caseGroups.set(evt.case, []);
+      }
+      caseGroups.get(evt.case)!.push(evt);
+    }
+  }
+  
+  // Write per-case JSONL files
+  for (const [caseId, events] of caseGroups) {
+    const parts = caseId.split('/');
+    const suiteName = parts[0];
+    const testName = parts.slice(1).join('/');
+    
+    const suiteDir = path.join('reports', suiteName);
+    fs.mkdirSync(suiteDir, { recursive: true });
+    
+    const caseFile = path.join(suiteDir, `${sanitizeFileName(testName)}.jsonl`);
+    fs.writeFileSync(caseFile, events.map(e => JSON.stringify(e)).join('\n') + '\n');
+  }
+  
+  // Write summary.jsonl
+  const summaryPath = 'reports/summary.jsonl';
+  fs.writeFileSync(summaryPath, summary.map(s => JSON.stringify(s)).join('\n') + '\n');
+}
+
+/**
+ * Main ingest function for JUnit XML
+ */
+export function ingestJUnit(xmlContent: string): void {
+  const suites = parseJUnitXML(xmlContent);
+  const { events, summary } = convertToLaminar(suites);
+  writeOutput(events, summary);
+  
+  const totalTests = suites.reduce((sum, s) => sum + s.tests, 0);
+  const totalFailures = suites.reduce((sum, s) => sum + s.failures, 0);
+  const totalErrors = suites.reduce((sum, s) => sum + s.errors, 0);
+  const totalSkipped = suites.reduce((sum, s) => sum + s.skipped, 0);
+  
+  console.log(`Ingested ${suites.length} test suite(s)`);
+  console.log(`Total tests: ${totalTests}`);
+  console.log(`Passed: ${totalTests - totalFailures - totalErrors - totalSkipped}`);
+  console.log(`Failed: ${totalFailures + totalErrors}`);
+  console.log(`Skipped: ${totalSkipped}`);
+  console.log(`Generated ${summary.length} test case artifacts`);
+  console.log(`Wrote artifacts to reports/`);
+}
+
+/**
+ * CLI entry point
+ */
+if (import.meta.url === `file://${process.argv[1]}`) {
+  const args = process.argv.slice(2);
+  
+  if (args.length === 0) {
+    console.error('Usage: tsx scripts/ingest-junit.ts <junit-xml-file>');
+    console.error('   or: cat junit.xml | tsx scripts/ingest-junit.ts -');
+    process.exit(1);
+  }
+  
+  const inputSource = args[0];
+  let xmlContent: string;
+  
+  if (inputSource === '-') {
+    // Read from stdin
+    const chunks: Buffer[] = [];
+    process.stdin.on('data', chunk => chunks.push(chunk));
+    process.stdin.on('end', () => {
+      xmlContent = Buffer.concat(chunks).toString('utf-8');
+      ingestJUnit(xmlContent);
+    });
+  } else {
+    // Read from file
+    if (!fs.existsSync(inputSource)) {
+      console.error(`Error: File not found: ${inputSource}`);
+      process.exit(1);
+    }
+    
+    xmlContent = fs.readFileSync(inputSource, 'utf-8');
+    ingestJUnit(xmlContent);
+  }
+}
diff --git a/scripts/ingest-pytest.ts b/scripts/ingest-pytest.ts
new file mode 100644
index 0000000..6c56474
--- /dev/null
+++ b/scripts/ingest-pytest.ts
@@ -0,0 +1,347 @@
+import * as fs from 'node:fs';
+import * as path from 'node:path';
+
+export interface PytestStage {
+  duration?: number;
+  outcome: string;
+  crash?: {
+    path?: string;
+    lineno?: number;
+    message?: string;
+  };
+  traceback?: Array<{
+    path?: string;
+    lineno?: number;
+    message?: string;
+  }>;
+  stdout?: string;
+  stderr?: string;
+  longrepr?: string;
+}
+
+export interface PytestTest {
+  nodeid: string;
+  lineno?: number;
+  keywords?: string[];
+  outcome: string;
+  setup?: PytestStage | null;
+  call?: PytestStage | null;
+  teardown?: PytestStage | null;
+  metadata?: any;
+}
+
+export interface PytestReport {
+  created?: number;
+  duration?: number;
+  exitcode?: number;
+  root?: string;
+  environment?: any;
+  summary?: {
+    collected?: number;
+    total?: number;
+    passed?: number;
+    failed?: number;
+    error?: number;
+    skipped?: number;
+    xfailed?: number;
+    xpassed?: number;
+    [key: string]: any;
+  };
+  tests?: PytestTest[];
+  warnings?: any[];
+}
+
+export interface LaminarTestEvent {
+  ts: number;
+  lvl: string;
+  case?: string;
+  phase?: string;
+  evt: string;
+  payload?: any;
+}
+
+export function parsePytestJSON(input: string): PytestReport {
+  try {
+    return JSON.parse(input) as PytestReport;
+  } catch (error) {
+    throw new Error(`Failed to parse pytest JSON: ${error}`);
+  }
+}
+
+function mapOutcomeToStatus(outcome: string): string {
+  switch (outcome) {
+    case 'passed':
+      return 'pass';
+    case 'failed':
+      return 'fail';
+    case 'error':
+      return 'error';
+    case 'skipped':
+    case 'xfailed':
+    case 'xpassed':
+      return 'skip';
+    default:
+      return outcome;
+  }
+}
+
+function extractErrorMessage(stage?: PytestStage | null): string | undefined {
+  if (!stage) return undefined;
+  if (stage.crash?.message) return stage.crash.message;
+  if (stage.longrepr) return stage.longrepr;
+  return undefined;
+}
+
+function extractStackTrace(stage?: PytestStage | null): string | undefined {
+  if (!stage?.traceback || stage.traceback.length === 0) return undefined;
+  
+  return stage.traceback
+    .map(entry => {
+      const location = entry.path && entry.lineno 
+        ? `  at ${entry.path}:${entry.lineno}` 
+        : entry.path 
+          ? `  at ${entry.path}` 
+          : '';
+      const message = entry.message ? `\n    ${entry.message}` : '';
+      return `${location}${message}`;
+    })
+    .filter(line => line.trim())
+    .join('\n');
+}
+
+export function convertToLaminar(report: PytestReport): {
+  events: LaminarTestEvent[];
+  summary: Array<{ status: string; duration: number; location: string; artifactURI: string }>;
+} {
+  const laminarEvents: LaminarTestEvent[] = [];
+  const summary: Array<{ status: string; duration: number; location: string; artifactURI: string }> = [];
+  
+  const baseTs = report.created ? Math.floor(report.created * 1000) : Date.now();
+  
+  if (!report.tests || report.tests.length === 0) {
+    return { events: laminarEvents, summary };
+  }
+
+  let currentTs = baseTs;
+
+  for (const test of report.tests) {
+    const caseId = test.nodeid;
+    const location = test.lineno ? `${test.nodeid}:${test.lineno}` : test.nodeid;
+    
+    const testStartTs = currentTs;
+    laminarEvents.push({
+      ts: currentTs,
+      lvl: 'info',
+      case: caseId,
+      phase: 'setup',
+      evt: 'case.begin',
+      payload: { nodeid: test.nodeid, lineno: test.lineno, keywords: test.keywords }
+    });
+    currentTs += 1;
+
+    if (test.setup) {
+      const setupDuration = Math.round((test.setup.duration || 0) * 1000);
+      laminarEvents.push({
+        ts: currentTs,
+        lvl: test.setup.outcome === 'error' || test.setup.outcome === 'failed' ? 'error' : 'info',
+        case: caseId,
+        phase: 'setup',
+        evt: `test.setup.${test.setup.outcome}`,
+        payload: { 
+          duration: setupDuration,
+          stdout: test.setup.stdout,
+          stderr: test.setup.stderr
+        }
+      });
+      currentTs += setupDuration || 1;
+
+      if ((test.setup.outcome === 'error' || test.setup.outcome === 'failed') && test.setup.crash) {
+        const errorMessage = extractErrorMessage(test.setup);
+        const stackTrace = extractStackTrace(test.setup);
+        
+        laminarEvents.push({
+          ts: currentTs,
+          lvl: 'error',
+          case: caseId,
+          phase: 'setup',
+          evt: 'test.error',
+          payload: {
+            message: errorMessage,
+            stack: stackTrace,
+            crash: test.setup.crash
+          }
+        });
+        currentTs += 1;
+      }
+    }
+
+    if (test.call) {
+      const callDuration = Math.round((test.call.duration || 0) * 1000);
+      laminarEvents.push({
+        ts: currentTs,
+        lvl: 'info',
+        case: caseId,
+        phase: 'execution',
+        evt: 'test.run'
+      });
+      currentTs += 1;
+
+      if (test.call.stdout) {
+        laminarEvents.push({
+          ts: currentTs,
+          lvl: 'info',
+          case: caseId,
+          phase: 'execution',
+          evt: 'test.output',
+          payload: { output: test.call.stdout.trim() }
+        });
+        currentTs += 1;
+      }
+
+      if (test.call.stderr) {
+        laminarEvents.push({
+          ts: currentTs,
+          lvl: 'warn',
+          case: caseId,
+          phase: 'execution',
+          evt: 'test.stderr',
+          payload: { output: test.call.stderr.trim() }
+        });
+        currentTs += 1;
+      }
+
+      laminarEvents.push({
+        ts: currentTs,
+        lvl: test.call.outcome === 'failed' || test.call.outcome === 'error' ? 'error' : 'info',
+        case: caseId,
+        phase: 'execution',
+        evt: `test.call.${test.call.outcome}`,
+        payload: { duration: callDuration }
+      });
+      currentTs += callDuration || 1;
+
+      if ((test.call.outcome === 'failed' || test.call.outcome === 'error') && test.call.crash) {
+        const errorMessage = extractErrorMessage(test.call);
+        const stackTrace = extractStackTrace(test.call);
+        
+        laminarEvents.push({
+          ts: currentTs,
+          lvl: 'error',
+          case: caseId,
+          phase: 'execution',
+          evt: 'test.error',
+          payload: {
+            message: errorMessage,
+            stack: stackTrace,
+            crash: test.call.crash
+          }
+        });
+        currentTs += 1;
+      }
+    }
+
+    if (test.teardown) {
+      const teardownDuration = Math.round((test.teardown.duration || 0) * 1000);
+      laminarEvents.push({
+        ts: currentTs,
+        lvl: test.teardown.outcome === 'error' || test.teardown.outcome === 'failed' ? 'error' : 'info',
+        case: caseId,
+        phase: 'teardown',
+        evt: `test.teardown.${test.teardown.outcome}`,
+        payload: { 
+          duration: teardownDuration,
+          stdout: test.teardown.stdout,
+          stderr: test.teardown.stderr
+        }
+      });
+      currentTs += teardownDuration || 1;
+    }
+
+    const totalDuration = Math.round(
+      ((test.setup?.duration || 0) + 
+       (test.call?.duration || 0) + 
+       (test.teardown?.duration || 0)) * 1000
+    );
+
+    const finalOutcome = mapOutcomeToStatus(test.outcome);
+    laminarEvents.push({
+      ts: currentTs,
+      lvl: finalOutcome === 'fail' || finalOutcome === 'error' ? 'error' : 'info',
+      case: caseId,
+      phase: 'teardown',
+      evt: 'case.end',
+      payload: {
+        duration: totalDuration,
+        status: test.outcome === 'passed' ? 'passed' : 'failed'
+      }
+    });
+    currentTs += 1;
+
+    const artifactURI = `reports/${caseId.replace(/[/:]/g, '.')}.jsonl`;
+    summary.push({
+      status: finalOutcome,
+      duration: totalDuration,
+      location,
+      artifactURI
+    });
+  }
+
+  return { events: laminarEvents, summary };
+}
+
+export function writeOutput(
+  laminarEvents: LaminarTestEvent[],
+  summary: Array<{ status: string; duration: number; location: string; artifactURI: string }>
+): void {
+  fs.mkdirSync('reports', { recursive: true });
+
+  const caseGroups = new Map<string, LaminarTestEvent[]>();
+  for (const evt of laminarEvents) {
+    if (evt.case) {
+      if (!caseGroups.has(evt.case)) {
+        caseGroups.set(evt.case, []);
+      }
+      caseGroups.get(evt.case)!.push(evt);
+    }
+  }
+
+  for (const [caseId, events] of caseGroups) {
+    const artifactPath = `reports/${caseId.replace(/[/:]/g, '.')}.jsonl`;
+    const dir = path.dirname(artifactPath);
+    fs.mkdirSync(dir, { recursive: true });
+    fs.writeFileSync(artifactPath, events.map(e => JSON.stringify(e)).join('\n') + '\n');
+  }
+
+  const summaryPath = 'reports/summary.jsonl';
+  fs.writeFileSync(summaryPath, summary.map(s => JSON.stringify(s)).join('\n') + '\n');
+}
+
+export function ingestPytestJSON(input: string): void {
+  const report = parsePytestJSON(input);
+  const { events, summary } = convertToLaminar(report);
+  writeOutput(events, summary);
+  
+  console.log(`Ingested pytest report with ${report.tests?.length || 0} tests`);
+  console.log(`Generated ${summary.length} test case summaries`);
+  console.log(`Wrote artifacts to reports/`);
+}
+
+if (import.meta.url === `file://${process.argv[1]}`) {
+  const args = process.argv.slice(2);
+  const fromFileIndex = args.indexOf('--from-file');
+  
+  if (fromFileIndex === -1 || !args[fromFileIndex + 1]) {
+    console.error('Usage: ingest-pytest.ts --from-file <path>');
+    process.exit(1);
+  }
+  
+  const filePath = args[fromFileIndex + 1];
+  
+  if (!fs.existsSync(filePath)) {
+    console.error(`File not found: ${filePath}`);
+    process.exit(1);
+  }
+  
+  const input = fs.readFileSync(filePath, 'utf-8');
+  ingestPytestJSON(input);
+}
diff --git a/scripts/lam.ts b/scripts/lam.ts
index f540860..42501ef 100644
--- a/scripts/lam.ts
+++ b/scripts/lam.ts
@@ -2,6 +2,8 @@
 import { spawnSync, execSync } from 'node:child_process';
 import * as fs from 'node:fs';
 import { ingestGoTest } from './ingest-go.js';
+import { ingestPytestJSON } from './ingest-pytest.js';
+import { ingestJUnit } from './ingest-junit.js';
 import { DigestDiffEngine } from '../src/digest/diff.js';
 import { bundleRepro } from './repro-bundle.js';
 
@@ -21,6 +23,8 @@ Usage:
   lam diff <digest1> <digest2> [--output <path>] [--format json|markdown]
   lam repro --bundle [--case <case-name>]
   lam ingest --go [--from-file <path> | --cmd "<command>"]
+  lam ingest --py|--pytest [--from-file <path> | --cmd "<command>"]
+  lam ingest --junit [--from-file <path> | --cmd "<command>"]
   lam rules get
   lam rules set --file <path> | --inline '<json>'
   lam trends [--since <timestamp>] [--until <timestamp>] [--top <n>]
@@ -37,6 +41,10 @@ Examples:
   lam repro --bundle --case kernel.spec/connect_moves_data_1_1
   lam ingest --go --from-file go-test-output.json
   lam ingest --go --cmd "go test -json ./..."
+  lam ingest --py --from-file pytest-report.json
+  lam ingest --pytest --cmd "pytest --json-report --json-report-file=/dev/stdout"
+  lam ingest --junit --from-file junit-results.xml
+  lam ingest --junit --cmd "mvn test"
   lam rules get
   lam rules set --inline '{"budget":{"kb":2}}'
   lam trends --top 10 --since 2025-10-01
@@ -280,8 +288,22 @@ async function main() {
     }
     case 'ingest': {
       const go = args.get('go');
-      if (!go) {
-        console.error('lam ingest --go [--from-file <path> | --cmd "<command>"]');
+      const py = args.get('py');
+      const pytest = args.get('pytest');
+      const junit = args.get('junit');
+      
+      const formats = [go, py, pytest, junit].filter(Boolean);
+      
+      if (formats.length === 0) {
+        console.error('lam ingest requires a format flag: --go, --py, --pytest, or --junit');
+        console.error('  lam ingest --go [--from-file <path> | --cmd "<command>"]');
+        console.error('  lam ingest --py|--pytest [--from-file <path> | --cmd "<command>"]');
+        console.error('  lam ingest --junit [--from-file <path> | --cmd "<command>"]');
+        process.exit(1);
+      }
+      
+      if (formats.length > 1) {
+        console.error('lam ingest: use only one format flag at a time');
         process.exit(1);
       }
       
@@ -289,12 +311,12 @@ async function main() {
       const cmd = args.get('cmd') as string | undefined;
       
       if (!fromFile && !cmd) {
-        console.error('lam ingest --go requires --from-file <path> or --cmd "<command>"');
+        console.error('lam ingest requires --from-file <path> or --cmd "<command>"');
         process.exit(1);
       }
       
       if (fromFile && cmd) {
-        console.error('lam ingest --go: use either --from-file or --cmd, not both');
+        console.error('lam ingest: use either --from-file or --cmd, not both');
         process.exit(1);
       }
       
@@ -318,7 +340,13 @@ async function main() {
         }
       }
       
-      ingestGoTest(input);
+      if (go) {
+        ingestGoTest(input);
+      } else if (py || pytest) {
+        ingestPytestJSON(input);
+      } else if (junit) {
+        ingestJUnit(input);
+      }
       break;
     }
     case 'rules': {
diff --git a/tests/fixtures/junit/nested-suites.xml b/tests/fixtures/junit/nested-suites.xml
new file mode 100644
index 0000000..67b1848
--- /dev/null
+++ b/tests/fixtures/junit/nested-suites.xml
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<testsuites>
+  <testsuite name="unit-tests" tests="2" failures="0" errors="0" skipped="0" time="0.015">
+    <testcase classname="unit-tests.utils" name="formatDate returns ISO string" time="0.007"/>
+    <testcase classname="unit-tests.helpers" name="clamp restricts value" time="0.008"/>
+  </testsuite>
+  <testsuite name="integration-tests" tests="3" failures="1" errors="0" skipped="0" time="0.125">
+    <testcase classname="integration-tests.database" name="connects to DB" time="0.045"/>
+    <testcase classname="integration-tests.database" name="queries users table" time="0.050">
+      <failure message="Connection timeout" type="Error">
+Error: Connection timeout
+    at Database.query (src/db.js:23:15)
+    at tests/integration/db.spec.js:89:12
+      </failure>
+    </testcase>
+    <testcase classname="integration-tests.api" name="fetches external data" time="0.030"/>
+  </testsuite>
+</testsuites>
diff --git a/tests/fixtures/junit/simple-pass.xml b/tests/fixtures/junit/simple-pass.xml
new file mode 100644
index 0000000..eff32ec
--- /dev/null
+++ b/tests/fixtures/junit/simple-pass.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<testsuites>
+  <testsuite name="basic-tests" tests="2" failures="0" errors="0" skipped="0" time="0.015">
+    <testcase classname="basic-tests" name="adds two numbers" time="0.007"/>
+    <testcase classname="basic-tests" name="multiplies correctly" time="0.008"/>
+  </testsuite>
+</testsuites>
diff --git a/tests/fixtures/junit/with-failures.xml b/tests/fixtures/junit/with-failures.xml
new file mode 100644
index 0000000..45ef1c9
--- /dev/null
+++ b/tests/fixtures/junit/with-failures.xml
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<testsuites>
+  <testsuite name="math-tests" tests="3" failures="1" errors="1" skipped="0" time="0.045">
+    <testcase classname="math-tests" name="addition works" time="0.005"/>
+    <testcase classname="math-tests" name="division fails" time="0.012">
+      <failure message="Expected 2 but got 3" type="AssertionError">
+AssertionError: Expected 2 but got 3
+    at tests/math.spec.js:45:5
+    at Object.&lt;anonymous&gt; (tests/math.spec.js:44:3)
+      </failure>
+    </testcase>
+    <testcase classname="math-tests" name="throws on invalid input" time="0.028">
+      <error message="Unexpected error" type="TypeError">
+TypeError: Unexpected error
+    at calculator.divide (src/calc.js:12:11)
+    at tests/math.spec.js:52:7
+      </error>
+    </testcase>
+  </testsuite>
+</testsuites>
diff --git a/tests/fixtures/junit/with-skipped.xml b/tests/fixtures/junit/with-skipped.xml
new file mode 100644
index 0000000..f6613c7
--- /dev/null
+++ b/tests/fixtures/junit/with-skipped.xml
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<testsuites>
+  <testsuite name="api-tests" tests="4" failures="0" errors="0" skipped="2" time="0.032">
+    <testcase classname="api-tests" name="GET /users returns 200" time="0.012"/>
+    <testcase classname="api-tests" name="POST /users creates user" time="0.020"/>
+    <testcase classname="api-tests" name="DELETE /users requires auth" time="0">
+      <skipped message="Not implemented yet"/>
+    </testcase>
+    <testcase classname="api-tests" name="PUT /users updates user" time="0">
+      <skipped/>
+    </testcase>
+  </testsuite>
+</testsuites>
diff --git a/tests/fixtures/pytest/sample-report.json b/tests/fixtures/pytest/sample-report.json
new file mode 100644
index 0000000..2ffd21c
--- /dev/null
+++ b/tests/fixtures/pytest/sample-report.json
@@ -0,0 +1,136 @@
+{
+  "created": 1678886400.123456,
+  "duration": 1.56789,
+  "exitcode": 1,
+  "root": "/path/to/project",
+  "environment": {
+    "Python": "3.9.12",
+    "Platform": "Linux-5.15.0-67-generic-x86_64",
+    "Packages": {
+      "pytest": "7.2.5",
+      "pytest-json-report": "1.5.0"
+    }
+  },
+  "summary": {
+    "collected": 5,
+    "passed": 2,
+    "failed": 1,
+    "error": 1,
+    "skipped": 1,
+    "total": 5
+  },
+  "tests": [
+    {
+      "nodeid": "test_example.py::test_success",
+      "lineno": 5,
+      "keywords": ["test_success", "test_example.py"],
+      "outcome": "passed",
+      "setup": {
+        "duration": 0.0001,
+        "outcome": "passed"
+      },
+      "call": {
+        "duration": 0.0005,
+        "outcome": "passed",
+        "stdout": "This test passed successfully.\n"
+      },
+      "teardown": {
+        "duration": 0.00005,
+        "outcome": "passed"
+      }
+    },
+    {
+      "nodeid": "test_example.py::test_failure",
+      "lineno": 10,
+      "keywords": ["test_failure", "test_example.py"],
+      "outcome": "failed",
+      "setup": {
+        "duration": 0.00015,
+        "outcome": "passed"
+      },
+      "call": {
+        "duration": 0.0008,
+        "outcome": "failed",
+        "crash": {
+          "path": "test_example.py",
+          "lineno": 12,
+          "message": "AssertionError: assert 1 == 2"
+        },
+        "traceback": [
+          {
+            "path": "test_example.py",
+            "lineno": 12,
+            "message": "def test_failure():"
+          },
+          {
+            "path": "test_example.py",
+            "lineno": 13,
+            "message": "    assert 1 == 2"
+          }
+        ],
+        "stdout": "About to fail...\n",
+        "longrepr": "def test_failure():\n    assert 1 == 2\nE   AssertionError: assert 1 == 2"
+      },
+      "teardown": {
+        "duration": 0.00008,
+        "outcome": "passed"
+      }
+    },
+    {
+      "nodeid": "test_example.py::test_error_during_setup",
+      "lineno": 18,
+      "keywords": ["test_error_during_setup", "test_example.py"],
+      "outcome": "error",
+      "setup": {
+        "duration": 0.0002,
+        "outcome": "error",
+        "crash": {
+          "path": "test_example.py",
+          "lineno": 20,
+          "message": "NameError: name 'non_existent_variable' is not defined"
+        },
+        "traceback": [
+          {
+            "path": "test_example.py",
+            "lineno": 20,
+            "message": "non_existent_variable"
+          }
+        ],
+        "longrepr": "NameError: name 'non_existent_variable' is not defined"
+      },
+      "call": null,
+      "teardown": null
+    },
+    {
+      "nodeid": "test_example.py::test_skipped_test",
+      "lineno": 25,
+      "keywords": ["test_skipped_test", "test_example.py", "skip"],
+      "outcome": "skipped",
+      "setup": {
+        "duration": 0.0001,
+        "outcome": "skipped",
+        "longrepr": "Skipped: This test is intentionally skipped."
+      },
+      "call": null,
+      "teardown": null
+    },
+    {
+      "nodeid": "test_calculations.py::test_addition",
+      "lineno": 3,
+      "keywords": ["test_addition", "test_calculations.py"],
+      "outcome": "passed",
+      "setup": {
+        "duration": 0.00008,
+        "outcome": "passed"
+      },
+      "call": {
+        "duration": 0.0003,
+        "outcome": "passed"
+      },
+      "teardown": {
+        "duration": 0.00004,
+        "outcome": "passed"
+      }
+    }
+  ]
+}
diff --git a/tests/fixtures/pytest/simple-pass.json b/tests/fixtures/pytest/simple-pass.json
new file mode 100644
index 0000000..4b9ef72
--- /dev/null
+++ b/tests/fixtures/pytest/simple-pass.json
@@ -0,0 +1,31 @@
+{
+  "created": 1678886400.5,
+  "duration": 0.15,
+  "exitcode": 0,
+  "root": "/path/to/project",
+  "summary": {
+    "collected": 1,
+    "passed": 1,
+    "total": 1
+  },
+  "tests": [
+    {
+      "nodeid": "test_simple.py::test_basic",
+      "lineno": 1,
+      "keywords": ["test_basic"],
+      "outcome": "passed",
+      "setup": {
+        "duration": 0.0001,
+        "outcome": "passed"
+      },
+      "call": {
+        "duration": 0.0002,
+        "outcome": "passed"
+      },
+      "teardown": {
+        "duration": 0.00005,
+        "outcome": "passed"
+      }
+    }
+  ]
+}
diff --git a/tests/ingest/junitIngest.spec.ts b/tests/ingest/junitIngest.spec.ts
new file mode 100644
index 0000000..b79af1c
--- /dev/null
+++ b/tests/ingest/junitIngest.spec.ts
@@ -0,0 +1,678 @@
+import { describe, it, expect, beforeEach, afterEach } from 'vitest';
+import { parseJUnitXML, convertToLaminar, writeOutput, JUnitTestSuite, LaminarTestEvent } from '../../scripts/ingest-junit.js';
+import * as fs from 'node:fs';
+import * as path from 'node:path';
+import * as os from 'node:os';
+
+describe('JUnit Ingest', () => {
+  let tmpDir: string;
+
+  beforeEach(() => {
+    tmpDir = fs.mkdtempSync(path.join(os.tmpdir(), 'junit-ingest-test-'));
+  });
+
+  afterEach(() => {
+    if (fs.existsSync(tmpDir)) {
+      fs.rmSync(tmpDir, { recursive: true });
+    }
+  });
+
+  describe('parseJUnitXML', () => {
+    it('parses simple passing test fixture', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/junit/simple-pass.xml');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const suites = parseJUnitXML(fixtureData);
+
+      expect(suites).toBeDefined();
+      expect(suites.length).toBe(1);
+      expect(suites[0].name).toBe('basic-tests');
+      expect(suites[0].tests).toBe(2);
+      expect(suites[0].failures).toBe(0);
+      expect(suites[0].errors).toBe(0);
+      expect(suites[0].skipped).toBe(0);
+    });
+
+    it('parses test cases correctly', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/junit/simple-pass.xml');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const suites = parseJUnitXML(fixtureData);
+
+      expect(suites[0].testcases.length).toBe(2);
+      
+      const firstTest = suites[0].testcases[0];
+      expect(firstTest.name).toBe('adds two numbers');
+      expect(firstTest.classname).toBe('basic-tests');
+      expect(firstTest.time).toBe(0.007);
+    });
+
+    it('parses fixtures with failures', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/junit/with-failures.xml');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const suites = parseJUnitXML(fixtureData);
+
+      expect(suites.length).toBe(1);
+      expect(suites[0].tests).toBe(3);
+      expect(suites[0].failures).toBe(1);
+      expect(suites[0].errors).toBe(1);
+    });
+
+    it('extracts failure messages and stack traces', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/junit/with-failures.xml');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const suites = parseJUnitXML(fixtureData);
+
+      const failedTest = suites[0].testcases.find(t => t.name === 'division fails');
+      expect(failedTest).toBeDefined();
+      expect(failedTest!.failure).toBeDefined();
+      expect(failedTest!.failure!.message).toBe('Expected 2 but got 3');
+      expect(failedTest!.failure!.type).toBe('AssertionError');
+      expect(failedTest!.failure!.content).toContain('AssertionError');
+      expect(failedTest!.failure!.content).toContain('tests/math.spec.js');
+    });
+
+    it('extracts error messages and stack traces', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/junit/with-failures.xml');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const suites = parseJUnitXML(fixtureData);
+
+      const errorTest = suites[0].testcases.find(t => t.name === 'throws on invalid input');
+      expect(errorTest).toBeDefined();
+      expect(errorTest!.error).toBeDefined();
+      expect(errorTest!.error!.message).toBe('Unexpected error');
+      expect(errorTest!.error!.type).toBe('TypeError');
+      expect(errorTest!.error!.content).toContain('TypeError');
+      expect(errorTest!.error!.content).toContain('src/calc.js');
+    });
+
+    it('parses fixtures with skipped tests', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/junit/with-skipped.xml');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const suites = parseJUnitXML(fixtureData);
+
+      expect(suites.length).toBe(1);
+      expect(suites[0].tests).toBe(4);
+      expect(suites[0].skipped).toBe(2);
+    });
+
+    it('extracts skipped test messages', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/junit/with-skipped.xml');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const suites = parseJUnitXML(fixtureData);
+
+      const skippedTest = suites[0].testcases.find(t => t.name === 'DELETE /users requires auth');
+      expect(skippedTest).toBeDefined();
+      expect(skippedTest!.skipped).toBeDefined();
+      expect(skippedTest!.skipped!.message).toBe('Not implemented yet');
+    });
+
+    it('handles skipped tests without messages', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/junit/with-skipped.xml');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const suites = parseJUnitXML(fixtureData);
+
+      const skippedTest = suites[0].testcases.find(t => t.name === 'PUT /users updates user');
+      expect(skippedTest).toBeDefined();
+      expect(skippedTest!.skipped).toBeDefined();
+    });
+
+    it('parses nested test suites', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/junit/nested-suites.xml');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const suites = parseJUnitXML(fixtureData);
+
+      expect(suites.length).toBe(2);
+      expect(suites[0].name).toBe('unit-tests');
+      expect(suites[1].name).toBe('integration-tests');
+    });
+
+    it('parses test cases across multiple suites', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/junit/nested-suites.xml');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const suites = parseJUnitXML(fixtureData);
+
+      expect(suites[0].testcases.length).toBe(2);
+      expect(suites[1].testcases.length).toBe(3);
+    });
+
+    it('decodes XML entities in error messages', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/junit/with-failures.xml');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const suites = parseJUnitXML(fixtureData);
+
+      const failureTest = suites[0].testcases.find(t => t.failure);
+      expect(failureTest!.failure!.content).toContain('<anonymous>');
+    });
+
+    it('handles empty XML', () => {
+      const emptyXML = '<?xml version="1.0" encoding="UTF-8"?><testsuites></testsuites>';
+      const suites = parseJUnitXML(emptyXML);
+      expect(suites).toEqual([]);
+    });
+
+    it('parses time attributes correctly', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/junit/simple-pass.xml');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const suites = parseJUnitXML(fixtureData);
+
+      expect(suites[0].time).toBe(0.015);
+      expect(suites[0].testcases[0].time).toBe(0.007);
+      expect(suites[0].testcases[1].time).toBe(0.008);
+    });
+  });
+
+  describe('convertToLaminar', () => {
+    it('converts passing tests to Laminar format', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/junit/simple-pass.xml');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const suites = parseJUnitXML(fixtureData);
+      const { events, summary } = convertToLaminar(suites);
+
+      expect(events).toBeDefined();
+      expect(events.length).toBeGreaterThan(0);
+      expect(summary).toBeDefined();
+      expect(summary.length).toBe(2);
+    });
+
+    it('creates case.begin events for test start', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/junit/simple-pass.xml');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const suites = parseJUnitXML(fixtureData);
+      const { events } = convertToLaminar(suites);
+
+      const beginEvents = events.filter(e => e.evt === 'case.begin');
+      expect(beginEvents.length).toBe(2);
+
+      const beginEvent = beginEvents[0];
+      expect(beginEvent.lvl).toBe('info');
+      expect(beginEvent.phase).toBe('setup');
+      expect(beginEvent.case).toBe('basic-tests/adds two numbers');
+      expect(beginEvent.payload).toHaveProperty('suite');
+      expect(beginEvent.payload).toHaveProperty('testName');
+    });
+
+    it('creates test.run events for test execution', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/junit/simple-pass.xml');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const suites = parseJUnitXML(fixtureData);
+      const { events } = convertToLaminar(suites);
+
+      const runEvents = events.filter(e => e.evt === 'test.run');
+      expect(runEvents.length).toBe(2);
+
+      const runEvent = runEvents[0];
+      expect(runEvent.lvl).toBe('info');
+      expect(runEvent.phase).toBe('execution');
+    });
+
+    it('creates case.end events for test completion', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/junit/simple-pass.xml');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const suites = parseJUnitXML(fixtureData);
+      const { events } = convertToLaminar(suites);
+
+      const endEvents = events.filter(e => e.evt === 'case.end');
+      expect(endEvents.length).toBe(2);
+
+      const endEvent = endEvents[0];
+      expect(endEvent.lvl).toBe('info');
+      expect(endEvent.phase).toBe('teardown');
+      expect(endEvent.payload).toHaveProperty('duration');
+      expect(endEvent.payload.status).toBe('passed');
+    });
+
+    it('handles failed tests with error events', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/junit/with-failures.xml');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const suites = parseJUnitXML(fixtureData);
+      const { events } = convertToLaminar(suites);
+
+      const errorEvents = events.filter(e => e.evt === 'test.error');
+      expect(errorEvents.length).toBe(2); // 1 failure + 1 error
+
+      const failureEvent = errorEvents.find(e => 
+        e.payload && e.payload.message === 'Expected 2 but got 3'
+      );
+      expect(failureEvent).toBeDefined();
+      expect(failureEvent!.lvl).toBe('error');
+      expect(failureEvent!.phase).toBe('execution');
+      expect(failureEvent!.payload).toHaveProperty('message');
+      expect(failureEvent!.payload).toHaveProperty('type');
+      expect(failureEvent!.payload).toHaveProperty('stack');
+    });
+
+    it('extracts error messages from failures', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/junit/with-failures.xml');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const suites = parseJUnitXML(fixtureData);
+      const { events } = convertToLaminar(suites);
+
+      const errorEvents = events.filter(e => e.evt === 'test.error');
+      const failureEvent = errorEvents.find(e => 
+        e.payload && e.payload.type === 'AssertionError'
+      );
+
+      expect(failureEvent!.payload.message).toBe('Expected 2 but got 3');
+      expect(failureEvent!.payload.stack).toContain('tests/math.spec.js');
+    });
+
+    it('extracts stack traces from errors', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/junit/with-failures.xml');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const suites = parseJUnitXML(fixtureData);
+      const { events } = convertToLaminar(suites);
+
+      const errorEvents = events.filter(e => e.evt === 'test.error');
+      const errorEvent = errorEvents.find(e => 
+        e.payload && e.payload.type === 'TypeError'
+      );
+
+      expect(errorEvent).toBeDefined();
+      expect(errorEvent!.payload.message).toBe('Unexpected error');
+      expect(errorEvent!.payload.stack).toContain('src/calc.js:12:11');
+    });
+
+    it('handles skipped tests correctly', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/junit/with-skipped.xml');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const suites = parseJUnitXML(fixtureData);
+      const { events } = convertToLaminar(suites);
+
+      const skipEvents = events.filter(e => e.evt === 'test.skip');
+      expect(skipEvents.length).toBe(2);
+
+      const skipEvent = skipEvents[0];
+      expect(skipEvent.lvl).toBe('info');
+      expect(skipEvent.phase).toBe('execution');
+      expect(skipEvent.payload).toHaveProperty('message');
+    });
+
+    it('generates correct summary for all test outcomes', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/junit/with-failures.xml');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const suites = parseJUnitXML(fixtureData);
+      const { summary } = convertToLaminar(suites);
+
+      expect(summary.length).toBe(3);
+
+      const passedTests = summary.filter(s => s.status === 'pass');
+      expect(passedTests.length).toBe(1);
+
+      const failedTests = summary.filter(s => s.status === 'fail');
+      expect(failedTests.length).toBe(2); // includes both failure and error
+    });
+
+    it('includes duration in summary entries', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/junit/simple-pass.xml');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const suites = parseJUnitXML(fixtureData);
+      const { summary } = convertToLaminar(suites);
+
+      summary.forEach(entry => {
+        expect(entry).toHaveProperty('duration');
+        expect(typeof entry.duration).toBe('number');
+        expect(entry.duration).toBeGreaterThanOrEqual(0);
+      });
+
+      expect(summary[0].duration).toBe(7); // 0.007 seconds = 7ms
+      expect(summary[1].duration).toBe(8); // 0.008 seconds = 8ms
+    });
+
+    it('includes location in summary entries', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/junit/simple-pass.xml');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const suites = parseJUnitXML(fixtureData);
+      const { summary } = convertToLaminar(suites);
+
+      summary.forEach(entry => {
+        expect(entry).toHaveProperty('location');
+        expect(typeof entry.location).toBe('string');
+      });
+
+      expect(summary[0].location).toBe('basic-tests');
+    });
+
+    it('includes artifactURI in summary entries', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/junit/simple-pass.xml');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const suites = parseJUnitXML(fixtureData);
+      const { summary } = convertToLaminar(suites);
+
+      summary.forEach(entry => {
+        expect(entry).toHaveProperty('artifactURI');
+        expect(entry.artifactURI).toMatch(/^reports\//);
+        expect(entry.artifactURI).toMatch(/\.jsonl$/);
+      });
+    });
+
+    it('includes testName in summary entries', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/junit/simple-pass.xml');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const suites = parseJUnitXML(fixtureData);
+      const { summary } = convertToLaminar(suites);
+
+      summary.forEach(entry => {
+        expect(entry).toHaveProperty('testName');
+        expect(typeof entry.testName).toBe('string');
+      });
+
+      expect(summary[0].testName).toBe('basic-tests/adds two numbers');
+    });
+
+    it('includes errorMessage for failed tests in summary', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/junit/with-failures.xml');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const suites = parseJUnitXML(fixtureData);
+      const { summary } = convertToLaminar(suites);
+
+      const failedTest = summary.find(s => s.status === 'fail' && s.testName.includes('division fails'));
+      expect(failedTest).toBeDefined();
+      expect(failedTest!.errorMessage).toBe('Expected 2 but got 3');
+    });
+
+    it('validates Laminar event structure', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/junit/simple-pass.xml');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const suites = parseJUnitXML(fixtureData);
+      const { events } = convertToLaminar(suites);
+
+      events.forEach(event => {
+        expect(event).toHaveProperty('ts');
+        expect(event).toHaveProperty('lvl');
+        expect(event).toHaveProperty('evt');
+        expect(typeof event.ts).toBe('number');
+        expect(typeof event.lvl).toBe('string');
+        expect(typeof event.evt).toBe('string');
+        
+        if (event.case) {
+          expect(typeof event.case).toBe('string');
+        }
+        if (event.phase) {
+          expect(typeof event.phase).toBe('string');
+          expect(['setup', 'execution', 'teardown']).toContain(event.phase);
+        }
+      });
+    });
+
+    it('preserves timestamp ordering', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/junit/simple-pass.xml');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const suites = parseJUnitXML(fixtureData);
+      const { events } = convertToLaminar(suites);
+
+      for (let i = 1; i < events.length; i++) {
+        expect(events[i].ts).toBeGreaterThanOrEqual(events[i - 1].ts);
+      }
+    });
+
+    it('handles multiple test suites', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/junit/nested-suites.xml');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const suites = parseJUnitXML(fixtureData);
+      const { events, summary } = convertToLaminar(suites);
+
+      expect(summary.length).toBe(5); // 2 from unit-tests + 3 from integration-tests
+
+      const unitTests = summary.filter(s => s.testName.startsWith('unit-tests/'));
+      expect(unitTests.length).toBe(2);
+
+      const integrationTests = summary.filter(s => s.testName.startsWith('integration-tests/'));
+      expect(integrationTests.length).toBe(3);
+    });
+
+    it('handles empty test suites', () => {
+      const emptyXML = '<?xml version="1.0" encoding="UTF-8"?><testsuites></testsuites>';
+      const suites = parseJUnitXML(emptyXML);
+      const { events, summary } = convertToLaminar(suites);
+
+      expect(events).toEqual([]);
+      expect(summary).toEqual([]);
+    });
+  });
+
+  describe('writeOutput', () => {
+    it('writes JSONL files per test case in suite directories', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/junit/simple-pass.xml');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const suites = parseJUnitXML(fixtureData);
+      const { events, summary } = convertToLaminar(suites);
+
+      const reportsDir = path.join(tmpDir, 'reports');
+      fs.mkdirSync(reportsDir, { recursive: true });
+
+      const caseGroups = new Map<string, LaminarTestEvent[]>();
+      for (const evt of events) {
+        if (evt.case) {
+          if (!caseGroups.has(evt.case)) {
+            caseGroups.set(evt.case, []);
+          }
+          caseGroups.get(evt.case)!.push(evt);
+        }
+      }
+
+      for (const [caseId] of caseGroups) {
+        const parts = caseId.split('/');
+        const suiteName = parts[0];
+        const suiteDir = path.join(reportsDir, suiteName);
+        fs.mkdirSync(suiteDir, { recursive: true });
+      }
+
+      expect(fs.existsSync(reportsDir)).toBe(true);
+      expect(fs.existsSync(path.join(reportsDir, 'basic-tests'))).toBe(true);
+    });
+
+    it('writes summary.jsonl file', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/junit/simple-pass.xml');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const suites = parseJUnitXML(fixtureData);
+      const { events, summary } = convertToLaminar(suites);
+
+      const reportsDir = path.join(tmpDir, 'reports');
+      fs.mkdirSync(reportsDir, { recursive: true });
+
+      const summaryPath = path.join(reportsDir, 'summary.jsonl');
+      fs.writeFileSync(summaryPath, summary.map(s => JSON.stringify(s)).join('\n') + '\n');
+
+      expect(fs.existsSync(summaryPath)).toBe(true);
+
+      const summaryContent = fs.readFileSync(summaryPath, 'utf-8');
+      const summaryLines = summaryContent.trim().split('\n');
+      expect(summaryLines.length).toBe(2);
+
+      summaryLines.forEach(line => {
+        const entry = JSON.parse(line);
+        expect(entry).toHaveProperty('status');
+        expect(entry).toHaveProperty('duration');
+        expect(entry).toHaveProperty('location');
+        expect(entry).toHaveProperty('artifactURI');
+        expect(entry).toHaveProperty('testName');
+      });
+    });
+
+    it('groups events by test case correctly', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/junit/simple-pass.xml');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const suites = parseJUnitXML(fixtureData);
+      const { events } = convertToLaminar(suites);
+
+      const caseGroups = new Map<string, LaminarTestEvent[]>();
+      for (const evt of events) {
+        if (evt.case) {
+          if (!caseGroups.has(evt.case)) {
+            caseGroups.set(evt.case, []);
+          }
+          caseGroups.get(evt.case)!.push(evt);
+        }
+      }
+
+      expect(caseGroups.size).toBe(2);
+      
+      const firstCase = caseGroups.get('basic-tests/adds two numbers');
+      expect(firstCase).toBeDefined();
+      expect(firstCase!.length).toBeGreaterThan(0);
+      
+      firstCase!.forEach(event => {
+        expect(event.case).toBe('basic-tests/adds two numbers');
+      });
+    });
+
+    it('writes valid JSONL format', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/junit/simple-pass.xml');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const suites = parseJUnitXML(fixtureData);
+      const { events, summary } = convertToLaminar(suites);
+
+      const reportsDir = path.join(tmpDir, 'reports');
+      fs.mkdirSync(reportsDir, { recursive: true });
+
+      const caseGroups = new Map<string, LaminarTestEvent[]>();
+      for (const evt of events) {
+        if (evt.case) {
+          if (!caseGroups.has(evt.case)) {
+            caseGroups.set(evt.case, []);
+          }
+          caseGroups.get(evt.case)!.push(evt);
+        }
+      }
+
+      for (const [caseId, caseEvents] of caseGroups) {
+        const parts = caseId.split('/');
+        const suiteName = parts[0];
+        const testName = parts.slice(1).join('/');
+        
+        const suiteDir = path.join(reportsDir, suiteName);
+        fs.mkdirSync(suiteDir, { recursive: true });
+        
+        const sanitizedName = testName.replace(/[^a-zA-Z0-9_-]/g, '_').replace(/_+/g, '_').toLowerCase();
+        const caseFile = path.join(suiteDir, `${sanitizedName}.jsonl`);
+        fs.writeFileSync(caseFile, caseEvents.map(e => JSON.stringify(e)).join('\n') + '\n');
+      }
+
+      const summaryPath = path.join(reportsDir, 'summary.jsonl');
+      fs.writeFileSync(summaryPath, summary.map(s => JSON.stringify(s)).join('\n') + '\n');
+
+      const allFiles: string[] = [];
+      const collectFiles = (dir: string) => {
+        const entries = fs.readdirSync(dir, { withFileTypes: true });
+        for (const entry of entries) {
+          const fullPath = path.join(dir, entry.name);
+          if (entry.isDirectory()) {
+            collectFiles(fullPath);
+          } else if (entry.name.endsWith('.jsonl')) {
+            allFiles.push(fullPath);
+          }
+        }
+      };
+      collectFiles(reportsDir);
+
+      allFiles.forEach(file => {
+        const content = fs.readFileSync(file, 'utf-8');
+        const lines = content.trim().split('\n');
+
+        lines.forEach(line => {
+          expect(() => JSON.parse(line)).not.toThrow();
+        });
+      });
+    });
+  });
+
+  describe('end-to-end integration', () => {
+    it('processes simple passing tests from parsing to output', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/junit/simple-pass.xml');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const suites = parseJUnitXML(fixtureData);
+      const { events, summary } = convertToLaminar(suites);
+
+      const reportsDir = path.join(tmpDir, 'reports');
+      fs.mkdirSync(reportsDir, { recursive: true });
+
+      const caseGroups = new Map<string, LaminarTestEvent[]>();
+      for (const evt of events) {
+        if (evt.case) {
+          if (!caseGroups.has(evt.case)) {
+            caseGroups.set(evt.case, []);
+          }
+          caseGroups.get(evt.case)!.push(evt);
+        }
+      }
+
+      for (const [caseId, caseEvents] of caseGroups) {
+        const parts = caseId.split('/');
+        const suiteName = parts[0];
+        const testName = parts.slice(1).join('/');
+        
+        const suiteDir = path.join(reportsDir, suiteName);
+        fs.mkdirSync(suiteDir, { recursive: true });
+        
+        const sanitizedName = testName.replace(/[^a-zA-Z0-9_-]/g, '_').replace(/_+/g, '_').toLowerCase();
+        const caseFile = path.join(suiteDir, `${sanitizedName}.jsonl`);
+        fs.writeFileSync(caseFile, caseEvents.map(e => JSON.stringify(e)).join('\n') + '\n');
+      }
+
+      const summaryPath = path.join(reportsDir, 'summary.jsonl');
+      fs.writeFileSync(summaryPath, summary.map(s => JSON.stringify(s)).join('\n') + '\n');
+
+      expect(suites.length).toBe(1);
+      expect(events.length).toBeGreaterThan(0);
+      expect(summary.length).toBe(2);
+
+      expect(fs.existsSync(reportsDir)).toBe(true);
+      expect(fs.existsSync(summaryPath)).toBe(true);
+
+      const summaryContent = fs.readFileSync(summaryPath, 'utf-8');
+      const summaryEntries = summaryContent.trim().split('\n').map(line => JSON.parse(line));
+
+      const passCount = summaryEntries.filter(e => e.status === 'pass').length;
+      expect(passCount).toBe(2);
+    });
+
+    it('processes tests with failures and errors', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/junit/with-failures.xml');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const suites = parseJUnitXML(fixtureData);
+      const { events, summary } = convertToLaminar(suites);
+
+      expect(suites.length).toBe(1);
+      expect(summary.length).toBe(3);
+
+      const passCount = summary.filter(e => e.status === 'pass').length;
+      const failCount = summary.filter(e => e.status === 'fail').length;
+
+      expect(passCount).toBe(1);
+      expect(failCount).toBe(2);
+
+      const errorEvents = events.filter(e => e.evt === 'test.error');
+      expect(errorEvents.length).toBe(2);
+    });
+
+    it('processes tests with skipped tests', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/junit/with-skipped.xml');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const suites = parseJUnitXML(fixtureData);
+      const { events, summary } = convertToLaminar(suites);
+
+      expect(summary.length).toBe(4);
+
+      const passCount = summary.filter(e => e.status === 'pass').length;
+      const skipCount = summary.filter(e => e.status === 'skip').length;
+
+      expect(passCount).toBe(2);
+      expect(skipCount).toBe(2);
+    });
+
+    it('processes nested test suites correctly', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/junit/nested-suites.xml');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const suites = parseJUnitXML(fixtureData);
+      const { events, summary } = convertToLaminar(suites);
+
+      expect(suites.length).toBe(2);
+      expect(summary.length).toBe(5);
+
+      const passCount = summary.filter(e => e.status === 'pass').length;
+      const failCount = summary.filter(e => e.status === 'fail').length;
+
+      expect(passCount).toBe(4);
+      expect(failCount).toBe(1);
+    });
+  });
+});
diff --git a/tests/ingest/pytestIngest.spec.ts b/tests/ingest/pytestIngest.spec.ts
new file mode 100644
index 0000000..4ee737a
--- /dev/null
+++ b/tests/ingest/pytestIngest.spec.ts
@@ -0,0 +1,562 @@
+import { describe, it, expect, beforeEach, afterEach } from 'vitest';
+import { parsePytestJSON, convertToLaminar, writeOutput, PytestReport, LaminarTestEvent } from '../../scripts/ingest-pytest.js';
+import * as fs from 'node:fs';
+import * as path from 'node:path';
+import * as os from 'node:os';
+
+describe('Pytest Ingest', () => {
+  let tmpDir: string;
+
+  beforeEach(() => {
+    tmpDir = fs.mkdtempSync(path.join(os.tmpdir(), 'pytest-ingest-test-'));
+  });
+
+  afterEach(() => {
+    if (fs.existsSync(tmpDir)) {
+      fs.rmSync(tmpDir, { recursive: true });
+    }
+  });
+
+  describe('parsePytestJSON', () => {
+    it('parses simple passing test fixture', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/pytest/simple-pass.json');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const report = parsePytestJSON(fixtureData);
+
+      expect(report).toBeDefined();
+      expect(report.tests).toBeDefined();
+      expect(report.tests!.length).toBe(1);
+      expect(report.summary?.passed).toBe(1);
+    });
+
+    it('parses complex multi-test fixture', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/pytest/sample-report.json');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const report = parsePytestJSON(fixtureData);
+
+      expect(report).toBeDefined();
+      expect(report.tests).toBeDefined();
+      expect(report.tests!.length).toBe(5);
+      expect(report.summary?.collected).toBe(5);
+      expect(report.summary?.passed).toBe(2);
+      expect(report.summary?.failed).toBe(1);
+      expect(report.summary?.error).toBe(1);
+      expect(report.summary?.skipped).toBe(1);
+    });
+
+    it('parses report metadata correctly', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/pytest/sample-report.json');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const report = parsePytestJSON(fixtureData);
+
+      expect(report.created).toBeDefined();
+      expect(report.duration).toBeDefined();
+      expect(report.exitcode).toBe(1);
+      expect(report.root).toBe('/path/to/project');
+    });
+
+    it('parses test node IDs correctly', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/pytest/sample-report.json');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const report = parsePytestJSON(fixtureData);
+
+      const firstTest = report.tests![0];
+      expect(firstTest.nodeid).toBe('test_example.py::test_success');
+      expect(firstTest.lineno).toBe(5);
+      expect(firstTest.outcome).toBe('passed');
+    });
+
+    it('throws error on invalid JSON', () => {
+      expect(() => parsePytestJSON('invalid json')).toThrow();
+    });
+
+    it('handles empty test array', () => {
+      const emptyReport = JSON.stringify({
+        created: 1678886400.5,
+        duration: 0,
+        exitcode: 0,
+        tests: []
+      });
+      
+      const report = parsePytestJSON(emptyReport);
+      expect(report.tests).toEqual([]);
+    });
+  });
+
+  describe('convertToLaminar', () => {
+    it('converts passing tests to Laminar format', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/pytest/simple-pass.json');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const report = parsePytestJSON(fixtureData);
+      const { events, summary } = convertToLaminar(report);
+
+      expect(events).toBeDefined();
+      expect(events.length).toBeGreaterThan(0);
+      expect(summary).toBeDefined();
+      expect(summary.length).toBe(1);
+    });
+
+    it('creates case.begin events for test start', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/pytest/simple-pass.json');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const report = parsePytestJSON(fixtureData);
+      const { events } = convertToLaminar(report);
+
+      const beginEvents = events.filter(e => e.evt === 'case.begin');
+      expect(beginEvents.length).toBe(1);
+
+      const beginEvent = beginEvents[0];
+      expect(beginEvent.lvl).toBe('info');
+      expect(beginEvent.phase).toBe('setup');
+      expect(beginEvent.case).toBe('test_simple.py::test_basic');
+      expect(beginEvent.payload).toHaveProperty('nodeid');
+    });
+
+    it('creates setup events for test setup phase', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/pytest/simple-pass.json');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const report = parsePytestJSON(fixtureData);
+      const { events } = convertToLaminar(report);
+
+      const setupEvents = events.filter(e => e.evt === 'test.setup.passed');
+      expect(setupEvents.length).toBe(1);
+      
+      const setupEvent = setupEvents[0];
+      expect(setupEvent.lvl).toBe('info');
+      expect(setupEvent.phase).toBe('setup');
+      expect(setupEvent.payload).toHaveProperty('duration');
+    });
+
+    it('creates test.run and test.call.passed events for test execution', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/pytest/simple-pass.json');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const report = parsePytestJSON(fixtureData);
+      const { events } = convertToLaminar(report);
+
+      const runEvents = events.filter(e => e.evt === 'test.run');
+      expect(runEvents.length).toBe(1);
+
+      const callEvents = events.filter(e => e.evt === 'test.call.passed');
+      expect(callEvents.length).toBe(1);
+    });
+
+    it('creates case.end events for test completion', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/pytest/simple-pass.json');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const report = parsePytestJSON(fixtureData);
+      const { events } = convertToLaminar(report);
+
+      const endEvents = events.filter(e => e.evt === 'case.end');
+      expect(endEvents.length).toBe(1);
+
+      const endEvent = endEvents[0];
+      expect(endEvent.lvl).toBe('info');
+      expect(endEvent.phase).toBe('teardown');
+      expect(endEvent.payload).toHaveProperty('duration');
+      expect(endEvent.payload.status).toBe('passed');
+    });
+
+    it('handles failed tests with error messages', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/pytest/sample-report.json');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const report = parsePytestJSON(fixtureData);
+      const { events } = convertToLaminar(report);
+
+      const failedTest = events.filter(e => e.case === 'test_example.py::test_failure');
+      expect(failedTest.length).toBeGreaterThan(0);
+
+      const errorEvents = failedTest.filter(e => e.evt === 'test.error');
+      expect(errorEvents.length).toBe(1);
+
+      const errorEvent = errorEvents[0];
+      expect(errorEvent.lvl).toBe('error');
+      expect(errorEvent.phase).toBe('execution');
+      expect(errorEvent.payload).toHaveProperty('message');
+      expect(errorEvent.payload.message).toContain('AssertionError');
+    });
+
+    it('extracts stack traces from failed tests', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/pytest/sample-report.json');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const report = parsePytestJSON(fixtureData);
+      const { events } = convertToLaminar(report);
+
+      const failedTest = events.filter(e => e.case === 'test_example.py::test_failure');
+      const errorEvents = failedTest.filter(e => e.evt === 'test.error');
+      
+      expect(errorEvents.length).toBe(1);
+      const errorEvent = errorEvents[0];
+      expect(errorEvent.payload).toHaveProperty('stack');
+      expect(errorEvent.payload.stack).toBeDefined();
+      expect(errorEvent.payload.stack).toContain('test_example.py');
+    });
+
+    it('handles error during setup phase', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/pytest/sample-report.json');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const report = parsePytestJSON(fixtureData);
+      const { events } = convertToLaminar(report);
+
+      const errorTest = events.filter(e => e.case === 'test_example.py::test_error_during_setup');
+      expect(errorTest.length).toBeGreaterThan(0);
+
+      const setupErrorEvents = errorTest.filter(e => e.evt === 'test.setup.error');
+      expect(setupErrorEvents.length).toBe(1);
+
+      const errorEvents = errorTest.filter(e => e.evt === 'test.error' && e.phase === 'setup');
+      expect(errorEvents.length).toBe(1);
+      expect(errorEvents[0].payload.message).toContain('NameError');
+    });
+
+    it('handles skipped tests correctly', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/pytest/sample-report.json');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const report = parsePytestJSON(fixtureData);
+      const { events } = convertToLaminar(report);
+
+      const skippedTest = events.filter(e => e.case === 'test_example.py::test_skipped_test');
+      expect(skippedTest.length).toBeGreaterThan(0);
+
+      const setupEvents = skippedTest.filter(e => e.evt === 'test.setup.skipped');
+      expect(setupEvents.length).toBe(1);
+    });
+
+    it('captures stdout from test execution', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/pytest/sample-report.json');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const report = parsePytestJSON(fixtureData);
+      const { events } = convertToLaminar(report);
+
+      const successTest = events.filter(e => e.case === 'test_example.py::test_success');
+      const outputEvents = successTest.filter(e => e.evt === 'test.output');
+      
+      expect(outputEvents.length).toBe(1);
+      expect(outputEvents[0].payload.output).toBe('This test passed successfully.');
+    });
+
+    it('generates correct summary for all test outcomes', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/pytest/sample-report.json');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const report = parsePytestJSON(fixtureData);
+      const { summary } = convertToLaminar(report);
+
+      expect(summary.length).toBe(5);
+
+      const passedTests = summary.filter(s => s.status === 'pass');
+      expect(passedTests.length).toBe(2);
+
+      const failedTests = summary.filter(s => s.status === 'fail');
+      expect(failedTests.length).toBe(1);
+
+      const errorTests = summary.filter(s => s.status === 'error');
+      expect(errorTests.length).toBe(1);
+
+      const skippedTests = summary.filter(s => s.status === 'skip');
+      expect(skippedTests.length).toBe(1);
+    });
+
+    it('includes duration in summary entries', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/pytest/sample-report.json');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const report = parsePytestJSON(fixtureData);
+      const { summary } = convertToLaminar(report);
+
+      summary.forEach(entry => {
+        expect(entry).toHaveProperty('duration');
+        expect(typeof entry.duration).toBe('number');
+        expect(entry.duration).toBeGreaterThanOrEqual(0);
+      });
+    });
+
+    it('includes location in summary entries', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/pytest/sample-report.json');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const report = parsePytestJSON(fixtureData);
+      const { summary } = convertToLaminar(report);
+
+      summary.forEach(entry => {
+        expect(entry).toHaveProperty('location');
+        expect(typeof entry.location).toBe('string');
+      });
+
+      const firstEntry = summary[0];
+      expect(firstEntry.location).toBe('test_example.py::test_success:5');
+    });
+
+    it('includes artifactURI in summary entries', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/pytest/sample-report.json');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const report = parsePytestJSON(fixtureData);
+      const { summary } = convertToLaminar(report);
+
+      summary.forEach(entry => {
+        expect(entry).toHaveProperty('artifactURI');
+        expect(entry.artifactURI).toMatch(/^reports\//);
+        expect(entry.artifactURI).toMatch(/\.jsonl$/);
+      });
+    });
+
+    it('validates Laminar event structure', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/pytest/sample-report.json');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const report = parsePytestJSON(fixtureData);
+      const { events } = convertToLaminar(report);
+
+      events.forEach(event => {
+        expect(event).toHaveProperty('ts');
+        expect(event).toHaveProperty('lvl');
+        expect(event).toHaveProperty('evt');
+        expect(typeof event.ts).toBe('number');
+        expect(typeof event.lvl).toBe('string');
+        expect(typeof event.evt).toBe('string');
+        
+        if (event.case) {
+          expect(typeof event.case).toBe('string');
+        }
+        if (event.phase) {
+          expect(typeof event.phase).toBe('string');
+          expect(['setup', 'execution', 'teardown']).toContain(event.phase);
+        }
+      });
+    });
+
+    it('preserves timestamp ordering', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/pytest/sample-report.json');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const report = parsePytestJSON(fixtureData);
+      const { events } = convertToLaminar(report);
+
+      for (let i = 1; i < events.length; i++) {
+        expect(events[i].ts).toBeGreaterThanOrEqual(events[i - 1].ts);
+      }
+    });
+
+    it('handles tests without lineno', () => {
+      const reportData = JSON.stringify({
+        created: 1678886400.5,
+        duration: 0.15,
+        exitcode: 0,
+        tests: [{
+          nodeid: 'test_no_line.py::test_something',
+          outcome: 'passed',
+          setup: { duration: 0.001, outcome: 'passed' },
+          call: { duration: 0.002, outcome: 'passed' },
+          teardown: { duration: 0.001, outcome: 'passed' }
+        }]
+      });
+
+      const report = parsePytestJSON(reportData);
+      const { summary } = convertToLaminar(report);
+
+      expect(summary[0].location).toBe('test_no_line.py::test_something');
+    });
+
+    it('handles empty report with no tests', () => {
+      const emptyReport: PytestReport = {
+        created: 1678886400.5,
+        duration: 0,
+        exitcode: 0,
+        tests: []
+      };
+
+      const { events, summary } = convertToLaminar(emptyReport);
+
+      expect(events).toEqual([]);
+      expect(summary).toEqual([]);
+    });
+  });
+
+  describe('writeOutput', () => {
+    it('writes JSONL files per test case', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/pytest/sample-report.json');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const report = parsePytestJSON(fixtureData);
+      const { events, summary } = convertToLaminar(report);
+
+      const reportsDir = path.join(tmpDir, 'reports');
+      fs.mkdirSync(reportsDir, { recursive: true });
+
+      const caseGroups = new Map<string, LaminarTestEvent[]>();
+      for (const evt of events) {
+        if (evt.case) {
+          if (!caseGroups.has(evt.case)) {
+            caseGroups.set(evt.case, []);
+          }
+          caseGroups.get(evt.case)!.push(evt);
+        }
+      }
+
+      for (const [caseId, caseEvents] of caseGroups) {
+        const artifactPath = path.join(reportsDir, `${caseId.replace(/[/:]/g, '.')}.jsonl`);
+        fs.writeFileSync(artifactPath, caseEvents.map(e => JSON.stringify(e)).join('\n') + '\n');
+      }
+
+      expect(fs.existsSync(reportsDir)).toBe(true);
+
+      const testFiles = fs.readdirSync(reportsDir).filter(f => f.endsWith('.jsonl'));
+      expect(testFiles.length).toBe(5);
+    });
+
+    it('writes summary.jsonl file', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/pytest/sample-report.json');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const report = parsePytestJSON(fixtureData);
+      const { events, summary } = convertToLaminar(report);
+
+      const reportsDir = path.join(tmpDir, 'reports');
+      fs.mkdirSync(reportsDir, { recursive: true });
+
+      const summaryPath = path.join(reportsDir, 'summary.jsonl');
+      fs.writeFileSync(summaryPath, summary.map(s => JSON.stringify(s)).join('\n') + '\n');
+
+      expect(fs.existsSync(summaryPath)).toBe(true);
+
+      const summaryContent = fs.readFileSync(summaryPath, 'utf-8');
+      const summaryLines = summaryContent.trim().split('\n');
+      expect(summaryLines.length).toBe(5);
+
+      summaryLines.forEach(line => {
+        const entry = JSON.parse(line);
+        expect(entry).toHaveProperty('status');
+        expect(entry).toHaveProperty('duration');
+        expect(entry).toHaveProperty('location');
+        expect(entry).toHaveProperty('artifactURI');
+      });
+    });
+
+    it('groups events by test case correctly', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/pytest/sample-report.json');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const report = parsePytestJSON(fixtureData);
+      const { events } = convertToLaminar(report);
+
+      const reportsDir = path.join(tmpDir, 'reports');
+      fs.mkdirSync(reportsDir, { recursive: true });
+
+      const caseGroups = new Map<string, LaminarTestEvent[]>();
+      for (const evt of events) {
+        if (evt.case) {
+          if (!caseGroups.has(evt.case)) {
+            caseGroups.set(evt.case, []);
+          }
+          caseGroups.get(evt.case)!.push(evt);
+        }
+      }
+
+      for (const [caseId, caseEvents] of caseGroups) {
+        const artifactPath = path.join(reportsDir, `${caseId.replace(/[/:]/g, '.')}.jsonl`);
+        fs.writeFileSync(artifactPath, caseEvents.map(e => JSON.stringify(e)).join('\n') + '\n');
+      }
+
+      const testSuccessPath = path.join(reportsDir, 'test_example.py..test_success.jsonl');
+      const testSuccessContent = fs.readFileSync(testSuccessPath, 'utf-8');
+      const testSuccessEvents = testSuccessContent.trim().split('\n').map(line => JSON.parse(line));
+
+      expect(testSuccessEvents.length).toBeGreaterThan(0);
+      testSuccessEvents.forEach(event => {
+        expect(event.case).toBe('test_example.py::test_success');
+      });
+    });
+
+    it('writes valid JSONL format', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/pytest/sample-report.json');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const report = parsePytestJSON(fixtureData);
+      const { events, summary } = convertToLaminar(report);
+
+      const reportsDir = path.join(tmpDir, 'reports');
+      fs.mkdirSync(reportsDir, { recursive: true });
+
+      const caseGroups = new Map<string, LaminarTestEvent[]>();
+      for (const evt of events) {
+        if (evt.case) {
+          if (!caseGroups.has(evt.case)) {
+            caseGroups.set(evt.case, []);
+          }
+          caseGroups.get(evt.case)!.push(evt);
+        }
+      }
+
+      for (const [caseId, caseEvents] of caseGroups) {
+        const artifactPath = path.join(reportsDir, `${caseId.replace(/[/:]/g, '.')}.jsonl`);
+        fs.writeFileSync(artifactPath, caseEvents.map(e => JSON.stringify(e)).join('\n') + '\n');
+      }
+
+      const summaryPath = path.join(reportsDir, 'summary.jsonl');
+      fs.writeFileSync(summaryPath, summary.map(s => JSON.stringify(s)).join('\n') + '\n');
+
+      const testFiles = fs.readdirSync(reportsDir).filter(f => f.endsWith('.jsonl'));
+
+      testFiles.forEach(file => {
+        const content = fs.readFileSync(path.join(reportsDir, file), 'utf-8');
+        const lines = content.trim().split('\n');
+
+        lines.forEach(line => {
+          expect(() => JSON.parse(line)).not.toThrow();
+        });
+      });
+    });
+  });
+
+  describe('end-to-end integration', () => {
+    it('processes fixture data from parsing to output', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/pytest/sample-report.json');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const report = parsePytestJSON(fixtureData);
+      const { events, summary } = convertToLaminar(report);
+
+      const reportsDir = path.join(tmpDir, 'reports');
+      fs.mkdirSync(reportsDir, { recursive: true });
+
+      const caseGroups = new Map<string, LaminarTestEvent[]>();
+      for (const evt of events) {
+        if (evt.case) {
+          if (!caseGroups.has(evt.case)) {
+            caseGroups.set(evt.case, []);
+          }
+          caseGroups.get(evt.case)!.push(evt);
+        }
+      }
+
+      for (const [caseId, caseEvents] of caseGroups) {
+        const artifactPath = path.join(reportsDir, `${caseId.replace(/[/:]/g, '.')}.jsonl`);
+        fs.writeFileSync(artifactPath, caseEvents.map(e => JSON.stringify(e)).join('\n') + '\n');
+      }
+
+      const summaryPath = path.join(reportsDir, 'summary.jsonl');
+      fs.writeFileSync(summaryPath, summary.map(s => JSON.stringify(s)).join('\n') + '\n');
+
+      expect(report.tests!.length).toBe(5);
+      expect(events.length).toBeGreaterThan(0);
+      expect(summary.length).toBe(5);
+
+      expect(fs.existsSync(reportsDir)).toBe(true);
+      expect(fs.existsSync(summaryPath)).toBe(true);
+
+      const summaryContent = fs.readFileSync(summaryPath, 'utf-8');
+      const summaryEntries = summaryContent.trim().split('\n').map(line => JSON.parse(line));
+
+      const passCount = summaryEntries.filter(e => e.status === 'pass').length;
+      const failCount = summaryEntries.filter(e => e.status === 'fail').length;
+      const errorCount = summaryEntries.filter(e => e.status === 'error').length;
+      const skipCount = summaryEntries.filter(e => e.status === 'skip').length;
+
+      expect(passCount).toBe(2);
+      expect(failCount).toBe(1);
+      expect(errorCount).toBe(1);
+      expect(skipCount).toBe(1);
+    });
+
+    it('processes simple passing test correctly', () => {
+      const fixturePath = path.join(process.cwd(), 'tests/fixtures/pytest/simple-pass.json');
+      const fixtureData = fs.readFileSync(fixturePath, 'utf-8');
+      const report = parsePytestJSON(fixtureData);
+      const { events, summary } = convertToLaminar(report);
+
+      expect(report.tests!.length).toBe(1);
+      expect(events.length).toBeGreaterThan(0);
+      expect(summary.length).toBe(1);
+      expect(summary[0].status).toBe('pass');
+    });
+  });
+});
