{
  "ampcode": "v1",
  "waves": [
    {
      "id": "P26-OS-CLOUD-D1",
      "parallel": false,
      "tasks": [
        "N2601",
        "N2602",
        "N2603",
        "N2604",
        "N2605"
      ]
    }
  ],
  "branch": "mkolbol-oscloud-d1-utility-servers",
  "tasks": [
    {
      "id": "N2601",
      "agent": "susan",
      "title": "ProbeManager: beacon ingest → connect (tcp/ws) → Hostess routes",
      "why": "Turn beacons into live, refreshable connections and visible routes; foundational for OS‑Cloud wiring.",
      "allowedFiles": [
        "src/probe/ProbeManager.ts",
        "src/hostess/Hostess.ts",
        "src/types.ts",
        "scripts/mkctl.ts"
      ],
      "verify": [
        "npm run build",
        "npm run validate:sprint",
        "npm run ci:local:fast"
      ],
      "deliverables": [
        "patches/DIFF_N2601_probe-manager.patch"
      ]
    },
    {
      "id": "N2602",
      "agent": "susan",
      "title": "Backoff/TTL refresh + mkctl endpoints --watch",
      "why": "Stabilize connections under churn and make state visible to operators and agents.",
      "allowedFiles": [
        "src/probe/ProbeManager.ts",
        "scripts/mkctl.ts",
        "docs/devex/network-quickstart.md"
      ],
      "verify": [
        "npm run build",
        "npm run validate:sprint",
        "npm run ci:local:fast"
      ],
      "deliverables": [
        "patches/DIFF_N2602_probe-backoff-mkctl-watch.patch"
      ]
    },
    {
      "id": "N2603",
      "agent": "susan",
      "title": "Acceptance: docker-compose demo (Node + Go beachheads)",
      "why": "Demonstrate end‑to‑end beacon→probe→route with two independent beachheads.",
      "allowedFiles": [
        "examples/docker/beachhead/docker-compose.yml",
        "examples/docker/beachhead/README.md",
        "docs/devex/network-quickstart.md"
      ],
      "verify": [
        "npm run build",
        "npm run ci:local:fast"
      ],
      "deliverables": [
        "patches/DIFF_N2603_oscloud-compose-acceptance.patch"
      ]
    },
    {
      "id": "N2604",
      "agent": "susan",
      "title": "FilesystemServer v1: JSONL FS ops + demo",
      "why": "Provide a portable FS service for modules/servers without direct FS access; enables Courier + demos to persist artifacts.",
      "allowedFiles": [
        "src/servers/filesystemServer.ts",
        "docs/devex/servers-filesystem.md",
        "examples/servers/fs-server-demo.ts"
      ],
      "verify": [
        "npm run build",
        "npx tsx examples/servers/fs-server-demo.ts | head -n 4"
      ],
      "deliverables": [
        "patches/DIFF_N2604_filesystem-server.patch"
      ]
    },
    {
      "id": "N2605",
      "agent": "susan",
      "title": "LoggingServer v1: JSONL logger + rotation + demo",
      "why": "Standardize JSONL logging with rotation so servers and demos can emit structured logs without bespoke code.",
      "allowedFiles": [
        "src/servers/loggingServer.ts",
        "docs/devex/servers-logging.md",
        "examples/servers/logging-server-demo.ts"
      ],
      "verify": [
        "npm run build",
        "npx tsx examples/servers/logging-server-demo.ts"
      ],
      "deliverables": [
        "patches/DIFF_N2605_logging-server.patch"
      ]
    }
  ],
  "branch_instructions": [
    "IMPORTANT: Work only on mkolbol-oscloud-d1-probe-manager.",
    "Logs: write JSON Lines to ampcode.log (core schema).",
    "Modify only allowedFiles; prefer feature flags for risky changes."
  ],
  "instructions": {
    "overview": "Host-side ProbeManager that turns beacons into live connections and Hostess routes; adds mkctl endpoints watch; acceptance via docker-compose.",
    "expectations": [
      "Write JSONL log entries using the core log schema.",
      "Keep changes minimal and under allowedFiles.",
      "Run verify commands and include deliverable patches."
    ],
    "briefing": "Implement ProbeManager: on beacon, attempt tcp/ws connect, register/refresh routes in Hostess, handle TTL and backoff; expose mkctl endpoints list/watch. Acceptance via docker-compose with Node and Go beachheads.",
    "logging": {
      "log_file": "susan-log.jsonl",
      "schema": "agent_template/log_templates/core_sprint_log.schema.json",
      "example": "agent_template/log_templates/core_sprint_log.example.jsonl"
    },
    "hooks": {
      "eslint_dryrun": {
        "summary": "Fail‑fast ESLint fix dry‑run runs first; override with SKIP_ESLINT_DRYRUN=1 to bypass once.",
        "example": "agent_template/examples/precommit-eslint-dryrun.md"
      }
    },
    "parallelization": {
      "policy": "prefer_parallel",
      "rationale": "FrameMux core (N2501), backpressure (N2502), and acceptance/demo (N2503) can proceed in parallel with light touchpoints; keep coordination minimal via patches.",
      "candidates": [
        "N2501",
        "N2502",
        "N2503"
      ],
      "constraints": [
        "Coordinate shared files (mux.ts/tests) to avoid long-lived conflicts"
      ],
      "max_concurrency": 3
    },
    "deliverables_global": [
      "patches/*.patch",
      "tests updated and passing",
      "docs updated"
    ]
  }
}
