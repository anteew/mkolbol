{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://github.com/anteew/mkolbol/docs/testing/laminar.schema.json",
  "title": "Laminar Digest Rules Configuration",
  "description": "Schema for digest rules configuration controlling test artifact aggregation and filtering",
  "type": "object",
  "properties": {
    "budget": {
      "description": "Size limits for digest output",
      "type": "object",
      "properties": {
        "kb": {
          "description": "Maximum digest size in kilobytes",
          "type": "number",
          "minimum": 0,
          "exclusiveMinimum": true
        },
        "events": {
          "description": "Maximum number of events to include",
          "type": "integer",
          "minimum": 1
        },
        "cases": {
          "description": "Maximum number of test cases to include",
          "type": "integer",
          "minimum": 1
        }
      },
      "additionalProperties": false
    },
    "rules": {
      "description": "Ordered list of match/action rules for filtering and transforming events",
      "type": "array",
      "items": {
        "type": "object",
        "required": ["match", "action"],
        "properties": {
          "match": {
            "description": "Pattern to match against events",
            "type": "object",
            "properties": {
              "evt": {
                "description": "Event type pattern (supports wildcards: *)",
                "type": "string"
              },
              "phase": {
                "description": "Test phase to match",
                "type": "string",
                "enum": ["arrange", "act", "assert", "teardown"]
              },
              "lvl": {
                "description": "Log level to match",
                "type": "string",
                "enum": ["info", "warn", "error"]
              },
              "case": {
                "description": "Test case pattern (supports wildcards: *)",
                "type": "string"
              },
              "path": {
                "description": "File path pattern (supports wildcards: *)",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "minProperties": 1
          },
          "action": {
            "description": "Action to take when match succeeds",
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "description": "Action type",
                "type": "string",
                "enum": ["include", "slice", "redact", "priority"]
              },
              "window": {
                "description": "Number of events before/after match (for slice action)",
                "type": "integer",
                "minimum": 0
              },
              "fields": {
                "description": "Fields to redact (for redact action)",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "minItems": 1
              },
              "level": {
                "description": "Priority level (for priority action): higher = more important",
                "type": "integer",
                "minimum": 0,
                "maximum": 10
              }
            },
            "additionalProperties": false,
            "allOf": [
              {
                "if": {
                  "properties": { "type": { "const": "slice" } }
                },
                "then": {
                  "required": ["window"]
                }
              },
              {
                "if": {
                  "properties": { "type": { "const": "redact" } }
                },
                "then": {
                  "required": ["fields"]
                }
              },
              {
                "if": {
                  "properties": { "type": { "const": "priority" } }
                },
                "then": {
                  "required": ["level"]
                }
              }
            ]
          },
          "name": {
            "description": "Optional human-readable rule name",
            "type": "string"
          },
          "enabled": {
            "description": "Toggle to enable/disable this rule",
            "type": "boolean",
            "default": true
          }
        },
        "additionalProperties": false
      }
    },
    "defaults": {
      "description": "Default behavior when no rules match",
      "type": "object",
      "properties": {
        "action": {
          "description": "Default action for unmatched events",
          "type": "string",
          "enum": ["include", "exclude"]
        },
        "priority": {
          "description": "Default priority level for events",
          "type": "integer",
          "minimum": 0,
          "maximum": 10,
          "default": 5
        }
      },
      "additionalProperties": false
    }
  },
  "additionalProperties": false
}
