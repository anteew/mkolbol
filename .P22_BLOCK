```json
{
  "ampcode": "v1",
  "waves": [
<<<<<<< HEAD
    { "id": "P22-RESILIENCE", "parallel": false, "tasks": ["N2201","N2202","N2203"] }
  ],
  "branch": "mkolbol-net-p22-resilience",
  "tasks": [
    {"id":"N2201","agent":"susan","title":"Reconnect/backoff + clearer errors; heartbeat/ping tuning",
      "allowedFiles":["src/pipes/adapters/TCPPipe.ts","src/pipes/adapters/WebSocketPipe.ts","tests/integration/net.resilience.spec.ts"],
      "why":"Stabilize links across transient failures with clear remediation.",
      "verify":["npm run build","npm run test:ci"],
      "deliverables":["patches/DIFF_N2201_net-resilience.patch"]},

    {"id":"N2202","agent":"susan","title":"FrameCodec v2 header + version negotiation (additive)",
      "allowedFiles":["src/net/frame.ts","tests/net/frame.spec.ts","tests/integration/net.handshake.spec.ts"],
      "why":"Allow safe, incremental protocol evolution.",
      "verify":["npm run build","npm run test:ci"],
      "deliverables":["patches/DIFF_N2202_frame-v2.patch"]},

    {"id":"N2203","agent":"susan","title":"Docs: error surfaces and recommended timeouts; PR release notes",
      "allowedFiles":["docs/devex/network-quickstart.md","docs/devex/troubleshooting.md","docs/devex/releases.md"],
      "why":"Make failures legible and tunables explicit for operators.",
      "verify":["npm run build"],
      "deliverables":["patches/DIFF_N2203_resilience-docs.patch"]}
=======
    { "id": "P24-FEDERATION", "parallel": false, "tasks": ["N2401","N2402","N2403"] }
  ],
  "branch": "mkolbol-net-p24-federation",
  "tasks": [
    {"id":"N2401","agent":"devex","title":"Federation API: Router↔Router adverts via PeerSource (static first)",
      "allowedFiles":["src/router/Federation.ts","src/router/RoutingServer.ts","tests/integration/router.federation.spec.ts"],
      "why":"Let routers share endpoint ads and TTL across peers.",
      "verify":["npm run build","npm run test:ci"],
      "deliverables":["patches/DIFF_N2401_router-federation.patch"]},

    {"id":"N2402","agent":"devex","title":"Failover & path preference: local > LAN > WAN; TTL propagation",
      "allowedFiles":["src/router/RoutingServer.ts","src/state/StateManager.ts","tests/integration/router.failover.spec.ts"],
      "why":"Choose best path and recover when peers die; respect liveness events.",
      "verify":["npm run build","npm run test:ci"],
      "deliverables":["patches/DIFF_N2402_router-failover.patch"]},

    {"id":"N2403","agent":"devex","title":"Acceptance: two routers, static peers → federation → fail one link",
      "allowedFiles":["examples/network/federation-demo/**","docs/devex/network-quickstart.md",".github/workflows/tests.yml"],
      "why":"Prove federation and failover without mDNS dependency.",
      "verify":["npm run ci:local:fast"],
      "deliverables":["patches/DIFF_N2403_federation-acceptance.patch"]}
>>>>>>> origin/main
  ]
}
```