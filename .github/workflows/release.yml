name: Release & Publish

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  id-token: write

jobs:
  release:
    name: Release & Publish to NPM
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build
        run: npm run build
      
      - name: Run tests
        run: npm run test:ci
      
      - name: Verify package contents
        run: |
          npm pack --dry-run
          echo "Package contents verified"
      
      - name: Extract version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
      - name: Verify package.json version matches tag
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          TAG_VERSION="${{ steps.version.outputs.VERSION }}"
          if [ "$PACKAGE_VERSION" != "$TAG_VERSION" ]; then
            echo "Error: package.json version ($PACKAGE_VERSION) does not match tag version ($TAG_VERSION)"
            exit 1
          fi
          echo "Version verified: $PACKAGE_VERSION"
      
      - name: Publish to NPM
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Create GitHub Release
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const tag = context.ref.replace('refs/tags/', '');
            const version = tag.replace('v', '');
            
            // Extract release notes from README or use default
            let releaseNotes = `## Release ${version}\n\n`;
            releaseNotes += `Published to NPM: https://www.npmjs.com/package/mkolbol/v/${version}\n\n`;
            releaseNotes += `### Installation\n\n`;
            releaseNotes += '```bash\n';
            releaseNotes += `npm install mkolbol@${version}\n`;
            releaseNotes += '```\n\n';
            releaseNotes += `### Changes\n\n`;
            releaseNotes += `See [CHANGELOG](https://github.com/${context.repo.owner}/${context.repo.repo}/compare/v${version}) for details.`;
            
            await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: tag,
              name: `Release ${version}`,
              body: releaseNotes,
              draft: false,
              prerelease: version.includes('-') || version.includes('alpha') || version.includes('beta') || version.includes('rc')
            });
            
            core.notice(`âœ… Published mkolbol@${version} to NPM and created GitHub release`);
