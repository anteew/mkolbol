{
  "name": "mkolbol",
  "version": "0.2.0-rfc",
  "description": "Stream-based microkernel for AI agent systems - RFC & Architecture Phase",
  "type": "module",
  "keywords": [
    "microkernel",
    "stream-kernel",
    "ai-agents",
    "pty",
    "terminal",
    "distributed-systems"
  ],
  "author": "Dan Mann",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/anteew/mkolbol.git"
  },
  "main": "./dist/src/index.js",
  "module": "./dist/src/index.js",
  "types": "./dist/src/index.d.ts",
  "exports": {
    ".": {
      "types": "./dist/src/index.d.ts",
      "import": "./dist/src/index.js",
      "default": "./dist/src/index.js"
    },
    "./package.json": "./package.json"
  },
  "files": [
    "dist/",
    "README.md",
    "LICENSE",
    "STREAM_KERNEL_RFC.md",
    "docs/",
    "schemas/"
  ],
  "bin": {
    "mk": "dist/scripts/mk.js",
    "mkctl": "dist/scripts/mkctl.js",
    "lam": "dist/scripts/lam.js"
  },
  "scripts": {
    "prepare": "test -f tsconfig.json && npm run build || true",
    "docs": "echo 'See docs/rfcs/stream-kernel/00-index.md for architecture documentation'",
    "build": "tsc -p tsconfig.json",
    "test": "vitest run",
    "test:consumer": "tsx scripts/test-consumer.ts",
    "test:ci": "LAMINAR_SUITE=threads vitest run --pool=threads --exclude='**/{ptyServerWrapper,multiModalOutput,endpointsList,processMode}.spec.ts' --reporter=./node_modules/@agent_vega/laminar/dist/src/test/reporter/jsonlReporter.js",
    "test:pty": "LAMINAR_SUITE=forks vitest run --pool=forks --poolOptions.forks.singleFork=true tests/wrappers/ptyServerWrapper.spec.ts tests/integration/multiModalOutput.spec.ts tests/integration/endpointsList.spec.ts tests/integration/processMode.spec.ts tests/integration/processUnix.spec.ts tests/integration/workerMode.spec.ts tests/integration/stdioPath.spec.ts tests/integration/externalFromConfig.spec.ts --reporter=./node_modules/@agent_vega/laminar/dist/src/test/reporter/jsonlReporter.js",
    "lam:append-history": "node scripts/append-laminar-history.js",
    "lam:repro": "node scripts/generate-laminar-repro.js",
    "lam:pr-comment": "node scripts/post-laminar-pr-comment.js",
    "test:ci:lam": "npm run test:ci && node scripts/append-laminar-history.js && mkdir -p reports && npm run lam -- summary > reports/LAMINAR_SUMMARY.txt && npm run lam -- trends --top 10 > reports/LAMINAR_TRENDS.txt && npm run lam:repro",
    "test:pty:lam": "MK_PROCESS_EXPERIMENTAL=1 npm run test:pty && node scripts/append-laminar-history.js && mkdir -p reports && npm run lam -- summary >> reports/LAMINAR_SUMMARY.txt && npm run lam -- trends --top 10 >> reports/LAMINAR_TRENDS.txt && npm run lam:repro",
    "lam:dogfood:ci": "tsx scripts/dogfood-ci.ts",
    "lam:dogfood:pty": "tsx scripts/dogfood-pty.ts",
    "test:watch": "vitest",
    "lam": "node node_modules/@agent_vega/laminar/dist/scripts/lam.js",
    "lam:mcp": "node node_modules/@agent_vega/laminar/dist/scripts/mcp-server.js",
    "logq": "lam logq",
    "repro": "lam repro",
    "laminar:run": "node dist/scripts/laminar-run.js",
    "laminar:digest": "lam digest",
    "ingest:go": "lam ingest --go",
    "ingest:pytest": "lam ingest --pytest",
    "ingest:junit": "lam ingest --junit",
    "dev": "node --enable-source-maps dist/examples/basic-topology.js",
    "dev:split": "node --enable-source-maps dist/examples/split-topology.js",
    "dev:merge": "node --enable-source-maps dist/examples/merge-topology.js",
    "dev:hostess": "node --enable-source-maps dist/examples/hostess-demo.js",
    "dev:state-rewire": "node --enable-source-maps dist/examples/state-rewire.js",
    "dev:executor": "node --enable-source-maps dist/examples/executor-demo.js",
    "dev:external-wrapper": "node --enable-source-maps dist/examples/external-wrapper-demo.js",
    "dev:pty-wrapper": "node --enable-source-maps dist/examples/pty-wrapper-demo.js",
    "dev:multi-modal": "node --enable-source-maps dist/examples/multi-modal-output.js",
    "dev:worker-demo": "node --enable-source-maps dist/examples/worker-demo.js"
  },
  "dependencies": {
    "node-pty": "^1.0.0",
    "yaml": "^2.3.4"
  },
  "devDependencies": {
    "@agent_vega/laminar": "github:anteew/Laminar",
    "@types/node": "^20.12.12",
    "fast-check": "^4.3.0",
    "tsx": "^4.19.2",
    "typescript": "^5.6.2",
    "vitest": "^1.6.0"
  }
}
